This file, proof.txt, was produced the BLESS Proof Assistant v3.2.0
  at Wed Apr 26 14:28:58 CDT 2023 by brianlarson

Theorem (1)                               [serial 1003] 
P [63] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA >>
S [39] ->
Q [39] << true >>
Why created:  <<M(MoveForwardLastSegment)>> -> <<I>> from invariant I when complete state MoveForwardLastSegment has Assertion <<M(MoveForwardLastSegment)>> in its definition.
Solved by:  True Conclusion Schema (tc): P->true


Theorem (2)                               [serial 1004] 
P [54] << true >>
S [39] ->
Q [39] << true >>
Why created:  <<M(WaitFirstMA)>> -> <<I>> from invariant I when complete state WaitFirstMA has Assertion <<M(WaitFirstMA)>> in its definition.
Solved by:  True Conclusion Schema (tc): P->true


Theorem (3)                               [serial 1005] 
P [57] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
S [39] ->
Q [39] << true >>
Why created:  <<M(MoveForward)>> -> <<I>> from invariant I when complete state MoveForward has Assertion <<M(MoveForward)>> in its definition.
Solved by:  True Conclusion Schema (tc): P->true


Theorem (4)                               [serial 1048] 
P [67] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and NEXT_MA = next_ma
  and NEXT_MA.seg[1] = nSeg >>
S [39] ->
Q [39] << true >>
Why created:    normalization of [serial 1006]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (5)                               [serial 1006] 
P [67] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NEXT_MA.seg[1]
  and ma = CMA
  and next_ma = NEXT_MA >>
S [39] ->
Q [39] << true >>
Why created:  <<M(GotNewMA)>> -> <<I>> from invariant I when complete state GotNewMA has Assertion <<M(GotNewMA)>> in its definition.
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 4:
Theorem (4) [serial 1048] used for:
    normalization of [serial 1006] 


Theorem (6)                               [serial 1054] 
P [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
S [59] ->
Q [59] << true >>
Why created:  Law of Excluded Middle: P or not P is tautology [serial 1053]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (7)                               [serial 1053] 
P [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
S [59] ->
Q [59] << ( not ( p < iSeg.e ) )
   or p < iSeg.e >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1051]
Solved by:  Law of Excluded Middle: P or not P is tautology
and theorem 6:
Theorem (6) [serial 1054] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1053] 


Theorem (8)                               [serial 1051] 
P [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
S [59] ->
Q [59] << iSeg.e <= p
   or p < iSeg.e >>
Why created:    normalization of [serial 1007]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 7:
Theorem (7) [serial 1053] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1051] 


Theorem (9)                               [serial 1007] 
P [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
S [59] ->
Q [59] << ( p < iSeg.e )
   or ( p >= iSeg.e ) >>
Why created:  Serban's Theorem:  disjunction of execute conditions leaving execution state CheckMoveForward, <<M(CheckMoveForward)>> -> <<e1 or e2 or . . . en>>
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 8:
Theorem (8) [serial 1051] used for:
    normalization of [serial 1007] 


Theorem (10)                               [serial 1055] 
P [65] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA >>
S [65] ->
Q [65] << true >>
Why created:  Law of Excluded Middle: P or not P is tautology [serial 1008]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (11)                               [serial 1008] 
P [65] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA >>
S [65] ->
Q [65] << ( not m_a'fresh )
   or m_a'fresh >>
Why created:  Serban's Theorem:  disjunction of execute conditions leaving execution state CheckMoveForwardLastSegment, <<M(CheckMoveForwardLastSegment)>> -> <<e1 or e2 or . . . en>>
Solved by:  Law of Excluded Middle: P or not P is tautology
and theorem 10:
Theorem (10) [serial 1055] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1008] 


Theorem (12)                               [serial 1009] 
P [53] << true >>
S [53] ->
Q [53] << true >>
Why created:  Serban's Theorem:  disjunction of execute conditions leaving execution state Start, <<M(Start)>> -> <<e1 or e2 or . . . en>>
Solved by:  True Conclusion Schema (tc): P->true


Theorem (13)                               [serial 1059] 
P [61] << CMA = ma
  and CMA.seg[i] = iSeg >>
S [61] ->
Q [61] << true >>
Why created:  Less than, greater than, or equal:  |-a<b or b<a or a=b [serial 1057]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (14)                               [serial 1057] 
P [61] << CMA = ma
  and CMA.seg[i] = iSeg >>
S [61] ->
Q [61] << i = ma.num_segments
   or i < ma.num_segments
   or ma.num_segments < i >>
Why created:    normalization of [serial 1010]
Solved by:  Less than, greater than, or equal:  |-a<b or b<a or a=b
and theorem 13:
Theorem (13) [serial 1059] used for:
  Less than, greater than, or equal:  |-a<b or b<a or a=b [serial 1057] 


Theorem (15)                               [serial 1010] 
P [61] << iSeg = CMA.seg[i]
  and ma = CMA >>
S [61] ->
Q [61] << ( i < ma.num_segments )
   or ( i = ma.num_segments )
   or ( i > ma.num_segments ) >>
Why created:  Serban's Theorem:  disjunction of execute conditions leaving execution state CheckForLastSegment, <<M(CheckForLastSegment)>> -> <<e1 or e2 or . . . en>>
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of Greater Than: (a>b) = (b<a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 14:
Theorem (14) [serial 1057] used for:
    normalization of [serial 1010] 


Theorem (16)                               [serial 1060] 
P [55] << true >>
S [55] ->
Q [55] << true >>
Why created:  Law of Excluded Middle: P or not P is tautology [serial 1011]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (17)                               [serial 1011] 
P [55] << true >>
S [55] ->
Q [55] << ( not m_a'fresh )
   or m_a'fresh >>
Why created:  Serban's Theorem:  disjunction of execute conditions leaving execution state CheckFirstMA, <<M(CheckFirstMA)>> -> <<e1 or e2 or . . . en>>
Solved by:  Law of Excluded Middle: P or not P is tautology
and theorem 16:
Theorem (16) [serial 1060] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1011] 


Theorem (18)                               [serial 1065] 
P [70] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and NEXT_MA = next_ma
  and NEXT_MA.seg[1] = nSeg >>
S [70] ->
Q [70] << true >>
Why created:  Law of Excluded Middle: P or not P is tautology [serial 1064]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (19)                               [serial 1064] 
P [70] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and NEXT_MA = next_ma
  and NEXT_MA.seg[1] = nSeg >>
S [70] ->
Q [70] << ( not ( p < ma.ea ) )
   or p < ma.ea >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1062]
Solved by:  Law of Excluded Middle: P or not P is tautology
and theorem 18:
Theorem (18) [serial 1065] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1064] 


Theorem (20)                               [serial 1062] 
P [70] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and NEXT_MA = next_ma
  and NEXT_MA.seg[1] = nSeg >>
S [70] ->
Q [70] << ma.ea <= p
   or p < ma.ea >>
Why created:    normalization of [serial 1012]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 19:
Theorem (19) [serial 1064] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1062] 


Theorem (21)                               [serial 1012] 
P [70] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NEXT_MA.seg[1]
  and ma = CMA
  and next_ma = NEXT_MA >>
S [70] ->
Q [70] << ( p < ma.ea )
   or ( p >= ma.ea ) >>
Why created:  Serban's Theorem:  disjunction of execute conditions leaving execution state CheckMATransition, <<M(CheckMATransition)>> -> <<e1 or e2 or . . . en>>
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 20:
Theorem (20) [serial 1062] used for:
    normalization of [serial 1012] 


Theorem (22)                               [serial 1067] 
P [53] << true >>
S [76] ->
Q [76] << true >>
Why created:  applied port output <<pre>> -> <<M[r]>> [serial 1066]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (23)                               [serial 1068] 
P [76] << ( true )
  and true@now >>
S [76] ->
Q [54] << true >>
Why created:  applied port output <<pre and M[r]@now>> -> <<post>> [serial 1066]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (24)                               [serial 1066] 
P [53] << true >>
S [76] r!
Q [54] << true >>
Why created:  as <<P>> S <<Q>> in <<P>> { S } <<Q>> [serial 1013]
Solved by:  Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 22 23:
Theorem (22) [serial 1067] used for:
  applied port output <<pre>> -> <<M[r]>> [serial 1066] 
Theorem (23) [serial 1068] used for:
  applied port output <<pre and M[r]@now>> -> <<post>> [serial 1066] 


Theorem (25)                               [serial 1013] 
P [53] << true >>
S [76] r!
Q [54] << true >>
Why created:   <<M(Start)>> A <<M(WaitFirstMA)>> for GoStart-[ ]->WaitFirstMA{A};
Solved by:  Introduction of Existential Quantification
and theorem 24:
Theorem (24) [serial 1066] used for:
  as <<P>> S <<Q>> in <<P>> { S } <<Q>> [serial 1013] 


Theorem (26)                               [serial 1014] 
P [79] << ( true )
  and ( p@now )
  and not ( exists u ~ time
  in tops ,, now 
  that p@u  ) >>
S [78] ->
Q [55] << true >>
Why created:   <<M(WaitFirstMA) and x>> -> <<M(CheckFirstMA)>> for FirstMAWaitFirstMA-[x]->CheckFirstMA{};
Solved by:  True Conclusion Schema (tc): P->true


Theorem (27)                               [serial 1015] 
P [82] << not m_a'fresh >>
S [81] ->
Q [54] << true >>
Why created:   <<M(CheckFirstMA) and x>> -> <<M(WaitFirstMA)>> for NotYetCheckFirstMA-[x]->WaitFirstMA{};
Solved by:  True Conclusion Schema (tc): P->true


Theorem (28)                               [serial 1075] 
P [85] << m_a'fresh >>
S [85] ->
Q [86] << true >>
Why created:   add user-defined axioms to postcondition
Solved by:  True Conclusion Schema (tc): P->true


Theorem (29)                               [serial 1075] 
P [85] << m_a'fresh >>
S [85] ->
Q [86] << true >>
Why created:   add user-defined axioms to postcondition
Solved by:  True Conclusion Schema (tc): P->true


Theorem (30)                               [serial 1069] 
P [85] << m_a'fresh >>
S [85] ->
Q [86] << AXIOM_CMA_IS_RMA() >>
Why created:  <<P>> -> <<P1>> in sequential composition for [serial 1016]
Solved by:  Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 29 29:
Theorem (29) [serial 1075] used for:
   add user-defined axioms to postcondition 
Theorem (29) [serial 1075] used for:
   add user-defined axioms to postcondition 


Theorem (31)                               [serial 1096] 
P [95] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : CMA) >>
S [57] ->
Q [57] << CMA = ma >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1081]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (32)                               [serial 1097] 
P [95] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : CMA) >>
S [57] ->
Q [57] << CMA.seg[i] = iSeg >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1081]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (33)                               [serial 1098] 
P [95] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : CMA) >>
S [57] ->
Q [57] << CMA.seg[1 + i] = nSeg >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1081]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (34)                               [serial 1109] 
P [95] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and 1 < CMA.num_segments >>
S [57] ->
Q [57] << 1 < CMA.num_segments >>
Why created:  Guided Substitution of Equals 
 replacing "ma" with its = "CMA" in its postcondition [serial 1107]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (35)                               [serial 1107] 
P [95] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and 1 < CMA.num_segments >>
S [57] ->
Q [57] << 1 < ma.num_segments >>
Why created:    normalization of [serial 1105]
Solved by:  Guided Substitution of Equals
and theorem 34:
Theorem (34) [serial 1109] used for:
  Guided Substitution of Equals 
 replacing "ma" with its = "CMA" in its postcondition [serial 1107] 


Theorem (36)                               [serial 1105] 
P [95] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and 1 < CMA.num_segments >>
S [57] ->
Q [57] << ( 1 ) < ma.num_segments >>
Why created:  Guided Substitution of Equals 
 replacing "i" with its = "( 1 )" in its postcondition [serial 1103]
Solved by:  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 35:
Theorem (35) [serial 1107] used for:
    normalization of [serial 1105] 


Theorem (37)                               [serial 1103] 
P [95] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and 1 < CMA.num_segments >>
S [57] ->
Q [57] << i < ma.num_segments >>
Why created:    normalization of [serial 1101]
Solved by:  Guided Substitution of Equals
and theorem 36:
Theorem (36) [serial 1105] used for:
  Guided Substitution of Equals 
 replacing "i" with its = "( 1 )" in its postcondition [serial 1103] 


Theorem (38)                               [serial 1101] 
P [95] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and ( 1 < CMA.num_segments ) >>
S [57] ->
Q [57] << i < ma.num_segments >>
Why created:  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1100]
Solved by:  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 37:
Theorem (37) [serial 1103] used for:
    normalization of [serial 1101] 


Theorem (39)                               [serial 1100] 
P [95] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and ( 1 < CMA.num_segments ) >>
S [57] ->
Q [57] << i < CMA.num_segments >>
Why created:  Substituted assertions' predicates for labels in preconditions [serial 1099]
Solved by:  Guided Substitution of Equals
and theorem 38:
Theorem (38) [serial 1101] used for:
  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1100] 


Theorem (40)                               [serial 1099] 
P [95] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : CMA) >>
S [57] ->
Q [57] << i < CMA.num_segments >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1081]
Solved by:  Substitution of Assertion Labels
and theorem 39:
Theorem (39) [serial 1100] used for:
  Substituted assertions' predicates for labels in preconditions [serial 1099] 


Theorem (41)                               [serial 1081] 
P [95] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : CMA) >>
S [57] ->
Q [57] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:    normalization of [serial 1070]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 31 32 33 40:
Theorem (31) [serial 1096] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1081] 
Theorem (32) [serial 1097] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1081] 
Theorem (33) [serial 1098] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1081] 
Theorem (40) [serial 1099] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1081] 


Theorem (42)                               [serial 1070] 
P [95] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and AXIOM_NUM_SEG(ma : CMA) >>
S [57] ->
Q [57] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  <<Q3>> -> <<Q>> in sequential composition for [serial 1016]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Equality: (a=b) = (b=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 41:
Theorem (41) [serial 1081] used for:
    normalization of [serial 1070] 


Theorem (43)                               [serial 1115] 
P [87] << CMA = RMA
  and RMA = ma >>
S [87] ->
Q [88] << RMA = ma >>
Why created:  Guided Substitution of Equals 
 replacing "CMA" with its = "RMA" in its postcondition [serial 1113]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (44)                               [serial 1113] 
P [87] << CMA = RMA
  and RMA = ma >>
S [87] ->
Q [88] << CMA = ma >>
Why created:    normalization of [serial 1111]
Solved by:  Guided Substitution of Equals
and theorem 43:
Theorem (43) [serial 1115] used for:
  Guided Substitution of Equals 
 replacing "CMA" with its = "RMA" in its postcondition [serial 1113] 


Theorem (45)                               [serial 1111] 
P [87] << ( ( CMA = RMA ) )
  and ma = RMA >>
S [87] ->
Q [88] << CMA = ma >>
Why created:  Substituted assertions' predicates for labels in preconditions [serial 1110]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 44:
Theorem (44) [serial 1113] used for:
    normalization of [serial 1111] 


Theorem (46)                               [serial 1110] 
P [87] << ( AXIOM_CMA_IS_RMA() )
  and ma = RMA >>
S [87] ->
Q [88] << CMA = ma >>
Why created:  applied port input of value <<pre and ma=M(m_a)>> -> <<post>> [serial 1083]
Solved by:  Substitution of Assertion Labels
and theorem 45:
Theorem (45) [serial 1111] used for:
  Substituted assertions' predicates for labels in preconditions [serial 1110] 


Theorem (47)                               [serial 1083] 
P [86] << AXIOM_CMA_IS_RMA() >>
S [87] m_a?(ma)
Q [88] << CMA = ma >>
Why created:    normalization of [serial 1071]
Solved by:  Port Data Input: when <<A and v=M(p)>> -> <<B>> then <<A>> p?(v) <<B>>
and theorem 46:
Theorem (46) [serial 1110] used for:
  applied port input of value <<pre and ma=M(m_a)>> -> <<post>> [serial 1083] 


Theorem (48)                               [serial 1071] 
P [86] << AXIOM_CMA_IS_RMA() >>
S [87] m_a?(ma)
Q [88] << ma = CMA >>
Why created:  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1016]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
and theorem 47:
Theorem (47) [serial 1083] used for:
    normalization of [serial 1071] 


Theorem (49)                               [serial 1123] 
P [88] << CMA = ma >>
S [89] ->
Q [90] << CMA = ma >>
Why created:    normalization of [serial 1121]
Solved by:  Identity (id):  P->P is tautology


Theorem (50)                               [serial 1121] 
P [88] << CMA = ma >>
S [89] ->
Q [90] << ( CMA = ma ) >>
Why created:  Law of And-Simplification:  P and true is P [serial 1120]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 49:
Theorem (49) [serial 1123] used for:
    normalization of [serial 1121] 


Theorem (51)                               [serial 1120] 
P [88] << CMA = ma >>
S [89] ->
Q [90] << CMA = ma
  and true >>
Why created:  Equality Law (idistr):  a=a <-> true [serial 1118]
Solved by:  Law of And-Simplification:  P and true is P
and theorem 50:
Theorem (50) [serial 1121] used for:
  Law of And-Simplification:  P and true is P [serial 1120] 


Theorem (52)                               [serial 1118] 
P [88] << CMA = ma >>
S [89] ->
Q [90] << CMA = ma
  and 1 = 1 >>
Why created:    normalization of [serial 1116]
Solved by:  Equality Law (idistr):  a=a <-> true
and theorem 51:
Theorem (51) [serial 1120] used for:
  Equality Law (idistr):  a=a <-> true [serial 1118] 


Theorem (53)                               [serial 1116] 
P [88] << CMA = ma >>
S [89] ->
Q [90] << CMA = ma
  and ( 1 ) = 1 >>
Why created:  applied wp for assignment [serial 1085]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 52:
Theorem (52) [serial 1118] used for:
    normalization of [serial 1116] 


Theorem (54)                               [serial 1085] 
P [88] << CMA = ma >>
S [89] i := 1
Q [90] << CMA = ma
  and i = 1 >>
Why created:    normalization of [serial 1072]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 53:
Theorem (53) [serial 1116] used for:
  applied wp for assignment [serial 1085] 


Theorem (55)                               [serial 1072] 
P [88] << ma = CMA >>
S [89] i := 1
Q [90] << i = 1
  and ma = CMA >>
Why created:  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1016]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 54:
Theorem (54) [serial 1085] used for:
    normalization of [serial 1072] 


Theorem (56)                               [serial 1126] 
P [90] << CMA = ma
  and i = 1 >>
S [91] ->
Q [92] << CMA = ma >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1125]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (57)                               [serial 1134] 
P [90] << CMA = ma
  and i = 1 >>
S [91] ->
Q [92] << true >>
Why created:  Equality Law (idistr):  a=a <-> true [serial 1132]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (58)                               [serial 1132] 
P [90] << CMA = ma
  and i = 1 >>
S [91] ->
Q [92] << ma.seg[1] = ma.seg[1] >>
Why created:    normalization of [serial 1130]
Solved by:  Equality Law (idistr):  a=a <-> true
and theorem 57:
Theorem (57) [serial 1134] used for:
  Equality Law (idistr):  a=a <-> true [serial 1132] 


Theorem (59)                               [serial 1130] 
P [90] << CMA = ma
  and i = 1 >>
S [91] ->
Q [92] << ma.seg[( 1 )] = ma.seg[1] >>
Why created:  Guided Substitution of Equals 
 replacing "i" with its = "( 1 )" in its postcondition [serial 1129]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 58:
Theorem (58) [serial 1132] used for:
    normalization of [serial 1130] 


Theorem (60)                               [serial 1129] 
P [90] << CMA = ma
  and i = 1 >>
S [91] ->
Q [92] << ma.seg[i] = ma.seg[1] >>
Why created:  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1127]
Solved by:  Guided Substitution of Equals
and theorem 59:
Theorem (59) [serial 1130] used for:
  Guided Substitution of Equals 
 replacing "i" with its = "( 1 )" in its postcondition [serial 1129] 


Theorem (61)                               [serial 1127] 
P [90] << CMA = ma
  and i = 1 >>
S [91] ->
Q [92] << CMA.seg[i] = ma.seg[1] >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1125]
Solved by:  Guided Substitution of Equals
and theorem 60:
Theorem (60) [serial 1129] used for:
  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1127] 


Theorem (62)                               [serial 1128] 
P [90] << CMA = ma
  and i = 1 >>
S [91] ->
Q [92] << i = 1 >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1125]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (63)                               [serial 1125] 
P [90] << CMA = ma
  and i = 1 >>
S [91] ->
Q [92] << CMA = ma
  and CMA.seg[i] = ma.seg[1]
  and i = 1 >>
Why created:  applied wp for assignment [serial 1088]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 56 61 62:
Theorem (56) [serial 1126] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1125] 
Theorem (61) [serial 1127] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1125] 
Theorem (62) [serial 1128] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1125] 


Theorem (64)                               [serial 1088] 
P [90] << CMA = ma
  and i = 1 >>
S [91] iSeg := ma.seg[1]
Q [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1 >>
Why created:    normalization of [serial 1078]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 63:
Theorem (63) [serial 1125] used for:
  applied wp for assignment [serial 1088] 


Theorem (65)                               [serial 1078] 
P [90] << i = 1
  and ma = CMA >>
S [91] iSeg := ma.seg[1]
Q [92] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
Why created:  Law of And-Simplification:  P and true is P [serial 1076]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 64:
Theorem (64) [serial 1088] used for:
    normalization of [serial 1078] 


Theorem (66)                               [serial 1076] 
P [90] << i = 1
  and ma = CMA >>
S [91] iSeg := ma.seg[1]
Q [92] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and true >>
Why created:   add user-defined axioms to postcondition
Solved by:  Law of And-Simplification:  P and true is P
and theorem 65:
Theorem (65) [serial 1078] used for:
  Law of And-Simplification:  P and true is P [serial 1076] 


Theorem (67)                               [serial 1126] 
P [90] << CMA = ma
  and i = 1 >>
S [91] ->
Q [92] << CMA = ma >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1125]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (68)                               [serial 1134] 
P [90] << CMA = ma
  and i = 1 >>
S [91] ->
Q [92] << true >>
Why created:  Equality Law (idistr):  a=a <-> true [serial 1132]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (69)                               [serial 1132] 
P [90] << CMA = ma
  and i = 1 >>
S [91] ->
Q [92] << ma.seg[1] = ma.seg[1] >>
Why created:    normalization of [serial 1130]
Solved by:  Equality Law (idistr):  a=a <-> true
and theorem 68:
Theorem (68) [serial 1134] used for:
  Equality Law (idistr):  a=a <-> true [serial 1132] 


Theorem (70)                               [serial 1130] 
P [90] << CMA = ma
  and i = 1 >>
S [91] ->
Q [92] << ma.seg[( 1 )] = ma.seg[1] >>
Why created:  Guided Substitution of Equals 
 replacing "i" with its = "( 1 )" in its postcondition [serial 1129]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 69:
Theorem (69) [serial 1132] used for:
    normalization of [serial 1130] 


Theorem (71)                               [serial 1129] 
P [90] << CMA = ma
  and i = 1 >>
S [91] ->
Q [92] << ma.seg[i] = ma.seg[1] >>
Why created:  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1127]
Solved by:  Guided Substitution of Equals
and theorem 70:
Theorem (70) [serial 1130] used for:
  Guided Substitution of Equals 
 replacing "i" with its = "( 1 )" in its postcondition [serial 1129] 


Theorem (72)                               [serial 1127] 
P [90] << CMA = ma
  and i = 1 >>
S [91] ->
Q [92] << CMA.seg[i] = ma.seg[1] >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1125]
Solved by:  Guided Substitution of Equals
and theorem 71:
Theorem (71) [serial 1129] used for:
  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1127] 


Theorem (73)                               [serial 1128] 
P [90] << CMA = ma
  and i = 1 >>
S [91] ->
Q [92] << i = 1 >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1125]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (74)                               [serial 1125] 
P [90] << CMA = ma
  and i = 1 >>
S [91] ->
Q [92] << CMA = ma
  and CMA.seg[i] = ma.seg[1]
  and i = 1 >>
Why created:  applied wp for assignment [serial 1088]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 67 72 73:
Theorem (67) [serial 1126] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1125] 
Theorem (72) [serial 1127] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1125] 
Theorem (73) [serial 1128] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1125] 


Theorem (75)                               [serial 1088] 
P [90] << CMA = ma
  and i = 1 >>
S [91] iSeg := ma.seg[1]
Q [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1 >>
Why created:    normalization of [serial 1078]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 74:
Theorem (74) [serial 1125] used for:
  applied wp for assignment [serial 1088] 


Theorem (76)                               [serial 1078] 
P [90] << i = 1
  and ma = CMA >>
S [91] iSeg := ma.seg[1]
Q [92] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
Why created:  Law of And-Simplification:  P and true is P [serial 1076]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 75:
Theorem (75) [serial 1088] used for:
    normalization of [serial 1078] 


Theorem (77)                               [serial 1076] 
P [90] << i = 1
  and ma = CMA >>
S [91] iSeg := ma.seg[1]
Q [92] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and true >>
Why created:   add user-defined axioms to postcondition
Solved by:  Law of And-Simplification:  P and true is P
and theorem 76:
Theorem (76) [serial 1078] used for:
  Law of And-Simplification:  P and true is P [serial 1076] 


Theorem (78)                               [serial 1073] 
P [90] << i = 1
  and ma = CMA >>
S [91] iSeg := ma.seg[1]
Q [92] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and AXIOM_NUM_SEG(ma : ma) >>
Why created:  <<Q1 and P2>> S2 <<Q2 and P3>> in sequential composition for [serial 1016]
Solved by:  Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 77 77:
Theorem (77) [serial 1076] used for:
   add user-defined axioms to postcondition 
Theorem (77) [serial 1076] used for:
   add user-defined axioms to postcondition 


Theorem (79)                               [serial 1150] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] ->
Q [95] << CMA.seg[i] = iSeg >>
Why created:  Guided Substitution of Equals 
 replacing "1" with its = "i" in its postcondition [serial 1148]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (80)                               [serial 1148] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] ->
Q [95] << CMA.seg[1] = iSeg >>
Why created:    normalization of [serial 1146]
Solved by:  Guided Substitution of Equals
and theorem 79:
Theorem (79) [serial 1150] used for:
  Guided Substitution of Equals 
 replacing "1" with its = "i" in its postcondition [serial 1148] 


Theorem (81)                               [serial 1146] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] ->
Q [95] << iSeg = CMA.seg[1] >>
Why created:  Guided Substitution of Equals 
 replacing "ma" with its = "CMA" in its postcondition [serial 1144]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
and theorem 80:
Theorem (80) [serial 1148] used for:
    normalization of [serial 1146] 


Theorem (82)                               [serial 1144] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] ->
Q [95] << iSeg = ma.seg[1] >>
Why created:    normalization of [serial 1142]
Solved by:  Guided Substitution of Equals
and theorem 81:
Theorem (81) [serial 1146] used for:
  Guided Substitution of Equals 
 replacing "ma" with its = "CMA" in its postcondition [serial 1144] 


Theorem (83)                               [serial 1142] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] ->
Q [95] << ( ma.seg[1] = iSeg ) >>
Why created:  Law of And-Simplification:  P and true is P [serial 1141]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 82:
Theorem (82) [serial 1144] used for:
    normalization of [serial 1142] 


Theorem (84)                               [serial 1141] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] ->
Q [95] << true
  and ma.seg[1] = iSeg
  and true
  and true >>
Why created:  Equality Law (idistr):  a=a <-> true [serial 1140]
Solved by:  Law of And-Simplification:  P and true is P
and theorem 83:
Theorem (83) [serial 1142] used for:
  Law of And-Simplification:  P and true is P [serial 1141] 


Theorem (85)                               [serial 1140] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] ->
Q [95] << ma = ma
  and ma.seg[1] = iSeg
  and ma.seg[2] = ma.seg[2]
  and 1 = 1 >>
Why created:  applied wp for assignment [serial 1139]
Solved by:  Equality Law (idistr):  a=a <-> true
and theorem 84:
Theorem (84) [serial 1141] used for:
  Equality Law (idistr):  a=a <-> true [serial 1140] 


Theorem (86)                               [serial 1139] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] nSeg := ma.seg[2]
Q [95] << ma = ma
  and ma.seg[1] = iSeg
  and ma.seg[2] = nSeg
  and 1 = 1 >>
Why created:  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1137]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 85:
Theorem (85) [serial 1140] used for:
  applied wp for assignment [serial 1139] 


Theorem (87)                               [serial 1137] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] nSeg := ma.seg[2]
Q [95] << CMA = ma
  and CMA.seg[1] = iSeg
  and CMA.seg[2] = nSeg
  and 1 = 1 >>
Why created:    normalization of [serial 1135]
Solved by:  Guided Substitution of Equals
and theorem 86:
Theorem (86) [serial 1139] used for:
  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1137] 


Theorem (88)                               [serial 1135] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] nSeg := ma.seg[2]
Q [95] << CMA = ma
  and CMA.seg[( 1 )] = iSeg
  and CMA.seg[1 + ( 1 )] = nSeg
  and ( 1 ) = 1 >>
Why created:  Guided Substitution of Equals 
 replacing "i" with its = "( 1 )" in its postcondition [serial 1090]
Solved by:  Literal Arithmetic
  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 87:
Theorem (87) [serial 1137] used for:
    normalization of [serial 1135] 


Theorem (89)                               [serial 1090] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] nSeg := ma.seg[2]
Q [95] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1 >>
Why created:    normalization of [serial 1079]
Solved by:  Guided Substitution of Equals
and theorem 88:
Theorem (88) [serial 1135] used for:
  Guided Substitution of Equals 
 replacing "i" with its = "( 1 )" in its postcondition [serial 1090] 


Theorem (90)                               [serial 1079] 
P [92] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] nSeg := ma.seg[2]
Q [95] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1] >>
Why created:  Law of And-Simplification:  P and true is P [serial 1077]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Equality: (a=b) = (b=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 89:
Theorem (89) [serial 1090] used for:
    normalization of [serial 1079] 


Theorem (91)                               [serial 1077] 
P [92] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] nSeg := ma.seg[2]
Q [95] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and true >>
Why created:   add user-defined axioms to postcondition
Solved by:  Law of And-Simplification:  P and true is P
and theorem 90:
Theorem (90) [serial 1079] used for:
  Law of And-Simplification:  P and true is P [serial 1077] 


Theorem (92)                               [serial 1150] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] ->
Q [95] << CMA.seg[i] = iSeg >>
Why created:  Guided Substitution of Equals 
 replacing "1" with its = "i" in its postcondition [serial 1148]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (93)                               [serial 1148] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] ->
Q [95] << CMA.seg[1] = iSeg >>
Why created:    normalization of [serial 1146]
Solved by:  Guided Substitution of Equals
and theorem 92:
Theorem (92) [serial 1150] used for:
  Guided Substitution of Equals 
 replacing "1" with its = "i" in its postcondition [serial 1148] 


Theorem (94)                               [serial 1146] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] ->
Q [95] << iSeg = CMA.seg[1] >>
Why created:  Guided Substitution of Equals 
 replacing "ma" with its = "CMA" in its postcondition [serial 1144]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
and theorem 93:
Theorem (93) [serial 1148] used for:
    normalization of [serial 1146] 


Theorem (95)                               [serial 1144] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] ->
Q [95] << iSeg = ma.seg[1] >>
Why created:    normalization of [serial 1142]
Solved by:  Guided Substitution of Equals
and theorem 94:
Theorem (94) [serial 1146] used for:
  Guided Substitution of Equals 
 replacing "ma" with its = "CMA" in its postcondition [serial 1144] 


Theorem (96)                               [serial 1142] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] ->
Q [95] << ( ma.seg[1] = iSeg ) >>
Why created:  Law of And-Simplification:  P and true is P [serial 1141]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 95:
Theorem (95) [serial 1144] used for:
    normalization of [serial 1142] 


Theorem (97)                               [serial 1141] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] ->
Q [95] << true
  and ma.seg[1] = iSeg
  and true
  and true >>
Why created:  Equality Law (idistr):  a=a <-> true [serial 1140]
Solved by:  Law of And-Simplification:  P and true is P
and theorem 96:
Theorem (96) [serial 1142] used for:
  Law of And-Simplification:  P and true is P [serial 1141] 


Theorem (98)                               [serial 1140] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] ->
Q [95] << ma = ma
  and ma.seg[1] = iSeg
  and ma.seg[2] = ma.seg[2]
  and 1 = 1 >>
Why created:  applied wp for assignment [serial 1139]
Solved by:  Equality Law (idistr):  a=a <-> true
and theorem 97:
Theorem (97) [serial 1141] used for:
  Equality Law (idistr):  a=a <-> true [serial 1140] 


Theorem (99)                               [serial 1139] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] nSeg := ma.seg[2]
Q [95] << ma = ma
  and ma.seg[1] = iSeg
  and ma.seg[2] = nSeg
  and 1 = 1 >>
Why created:  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1137]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 98:
Theorem (98) [serial 1140] used for:
  applied wp for assignment [serial 1139] 


Theorem (100)                               [serial 1137] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] nSeg := ma.seg[2]
Q [95] << CMA = ma
  and CMA.seg[1] = iSeg
  and CMA.seg[2] = nSeg
  and 1 = 1 >>
Why created:    normalization of [serial 1135]
Solved by:  Guided Substitution of Equals
and theorem 99:
Theorem (99) [serial 1139] used for:
  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1137] 


Theorem (101)                               [serial 1135] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] nSeg := ma.seg[2]
Q [95] << CMA = ma
  and CMA.seg[( 1 )] = iSeg
  and CMA.seg[1 + ( 1 )] = nSeg
  and ( 1 ) = 1 >>
Why created:  Guided Substitution of Equals 
 replacing "i" with its = "( 1 )" in its postcondition [serial 1090]
Solved by:  Literal Arithmetic
  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 100:
Theorem (100) [serial 1137] used for:
    normalization of [serial 1135] 


Theorem (102)                               [serial 1090] 
P [92] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] nSeg := ma.seg[2]
Q [95] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1 >>
Why created:    normalization of [serial 1079]
Solved by:  Guided Substitution of Equals
and theorem 101:
Theorem (101) [serial 1135] used for:
  Guided Substitution of Equals 
 replacing "i" with its = "( 1 )" in its postcondition [serial 1090] 


Theorem (103)                               [serial 1079] 
P [92] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] nSeg := ma.seg[2]
Q [95] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1] >>
Why created:  Law of And-Simplification:  P and true is P [serial 1077]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Equality: (a=b) = (b=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 102:
Theorem (102) [serial 1090] used for:
    normalization of [serial 1079] 


Theorem (104)                               [serial 1077] 
P [92] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] nSeg := ma.seg[2]
Q [95] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and true >>
Why created:   add user-defined axioms to postcondition
Solved by:  Law of And-Simplification:  P and true is P
and theorem 103:
Theorem (103) [serial 1079] used for:
  Law of And-Simplification:  P and true is P [serial 1077] 


Theorem (105)                               [serial 1074] 
P [92] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and AXIOM_NUM_SEG(ma : ma) >>
S [94] nSeg := ma.seg[2]
Q [95] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and AXIOM_NUM_SEG(ma : CMA) >>
Why created:  <<Q2 and P3>> S3 <<Q3>> in sequential composition for [serial 1016]
Solved by:  Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 104 104:
Theorem (104) [serial 1077] used for:
   add user-defined axioms to postcondition 
Theorem (104) [serial 1077] used for:
   add user-defined axioms to postcondition 


Theorem (106)                               [serial 1016] 
P [85] << m_a'fresh >>
S [86]   << AXIOM_CMA_IS_RMA() >>
  m_a?(ma)
  ;
  << ma = CMA >>
  i := 1
  ;
  << i = 1
    and ma = CMA >>
  iSeg := ma.seg[1]
  ;
  << i = 1
    and ma = CMA
    and iSeg = CMA.seg[i]
    and AXIOM_NUM_SEG(ma : ma) >>
  nSeg := ma.seg[2]
  << i = 1
    and ma = CMA
    and iSeg = CMA.seg[i]
    and nSeg = CMA.seg[i + 1]
    and AXIOM_NUM_SEG(ma : CMA) >> 
Q [57] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:   <<M(CheckFirstMA) and x>> A <<M(MoveForward)>> for GotFirstMACheckFirstMA-[x]->MoveForward{A};
Solved by:  Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>>
and theorems 30 42 48 55 78 105:
Theorem (30) [serial 1069] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 1016] 
Theorem (42) [serial 1070] used for:
  <<Q3>> -> <<Q>> in sequential composition for [serial 1016] 
Theorem (48) [serial 1071] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1016] 
Theorem (55) [serial 1072] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1016] 
Theorem (78) [serial 1073] used for:
  <<Q1 and P2>> S2 <<Q2 and P3>> in sequential composition for [serial 1016] 
Theorem (105) [serial 1074] used for:
  <<Q2 and P3>> S3 <<Q3>> in sequential composition for [serial 1016] 


Theorem (107)                               [serial 1166] 
P [100] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and ( p@now )
  and not ( exists u ~ time
  in tops ,, now 
  that p@u  ) >>
S [100] ->
Q [101] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  Law of And-Simplification:  P and true is P [serial 1165]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (108)                               [serial 1165] 
P [100] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and ( p@now )
  and not ( exists u ~ time
  in tops ,, now 
  that p@u  ) >>
S [100] ->
Q [101] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and true
  and true
  and true
  and true >>
Why created:   add user-defined axioms to postcondition
Solved by:  Law of And-Simplification:  P and true is P
and theorem 107:
Theorem (107) [serial 1166] used for:
  Law of And-Simplification:  P and true is P [serial 1165] 


Theorem (109)                               [serial 1166] 
P [100] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and ( p@now )
  and not ( exists u ~ time
  in tops ,, now 
  that p@u  ) >>
S [100] ->
Q [101] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  Law of And-Simplification:  P and true is P [serial 1165]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (110)                               [serial 1165] 
P [100] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and ( p@now )
  and not ( exists u ~ time
  in tops ,, now 
  that p@u  ) >>
S [100] ->
Q [101] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and true
  and true
  and true
  and true >>
Why created:   add user-defined axioms to postcondition
Solved by:  Law of And-Simplification:  P and true is P
and theorem 109:
Theorem (109) [serial 1166] used for:
  Law of And-Simplification:  P and true is P [serial 1165] 


Theorem (111)                               [serial 1152] 
P [100] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and ( p@now )
  and not ( exists u ~ time
  in tops ,, now 
  that p@u  ) >>
S [100] ->
Q [101] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
Why created:  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1151]
Solved by:  Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 110 110:
Theorem (110) [serial 1165] used for:
   add user-defined axioms to postcondition 
Theorem (110) [serial 1165] used for:
   add user-defined axioms to postcondition 


Theorem (112)                               [serial 1182] 
P [101] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [105] ->
Q [105] << true >>
Why created:    normalization of [serial 1180]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (113)                               [serial 1180] 
P [101] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [105] ->
Q [105] << ( true ) >>
Why created:  Law of And-Simplification:  P and P is P [serial 1179]
Solved by:  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 112:
Theorem (112) [serial 1182] used for:
    normalization of [serial 1180] 


Theorem (114)                               [serial 1179] 
P [101] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [105] ->
Q [105] << ( true )
  and ( true ) >>
Why created:  Law of And-Simplification:  P and P is P [serial 1178]
Solved by:  Law of And-Simplification:  P and P is P
and theorem 113:
Theorem (113) [serial 1180] used for:
  Law of And-Simplification:  P and P is P [serial 1179] 


Theorem (115)                               [serial 1178] 
P [101] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [105] ->
Q [105] << ( true )
  and ( true )
  and ( true )
  and ( true ) >>
Why created:  Law of And-Simplification:  P and P is P [serial 1177]
Solved by:  Law of And-Simplification:  P and P is P
and theorem 114:
Theorem (114) [serial 1179] used for:
  Law of And-Simplification:  P and P is P [serial 1178] 


Theorem (116)                               [serial 1177] 
P [101] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [105] ->
Q [105] << ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true ) >>
Why created:  Law of And-Simplification:  P and P is P [serial 1176]
Solved by:  Law of And-Simplification:  P and P is P
and theorem 115:
Theorem (115) [serial 1178] used for:
  Law of And-Simplification:  P and P is P [serial 1177] 


Theorem (117)                               [serial 1176] 
P [101] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [105] ->
Q [105] << ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true ) >>
Why created:  Law of And-Simplification:  P and P is P [serial 1175]
Solved by:  Law of And-Simplification:  P and P is P
and theorem 116:
Theorem (116) [serial 1177] used for:
  Law of And-Simplification:  P and P is P [serial 1176] 


Theorem (118)                               [serial 1175] 
P [101] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [105] ->
Q [105] << ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true ) >>
Why created:  Law of Excluded Middle: P or not P is tautology [serial 1174]
Solved by:  Law of And-Simplification:  P and P is P
and theorem 117:
Theorem (117) [serial 1176] used for:
  Law of And-Simplification:  P and P is P [serial 1175] 


Theorem (119)                               [serial 1174] 
P [101] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [105] ->
Q [105] << ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or v < iSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v < iSeg.v_e
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or v < iSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or v < iSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or v < iSeg.v_e
   or v < iSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v < iSeg.v_e
   or v < iSeg.v_e
   or v < iSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v < iSeg.v_e
   or v < iSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v < iSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v < iSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v < iSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v < iSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v < iSeg.v_e
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or v < iSeg.v_e
   or v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v < iSeg.v_e
   or v < iSeg.v_e
   or v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v < iSeg.v_e
   or v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v < iSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v < iSeg.v_e
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or v < iSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v < iSeg.v_e
   or v < iSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v < iSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v < iSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) >>
Why created:  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and  while transforming into
  conjunctive normal form [serial 1172]
Solved by:  Law of Excluded Middle: P or not P is tautology
and theorem 118:
Theorem (118) [serial 1175] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1174] 


Theorem (120)                               [serial 1172] 
P [101] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [105] ->
Q [105] << not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or ( not ( v < iSeg.v_n )
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or ( v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) >>
Why created:    normalization of [serial 1170]
Solved by:  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 119:
Theorem (119) [serial 1174] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and  while transforming into
  conjunctive normal form [serial 1172] 


Theorem (121)                               [serial 1170] 
P [101] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [105] ->
Q [105] << ( not ( v < iSeg.v_e ) )
   or ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
   or ( ( not ( v < iSeg.v_n ) )
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or ( ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) )
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or ( v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1168]
Solved by:  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 120:
Theorem (120) [serial 1172] used for:
    normalization of [serial 1170] 


Theorem (122)                               [serial 1168] 
P [101] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [105] ->
Q [105] << iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
   or ( iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or ( b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or ( v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) >>
Why created:    normalization of [serial 1154]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 121:
Theorem (121) [serial 1170] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1168] 


Theorem (123)                               [serial 1154] 
P [101] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [105] ->
Q [105] << ( v >= iSeg.v_e )
   or ( v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) )
   or ( v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) )
   or ( v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) )
   or ( v < iSeg.v_n
  and v*v < nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p )
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
Why created:    <<P>> -> <<B1 or B2 or ... or Bn>> in alternative for [serial 1153]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 122:
Theorem (122) [serial 1168] used for:
    normalization of [serial 1154] 


Theorem (124)                               [serial 1212] 
P [105] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [107] ->
Q [14] << iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v >>
Why created:    normalization of [serial 1208]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (125)                               [serial 1208] 
P [105] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and i < CMA.num_segments >>
S [107] ->
Q [14] << ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1191]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 124:
Theorem (124) [serial 1212] used for:
    normalization of [serial 1208] 


Theorem (126)                               [serial 1191] 
P [105] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [107] ->
Q [14] << EB() >>
Why created:  applied port output of value <<pre>> -> <<M(eb)[eb|true]>> [serial 1188]
Solved by:  Substitution of Assertion Labels
and theorem 125:
Theorem (125) [serial 1208] used for:
  Substituted assertions' predicates for labels  [serial 1191] 


Theorem (127)                               [serial 1197] 
P [107] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and ( EB() )@now >>
S [107] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1192]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (128)                               [serial 1192] 
P [107] << ( iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments )
  and ( EB() )@now >>
S [107] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  applied port output <<pre and (EB())@now>> -> <<post>> [serial 1188]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 127:
Theorem (127) [serial 1197] used for:
  Associativity: (b.c).a = a.b.c [serial 1192] 


Theorem (129)                               [serial 1188] 
P [105] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [107] eb!(true)
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  <<P>> S1 <<Q>> in concurrent composition for [serial 1186]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 126 128:
Theorem (126) [serial 1191] used for:
  applied port output of value <<pre>> -> <<M(eb)[eb|true]>> [serial 1188] 
Theorem (128) [serial 1192] used for:
  applied port output <<pre and (EB())@now>> -> <<post>> [serial 1188] 


Theorem (130)                               [serial 1221] 
P [105] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [107] ->
Q [107] << iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
   or not ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1216]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (131)                               [serial 1216] 
P [105] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [107] ->
Q [107] << not ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v )
   or ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v ) >>
Why created:    normalization of [serial 1210]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 130:
Theorem (130) [serial 1221] used for:
  Associativity: (b.c).a = a.b.c [serial 1216] 


Theorem (132)                               [serial 1210] 
P [105] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and i < CMA.num_segments >>
S [107] ->
Q [107] << ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) )
   or not ( v >= iSeg.v_n
   or v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1205]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 131:
Theorem (131) [serial 1216] used for:
    normalization of [serial 1210] 


Theorem (133)                               [serial 1205] 
P [105] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [107] ->
Q [107] << EB()
   or not SB() >>
Why created:    normalization of [serial 1200]
Solved by:  Substitution of Assertion Labels
and theorem 132:
Theorem (132) [serial 1210] used for:
  Substituted assertions' predicates for labels  [serial 1205] 


Theorem (134)                               [serial 1200] 
P [105] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [107] ->
Q [107] << ( not ( SB() )
   or not ( not EB() ) ) >>
Why created:  DeMorgan's Law: not (A and B) = (not A) or (not B)  [serial 1193]
Solved by:  Reflexivity of Addition: a+b=b+a
  Complement
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 133:
Theorem (133) [serial 1205] used for:
    normalization of [serial 1200] 


Theorem (135)                               [serial 1193] 
P [105] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [107] ->
Q [107] << not ( SB()
  and not EB() ) >>
Why created:  applied port output of value <<pre>> -> <<M(sb)[sb|false]>> [serial 1189]
Solved by:  DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 134:
Theorem (134) [serial 1200] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B)  [serial 1193] 


Theorem (136)                               [serial 1198] 
P [107] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and ( not ( SB()
  and not EB() ) )@now >>
S [107] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1194]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (137)                               [serial 1194] 
P [107] << ( iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments )
  and ( not ( SB()
  and not EB() ) )@now >>
S [107] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  applied port output <<pre and (not ( SB()
  and not EB() ))@now>> -> <<post>> [serial 1189]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 136:
Theorem (136) [serial 1198] used for:
  Associativity: (b.c).a = a.b.c [serial 1194] 


Theorem (138)                               [serial 1189] 
P [105] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [107] sb!(false)
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  <<P>> S2 <<Q>> in concurrent composition for [serial 1186]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 135 137:
Theorem (135) [serial 1193] used for:
  applied port output of value <<pre>> -> <<M(sb)[sb|false]>> [serial 1189] 
Theorem (137) [serial 1194] used for:
  applied port output <<pre and (not ( SB()
  and not EB() ))@now>> -> <<post>> [serial 1189] 


Theorem (139)                               [serial 1199] 
P [107] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and ( ca = ( 0 mpss ) )@now >>
S [107] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1195]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (140)                               [serial 1195] 
P [107] << ( iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments )
  and ( ca = ( 0 mpss ) )@now >>
S [107] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  applied port output <<pre and (ca=0 mpss)@now>> -> <<post>> [serial 1190]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 139:
Theorem (139) [serial 1199] used for:
  Associativity: (b.c).a = a.b.c [serial 1195] 


Theorem (141)                               [serial 1220] 
P [105] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [107] ->
Q [33] << iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
   or iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1214]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (142)                               [serial 1214] 
P [105] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [107] ->
Q [33] << ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v )
   or ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) >>
Why created:    normalization of [serial 1209]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 141:
Theorem (141) [serial 1220] used for:
  Associativity: (b.c).a = a.b.c [serial 1214] 


Theorem (143)                               [serial 1209] 
P [105] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and i < CMA.num_segments >>
S [107] ->
Q [33] << ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) )
   or ( v >= iSeg.v_n
   or v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1203]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 142:
Theorem (142) [serial 1214] used for:
    normalization of [serial 1209] 


Theorem (144)                               [serial 1203] 
P [105] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [107] ->
Q [33] << EB()
   or SB() >>
Why created:    normalization of [serial 1196]
Solved by:  Substitution of Assertion Labels
and theorem 143:
Theorem (143) [serial 1209] used for:
  Substituted assertions' predicates for labels  [serial 1203] 


Theorem (145)                               [serial 1196] 
P [105] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [107] ->
Q [33] << ( SB()
   or EB() ) >>
Why created:  applied port output of conditional expression <<pre>> -> <<( SB()
   or EB() )>> where ( SB()
   or EB() ) -> 0 mpss for ca!(0 mpss) 
[serial 1190]
Solved by:  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 144:
Theorem (144) [serial 1203] used for:
    normalization of [serial 1196] 


Theorem (146)                               [serial 1190] 
P [105] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [107] ca!(0 mpss)
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  <<P>> S3 <<Q>> in concurrent composition for [serial 1186]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 140 145:
Theorem (140) [serial 1195] used for:
  applied port output <<pre and (ca=0 mpss)@now>> -> <<post>> [serial 1190] 
Theorem (145) [serial 1196] used for:
  applied port output of conditional expression <<pre>> -> <<( SB()
   or EB() )>> where ( SB()
   or EB() ) -> 0 mpss for ca!(0 mpss) 
[serial 1190] 


Theorem (147)                               [serial 1186] 
P [105] << iSeg.v_e <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [107]   eb!(true)
  &
  sb!(false)
  &
  ca!(0 mpss) 
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:    normalization of [serial 1184]
Solved by:  Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>>
and theorems 129 138 146:
Theorem (129) [serial 1188] used for:
  <<P>> S1 <<Q>> in concurrent composition for [serial 1186] 
Theorem (138) [serial 1189] used for:
  <<P>> S2 <<Q>> in concurrent composition for [serial 1186] 
Theorem (146) [serial 1190] used for:
  <<P>> S3 <<Q>> in concurrent composition for [serial 1186] 


Theorem (148)                               [serial 1184] 
P [105] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and ( v >= iSeg.v_e ) >>
S [107]   eb!(true)
  &
  sb!(false)
  &
  ca!(0 mpss) 
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1160]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 147:
Theorem (147) [serial 1186] used for:
    normalization of [serial 1184] 


Theorem (149)                               [serial 1160] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_e ) >>
S [107]   eb!(true)
  &
  sb!(false)
  &
  ca!(0 mpss) 
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  <<P>> T <<Q>> in existential lattice quantification for [serial 1155]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 148:
Theorem (148) [serial 1184] used for:
  Associativity: (b.c).a = a.b.c [serial 1160] 


Theorem (150)                               [serial 1155] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_e ) >>
S [107]   {
    eb!(true)
    &
    sb!(false)
    &
    ca!(0 mpss) 
  } 
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:    <<P and B0>> S0 <<Q>> in alternative for [serial 1153]
Solved by:  Introduction of Existential Quantification
and theorem 149:
Theorem (149) [serial 1160] used for:
  <<P>> T <<Q>> in existential lattice quantification for [serial 1155] 


Theorem (151)                               [serial 1242] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [110] ->
Q [14] << iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v >>
Why created:    normalization of [serial 1238]
Solved by:  Guided Substitution of Equals
  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (152)                               [serial 1238] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and i < CMA.num_segments >>
S [110] ->
Q [14] << ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1229]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 151:
Theorem (151) [serial 1242] used for:
    normalization of [serial 1238] 


Theorem (153)                               [serial 1229] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [110] ->
Q [14] << EB() >>
Why created:  applied port output of value <<pre>> -> <<M(eb)[eb|true]>> [serial 1226]
Solved by:  Substitution of Assertion Labels
and theorem 152:
Theorem (152) [serial 1238] used for:
  Substituted assertions' predicates for labels  [serial 1229] 


Theorem (154)                               [serial 1235] 
P [110] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and ( EB() )@now >>
S [110] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1230]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (155)                               [serial 1230] 
P [110] << ( e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments )
  and ( EB() )@now >>
S [110] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  applied port output <<pre and (EB())@now>> -> <<post>> [serial 1226]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 154:
Theorem (154) [serial 1235] used for:
  Associativity: (b.c).a = a.b.c [serial 1230] 


Theorem (156)                               [serial 1226] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [110] eb!(true)
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  <<P>> S1 <<Q>> in concurrent composition for [serial 1224]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 153 155:
Theorem (153) [serial 1229] used for:
  applied port output of value <<pre>> -> <<M(eb)[eb|true]>> [serial 1226] 
Theorem (155) [serial 1230] used for:
  applied port output <<pre and (EB())@now>> -> <<post>> [serial 1226] 


Theorem (157)                               [serial 1264] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [110] ->
Q [110] << iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
   or ( not ( iSeg.v_n <= v )
  and not ( b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) ) >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1261]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (158)                               [serial 1261] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [110] ->
Q [110] << ( not ( iSeg.v_n <= v )
  and not ( b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) )
   or ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v ) >>
Why created:    normalization of [serial 1258]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 157:
Theorem (157) [serial 1264] used for:
  Associativity: (b.c).a = a.b.c [serial 1261] 


Theorem (159)                               [serial 1258] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [110] ->
Q [110] << ( not ( not ( iSeg.v_e <= v ) )
   or not ( not ( e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v ) ) )
   or ( not ( iSeg.v_n <= v )
  and not ( b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) ) >>
Why created:  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1256]
Solved by:  Reflexivity of Addition: a+b=b+a
  Complement
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 158:
Theorem (158) [serial 1261] used for:
    normalization of [serial 1258] 


Theorem (160)                               [serial 1256] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [110] ->
Q [110] << not ( not ( iSeg.v_e <= v )
  and not ( e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v ) )
   or not ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) >>
Why created:    normalization of [serial 1253]
Solved by:  DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 159:
Theorem (159) [serial 1258] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1256] 


Theorem (161)                               [serial 1253] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [110] ->
Q [110] << ( not ( ( not ( iSeg.v_e <= v )
  and not ( e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v ) ) )
   or not ( ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) ) ) >>
Why created:  Guided Substitution of Equals DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1244]
Solved by:  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 160:
Theorem (160) [serial 1256] used for:
    normalization of [serial 1253] 


Theorem (162)                               [serial 1244] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [110] ->
Q [110] << not ( not ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v )
  and ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) ) >>
Why created:    normalization of [serial 1239]
Solved by:  Guided Substitution of Equals
  DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 161:
Theorem (161) [serial 1253] used for:
  Guided Substitution of Equals DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1244] 


Theorem (163)                               [serial 1239] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and i < CMA.num_segments >>
S [110] ->
Q [110] << not ( ( v >= iSeg.v_n
   or v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) )
  and not ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1231]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 162:
Theorem (162) [serial 1244] used for:
    normalization of [serial 1239] 


Theorem (164)                               [serial 1231] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [110] ->
Q [110] << not ( SB()
  and not EB() ) >>
Why created:  applied port output of value <<pre>> -> <<M(sb)[sb|false]>> [serial 1227]
Solved by:  Substitution of Assertion Labels
and theorem 163:
Theorem (163) [serial 1239] used for:
  Substituted assertions' predicates for labels  [serial 1231] 


Theorem (165)                               [serial 1236] 
P [110] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and ( not ( SB()
  and not EB() ) )@now >>
S [110] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1232]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (166)                               [serial 1232] 
P [110] << ( e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments )
  and ( not ( SB()
  and not EB() ) )@now >>
S [110] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  applied port output <<pre and (not ( SB()
  and not EB() ))@now>> -> <<post>> [serial 1227]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 165:
Theorem (165) [serial 1236] used for:
  Associativity: (b.c).a = a.b.c [serial 1232] 


Theorem (167)                               [serial 1227] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [110] sb!(false)
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  <<P>> S2 <<Q>> in concurrent composition for [serial 1224]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 164 166:
Theorem (164) [serial 1231] used for:
  applied port output of value <<pre>> -> <<M(sb)[sb|false]>> [serial 1227] 
Theorem (166) [serial 1232] used for:
  applied port output <<pre and (not ( SB()
  and not EB() ))@now>> -> <<post>> [serial 1227] 


Theorem (168)                               [serial 1237] 
P [110] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and ( ca = ( 0 mpss ) )@now >>
S [110] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1233]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (169)                               [serial 1233] 
P [110] << ( e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments )
  and ( ca = ( 0 mpss ) )@now >>
S [110] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  applied port output <<pre and (ca=0 mpss)@now>> -> <<post>> [serial 1228]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 168:
Theorem (168) [serial 1237] used for:
  Associativity: (b.c).a = a.b.c [serial 1233] 


Theorem (170)                               [serial 1263] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [110] ->
Q [33] << iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
   or iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1246]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (171)                               [serial 1246] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [110] ->
Q [33] << ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v )
   or ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) >>
Why created:    normalization of [serial 1240]
Solved by:  Guided Substitution of Equals
  Associativity: (b.c).a = a.b.c
and theorem 170:
Theorem (170) [serial 1263] used for:
  Associativity: (b.c).a = a.b.c [serial 1246] 


Theorem (172)                               [serial 1240] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and i < CMA.num_segments >>
S [110] ->
Q [33] << ( ( v >= iSeg.v_n
   or v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) )
   or ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1234]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 171:
Theorem (171) [serial 1246] used for:
    normalization of [serial 1240] 


Theorem (173)                               [serial 1234] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [110] ->
Q [33] << ( SB()
   or EB() ) >>
Why created:  applied port output of conditional expression <<pre>> -> <<( SB()
   or EB() )>> where ( SB()
   or EB() ) -> 0 mpss for ca!(0 mpss) 
[serial 1228]
Solved by:  Substitution of Assertion Labels
and theorem 172:
Theorem (172) [serial 1240] used for:
  Substituted assertions' predicates for labels  [serial 1234] 


Theorem (174)                               [serial 1228] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [110] ca!(0 mpss)
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  <<P>> S3 <<Q>> in concurrent composition for [serial 1224]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 169 173:
Theorem (169) [serial 1233] used for:
  applied port output <<pre and (ca=0 mpss)@now>> -> <<post>> [serial 1228] 
Theorem (173) [serial 1234] used for:
  applied port output of conditional expression <<pre>> -> <<( SB()
   or EB() )>> where ( SB()
   or EB() ) -> 0 mpss for ca!(0 mpss) 
[serial 1228] 


Theorem (175)                               [serial 1224] 
P [105] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments >>
S [110]   eb!(true)
  &
  sb!(false)
  &
  ca!(0 mpss) 
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:    normalization of [serial 1222]
Solved by:  Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>>
and theorems 156 167 174:
Theorem (156) [serial 1226] used for:
  <<P>> S1 <<Q>> in concurrent composition for [serial 1224] 
Theorem (167) [serial 1227] used for:
  <<P>> S2 <<Q>> in concurrent composition for [serial 1224] 
Theorem (174) [serial 1228] used for:
  <<P>> S3 <<Q>> in concurrent composition for [serial 1224] 


Theorem (176)                               [serial 1222] 
P [105] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and ( v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [110]   eb!(true)
  &
  sb!(false)
  &
  ca!(0 mpss) 
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1161]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 175:
Theorem (175) [serial 1224] used for:
    normalization of [serial 1222] 


Theorem (177)                               [serial 1161] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [110]   eb!(true)
  &
  sb!(false)
  &
  ca!(0 mpss) 
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  <<P>> T <<Q>> in existential lattice quantification for [serial 1156]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 176:
Theorem (176) [serial 1222] used for:
  Associativity: (b.c).a = a.b.c [serial 1161] 


Theorem (178)                               [serial 1156] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [110]   {
    eb!(true)
    &
    sb!(false)
    &
    ca!(0 mpss) 
  } 
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:    <<P and B1>> S1 <<Q>> in alternative for [serial 1153]
Solved by:  Introduction of Existential Quantification
and theorem 177:
Theorem (177) [serial 1161] used for:
  <<P>> T <<Q>> in existential lattice quantification for [serial 1156] 


Theorem (179)                               [serial 1336] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v < iSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [86] << v < iSeg.v_e >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1335]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (180)                               [serial 1337] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v < iSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [86] << v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1335]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (181)                               [serial 1340] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v < iSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [35] << not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) >>
Why created:    normalization of [serial 1338]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (182)                               [serial 1338] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v < iSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [35] << ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1335]
Solved by:  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 181:
Theorem (181) [serial 1340] used for:
    normalization of [serial 1338] 


Theorem (183)                               [serial 1335] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v < iSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [12] << v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1329]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 179 180 182:
Theorem (179) [serial 1336] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1335] 
Theorem (180) [serial 1337] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1335] 
Theorem (182) [serial 1338] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1335] 


Theorem (184)                               [serial 1329] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v < iSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [12] << ( v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:    normalization of [serial 1325]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 183:
Theorem (183) [serial 1335] used for:
  Associativity: (b.c).a = a.b.c [serial 1329] 


Theorem (185)                               [serial 1325] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v < iSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [12] << ( not ( not ( v < iSeg.v_e ) )
  and not ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) )
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1317]
Solved by:  Reflexivity of Addition: a+b=b+a
  Complement
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 184:
Theorem (184) [serial 1329] used for:
    normalization of [serial 1325] 


Theorem (186)                               [serial 1317] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v < iSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [12] << not ( not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:    normalization of [serial 1313]
Solved by:  DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 185:
Theorem (185) [serial 1325] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1317] 


Theorem (187)                               [serial 1313] 
P [105] << ( not ( v < iSeg.v_n ) )
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [12] << not ( ( not ( v < iSeg.v_e ) )
   or ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) )
  and ( ( not ( v < iSeg.v_n ) )
   or ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1305]
Solved by:  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 186:
Theorem (186) [serial 1317] used for:
    normalization of [serial 1313] 


Theorem (188)                               [serial 1305] 
P [105] << iSeg.v_n <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [12] << not ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v )
  and ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) >>
Why created:    normalization of [serial 1301]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 187:
Theorem (187) [serial 1313] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1305] 


Theorem (189)                               [serial 1301] 
P [105] << iSeg.v_n <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and i < CMA.num_segments
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [12] << ( v >= iSeg.v_n
   or v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) )
  and not ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1284]
Solved by:  Guided Substitution of Equals
  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 188:
Theorem (188) [serial 1305] used for:
    normalization of [serial 1301] 


Theorem (190)                               [serial 1284] 
P [105] << iSeg.v_n <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [12] << SB()
  and not EB() >>
Why created:    normalization of [serial 1274]
Solved by:  Substitution of Assertion Labels
and theorem 189:
Theorem (189) [serial 1301] used for:
  Substituted assertions' predicates for labels  [serial 1284] 


Theorem (191)                               [serial 1274] 
P [105] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) >>
S [114] ->
Q [12] << SB()
  and not EB() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1268]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 190:
Theorem (190) [serial 1284] used for:
    normalization of [serial 1274] 


Theorem (192)                               [serial 1268] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [114] ->
Q [12] << SB()
  and not EB() >>
Why created:  applied port output of value <<pre>> -> <<M(sb)[sb|true]>> [serial 1265]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 191:
Theorem (191) [serial 1274] used for:
  Associativity: (b.c).a = a.b.c [serial 1268] 


Theorem (193)                               [serial 1290] 
P [114] << iSeg.v_n <= v
  and ( SB()
  and not EB() )@now
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:    normalization of [serial 1280]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (194)                               [serial 1280] 
P [114] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and ( SB()
  and not EB() )@now >>
S [114] ->
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1275]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 193:
Theorem (193) [serial 1290] used for:
    normalization of [serial 1280] 


Theorem (195)                               [serial 1275] 
P [114] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) )
  and ( SB()
  and not EB() )@now >>
S [114] ->
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1269]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 194:
Theorem (194) [serial 1280] used for:
  Associativity: (b.c).a = a.b.c [serial 1275] 


Theorem (196)                               [serial 1269] 
P [114] << ( ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) )
  and ( SB()
  and not EB() )@now >>
S [114] ->
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  applied port output <<pre and (SB()
  and not EB())@now>> -> <<post>> [serial 1265]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 195:
Theorem (195) [serial 1275] used for:
  Associativity: (b.c).a = a.b.c [serial 1269] 


Theorem (197)                               [serial 1265] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [114] sb!(true)
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  <<P>> S1 <<Q>> in concurrent composition for [serial 1162]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 192 196:
Theorem (192) [serial 1268] used for:
  applied port output of value <<pre>> -> <<M(sb)[sb|true]>> [serial 1265] 
Theorem (196) [serial 1269] used for:
  applied port output <<pre and (SB()
  and not EB())@now>> -> <<post>> [serial 1265] 


Theorem (198)                               [serial 1331] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v < iSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [114] << v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
Why created:    normalization of [serial 1326]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (199)                               [serial 1326] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v < iSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [114] << ( not ( not ( v < iSeg.v_e ) )
  and not ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) ) >>
Why created:  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1319]
Solved by:  Reflexivity of Addition: a+b=b+a
  Complement
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 198:
Theorem (198) [serial 1331] used for:
    normalization of [serial 1326] 


Theorem (200)                               [serial 1319] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v < iSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [114] << not ( not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) >>
Why created:    normalization of [serial 1314]
Solved by:  DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 199:
Theorem (199) [serial 1326] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1319] 


Theorem (201)                               [serial 1314] 
P [105] << ( not ( v < iSeg.v_n ) )
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [114] << not ( ( not ( v < iSeg.v_e ) )
   or ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1307]
Solved by:  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 200:
Theorem (200) [serial 1319] used for:
    normalization of [serial 1314] 


Theorem (202)                               [serial 1307] 
P [105] << iSeg.v_n <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [114] << not ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v ) >>
Why created:    normalization of [serial 1302]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 201:
Theorem (201) [serial 1314] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1307] 


Theorem (203)                               [serial 1302] 
P [105] << iSeg.v_n <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and i < CMA.num_segments
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [114] << not ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1286]
Solved by:  Guided Substitution of Equals
  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 202:
Theorem (202) [serial 1307] used for:
    normalization of [serial 1302] 


Theorem (204)                               [serial 1286] 
P [105] << iSeg.v_n <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [114] << not EB() >>
Why created:    normalization of [serial 1276]
Solved by:  Substitution of Assertion Labels
and theorem 203:
Theorem (203) [serial 1302] used for:
  Substituted assertions' predicates for labels  [serial 1286] 


Theorem (205)                               [serial 1276] 
P [105] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) >>
S [114] ->
Q [114] << not EB() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1270]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 204:
Theorem (204) [serial 1286] used for:
    normalization of [serial 1276] 


Theorem (206)                               [serial 1270] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [114] ->
Q [114] << not EB() >>
Why created:  applied port output of value <<pre>> -> <<M(eb)[eb|false]>> [serial 1266]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 205:
Theorem (205) [serial 1276] used for:
  Associativity: (b.c).a = a.b.c [serial 1270] 


Theorem (207)                               [serial 1292] 
P [114] << iSeg.v_n <= v
  and ( not EB() )@now
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:    normalization of [serial 1281]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (208)                               [serial 1281] 
P [114] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and ( not EB() )@now >>
S [114] ->
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1277]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 207:
Theorem (207) [serial 1292] used for:
    normalization of [serial 1281] 


Theorem (209)                               [serial 1277] 
P [114] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) )
  and ( not EB() )@now >>
S [114] ->
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1271]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 208:
Theorem (208) [serial 1281] used for:
  Associativity: (b.c).a = a.b.c [serial 1277] 


Theorem (210)                               [serial 1271] 
P [114] << ( ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) )
  and ( not EB() )@now >>
S [114] ->
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  applied port output <<pre and (not EB())@now>> -> <<post>> [serial 1266]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 209:
Theorem (209) [serial 1277] used for:
  Associativity: (b.c).a = a.b.c [serial 1271] 


Theorem (211)                               [serial 1266] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [114] eb!(false)
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  <<P>> S2 <<Q>> in concurrent composition for [serial 1162]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 206 210:
Theorem (206) [serial 1270] used for:
  applied port output of value <<pre>> -> <<M(eb)[eb|false]>> [serial 1266] 
Theorem (210) [serial 1271] used for:
  applied port output <<pre and (not EB())@now>> -> <<post>> [serial 1266] 


Theorem (212)                               [serial 1294] 
P [114] << iSeg.v_n <= v
  and ( ca = 0 mpss )@now
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:    normalization of [serial 1282]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (213)                               [serial 1282] 
P [114] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and ( ca = ( 0 mpss ) )@now >>
S [114] ->
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1278]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 212:
Theorem (212) [serial 1294] used for:
    normalization of [serial 1282] 


Theorem (214)                               [serial 1278] 
P [114] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) )
  and ( ca = ( 0 mpss ) )@now >>
S [114] ->
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1272]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 213:
Theorem (213) [serial 1282] used for:
  Associativity: (b.c).a = a.b.c [serial 1278] 


Theorem (215)                               [serial 1272] 
P [114] << ( ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) )
  and ( ca = ( 0 mpss ) )@now >>
S [114] ->
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  applied port output <<pre and (ca=0 mpss)@now>> -> <<post>> [serial 1267]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 214:
Theorem (214) [serial 1278] used for:
  Associativity: (b.c).a = a.b.c [serial 1272] 


Theorem (216)                               [serial 1334] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v < iSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [33] << not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1321]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (217)                               [serial 1321] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v < iSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [33] << ( not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
   or ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:    normalization of [serial 1315]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 216:
Theorem (216) [serial 1334] used for:
  Associativity: (b.c).a = a.b.c [serial 1321] 


Theorem (218)                               [serial 1315] 
P [105] << ( not ( v < iSeg.v_n ) )
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [33] << ( ( not ( v < iSeg.v_e ) )
   or ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) )
   or ( ( not ( v < iSeg.v_n ) )
   or ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1309]
Solved by:  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 217:
Theorem (217) [serial 1321] used for:
    normalization of [serial 1315] 


Theorem (219)                               [serial 1309] 
P [105] << iSeg.v_n <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [33] << ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v )
   or ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) >>
Why created:    normalization of [serial 1303]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 218:
Theorem (218) [serial 1315] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1309] 


Theorem (220)                               [serial 1303] 
P [105] << iSeg.v_n <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and i < CMA.num_segments
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [33] << ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) )
   or ( v >= iSeg.v_n
   or v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1288]
Solved by:  Guided Substitution of Equals
  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 219:
Theorem (219) [serial 1309] used for:
    normalization of [serial 1303] 


Theorem (221)                               [serial 1288] 
P [105] << iSeg.v_n <= v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [114] ->
Q [33] << EB()
   or SB() >>
Why created:    normalization of [serial 1279]
Solved by:  Substitution of Assertion Labels
and theorem 220:
Theorem (220) [serial 1303] used for:
  Substituted assertions' predicates for labels  [serial 1288] 


Theorem (222)                               [serial 1279] 
P [105] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) >>
S [114] ->
Q [33] << ( SB()
   or EB() ) >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1273]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 221:
Theorem (221) [serial 1288] used for:
    normalization of [serial 1279] 


Theorem (223)                               [serial 1273] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [114] ->
Q [33] << ( SB()
   or EB() ) >>
Why created:  applied port output of conditional expression <<pre>> -> <<( SB()
   or EB() )>> where ( SB()
   or EB() ) -> 0 mpss for ca!(0 mpss) 
[serial 1267]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 222:
Theorem (222) [serial 1279] used for:
  Associativity: (b.c).a = a.b.c [serial 1273] 


Theorem (224)                               [serial 1267] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [114] ca!(0 mpss)
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  <<P>> S3 <<Q>> in concurrent composition for [serial 1162]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 215 223:
Theorem (215) [serial 1272] used for:
  applied port output <<pre and (ca=0 mpss)@now>> -> <<post>> [serial 1267] 
Theorem (223) [serial 1273] used for:
  applied port output of conditional expression <<pre>> -> <<( SB()
   or EB() )>> where ( SB()
   or EB() ) -> 0 mpss for ca!(0 mpss) 
[serial 1267] 


Theorem (225)                               [serial 1162] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [114]   sb!(true)
  &
  eb!(false)
  &
  ca!(0 mpss) 
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  <<P>> T <<Q>> in existential lattice quantification for [serial 1157]
Solved by:  Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>>
and theorems 197 211 224:
Theorem (197) [serial 1265] used for:
  <<P>> S1 <<Q>> in concurrent composition for [serial 1162] 
Theorem (211) [serial 1266] used for:
  <<P>> S2 <<Q>> in concurrent composition for [serial 1162] 
Theorem (224) [serial 1267] used for:
  <<P>> S3 <<Q>> in concurrent composition for [serial 1162] 


Theorem (226)                               [serial 1157] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [114]   {
    sb!(true)
    &
    eb!(false)
    &
    ca!(0 mpss) 
  } 
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:    <<P and B2>> S2 <<Q>> in alternative for [serial 1153]
Solved by:  Introduction of Existential Quantification
and theorem 225:
Theorem (225) [serial 1162] used for:
  <<P>> T <<Q>> in existential lattice quantification for [serial 1157] 


Theorem (227)                               [serial 1413] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [86] << v < iSeg.v_e >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1412]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (228)                               [serial 1414] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [86] << v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1412]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (229)                               [serial 1421] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [35] << not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) >>
Why created:    normalization of [serial 1415]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (230)                               [serial 1415] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [35] << ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1412]
Solved by:  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 229:
Theorem (229) [serial 1421] used for:
    normalization of [serial 1415] 


Theorem (231)                               [serial 1412] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [12] << v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1406]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 227 228 230:
Theorem (227) [serial 1413] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1412] 
Theorem (228) [serial 1414] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1412] 
Theorem (230) [serial 1415] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1412] 


Theorem (232)                               [serial 1406] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [12] << ( v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:    normalization of [serial 1402]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 231:
Theorem (231) [serial 1412] used for:
  Associativity: (b.c).a = a.b.c [serial 1406] 


Theorem (233)                               [serial 1402] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [12] << ( not ( not ( v < iSeg.v_e ) )
  and not ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) )
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1394]
Solved by:  Reflexivity of Addition: a+b=b+a
  Complement
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 232:
Theorem (232) [serial 1406] used for:
    normalization of [serial 1402] 


Theorem (234)                               [serial 1394] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [12] << not ( not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:    normalization of [serial 1390]
Solved by:  DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 233:
Theorem (233) [serial 1402] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1394] 


Theorem (235)                               [serial 1390] 
P [105] << ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) )
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [12] << not ( ( not ( v < iSeg.v_e ) )
   or ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) )
  and ( ( not ( v < iSeg.v_n ) )
   or ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1382]
Solved by:  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 234:
Theorem (234) [serial 1394] used for:
    normalization of [serial 1390] 


Theorem (236)                               [serial 1382] 
P [105] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [12] << not ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v )
  and ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) >>
Why created:    normalization of [serial 1378]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 235:
Theorem (235) [serial 1390] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1382] 


Theorem (237)                               [serial 1378] 
P [105] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and i < CMA.num_segments
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [12] << ( v >= iSeg.v_n
   or v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) )
  and not ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1361]
Solved by:  Guided Substitution of Equals
  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 236:
Theorem (236) [serial 1382] used for:
    normalization of [serial 1378] 


Theorem (238)                               [serial 1361] 
P [105] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [12] << SB()
  and not EB() >>
Why created:    normalization of [serial 1351]
Solved by:  Substitution of Assertion Labels
and theorem 237:
Theorem (237) [serial 1378] used for:
  Substituted assertions' predicates for labels  [serial 1361] 


Theorem (239)                               [serial 1351] 
P [105] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) >>
S [119] ->
Q [12] << SB()
  and not EB() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1345]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 238:
Theorem (238) [serial 1361] used for:
    normalization of [serial 1351] 


Theorem (240)                               [serial 1345] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) >>
S [119] ->
Q [12] << SB()
  and not EB() >>
Why created:  applied port output of value <<pre>> -> <<M(sb)[sb|true]>> [serial 1342]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 239:
Theorem (239) [serial 1351] used for:
  Associativity: (b.c).a = a.b.c [serial 1345] 


Theorem (241)                               [serial 1367] 
P [119] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and ( SB()
  and not EB() )@now
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:    normalization of [serial 1357]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (242)                               [serial 1357] 
P [119] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p )
  and ( SB()
  and not EB() )@now >>
S [119] ->
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1352]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 241:
Theorem (241) [serial 1367] used for:
    normalization of [serial 1357] 


Theorem (243)                               [serial 1352] 
P [119] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) )
  and ( SB()
  and not EB() )@now >>
S [119] ->
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1346]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 242:
Theorem (242) [serial 1357] used for:
  Associativity: (b.c).a = a.b.c [serial 1352] 


Theorem (244)                               [serial 1346] 
P [119] << ( ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) )
  and ( SB()
  and not EB() )@now >>
S [119] ->
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  applied port output <<pre and (SB()
  and not EB())@now>> -> <<post>> [serial 1342]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 243:
Theorem (243) [serial 1352] used for:
  Associativity: (b.c).a = a.b.c [serial 1346] 


Theorem (245)                               [serial 1342] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) >>
S [119] sb!(true)
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  <<P>> S1 <<Q>> in concurrent composition for [serial 1163]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 240 244:
Theorem (240) [serial 1345] used for:
  applied port output of value <<pre>> -> <<M(sb)[sb|true]>> [serial 1342] 
Theorem (244) [serial 1346] used for:
  applied port output <<pre and (SB()
  and not EB())@now>> -> <<post>> [serial 1342] 


Theorem (246)                               [serial 1408] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [119] << v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
Why created:    normalization of [serial 1403]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (247)                               [serial 1403] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [119] << ( not ( not ( v < iSeg.v_e ) )
  and not ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) ) >>
Why created:  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1396]
Solved by:  Reflexivity of Addition: a+b=b+a
  Complement
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 246:
Theorem (246) [serial 1408] used for:
    normalization of [serial 1403] 


Theorem (248)                               [serial 1396] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [119] << not ( not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) >>
Why created:    normalization of [serial 1391]
Solved by:  DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 247:
Theorem (247) [serial 1403] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1396] 


Theorem (249)                               [serial 1391] 
P [105] << ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) )
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [119] << not ( ( not ( v < iSeg.v_e ) )
   or ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1384]
Solved by:  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 248:
Theorem (248) [serial 1396] used for:
    normalization of [serial 1391] 


Theorem (250)                               [serial 1384] 
P [105] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [119] << not ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v ) >>
Why created:    normalization of [serial 1379]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 249:
Theorem (249) [serial 1391] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1384] 


Theorem (251)                               [serial 1379] 
P [105] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and i < CMA.num_segments
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [119] << not ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1363]
Solved by:  Guided Substitution of Equals
  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 250:
Theorem (250) [serial 1384] used for:
    normalization of [serial 1379] 


Theorem (252)                               [serial 1363] 
P [105] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [119] << not EB() >>
Why created:    normalization of [serial 1353]
Solved by:  Substitution of Assertion Labels
and theorem 251:
Theorem (251) [serial 1379] used for:
  Substituted assertions' predicates for labels  [serial 1363] 


Theorem (253)                               [serial 1353] 
P [105] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) >>
S [119] ->
Q [119] << not EB() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1347]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 252:
Theorem (252) [serial 1363] used for:
    normalization of [serial 1353] 


Theorem (254)                               [serial 1347] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) >>
S [119] ->
Q [119] << not EB() >>
Why created:  applied port output of value <<pre>> -> <<M(eb)[eb|false]>> [serial 1343]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 253:
Theorem (253) [serial 1353] used for:
  Associativity: (b.c).a = a.b.c [serial 1347] 


Theorem (255)                               [serial 1369] 
P [119] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and ( not EB() )@now
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:    normalization of [serial 1358]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (256)                               [serial 1358] 
P [119] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p )
  and ( not EB() )@now >>
S [119] ->
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1354]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 255:
Theorem (255) [serial 1369] used for:
    normalization of [serial 1358] 


Theorem (257)                               [serial 1354] 
P [119] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) )
  and ( not EB() )@now >>
S [119] ->
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1348]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 256:
Theorem (256) [serial 1358] used for:
  Associativity: (b.c).a = a.b.c [serial 1354] 


Theorem (258)                               [serial 1348] 
P [119] << ( ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) )
  and ( not EB() )@now >>
S [119] ->
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  applied port output <<pre and (not EB())@now>> -> <<post>> [serial 1343]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 257:
Theorem (257) [serial 1354] used for:
  Associativity: (b.c).a = a.b.c [serial 1348] 


Theorem (259)                               [serial 1343] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) >>
S [119] eb!(false)
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  <<P>> S2 <<Q>> in concurrent composition for [serial 1163]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 254 258:
Theorem (254) [serial 1347] used for:
  applied port output of value <<pre>> -> <<M(eb)[eb|false]>> [serial 1343] 
Theorem (258) [serial 1348] used for:
  applied port output <<pre and (not EB())@now>> -> <<post>> [serial 1343] 


Theorem (260)                               [serial 1371] 
P [119] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and ( ca = 0 mpss )@now
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:    normalization of [serial 1359]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (261)                               [serial 1359] 
P [119] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p )
  and ( ca = ( 0 mpss ) )@now >>
S [119] ->
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1355]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 260:
Theorem (260) [serial 1371] used for:
    normalization of [serial 1359] 


Theorem (262)                               [serial 1355] 
P [119] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) )
  and ( ca = ( 0 mpss ) )@now >>
S [119] ->
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1349]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 261:
Theorem (261) [serial 1359] used for:
  Associativity: (b.c).a = a.b.c [serial 1355] 


Theorem (263)                               [serial 1349] 
P [119] << ( ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) )
  and ( ca = ( 0 mpss ) )@now >>
S [119] ->
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  applied port output <<pre and (ca=0 mpss)@now>> -> <<post>> [serial 1344]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 262:
Theorem (262) [serial 1355] used for:
  Associativity: (b.c).a = a.b.c [serial 1349] 


Theorem (264)                               [serial 1417] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [33] << not ( v < iSeg.v_e )
   or not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) >>
Why created:    normalization of [serial 1411]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (265)                               [serial 1411] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [33] << not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1398]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 264:
Theorem (264) [serial 1417] used for:
    normalization of [serial 1411] 


Theorem (266)                               [serial 1398] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [33] << ( not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
   or ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:    normalization of [serial 1392]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 265:
Theorem (265) [serial 1411] used for:
  Associativity: (b.c).a = a.b.c [serial 1398] 


Theorem (267)                               [serial 1392] 
P [105] << ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) )
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [33] << ( ( not ( v < iSeg.v_e ) )
   or ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) )
   or ( ( not ( v < iSeg.v_n ) )
   or ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1386]
Solved by:  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 266:
Theorem (266) [serial 1398] used for:
    normalization of [serial 1392] 


Theorem (268)                               [serial 1386] 
P [105] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [33] << ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v )
   or ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) >>
Why created:    normalization of [serial 1380]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 267:
Theorem (267) [serial 1392] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1386] 


Theorem (269)                               [serial 1380] 
P [105] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and i < CMA.num_segments
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [33] << ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) )
   or ( v >= iSeg.v_n
   or v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1365]
Solved by:  Guided Substitution of Equals
  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 268:
Theorem (268) [serial 1386] used for:
    normalization of [serial 1380] 


Theorem (270)                               [serial 1365] 
P [105] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [119] ->
Q [33] << EB()
   or SB() >>
Why created:    normalization of [serial 1356]
Solved by:  Substitution of Assertion Labels
and theorem 269:
Theorem (269) [serial 1380] used for:
  Substituted assertions' predicates for labels  [serial 1365] 


Theorem (271)                               [serial 1356] 
P [105] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) >>
S [119] ->
Q [33] << ( SB()
   or EB() ) >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1350]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 270:
Theorem (270) [serial 1365] used for:
    normalization of [serial 1356] 


Theorem (272)                               [serial 1350] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) >>
S [119] ->
Q [33] << ( SB()
   or EB() ) >>
Why created:  applied port output of conditional expression <<pre>> -> <<( SB()
   or EB() )>> where ( SB()
   or EB() ) -> 0 mpss for ca!(0 mpss) 
[serial 1344]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 271:
Theorem (271) [serial 1356] used for:
  Associativity: (b.c).a = a.b.c [serial 1350] 


Theorem (273)                               [serial 1344] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) >>
S [119] ca!(0 mpss)
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  <<P>> S3 <<Q>> in concurrent composition for [serial 1163]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 263 272:
Theorem (263) [serial 1349] used for:
  applied port output <<pre and (ca=0 mpss)@now>> -> <<post>> [serial 1344] 
Theorem (272) [serial 1350] used for:
  applied port output of conditional expression <<pre>> -> <<( SB()
   or EB() )>> where ( SB()
   or EB() ) -> 0 mpss for ca!(0 mpss) 
[serial 1344] 


Theorem (274)                               [serial 1163] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) >>
S [119]   sb!(true)
  &
  eb!(false)
  &
  ca!(0 mpss) 
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  <<P>> T <<Q>> in existential lattice quantification for [serial 1158]
Solved by:  Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>>
and theorems 245 259 273:
Theorem (245) [serial 1342] used for:
  <<P>> S1 <<Q>> in concurrent composition for [serial 1163] 
Theorem (259) [serial 1343] used for:
  <<P>> S2 <<Q>> in concurrent composition for [serial 1163] 
Theorem (273) [serial 1344] used for:
  <<P>> S3 <<Q>> in concurrent composition for [serial 1163] 


Theorem (275)                               [serial 1158] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) >>
S [119]   {
    sb!(true)
    &
    eb!(false)
    &
    ca!(0 mpss) 
  } 
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:    <<P and B3>> S3 <<Q>> in alternative for [serial 1153]
Solved by:  Introduction of Existential Quantification
and theorem 274:
Theorem (274) [serial 1163] used for:
  <<P>> T <<Q>> in existential lattice quantification for [serial 1158] 


Theorem (276)                               [serial 1471] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] ->
Q [124] << not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or ( v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) >>
Why created:    normalization of [serial 1467]
Solved by:  Guided Substitution of Equals
  Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (277)                               [serial 1467] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] ->
Q [124] << ( not ( not ( v < iSeg.v_n ) )
  and not ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) )
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) >>
Why created:  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1463]
Solved by:  Reflexivity of Addition: a+b=b+a
  Complement
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 276:
Theorem (276) [serial 1471] used for:
    normalization of [serial 1467] 


Theorem (278)                               [serial 1463] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] ->
Q [124] << not ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) )
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) >>
Why created:    normalization of [serial 1459]
Solved by:  DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 277:
Theorem (277) [serial 1467] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1463] 


Theorem (279)                               [serial 1459] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] ->
Q [124] << ( not ( v < iSeg.v_e ) )
   or ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
   or not ( ( not ( v < iSeg.v_n ) )
   or ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1457]
Solved by:  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 278:
Theorem (278) [serial 1463] used for:
    normalization of [serial 1459] 


Theorem (280)                               [serial 1457] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] ->
Q [124] << iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
   or not ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1454]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 279:
Theorem (279) [serial 1459] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1457] 


Theorem (281)                               [serial 1454] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] ->
Q [124] << not ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v )
   or ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v ) >>
Why created:    normalization of [serial 1450]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 280:
Theorem (280) [serial 1457] used for:
  Associativity: (b.c).a = a.b.c [serial 1454] 


Theorem (282)                               [serial 1450] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and i < CMA.num_segments
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] ->
Q [124] << ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) )
   or not ( v >= iSeg.v_n
   or v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1447]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 281:
Theorem (281) [serial 1454] used for:
    normalization of [serial 1450] 


Theorem (283)                               [serial 1447] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] ->
Q [124] << EB()
   or not SB() >>
Why created:    normalization of [serial 1444]
Solved by:  Substitution of Assertion Labels
and theorem 282:
Theorem (282) [serial 1450] used for:
  Substituted assertions' predicates for labels  [serial 1447] 


Theorem (284)                               [serial 1444] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] ->
Q [124] << ( not ( SB() )
   or not ( not EB() ) ) >>
Why created:  DeMorgan's Law: not (A and B) = (not A) or (not B)  [serial 1436]
Solved by:  Reflexivity of Addition: a+b=b+a
  Complement
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 283:
Theorem (283) [serial 1447] used for:
    normalization of [serial 1444] 


Theorem (285)                               [serial 1436] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] ->
Q [124] << not ( SB()
  and not EB() ) >>
Why created:  applied port output of value <<pre>> -> <<M(sb)[sb|false]>> [serial 1430]
Solved by:  DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 284:
Theorem (284) [serial 1444] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B)  [serial 1436] 


Theorem (286)                               [serial 1441] 
P [124] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and ( not ( SB()
  and not EB() ) )@now >>
S [124] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1437]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (287)                               [serial 1437] 
P [124] << ( CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
  and ( not ( SB()
  and not EB() ) )@now >>
S [124] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  applied port output <<pre and (not ( SB()
  and not EB() ))@now>> -> <<post>> [serial 1430]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 286:
Theorem (286) [serial 1441] used for:
  Associativity: (b.c).a = a.b.c [serial 1437] 


Theorem (288)                               [serial 1430] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] sb!(false)
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1427]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 285 287:
Theorem (285) [serial 1436] used for:
  applied port output of value <<pre>> -> <<M(sb)[sb|false]>> [serial 1430] 
Theorem (287) [serial 1437] used for:
  applied port output <<pre and (not ( SB()
  and not EB() ))@now>> -> <<post>> [serial 1430] 


Theorem (289)                               [serial 1427] 
P [105] << ( CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments )
  and ( v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) >>
S [124] sb!(false)
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  <<P>> S1 <<Q>> in concurrent composition for [serial 1425]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 288:
Theorem (288) [serial 1430] used for:
  Associativity: (b.c).a = a.b.c [serial 1427] 


Theorem (290)                               [serial 1477] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and v < iSeg.v_e >>
S [124] ->
Q [86] << v < iSeg.v_e >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1476]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (291)                               [serial 1478] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and v < iSeg.v_e >>
S [124] ->
Q [86] << v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1476]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (292)                               [serial 1476] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and v < iSeg.v_e >>
S [124] ->
Q [124] << v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
Why created:  Guided Substitution of Equals Transitivity: x<y and y<z -> x<z  [serial 1469]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 290 291:
Theorem (290) [serial 1477] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1476] 
Theorem (291) [serial 1478] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1476] 


Theorem (293)                               [serial 1469] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] ->
Q [124] << v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
Why created:    normalization of [serial 1466]
Solved by:  Guided Substitution of Equals
  Transitivity: x<y and y<z -> x<z
and theorem 292:
Theorem (292) [serial 1476] used for:
  Guided Substitution of Equals Transitivity: x<y and y<z -> x<z  [serial 1469] 


Theorem (294)                               [serial 1466] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] ->
Q [124] << ( not ( not ( v < iSeg.v_e ) )
  and not ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) ) >>
Why created:  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1461]
Solved by:  Reflexivity of Addition: a+b=b+a
  Complement
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 293:
Theorem (293) [serial 1469] used for:
    normalization of [serial 1466] 


Theorem (295)                               [serial 1461] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] ->
Q [124] << not ( not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) >>
Why created:    normalization of [serial 1458]
Solved by:  DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 294:
Theorem (294) [serial 1466] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1461] 


Theorem (296)                               [serial 1458] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] ->
Q [124] << not ( ( not ( v < iSeg.v_e ) )
   or ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1452]
Solved by:  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 295:
Theorem (295) [serial 1461] used for:
    normalization of [serial 1458] 


Theorem (297)                               [serial 1452] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and i < CMA.num_segments
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] ->
Q [124] << not ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v ) >>
Why created:    normalization of [serial 1449]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 296:
Theorem (296) [serial 1458] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1452] 


Theorem (298)                               [serial 1449] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and i < CMA.num_segments
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] ->
Q [124] << not ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1438]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 297:
Theorem (297) [serial 1452] used for:
    normalization of [serial 1449] 


Theorem (299)                               [serial 1438] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] ->
Q [124] << not EB() >>
Why created:  applied port output of value <<pre>> -> <<M(eb)[eb|false]>> [serial 1431]
Solved by:  Substitution of Assertion Labels
and theorem 298:
Theorem (298) [serial 1449] used for:
  Substituted assertions' predicates for labels  [serial 1438] 


Theorem (300)                               [serial 1442] 
P [124] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and ( not EB() )@now >>
S [124] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1439]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (301)                               [serial 1439] 
P [124] << ( CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
  and ( not EB() )@now >>
S [124] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  applied port output <<pre and (not EB())@now>> -> <<post>> [serial 1431]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 300:
Theorem (300) [serial 1442] used for:
  Associativity: (b.c).a = a.b.c [serial 1439] 


Theorem (302)                               [serial 1431] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] eb!(false)
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1428]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 299 301:
Theorem (299) [serial 1438] used for:
  applied port output of value <<pre>> -> <<M(eb)[eb|false]>> [serial 1431] 
Theorem (301) [serial 1439] used for:
  applied port output <<pre and (not EB())@now>> -> <<post>> [serial 1431] 


Theorem (303)                               [serial 1428] 
P [105] << ( CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments )
  and ( v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) >>
S [124] eb!(false)
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  <<P>> S2 <<Q>> in concurrent composition for [serial 1425]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 302:
Theorem (302) [serial 1431] used for:
  Associativity: (b.c).a = a.b.c [serial 1428] 


Theorem (304)                               [serial 1443] 
P [124] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and ( ca = xl )@now >>
S [124] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1440]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (305)                               [serial 1440] 
P [124] << ( CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
  and ( ca = xl )@now >>
S [124] ->
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  applied port output <<pre and (ca=xl)@now>> -> <<post>> [serial 1432]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 304:
Theorem (304) [serial 1443] used for:
  Associativity: (b.c).a = a.b.c [serial 1440] 


Theorem (306)                               [serial 1432] 
P [105] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [124] ca!(xl)
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1429]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorem 305:
Theorem (305) [serial 1440] used for:
  applied port output <<pre and (ca=xl)@now>> -> <<post>> [serial 1432] 


Theorem (307)                               [serial 1429] 
P [105] << ( CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments )
  and ( v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) >>
S [124] ca!(xl)
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:  <<P>> S3 <<Q>> in concurrent composition for [serial 1425]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 306:
Theorem (306) [serial 1432] used for:
  Associativity: (b.c).a = a.b.c [serial 1429] 


Theorem (308)                               [serial 1425] 
P [105] << ( CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and i < CMA.num_segments )
  and ( v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) >>
S [124]   sb!(false)
  &
  eb!(false)
  &
  ca!(xl) 
Q [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:    normalization of [serial 1164]
Solved by:  Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>>
and theorems 289 303 307:
Theorem (289) [serial 1427] used for:
  <<P>> S1 <<Q>> in concurrent composition for [serial 1425] 
Theorem (303) [serial 1428] used for:
  <<P>> S2 <<Q>> in concurrent composition for [serial 1425] 
Theorem (307) [serial 1429] used for:
  <<P>> S3 <<Q>> in concurrent composition for [serial 1425] 


Theorem (309)                               [serial 1164] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v < iSeg.v_n
  and v*v < nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p )
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [124]   sb!(false)
  &
  eb!(false)
  &
  ca!(xl) 
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  <<P>> T <<Q>> in existential lattice quantification for [serial 1159]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 308:
Theorem (308) [serial 1425] used for:
    normalization of [serial 1164] 


Theorem (310)                               [serial 1159] 
P [105] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v < iSeg.v_n
  and v*v < nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p )
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [124]   {
    sb!(false)
    &
    eb!(false)
    &
    ca!(xl) 
  } 
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:    <<P and B4>> S4 <<Q>> in alternative for [serial 1153]
Solved by:  Introduction of Existential Quantification
and theorem 309:
Theorem (309) [serial 1164] used for:
  <<P>> T <<Q>> in existential lattice quantification for [serial 1159] 


Theorem (311)                               [serial 1153] 
P [101] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [105]   if 
    (v >= iSeg.v_e)~> 
        {
          eb!(true)
          &
          sb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ))~> 
        {
          eb!(true)
          &
          sb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v >= iSeg.v_n
    and v < iSeg.v_e
    and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ))~> 
        {
          sb!(true)
          &
          eb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
    and v < iSeg.v_e
    and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ))~> 
        {
          sb!(true)
          &
          eb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v < iSeg.v_n
    and v*v < nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p )
    and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ))~> 
        {
          sb!(false)
          &
          eb!(false)
          &
          ca!(xl) 
        }  
  fi
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  as <<pre>> S <<Q>> in <<P>> { <<pre>> S  } <<Q>> [serial 1151]
Solved by:  Alternative Rule:
 <<P>> -> <<B1 or B2 or ... or Bn>>,
 <<P and B1>> -> <<P1>>, <<P and B2>> -> <<P2>>, . . . , <<P and Bn>> -> <<Pn>>,
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>,
 <<Q1>> -> <<Q>>, <<Q2>> -> <<Q>>, . . . <<Qn>> -> <<Q>>
 -------------------------------------------------------------------------
 <<P>> if B1-><<P1>>S1<<Q1>> [] B2-><<P2>>S2<<Q2>> [] . . . [] Bn-><<Pn>>Sn<<Qn>> fi <<Q>>
and theorems 123 150 178 226 275 310:
Theorem (123) [serial 1154] used for:
    <<P>> -> <<B1 or B2 or ... or Bn>> in alternative for [serial 1153] 
Theorem (150) [serial 1155] used for:
    <<P and B0>> S0 <<Q>> in alternative for [serial 1153] 
Theorem (178) [serial 1156] used for:
    <<P and B1>> S1 <<Q>> in alternative for [serial 1153] 
Theorem (226) [serial 1157] used for:
    <<P and B2>> S2 <<Q>> in alternative for [serial 1153] 
Theorem (275) [serial 1158] used for:
    <<P and B3>> S3 <<Q>> in alternative for [serial 1153] 
Theorem (310) [serial 1159] used for:
    <<P and B4>> S4 <<Q>> in alternative for [serial 1153] 


Theorem (312)                               [serial 1151] 
P [100] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and ( p@now )
  and not ( exists u ~ time
  in tops ,, now 
  that p@u  ) >>
S [101] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
  if 
    (v >= iSeg.v_e)~> 
        {
          eb!(true)
          &
          sb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ))~> 
        {
          eb!(true)
          &
          sb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v >= iSeg.v_n
    and v < iSeg.v_e
    and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ))~> 
        {
          sb!(true)
          &
          eb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
    and v < iSeg.v_e
    and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ))~> 
        {
          sb!(true)
          &
          eb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v < iSeg.v_n
    and v*v < nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p )
    and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ))~> 
        {
          sb!(false)
          &
          eb!(false)
          &
          ca!(xl) 
        }  
  fi
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1017]
Solved by:  Introduction of Existential Quantification
and theorems 111 311:
Theorem (111) [serial 1152] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1151] 
Theorem (311) [serial 1153] used for:
  as <<pre>> S <<Q>> in <<P>> { <<pre>> S  } <<Q>> [serial 1151] 


Theorem (313)                               [serial 1017] 
P [100] << ( i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA )
  and ( p@now )
  and not ( exists u ~ time
  in tops ,, now 
  that p@u  ) >>
S [101] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
  if 
    (v >= iSeg.v_e)~> 
        {
          eb!(true)
          &
          sb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ))~> 
        {
          eb!(true)
          &
          sb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v >= iSeg.v_n
    and v < iSeg.v_e
    and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ))~> 
        {
          sb!(true)
          &
          eb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
    and v < iSeg.v_e
    and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ))~> 
        {
          sb!(true)
          &
          eb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v < iSeg.v_n
    and v*v < nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p )
    and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ))~> 
        {
          sb!(false)
          &
          eb!(false)
          &
          ca!(xl) 
        }  
  fi
Q [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:   <<M(MoveForward) and x>> A <<M(CheckMoveForward)>> for CheckSpeedMoveForward-[x]->CheckMoveForward{A};
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 312:
Theorem (312) [serial 1151] used for:
  Associativity: (b.c).a = a.b.c [serial 1017] 


Theorem (314)                               [serial 1480] 
P [59] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments
  and p < iSeg.e >>
S [128] ->
Q [57] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:    normalization of [serial 1018]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (315)                               [serial 1018] 
P [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and ( p < iSeg.e ) >>
S [128] ->
Q [57] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:   <<M(CheckMoveForward) and x>> -> <<M(MoveForward)>> for SameSegmentCheckMoveForward-[x]->MoveForward{};
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 314:
Theorem (314) [serial 1480] used for:
    normalization of [serial 1018] 


Theorem (316)                               [serial 1487] 
P [59] << iSeg.e <= p
  and CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
S [134] ->
Q [135] << CMA = ma
  and CMA.seg[1 + i] = nSeg >>
Why created:    normalization of [serial 1484]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (317)                               [serial 1484] 
P [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and ( p >= iSeg.e ) >>
S [134] ->
Q [135] << nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  applied wp for assignment [serial 1482]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 316:
Theorem (316) [serial 1487] used for:
    normalization of [serial 1484] 


Theorem (318)                               [serial 1482] 
P [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and ( p >= iSeg.e ) >>
S [134] iSeg := nSeg
Q [135] << iSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1019]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 317:
Theorem (317) [serial 1484] used for:
  applied wp for assignment [serial 1482] 


Theorem (319)                               [serial 1489] 
P [135] << CMA = ma
  and CMA.seg[1 + i] = iSeg >>
S [136] ->
Q [61] << CMA = ma
  and CMA.seg[1 + i] = iSeg >>
Why created:    normalization of [serial 1485]
Solved by:  Identity (id):  P->P is tautology


Theorem (320)                               [serial 1485] 
P [135] << iSeg = CMA.seg[i + 1]
  and ma = CMA >>
S [136] ->
Q [61] << iSeg = CMA.seg[( i + 1 )]
  and ma = CMA >>
Why created:  applied wp for assignment [serial 1483]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 319:
Theorem (319) [serial 1489] used for:
    normalization of [serial 1485] 


Theorem (321)                               [serial 1483] 
P [135] << iSeg = CMA.seg[i + 1]
  and ma = CMA >>
S [136] i := i + 1
Q [61] << iSeg = CMA.seg[i]
  and ma = CMA >>
Why created:  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1019]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 320:
Theorem (320) [serial 1485] used for:
  applied wp for assignment [serial 1483] 


Theorem (322)                               [serial 1019] 
P [59] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA
  and ( p >= iSeg.e ) >>
S [134]   iSeg := nSeg
  ;
  << iSeg = CMA.seg[i + 1]
    and ma = CMA >>
  i := i + 1 
Q [61] << iSeg = CMA.seg[i]
  and ma = CMA >>
Why created:   <<M(CheckMoveForward) and x>> A <<M(CheckForLastSegment)>> for NextSegmentCheckMoveForward-[x]->CheckForLastSegment{A};
Solved by:  Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>>
and theorems 318 321:
Theorem (318) [serial 1482] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1019] 
Theorem (321) [serial 1483] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1019] 


Theorem (323)                               [serial 1496] 
P [61] << CMA = ma
  and CMA.seg[i] = iSeg
  and i < ma.num_segments >>
S [141] ->
Q [57] << CMA = ma >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1494]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (324)                               [serial 1497] 
P [61] << CMA = ma
  and CMA.seg[i] = iSeg
  and i < ma.num_segments >>
S [141] ->
Q [57] << CMA.seg[i] = iSeg >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1494]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (325)                               [serial 1502] 
P [61] << CMA = ma
  and CMA.seg[i] = iSeg
  and i < ma.num_segments >>
S [141] ->
Q [57] << true >>
Why created:  Equality Law (idistr):  a=a <-> true [serial 1500]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (326)                               [serial 1500] 
P [61] << CMA = ma
  and CMA.seg[i] = iSeg
  and i < ma.num_segments >>
S [141] ->
Q [57] << ma.seg[1 + i] = ma.seg[1 + i] >>
Why created:  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1498]
Solved by:  Equality Law (idistr):  a=a <-> true
and theorem 325:
Theorem (325) [serial 1502] used for:
  Equality Law (idistr):  a=a <-> true [serial 1500] 


Theorem (327)                               [serial 1498] 
P [61] << CMA = ma
  and CMA.seg[i] = iSeg
  and i < ma.num_segments >>
S [141] ->
Q [57] << CMA.seg[1 + i] = ma.seg[1 + i] >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1494]
Solved by:  Guided Substitution of Equals
and theorem 326:
Theorem (326) [serial 1500] used for:
  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1498] 


Theorem (328)                               [serial 1501] 
P [61] << CMA = ma
  and CMA.seg[i] = iSeg
  and i < ma.num_segments >>
S [141] ->
Q [57] << i < ma.num_segments >>
Why created:  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1499]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (329)                               [serial 1499] 
P [61] << CMA = ma
  and CMA.seg[i] = iSeg
  and i < ma.num_segments >>
S [141] ->
Q [57] << i < CMA.num_segments >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1494]
Solved by:  Guided Substitution of Equals
and theorem 328:
Theorem (328) [serial 1501] used for:
  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1499] 


Theorem (330)                               [serial 1494] 
P [61] << CMA = ma
  and CMA.seg[i] = iSeg
  and i < ma.num_segments >>
S [141] ->
Q [57] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = ma.seg[1 + i]
  and i < CMA.num_segments >>
Why created:    normalization of [serial 1492]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 323 324 327 329:
Theorem (323) [serial 1496] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1494] 
Theorem (324) [serial 1497] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1494] 
Theorem (327) [serial 1498] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1494] 
Theorem (329) [serial 1499] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1494] 


Theorem (331)                               [serial 1492] 
P [61] << iSeg = CMA.seg[i]
  and ma = CMA
  and ( i < ma.num_segments ) >>
S [141] ->
Q [57] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and ma.seg[i + 1] = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  applied wp for assignment [serial 1020]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 330:
Theorem (330) [serial 1494] used for:
    normalization of [serial 1492] 


Theorem (332)                               [serial 1020] 
P [61] << iSeg = CMA.seg[i]
  and ma = CMA
  and ( i < ma.num_segments ) >>
S [141] nSeg := ma.seg[i + 1]
Q [57] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:   <<M(CheckForLastSegment) and x>> A <<M(MoveForward)>> for NotLastSegmentCheckForLastSegment-[x]->MoveForward{A};
Solved by:  Asserted Action:  <<P>> { <<P1>> S1 <<Q1>> } <<Q>> is <<P>> -> <<P1>>, <<Q1>> -> <<Q>>, and <<P1>> S1 <<Q1>>
  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 331:
Theorem (331) [serial 1492] used for:
  applied wp for assignment [serial 1020] 


Theorem (333)                               [serial 1509] 
P [61] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = ma.num_segments >>
S [146] ->
Q [146] << true >>
Why created:    normalization of [serial 1505]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (334)                               [serial 1505] 
P [61] << iSeg = CMA.seg[i]
  and ma = CMA
  and ( i = ma.num_segments ) >>
S [146] ->
Q [146] << true >>
Why created:  applied port output <<pre>> -> <<M[r]>> [serial 1503]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 333:
Theorem (333) [serial 1509] used for:
    normalization of [serial 1505] 


Theorem (335)                               [serial 1527] 
P [146] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = ma.num_segments >>
S [146] ->
Q [147] << CMA = ma >>
Why created:    normalization of [serial 1522]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (336)                               [serial 1522] 
P [146] << ( ( CMA = ma
  and CMA.seg[i] = iSeg
  and i = ma.num_segments ) ) >>
S [146] ->
Q [147] << CMA = ma >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1517]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 335:
Theorem (335) [serial 1527] used for:
    normalization of [serial 1522] 


Theorem (337)                               [serial 1538] 
P [146] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = ma.num_segments >>
S [146] ->
Q [147] << i = ma.num_segments >>
Why created:    normalization of [serial 1535]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (338)                               [serial 1535] 
P [146] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = ma.num_segments >>
S [146] ->
Q [147] << ma.num_segments = i >>
Why created:  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1529]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
and theorem 337:
Theorem (337) [serial 1538] used for:
    normalization of [serial 1535] 


Theorem (339)                               [serial 1529] 
P [146] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = ma.num_segments >>
S [146] ->
Q [147] << CMA.num_segments = i >>
Why created:    normalization of [serial 1523]
Solved by:  Guided Substitution of Equals
and theorem 338:
Theorem (338) [serial 1535] used for:
  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1529] 


Theorem (340)                               [serial 1523] 
P [146] << ( ( CMA = ma
  and CMA.seg[i] = iSeg
  and i = ma.num_segments ) ) >>
S [146] ->
Q [147] << CMA.num_segments = i >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1517]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 339:
Theorem (339) [serial 1529] used for:
    normalization of [serial 1523] 


Theorem (341)                               [serial 1531] 
P [146] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = ma.num_segments >>
S [146] ->
Q [147] << CMA.seg[i] = iSeg >>
Why created:    normalization of [serial 1524]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (342)                               [serial 1524] 
P [146] << ( ( CMA = ma
  and CMA.seg[i] = iSeg
  and i = ma.num_segments ) ) >>
S [146] ->
Q [147] << CMA.seg[i] = iSeg >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1517]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 341:
Theorem (341) [serial 1531] used for:
    normalization of [serial 1524] 


Theorem (343)                               [serial 1517] 
P [146] << ( ( CMA = ma
  and CMA.seg[i] = iSeg
  and i = ma.num_segments ) ) >>
S [146] ->
Q [147] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg >>
Why created:  Law of And-Simplification:  P and true is P [serial 1511]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 336 340 342:
Theorem (336) [serial 1522] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1517] 
Theorem (340) [serial 1523] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1517] 
Theorem (342) [serial 1524] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1517] 


Theorem (344)                               [serial 1511] 
P [146] << true
  and ( CMA = ma
  and CMA.seg[i] = iSeg
  and i = ma.num_segments ) >>
S [146] ->
Q [147] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg >>
Why created:    normalization of [serial 1506]
Solved by:  Law of And-Simplification:  P and true is P
and theorem 343:
Theorem (343) [serial 1517] used for:
  Law of And-Simplification:  P and true is P [serial 1511] 


Theorem (345)                               [serial 1506] 
P [146] << ( iSeg = CMA.seg[i]
  and ma = CMA
  and ( i = ma.num_segments ) )
  and true@now >>
S [146] ->
Q [147] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and ma = CMA >>
Why created:  applied port output <<pre and M[r]@now>> -> <<post>> [serial 1503]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Constants are always the same
and theorem 344:
Theorem (344) [serial 1511] used for:
    normalization of [serial 1506] 


Theorem (346)                               [serial 1503] 
P [61] << iSeg = CMA.seg[i]
  and ma = CMA
  and ( i = ma.num_segments ) >>
S [146] r!
Q [147] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and ma = CMA >>
Why created:  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1021]
Solved by:  Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 334 345:
Theorem (334) [serial 1505] used for:
  applied port output <<pre>> -> <<M[r]>> [serial 1503] 
Theorem (345) [serial 1506] used for:
  applied port output <<pre and M[r]@now>> -> <<post>> [serial 1503] 


Theorem (347)                               [serial 1518] 
P [147] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg >>
S [149] ->
Q [63] << CMA = ma >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1513]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (348)                               [serial 1519] 
P [147] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg >>
S [149] ->
Q [63] << CMA.num_segments = i >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1513]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (349)                               [serial 1520] 
P [147] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg >>
S [149] ->
Q [63] << CMA.seg[i] = iSeg >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1513]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (350)                               [serial 1542] 
P [147] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg >>
S [149] ->
Q [63] << true >>
Why created:  Equality Law (idistr):  a=a <-> true [serial 1541]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (351)                               [serial 1541] 
P [147] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg >>
S [149] ->
Q [63] << ( [segment: v_n->0 mps; v_e->0 mps; e->ma.ea;] ) = [segment: v_n->0 mps; 
v_e->0 mps; e->ma.ea;] >>
Why created:  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1540]
Solved by:  Equality Law (idistr):  a=a <-> true
and theorem 350:
Theorem (350) [serial 1542] used for:
  Equality Law (idistr):  a=a <-> true [serial 1541] 


Theorem (352)                               [serial 1540] 
P [147] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg >>
S [149] ->
Q [63] << ( [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;] ) = [segment: v_n->0 mps; 
v_e->0 mps; e->ma.ea;] >>
Why created:  Substituted assertions' predicates for labels in postconditions [serial 1521]
Solved by:  Guided Substitution of Equals
and theorem 351:
Theorem (351) [serial 1541] used for:
  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1540] 


Theorem (353)                               [serial 1521] 
P [147] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg >>
S [149] ->
Q [63] << NULL_SEGMENT() = [segment: v_n->0 mps; v_e->0 mps; e->ma.ea;] >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1513]
Solved by:  Guided Substitution of Equals
  Substitution of Assertion Labels
and theorem 352:
Theorem (352) [serial 1540] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1521] 


Theorem (354)                               [serial 1513] 
P [147] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg >>
S [149] ->
Q [63] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and NULL_SEGMENT() = [segment: v_n->0 mps; v_e->0 mps; e->ma.ea;] >>
Why created:    normalization of [serial 1507]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 347 348 349 353:
Theorem (347) [serial 1518] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1513] 
Theorem (348) [serial 1519] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1513] 
Theorem (349) [serial 1520] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1513] 
Theorem (353) [serial 1521] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1513] 


Theorem (355)                               [serial 1507] 
P [147] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and ma = CMA >>
S [149] ->
Q [63] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and ( [segment: v_n->0 mps; v_e->0 mps; e->ma.ea;] ) = NULL_SEGMENT()
  and ma = CMA >>
Why created:  applied wp for assignment [serial 1504]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 354:
Theorem (354) [serial 1513] used for:
    normalization of [serial 1507] 


Theorem (356)                               [serial 1504] 
P [147] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and ma = CMA >>
S [149] nSeg := [segment: v_n->0 mps; v_e->0 mps; e->ma.ea;]
Q [63] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA >>
Why created:  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1021]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 355:
Theorem (355) [serial 1507] used for:
  applied wp for assignment [serial 1504] 


Theorem (357)                               [serial 1021] 
P [61] << iSeg = CMA.seg[i]
  and ma = CMA
  and ( i = ma.num_segments ) >>
S [146]   r!
  ;
  << i = CMA.num_segments
    and iSeg = CMA.seg[i]
    and ma = CMA >>
  nSeg := [segment: v_n->0 mps; v_e->0 mps; e->ma.ea;] 
Q [63] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA >>
Why created:   <<M(CheckForLastSegment) and x>> A <<M(MoveForwardLastSegment)>> for IsLastSegmentCheckForLastSegment-[x]->MoveForwardLastSegment{A};
Solved by:  Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>>
and theorems 346 356:
Theorem (346) [serial 1503] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1021] 
Theorem (356) [serial 1504] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1021] 


Theorem (358)                               [serial 1022] 
P [61] << iSeg = CMA.seg[i]
  and ma = CMA
  and ( i > ma.num_segments ) >>
S [155] ->
Q [72] << true >>
Why created:   <<M(CheckForLastSegment) and x>> -> <<M(FAIL)>> for PastLastSegmentCheckForLastSegment-[x]->FAIL{};
Solved by:  True Conclusion Schema (tc): P->true


Theorem (359)                               [serial 1584] 
P [159] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and p@now
  and not ( exists u ~ time
  in tops ,, now 
  that p@u  ) >>
S [159] ->
Q [160] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Law of And-Simplification:  P and true is P [serial 1583]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (360)                               [serial 1583] 
P [159] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and p@now
  and not ( exists u ~ time
  in tops ,, now 
  that p@u  ) >>
S [159] ->
Q [160] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and true
  and true
  and true
  and true >>
Why created:   add user-defined axioms to postcondition
Solved by:  Law of And-Simplification:  P and true is P
and theorem 359:
Theorem (359) [serial 1584] used for:
  Law of And-Simplification:  P and true is P [serial 1583] 


Theorem (361)                               [serial 1584] 
P [159] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and p@now
  and not ( exists u ~ time
  in tops ,, now 
  that p@u  ) >>
S [159] ->
Q [160] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Law of And-Simplification:  P and true is P [serial 1583]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (362)                               [serial 1583] 
P [159] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and p@now
  and not ( exists u ~ time
  in tops ,, now 
  that p@u  ) >>
S [159] ->
Q [160] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and true
  and true
  and true
  and true >>
Why created:   add user-defined axioms to postcondition
Solved by:  Law of And-Simplification:  P and true is P
and theorem 361:
Theorem (361) [serial 1584] used for:
  Law of And-Simplification:  P and true is P [serial 1583] 


Theorem (363)                               [serial 1577] 
P [159] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and p@now
  and not ( exists u ~ time
  in tops ,, now 
  that p@u  ) >>
S [159] ->
Q [160] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1557]
Solved by:  Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 362 362:
Theorem (362) [serial 1583] used for:
   add user-defined axioms to postcondition 
Theorem (362) [serial 1583] used for:
   add user-defined axioms to postcondition 


Theorem (364)                               [serial 1557] 
P [159] << p@now
  and not ( exists u ~ time
  in tops ,, now 
  that p@u  )
  and ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() ) >>
S [159] ->
Q [160] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
Why created:    normalization of [serial 1543]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 363:
Theorem (363) [serial 1577] used for:
  Associativity: (b.c).a = a.b.c [serial 1557] 


Theorem (365)                               [serial 1543] 
P [159] << ( i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA )
  and ( p@now )
  and not ( exists u ~ time
  in tops ,, now 
  that p@u  ) >>
S [159] ->
Q [160] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
Why created:  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1023]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 364:
Theorem (364) [serial 1557] used for:
    normalization of [serial 1543] 


Theorem (366)                               [serial 1597] 
P [160] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [163] ->
Q [163] << true >>
Why created:    normalization of [serial 1595]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (367)                               [serial 1595] 
P [160] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [163] ->
Q [163] << ( true ) >>
Why created:  Law of And-Simplification:  P and P is P [serial 1594]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 366:
Theorem (366) [serial 1597] used for:
    normalization of [serial 1595] 


Theorem (368)                               [serial 1594] 
P [160] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [163] ->
Q [163] << ( true )
  and ( true ) >>
Why created:  Law of And-Simplification:  P and P is P [serial 1593]
Solved by:  Law of And-Simplification:  P and P is P
and theorem 367:
Theorem (367) [serial 1595] used for:
  Law of And-Simplification:  P and P is P [serial 1594] 


Theorem (369)                               [serial 1593] 
P [160] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [163] ->
Q [163] << ( true )
  and ( true )
  and ( true )
  and ( true ) >>
Why created:  Law of And-Simplification:  P and P is P [serial 1592]
Solved by:  Law of And-Simplification:  P and P is P
and theorem 368:
Theorem (368) [serial 1594] used for:
  Law of And-Simplification:  P and P is P [serial 1593] 


Theorem (370)                               [serial 1592] 
P [160] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [163] ->
Q [163] << ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true ) >>
Why created:  Law of And-Simplification:  P and P is P [serial 1591]
Solved by:  Law of And-Simplification:  P and P is P
and theorem 369:
Theorem (369) [serial 1593] used for:
  Law of And-Simplification:  P and P is P [serial 1592] 


Theorem (371)                               [serial 1591] 
P [160] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [163] ->
Q [163] << ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true ) >>
Why created:  Law of And-Simplification:  P and P is P [serial 1590]
Solved by:  Law of And-Simplification:  P and P is P
and theorem 370:
Theorem (370) [serial 1592] used for:
  Law of And-Simplification:  P and P is P [serial 1591] 


Theorem (372)                               [serial 1590] 
P [160] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [163] ->
Q [163] << ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true )
  and ( true ) >>
Why created:  Law of Excluded Middle: P or not P is tautology [serial 1589]
Solved by:  Law of And-Simplification:  P and P is P
and theorem 371:
Theorem (371) [serial 1591] used for:
  Law of And-Simplification:  P and P is P [serial 1590] 


Theorem (373)                               [serial 1589] 
P [160] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [163] ->
Q [163] << ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or v < iSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v < iSeg.v_e
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or v < iSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or v < iSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or v < iSeg.v_e
   or v < iSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v < iSeg.v_e
   or v < iSeg.v_e
   or v < iSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v < iSeg.v_e
   or v < iSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v < iSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v < iSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v < iSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v < iSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v < iSeg.v_e
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or v < iSeg.v_e
   or v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v < iSeg.v_e
   or v < iSeg.v_e
   or v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v < iSeg.v_e
   or v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v < iSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v < iSeg.v_e
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or v < iSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v < iSeg.v_e
   or v < iSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v < iSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v < iSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
   or not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) >>
Why created:  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and  while transforming into
  conjunctive normal form [serial 1587]
Solved by:  Law of Excluded Middle: P or not P is tautology
and theorem 372:
Theorem (372) [serial 1590] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1589] 


Theorem (374)                               [serial 1587] 
P [160] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [163] ->
Q [163] << not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or ( not ( v < iSeg.v_n )
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or ( v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) >>
Why created:    normalization of [serial 1585]
Solved by:  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 373:
Theorem (373) [serial 1589] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and  while transforming into
  conjunctive normal form [serial 1587] 


Theorem (375)                               [serial 1585] 
P [160] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [163] ->
Q [163] << ( not ( v < iSeg.v_e ) )
   or ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
   or ( ( not ( v < iSeg.v_n ) )
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or ( ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) )
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or ( v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1559]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 374:
Theorem (374) [serial 1587] used for:
    normalization of [serial 1585] 


Theorem (376)                               [serial 1559] 
P [160] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [163] ->
Q [163] << iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
   or ( iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or ( b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or ( v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) >>
Why created:    normalization of [serial 1545]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 375:
Theorem (375) [serial 1585] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1559] 


Theorem (377)                               [serial 1545] 
P [160] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [163] ->
Q [163] << ( v >= iSeg.v_e )
   or ( v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) )
   or ( v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) )
   or ( v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) )
   or ( v < iSeg.v_n
  and v*v < nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p )
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
Why created:    <<P>> -> <<B1 or B2 or ... or Bn>> in alternative for [serial 1544]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 376:
Theorem (376) [serial 1559] used for:
    normalization of [serial 1545] 


Theorem (378)                               [serial 1615] 
P [163] << iSeg.v_e <= v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [165] ->
Q [14] << iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v >>
Why created:    normalization of [serial 1611]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (379)                               [serial 1611] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = ( [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;] )
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and iSeg.v_e <= v >>
S [165] ->
Q [14] << ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1602]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 378:
Theorem (378) [serial 1615] used for:
    normalization of [serial 1611] 


Theorem (380)                               [serial 1602] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and iSeg.v_e <= v >>
S [165] ->
Q [14] << EB() >>
Why created:  applied port output of value <<pre>> -> <<M(eb)[eb|true]>> [serial 1599]
Solved by:  Substitution of Assertion Labels
and theorem 379:
Theorem (379) [serial 1611] used for:
  Substituted assertions' predicates for labels  [serial 1602] 


Theorem (381)                               [serial 1608] 
P [165] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and iSeg.v_e <= v
  and ( EB() )@now >>
S [165] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1603]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (382)                               [serial 1603] 
P [165] << ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and iSeg.v_e <= v )
  and ( EB() )@now >>
S [165] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  applied port output <<pre and (EB())@now>> -> <<post>> [serial 1599]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 381:
Theorem (381) [serial 1608] used for:
  Associativity: (b.c).a = a.b.c [serial 1603] 


Theorem (383)                               [serial 1599] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and iSeg.v_e <= v >>
S [165] eb!(true)
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  <<P>> S1 <<Q>> in concurrent composition for [serial 1578]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 380 382:
Theorem (380) [serial 1602] used for:
  applied port output of value <<pre>> -> <<M(eb)[eb|true]>> [serial 1599] 
Theorem (382) [serial 1603] used for:
  applied port output <<pre and (EB())@now>> -> <<post>> [serial 1599] 


Theorem (384)                               [serial 1634] 
P [163] << iSeg.v_e <= v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [165] ->
Q [165] << iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
   or ( not ( iSeg.v_n <= v )
  and not ( b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) ) >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1631]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (385)                               [serial 1631] 
P [163] << iSeg.v_e <= v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [165] ->
Q [165] << ( not ( iSeg.v_n <= v )
  and not ( b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) )
   or ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v ) >>
Why created:    normalization of [serial 1628]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 384:
Theorem (384) [serial 1634] used for:
  Associativity: (b.c).a = a.b.c [serial 1631] 


Theorem (386)                               [serial 1628] 
P [163] << iSeg.v_e <= v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [165] ->
Q [165] << ( not ( not ( iSeg.v_e <= v ) )
   or not ( not ( e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v ) ) )
   or ( not ( iSeg.v_n <= v )
  and not ( b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) ) >>
Why created:  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1626]
Solved by:  Complement
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 385:
Theorem (385) [serial 1631] used for:
    normalization of [serial 1628] 


Theorem (387)                               [serial 1626] 
P [163] << iSeg.v_e <= v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [165] ->
Q [165] << not ( not ( iSeg.v_e <= v )
  and not ( e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v ) )
   or not ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) >>
Why created:    normalization of [serial 1623]
Solved by:  DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 386:
Theorem (386) [serial 1628] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1626] 


Theorem (388)                               [serial 1623] 
P [163] << iSeg.v_e <= v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [165] ->
Q [165] << ( not ( ( not ( iSeg.v_e <= v )
  and not ( e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v ) ) )
   or not ( ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) ) ) >>
Why created:  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1617]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 387:
Theorem (387) [serial 1626] used for:
    normalization of [serial 1623] 


Theorem (389)                               [serial 1617] 
P [163] << iSeg.v_e <= v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [165] ->
Q [165] << not ( not ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v )
  and ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) ) >>
Why created:    normalization of [serial 1612]
Solved by:  DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 388:
Theorem (388) [serial 1623] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1617] 


Theorem (390)                               [serial 1612] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = ( [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;] )
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and iSeg.v_e <= v >>
S [165] ->
Q [165] << not ( ( v >= iSeg.v_n
   or v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) )
  and not ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1604]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 389:
Theorem (389) [serial 1617] used for:
    normalization of [serial 1612] 


Theorem (391)                               [serial 1604] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and iSeg.v_e <= v >>
S [165] ->
Q [165] << not ( SB()
  and not EB() ) >>
Why created:  applied port output of value <<pre>> -> <<M(sb)[sb|false]>> [serial 1600]
Solved by:  Substitution of Assertion Labels
and theorem 390:
Theorem (390) [serial 1612] used for:
  Substituted assertions' predicates for labels  [serial 1604] 


Theorem (392)                               [serial 1609] 
P [165] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and iSeg.v_e <= v
  and ( not ( SB()
  and not EB() ) )@now >>
S [165] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1605]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (393)                               [serial 1605] 
P [165] << ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and iSeg.v_e <= v )
  and ( not ( SB()
  and not EB() ) )@now >>
S [165] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  applied port output <<pre and (not ( SB()
  and not EB() ))@now>> -> <<post>> [serial 1600]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 392:
Theorem (392) [serial 1609] used for:
  Associativity: (b.c).a = a.b.c [serial 1605] 


Theorem (394)                               [serial 1600] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and iSeg.v_e <= v >>
S [165] sb!(false)
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  <<P>> S2 <<Q>> in concurrent composition for [serial 1578]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 391 393:
Theorem (391) [serial 1604] used for:
  applied port output of value <<pre>> -> <<M(sb)[sb|false]>> [serial 1600] 
Theorem (393) [serial 1605] used for:
  applied port output <<pre and (not ( SB()
  and not EB() ))@now>> -> <<post>> [serial 1600] 


Theorem (395)                               [serial 1610] 
P [165] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and iSeg.v_e <= v
  and ( ca = ( 0 mpss ) )@now >>
S [165] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1606]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (396)                               [serial 1606] 
P [165] << ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and iSeg.v_e <= v )
  and ( ca = ( 0 mpss ) )@now >>
S [165] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  applied port output <<pre and (ca=0 mpss)@now>> -> <<post>> [serial 1601]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 395:
Theorem (395) [serial 1610] used for:
  Associativity: (b.c).a = a.b.c [serial 1606] 


Theorem (397)                               [serial 1633] 
P [163] << iSeg.v_e <= v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [165] ->
Q [33] << iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
   or iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1619]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (398)                               [serial 1619] 
P [163] << iSeg.v_e <= v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [165] ->
Q [33] << ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v )
   or ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) >>
Why created:    normalization of [serial 1613]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 397:
Theorem (397) [serial 1633] used for:
  Associativity: (b.c).a = a.b.c [serial 1619] 


Theorem (399)                               [serial 1613] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = ( [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;] )
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and iSeg.v_e <= v >>
S [165] ->
Q [33] << ( ( v >= iSeg.v_n
   or v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) )
   or ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1607]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 398:
Theorem (398) [serial 1619] used for:
    normalization of [serial 1613] 


Theorem (400)                               [serial 1607] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and iSeg.v_e <= v >>
S [165] ->
Q [33] << ( SB()
   or EB() ) >>
Why created:  applied port output of conditional expression <<pre>> -> <<( SB()
   or EB() )>> where ( SB()
   or EB() ) -> 0 mpss for ca!(0 mpss) 
[serial 1601]
Solved by:  Substitution of Assertion Labels
and theorem 399:
Theorem (399) [serial 1613] used for:
  Substituted assertions' predicates for labels  [serial 1607] 


Theorem (401)                               [serial 1601] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and iSeg.v_e <= v >>
S [165] ca!(0 mpss)
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  <<P>> S3 <<Q>> in concurrent composition for [serial 1578]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 396 400:
Theorem (396) [serial 1606] used for:
  applied port output <<pre and (ca=0 mpss)@now>> -> <<post>> [serial 1601] 
Theorem (400) [serial 1607] used for:
  applied port output of conditional expression <<pre>> -> <<( SB()
   or EB() )>> where ( SB()
   or EB() ) -> 0 mpss for ca!(0 mpss) 
[serial 1601] 


Theorem (402)                               [serial 1578] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and iSeg.v_e <= v >>
S [165]   eb!(true)
  &
  sb!(false)
  &
  ca!(0 mpss) 
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1561]
Solved by:  Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>>
and theorems 383 394 401:
Theorem (383) [serial 1599] used for:
  <<P>> S1 <<Q>> in concurrent composition for [serial 1578] 
Theorem (394) [serial 1600] used for:
  <<P>> S2 <<Q>> in concurrent composition for [serial 1578] 
Theorem (401) [serial 1601] used for:
  <<P>> S3 <<Q>> in concurrent composition for [serial 1578] 


Theorem (403)                               [serial 1561] 
P [163] << iSeg.v_e <= v
  and ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) ) >>
S [165]   eb!(true)
  &
  sb!(false)
  &
  ca!(0 mpss) 
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:    normalization of [serial 1551]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 402:
Theorem (402) [serial 1578] used for:
  Associativity: (b.c).a = a.b.c [serial 1561] 


Theorem (404)                               [serial 1551] 
P [163] << ( i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_e ) >>
S [165]   eb!(true)
  &
  sb!(false)
  &
  ca!(0 mpss) 
Q [65] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA >>
Why created:  <<P>> T <<Q>> in existential lattice quantification for [serial 1546]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 403:
Theorem (403) [serial 1561] used for:
    normalization of [serial 1551] 


Theorem (405)                               [serial 1546] 
P [163] << ( i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_e ) >>
S [165]   {
    eb!(true)
    &
    sb!(false)
    &
    ca!(0 mpss) 
  } 
Q [65] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA >>
Why created:    <<P and B0>> S0 <<Q>> in alternative for [serial 1544]
Solved by:  Introduction of Existential Quantification
and theorem 404:
Theorem (404) [serial 1551] used for:
  <<P>> T <<Q>> in existential lattice quantification for [serial 1546] 


Theorem (406)                               [serial 1675] 
P [163] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [168] ->
Q [14] << iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v >>
Why created:    normalization of [serial 1671]
Solved by:  Guided Substitution of Equals
  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (407)                               [serial 1671] 
P [163] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = ( [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;] )
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e ) >>
S [168] ->
Q [14] << ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1645]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 406:
Theorem (406) [serial 1675] used for:
    normalization of [serial 1671] 


Theorem (408)                               [serial 1645] 
P [163] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [168] ->
Q [14] << EB() >>
Why created:    normalization of [serial 1638]
Solved by:  Substitution of Assertion Labels
and theorem 407:
Theorem (407) [serial 1671] used for:
  Substituted assertions' predicates for labels  [serial 1645] 


Theorem (409)                               [serial 1638] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v >>
S [168] ->
Q [14] << EB() >>
Why created:  applied port output of value <<pre>> -> <<M(eb)[eb|true]>> [serial 1635]
Solved by:  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 408:
Theorem (408) [serial 1645] used for:
    normalization of [serial 1638] 


Theorem (410)                               [serial 1662] 
P [168] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and EB()@now >>
S [168] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1647]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (411)                               [serial 1647] 
P [168] << EB()@now
  and ( e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) ) >>
S [168] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:    normalization of [serial 1639]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 410:
Theorem (410) [serial 1662] used for:
  Associativity: (b.c).a = a.b.c [serial 1647] 


Theorem (412)                               [serial 1639] 
P [168] << ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v )
  and ( EB() )@now >>
S [168] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  applied port output <<pre and (EB())@now>> -> <<post>> [serial 1635]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 411:
Theorem (411) [serial 1647] used for:
    normalization of [serial 1639] 


Theorem (413)                               [serial 1635] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v >>
S [168] eb!(true)
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  <<P>> S1 <<Q>> in concurrent composition for [serial 1579]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 409 412:
Theorem (409) [serial 1638] used for:
  applied port output of value <<pre>> -> <<M(eb)[eb|true]>> [serial 1635] 
Theorem (412) [serial 1639] used for:
  applied port output <<pre and (EB())@now>> -> <<post>> [serial 1635] 


Theorem (414)                               [serial 1684] 
P [163] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [168] ->
Q [168] << iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
   or not ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1679]
Solved by:  Guided Substitution of Equals
  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (415)                               [serial 1679] 
P [163] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [168] ->
Q [168] << not ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v )
   or ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v ) >>
Why created:    normalization of [serial 1673]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 414:
Theorem (414) [serial 1684] used for:
  Associativity: (b.c).a = a.b.c [serial 1679] 


Theorem (416)                               [serial 1673] 
P [163] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = ( [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;] )
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e ) >>
S [168] ->
Q [168] << ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) )
   or not ( v >= iSeg.v_n
   or v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1669]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 415:
Theorem (415) [serial 1679] used for:
    normalization of [serial 1673] 


Theorem (417)                               [serial 1669] 
P [163] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [168] ->
Q [168] << EB()
   or not SB() >>
Why created:    normalization of [serial 1665]
Solved by:  Substitution of Assertion Labels
and theorem 416:
Theorem (416) [serial 1673] used for:
  Substituted assertions' predicates for labels  [serial 1669] 


Theorem (418)                               [serial 1665] 
P [163] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [168] ->
Q [168] << ( not ( SB() )
   or not ( not EB() ) ) >>
Why created:  DeMorgan's Law: not (A and B) = (not A) or (not B)  [serial 1649]
Solved by:  Complement
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 417:
Theorem (417) [serial 1669] used for:
    normalization of [serial 1665] 


Theorem (419)                               [serial 1649] 
P [163] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [168] ->
Q [168] << not ( SB()
  and not EB() ) >>
Why created:    normalization of [serial 1640]
Solved by:  DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 418:
Theorem (418) [serial 1665] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B)  [serial 1649] 


Theorem (420)                               [serial 1640] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v >>
S [168] ->
Q [168] << not ( SB()
  and not EB() ) >>
Why created:  applied port output of value <<pre>> -> <<M(sb)[sb|false]>> [serial 1636]
Solved by:  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 419:
Theorem (419) [serial 1649] used for:
    normalization of [serial 1640] 


Theorem (421)                               [serial 1663] 
P [168] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and ( not ( SB()
  and not EB() ) )@now >>
S [168] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1651]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (422)                               [serial 1651] 
P [168] << ( not ( SB()
  and not EB() ) )@now
  and ( e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) ) >>
S [168] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:    normalization of [serial 1641]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 421:
Theorem (421) [serial 1663] used for:
  Associativity: (b.c).a = a.b.c [serial 1651] 


Theorem (423)                               [serial 1641] 
P [168] << ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v )
  and ( not ( SB()
  and not EB() ) )@now >>
S [168] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  applied port output <<pre and (not ( SB()
  and not EB() ))@now>> -> <<post>> [serial 1636]
Solved by:  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 422:
Theorem (422) [serial 1651] used for:
    normalization of [serial 1641] 


Theorem (424)                               [serial 1636] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v >>
S [168] sb!(false)
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  <<P>> S2 <<Q>> in concurrent composition for [serial 1579]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 420 423:
Theorem (420) [serial 1640] used for:
  applied port output of value <<pre>> -> <<M(sb)[sb|false]>> [serial 1636] 
Theorem (423) [serial 1641] used for:
  applied port output <<pre and (not ( SB()
  and not EB() ))@now>> -> <<post>> [serial 1636] 


Theorem (425)                               [serial 1664] 
P [168] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and ( ca = 0 mpss )@now >>
S [168] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1653]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (426)                               [serial 1653] 
P [168] << ( ca = 0 mpss )@now
  and ( e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) ) >>
S [168] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:    normalization of [serial 1642]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 425:
Theorem (425) [serial 1664] used for:
  Associativity: (b.c).a = a.b.c [serial 1653] 


Theorem (427)                               [serial 1642] 
P [168] << ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v )
  and ( ca = ( 0 mpss ) )@now >>
S [168] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  applied port output <<pre and (ca=0 mpss)@now>> -> <<post>> [serial 1637]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 426:
Theorem (426) [serial 1653] used for:
    normalization of [serial 1642] 


Theorem (428)                               [serial 1687] 
P [163] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [168] ->
Q [33] << iSeg.v_e <= v
   or iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v >>
Why created:    normalization of [serial 1683]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (429)                               [serial 1683] 
P [163] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [168] ->
Q [33] << iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
   or iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1677]
Solved by:  Guided Substitution of Equals
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 428:
Theorem (428) [serial 1687] used for:
    normalization of [serial 1683] 


Theorem (430)                               [serial 1677] 
P [163] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e >>
S [168] ->
Q [33] << ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v )
   or ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) >>
Why created:    normalization of [serial 1672]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 429:
Theorem (429) [serial 1683] used for:
  Associativity: (b.c).a = a.b.c [serial 1677] 


Theorem (431)                               [serial 1672] 
P [163] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = ( [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;] )
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e ) >>
S [168] ->
Q [33] << ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) )
   or ( v >= iSeg.v_n
   or v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1655]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 430:
Theorem (430) [serial 1677] used for:
    normalization of [serial 1672] 


Theorem (432)                               [serial 1655] 
P [163] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [168] ->
Q [33] << EB()
   or SB() >>
Why created:    normalization of [serial 1643]
Solved by:  Substitution of Assertion Labels
and theorem 431:
Theorem (431) [serial 1672] used for:
  Substituted assertions' predicates for labels  [serial 1655] 


Theorem (433)                               [serial 1643] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v >>
S [168] ->
Q [33] << ( SB()
   or EB() ) >>
Why created:  applied port output of conditional expression <<pre>> -> <<( SB()
   or EB() )>> where ( SB()
   or EB() ) -> 0 mpss for ca!(0 mpss) 
[serial 1637]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 432:
Theorem (432) [serial 1655] used for:
    normalization of [serial 1643] 


Theorem (434)                               [serial 1637] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v >>
S [168] ca!(0 mpss)
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  <<P>> S3 <<Q>> in concurrent composition for [serial 1579]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 427 433:
Theorem (427) [serial 1642] used for:
  applied port output <<pre and (ca=0 mpss)@now>> -> <<post>> [serial 1637] 
Theorem (433) [serial 1643] used for:
  applied port output of conditional expression <<pre>> -> <<( SB()
   or EB() )>> where ( SB()
   or EB() ) -> 0 mpss for ca!(0 mpss) 
[serial 1637] 


Theorem (435)                               [serial 1579] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v >>
S [168]   eb!(true)
  &
  sb!(false)
  &
  ca!(0 mpss) 
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1563]
Solved by:  Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>>
and theorems 413 424 434:
Theorem (413) [serial 1635] used for:
  <<P>> S1 <<Q>> in concurrent composition for [serial 1579] 
Theorem (424) [serial 1636] used for:
  <<P>> S2 <<Q>> in concurrent composition for [serial 1579] 
Theorem (434) [serial 1637] used for:
  <<P>> S3 <<Q>> in concurrent composition for [serial 1579] 


Theorem (436)                               [serial 1563] 
P [163] << e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v
  and ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) ) >>
S [168]   eb!(true)
  &
  sb!(false)
  &
  ca!(0 mpss) 
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:    normalization of [serial 1552]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 435:
Theorem (435) [serial 1579] used for:
  Associativity: (b.c).a = a.b.c [serial 1563] 


Theorem (437)                               [serial 1552] 
P [163] << ( i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [168]   eb!(true)
  &
  sb!(false)
  &
  ca!(0 mpss) 
Q [65] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA >>
Why created:  <<P>> T <<Q>> in existential lattice quantification for [serial 1547]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 436:
Theorem (436) [serial 1563] used for:
    normalization of [serial 1552] 


Theorem (438)                               [serial 1547] 
P [163] << ( i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [168]   {
    eb!(true)
    &
    sb!(false)
    &
    ca!(0 mpss) 
  } 
Q [65] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA >>
Why created:    <<P and B1>> S1 <<Q>> in alternative for [serial 1544]
Solved by:  Introduction of Existential Quantification
and theorem 437:
Theorem (437) [serial 1552] used for:
  <<P>> T <<Q>> in existential lattice quantification for [serial 1547] 


Theorem (439)                               [serial 1740] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v < iSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [86] << v < iSeg.v_e >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1739]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (440)                               [serial 1741] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v < iSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [86] << v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1739]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (441)                               [serial 1744] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v < iSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [35] << not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) >>
Why created:    normalization of [serial 1742]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (442)                               [serial 1742] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v < iSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [35] << ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1739]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 441:
Theorem (441) [serial 1744] used for:
    normalization of [serial 1742] 


Theorem (443)                               [serial 1739] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v < iSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [12] << v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1730]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 439 440 442:
Theorem (439) [serial 1740] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1739] 
Theorem (440) [serial 1741] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1739] 
Theorem (442) [serial 1742] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1739] 


Theorem (444)                               [serial 1730] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v < iSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [12] << ( v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:    normalization of [serial 1726]
Solved by:  Guided Substitution of Equals
  Associativity: (b.c).a = a.b.c
and theorem 443:
Theorem (443) [serial 1739] used for:
  Associativity: (b.c).a = a.b.c [serial 1730] 


Theorem (445)                               [serial 1726] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v < iSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [12] << ( not ( not ( v < iSeg.v_e ) )
  and not ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) )
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1718]
Solved by:  Complement
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 444:
Theorem (444) [serial 1730] used for:
    normalization of [serial 1726] 


Theorem (446)                               [serial 1718] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v < iSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [12] << not ( not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:    normalization of [serial 1714]
Solved by:  DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 445:
Theorem (445) [serial 1726] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1718] 


Theorem (447)                               [serial 1714] 
P [163] << ( not ( v < iSeg.v_n ) )
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [12] << not ( ( not ( v < iSeg.v_e ) )
   or ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) )
  and ( ( not ( v < iSeg.v_n ) )
   or ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1706]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 446:
Theorem (446) [serial 1718] used for:
    normalization of [serial 1714] 


Theorem (448)                               [serial 1706] 
P [163] << iSeg.v_n <= v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [12] << not ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v )
  and ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) >>
Why created:    normalization of [serial 1702]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 447:
Theorem (447) [serial 1714] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1706] 


Theorem (449)                               [serial 1702] 
P [163] << iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = ( [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;] )
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e ) >>
S [172] ->
Q [12] << ( v >= iSeg.v_n
   or v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) )
  and not ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1693]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 448:
Theorem (448) [serial 1706] used for:
    normalization of [serial 1702] 


Theorem (450)                               [serial 1693] 
P [163] << iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [172] ->
Q [12] << SB()
  and not EB() >>
Why created:  applied port output of value <<pre>> -> <<M(sb)[sb|true]>> [serial 1690]
Solved by:  Substitution of Assertion Labels
and theorem 449:
Theorem (449) [serial 1702] used for:
  Substituted assertions' predicates for labels  [serial 1693] 


Theorem (451)                               [serial 1699] 
P [172] << iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and ( SB()
  and not EB() )@now >>
S [172] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1694]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (452)                               [serial 1694] 
P [172] << ( iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( SB()
  and not EB() )@now >>
S [172] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  applied port output <<pre and (SB()
  and not EB())@now>> -> <<post>> [serial 1690]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 451:
Theorem (451) [serial 1699] used for:
  Associativity: (b.c).a = a.b.c [serial 1694] 


Theorem (453)                               [serial 1690] 
P [163] << iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [172] sb!(true)
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  <<P>> S1 <<Q>> in concurrent composition for [serial 1580]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 450 452:
Theorem (450) [serial 1693] used for:
  applied port output of value <<pre>> -> <<M(sb)[sb|true]>> [serial 1690] 
Theorem (452) [serial 1694] used for:
  applied port output <<pre and (SB()
  and not EB())@now>> -> <<post>> [serial 1690] 


Theorem (454)                               [serial 1732] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v < iSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [172] << v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
Why created:    normalization of [serial 1727]
Solved by:  Guided Substitution of Equals
  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (455)                               [serial 1727] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v < iSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [172] << ( not ( not ( v < iSeg.v_e ) )
  and not ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) ) >>
Why created:  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1720]
Solved by:  Complement
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 454:
Theorem (454) [serial 1732] used for:
    normalization of [serial 1727] 


Theorem (456)                               [serial 1720] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v < iSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [172] << not ( not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) >>
Why created:    normalization of [serial 1715]
Solved by:  DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 455:
Theorem (455) [serial 1727] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1720] 


Theorem (457)                               [serial 1715] 
P [163] << ( not ( v < iSeg.v_n ) )
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [172] << not ( ( not ( v < iSeg.v_e ) )
   or ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1708]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 456:
Theorem (456) [serial 1720] used for:
    normalization of [serial 1715] 


Theorem (458)                               [serial 1708] 
P [163] << iSeg.v_n <= v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [172] << not ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v ) >>
Why created:    normalization of [serial 1703]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 457:
Theorem (457) [serial 1715] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1708] 


Theorem (459)                               [serial 1703] 
P [163] << iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = ( [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;] )
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e ) >>
S [172] ->
Q [172] << not ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1695]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 458:
Theorem (458) [serial 1708] used for:
    normalization of [serial 1703] 


Theorem (460)                               [serial 1695] 
P [163] << iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [172] ->
Q [172] << not EB() >>
Why created:  applied port output of value <<pre>> -> <<M(eb)[eb|false]>> [serial 1691]
Solved by:  Substitution of Assertion Labels
and theorem 459:
Theorem (459) [serial 1703] used for:
  Substituted assertions' predicates for labels  [serial 1695] 


Theorem (461)                               [serial 1700] 
P [172] << iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and ( not EB() )@now >>
S [172] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1696]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (462)                               [serial 1696] 
P [172] << ( iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( not EB() )@now >>
S [172] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  applied port output <<pre and (not EB())@now>> -> <<post>> [serial 1691]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 461:
Theorem (461) [serial 1700] used for:
  Associativity: (b.c).a = a.b.c [serial 1696] 


Theorem (463)                               [serial 1691] 
P [163] << iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [172] eb!(false)
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  <<P>> S2 <<Q>> in concurrent composition for [serial 1580]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 460 462:
Theorem (460) [serial 1695] used for:
  applied port output of value <<pre>> -> <<M(eb)[eb|false]>> [serial 1691] 
Theorem (462) [serial 1696] used for:
  applied port output <<pre and (not EB())@now>> -> <<post>> [serial 1691] 


Theorem (464)                               [serial 1701] 
P [172] << iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and ( ca = ( 0 mpss ) )@now >>
S [172] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1697]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (465)                               [serial 1697] 
P [172] << ( iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( ca = ( 0 mpss ) )@now >>
S [172] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  applied port output <<pre and (ca=0 mpss)@now>> -> <<post>> [serial 1692]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 464:
Theorem (464) [serial 1701] used for:
  Associativity: (b.c).a = a.b.c [serial 1697] 


Theorem (466)                               [serial 1738] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v < iSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [33] << not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1722]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (467)                               [serial 1722] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v < iSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [33] << ( not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
   or ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:    normalization of [serial 1716]
Solved by:  Guided Substitution of Equals
  Associativity: (b.c).a = a.b.c
and theorem 466:
Theorem (466) [serial 1738] used for:
  Associativity: (b.c).a = a.b.c [serial 1722] 


Theorem (468)                               [serial 1716] 
P [163] << ( not ( v < iSeg.v_n ) )
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [33] << ( ( not ( v < iSeg.v_e ) )
   or ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) )
   or ( ( not ( v < iSeg.v_n ) )
   or ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1710]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 467:
Theorem (467) [serial 1722] used for:
    normalization of [serial 1716] 


Theorem (469)                               [serial 1710] 
P [163] << iSeg.v_n <= v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [172] ->
Q [33] << ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v )
   or ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) >>
Why created:    normalization of [serial 1704]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 468:
Theorem (468) [serial 1716] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1710] 


Theorem (470)                               [serial 1704] 
P [163] << iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = ( [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;] )
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e ) >>
S [172] ->
Q [33] << ( ( v >= iSeg.v_n
   or v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) )
   or ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1698]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 469:
Theorem (469) [serial 1710] used for:
    normalization of [serial 1704] 


Theorem (471)                               [serial 1698] 
P [163] << iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [172] ->
Q [33] << ( SB()
   or EB() ) >>
Why created:  applied port output of conditional expression <<pre>> -> <<( SB()
   or EB() )>> where ( SB()
   or EB() ) -> 0 mpss for ca!(0 mpss) 
[serial 1692]
Solved by:  Substitution of Assertion Labels
and theorem 470:
Theorem (470) [serial 1704] used for:
  Substituted assertions' predicates for labels  [serial 1698] 


Theorem (472)                               [serial 1692] 
P [163] << iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [172] ca!(0 mpss)
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  <<P>> S3 <<Q>> in concurrent composition for [serial 1580]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 465 471:
Theorem (465) [serial 1697] used for:
  applied port output <<pre and (ca=0 mpss)@now>> -> <<post>> [serial 1692] 
Theorem (471) [serial 1698] used for:
  applied port output of conditional expression <<pre>> -> <<( SB()
   or EB() )>> where ( SB()
   or EB() ) -> 0 mpss for ca!(0 mpss) 
[serial 1692] 


Theorem (473)                               [serial 1580] 
P [163] << iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [172]   sb!(true)
  &
  eb!(false)
  &
  ca!(0 mpss) 
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1565]
Solved by:  Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>>
and theorems 453 463 472:
Theorem (453) [serial 1690] used for:
  <<P>> S1 <<Q>> in concurrent composition for [serial 1580] 
Theorem (463) [serial 1691] used for:
  <<P>> S2 <<Q>> in concurrent composition for [serial 1580] 
Theorem (472) [serial 1692] used for:
  <<P>> S3 <<Q>> in concurrent composition for [serial 1580] 


Theorem (474)                               [serial 1565] 
P [163] << ( iSeg.v_n <= v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
  and ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) ) >>
S [172]   sb!(true)
  &
  eb!(false)
  &
  ca!(0 mpss) 
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:    normalization of [serial 1553]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 473:
Theorem (473) [serial 1580] used for:
  Associativity: (b.c).a = a.b.c [serial 1565] 


Theorem (475)                               [serial 1553] 
P [163] << ( i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [172]   sb!(true)
  &
  eb!(false)
  &
  ca!(0 mpss) 
Q [65] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA >>
Why created:  <<P>> T <<Q>> in existential lattice quantification for [serial 1548]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 474:
Theorem (474) [serial 1565] used for:
    normalization of [serial 1553] 


Theorem (476)                               [serial 1548] 
P [163] << ( i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v >= iSeg.v_n
  and v < iSeg.v_e
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [172]   {
    sb!(true)
    &
    eb!(false)
    &
    ca!(0 mpss) 
  } 
Q [65] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA >>
Why created:    <<P and B2>> S2 <<Q>> in alternative for [serial 1544]
Solved by:  Introduction of Existential Quantification
and theorem 475:
Theorem (475) [serial 1553] used for:
  <<P>> T <<Q>> in existential lattice quantification for [serial 1548] 


Theorem (477)                               [serial 1796] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [86] << v < iSeg.v_e >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1795]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (478)                               [serial 1797] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [86] << v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1795]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (479)                               [serial 1800] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [35] << not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) >>
Why created:    normalization of [serial 1798]
Solved by:  Guided Substitution of Equals
  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (480)                               [serial 1798] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [35] << ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1795]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 479:
Theorem (479) [serial 1800] used for:
    normalization of [serial 1798] 


Theorem (481)                               [serial 1795] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [12] << v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1786]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 477 478 480:
Theorem (477) [serial 1796] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1795] 
Theorem (478) [serial 1797] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1795] 
Theorem (480) [serial 1798] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1795] 


Theorem (482)                               [serial 1786] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [12] << ( v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:    normalization of [serial 1782]
Solved by:  Guided Substitution of Equals
  Associativity: (b.c).a = a.b.c
and theorem 481:
Theorem (481) [serial 1795] used for:
  Associativity: (b.c).a = a.b.c [serial 1786] 


Theorem (483)                               [serial 1782] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [12] << ( not ( not ( v < iSeg.v_e ) )
  and not ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) )
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1774]
Solved by:  Complement
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 482:
Theorem (482) [serial 1786] used for:
    normalization of [serial 1782] 


Theorem (484)                               [serial 1774] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [12] << not ( not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
  and ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:    normalization of [serial 1770]
Solved by:  DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 483:
Theorem (483) [serial 1782] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1774] 


Theorem (485)                               [serial 1770] 
P [163] << ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) )
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [12] << not ( ( not ( v < iSeg.v_e ) )
   or ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) )
  and ( ( not ( v < iSeg.v_n ) )
   or ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1762]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 484:
Theorem (484) [serial 1774] used for:
    normalization of [serial 1770] 


Theorem (486)                               [serial 1762] 
P [163] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [12] << not ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v )
  and ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) >>
Why created:    normalization of [serial 1758]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 485:
Theorem (485) [serial 1770] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1762] 


Theorem (487)                               [serial 1758] 
P [163] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = ( [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;] )
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e ) >>
S [177] ->
Q [12] << ( v >= iSeg.v_n
   or v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) )
  and not ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1749]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 486:
Theorem (486) [serial 1762] used for:
    normalization of [serial 1758] 


Theorem (488)                               [serial 1749] 
P [163] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [177] ->
Q [12] << SB()
  and not EB() >>
Why created:  applied port output of value <<pre>> -> <<M(sb)[sb|true]>> [serial 1746]
Solved by:  Substitution of Assertion Labels
and theorem 487:
Theorem (487) [serial 1758] used for:
  Substituted assertions' predicates for labels  [serial 1749] 


Theorem (489)                               [serial 1755] 
P [177] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and ( SB()
  and not EB() )@now >>
S [177] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1750]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (490)                               [serial 1750] 
P [177] << ( b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( SB()
  and not EB() )@now >>
S [177] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  applied port output <<pre and (SB()
  and not EB())@now>> -> <<post>> [serial 1746]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 489:
Theorem (489) [serial 1755] used for:
  Associativity: (b.c).a = a.b.c [serial 1750] 


Theorem (491)                               [serial 1746] 
P [163] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [177] sb!(true)
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  <<P>> S1 <<Q>> in concurrent composition for [serial 1581]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 488 490:
Theorem (488) [serial 1749] used for:
  applied port output of value <<pre>> -> <<M(sb)[sb|true]>> [serial 1746] 
Theorem (490) [serial 1750] used for:
  applied port output <<pre and (SB()
  and not EB())@now>> -> <<post>> [serial 1746] 


Theorem (492)                               [serial 1788] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [177] << v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
Why created:    normalization of [serial 1783]
Solved by:  Guided Substitution of Equals
  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (493)                               [serial 1783] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [177] << ( not ( not ( v < iSeg.v_e ) )
  and not ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) ) >>
Why created:  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1776]
Solved by:  Complement
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 492:
Theorem (492) [serial 1788] used for:
    normalization of [serial 1783] 


Theorem (494)                               [serial 1776] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [177] << not ( not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) >>
Why created:    normalization of [serial 1771]
Solved by:  DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 493:
Theorem (493) [serial 1783] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1776] 


Theorem (495)                               [serial 1771] 
P [163] << ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) )
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [177] << not ( ( not ( v < iSeg.v_e ) )
   or ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1764]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 494:
Theorem (494) [serial 1776] used for:
    normalization of [serial 1771] 


Theorem (496)                               [serial 1764] 
P [163] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [177] << not ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v ) >>
Why created:    normalization of [serial 1759]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 495:
Theorem (495) [serial 1771] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1764] 


Theorem (497)                               [serial 1759] 
P [163] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = ( [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;] )
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e ) >>
S [177] ->
Q [177] << not ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1751]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 496:
Theorem (496) [serial 1764] used for:
    normalization of [serial 1759] 


Theorem (498)                               [serial 1751] 
P [163] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [177] ->
Q [177] << not EB() >>
Why created:  applied port output of value <<pre>> -> <<M(eb)[eb|false]>> [serial 1747]
Solved by:  Substitution of Assertion Labels
and theorem 497:
Theorem (497) [serial 1759] used for:
  Substituted assertions' predicates for labels  [serial 1751] 


Theorem (499)                               [serial 1756] 
P [177] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and ( not EB() )@now >>
S [177] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1752]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (500)                               [serial 1752] 
P [177] << ( b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( not EB() )@now >>
S [177] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  applied port output <<pre and (not EB())@now>> -> <<post>> [serial 1747]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 499:
Theorem (499) [serial 1756] used for:
  Associativity: (b.c).a = a.b.c [serial 1752] 


Theorem (501)                               [serial 1747] 
P [163] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [177] eb!(false)
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  <<P>> S2 <<Q>> in concurrent composition for [serial 1581]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 498 500:
Theorem (498) [serial 1751] used for:
  applied port output of value <<pre>> -> <<M(eb)[eb|false]>> [serial 1747] 
Theorem (500) [serial 1752] used for:
  applied port output <<pre and (not EB())@now>> -> <<post>> [serial 1747] 


Theorem (502)                               [serial 1757] 
P [177] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and ( ca = ( 0 mpss ) )@now >>
S [177] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1753]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (503)                               [serial 1753] 
P [177] << ( b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( ca = ( 0 mpss ) )@now >>
S [177] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  applied port output <<pre and (ca=0 mpss)@now>> -> <<post>> [serial 1748]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 502:
Theorem (502) [serial 1757] used for:
  Associativity: (b.c).a = a.b.c [serial 1753] 


Theorem (504)                               [serial 1794] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [33] << not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1778]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (505)                               [serial 1778] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n )
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [33] << ( not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) )
   or ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) >>
Why created:    normalization of [serial 1772]
Solved by:  Guided Substitution of Equals
  Associativity: (b.c).a = a.b.c
and theorem 504:
Theorem (504) [serial 1794] used for:
  Associativity: (b.c).a = a.b.c [serial 1778] 


Theorem (506)                               [serial 1772] 
P [163] << ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) )
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [33] << ( ( not ( v < iSeg.v_e ) )
   or ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) )
   or ( ( not ( v < iSeg.v_n ) )
   or ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1766]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 505:
Theorem (505) [serial 1778] used for:
    normalization of [serial 1772] 


Theorem (507)                               [serial 1766] 
P [163] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [177] ->
Q [33] << ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v )
   or ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v ) >>
Why created:    normalization of [serial 1760]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 506:
Theorem (506) [serial 1772] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1766] 


Theorem (508)                               [serial 1760] 
P [163] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = ( [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;] )
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e ) >>
S [177] ->
Q [33] << ( ( v >= iSeg.v_n
   or v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) )
   or ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1754]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 507:
Theorem (507) [serial 1766] used for:
    normalization of [serial 1760] 


Theorem (509)                               [serial 1754] 
P [163] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [177] ->
Q [33] << ( SB()
   or EB() ) >>
Why created:  applied port output of conditional expression <<pre>> -> <<( SB()
   or EB() )>> where ( SB()
   or EB() ) -> 0 mpss for ca!(0 mpss) 
[serial 1748]
Solved by:  Substitution of Assertion Labels
and theorem 508:
Theorem (508) [serial 1760] used for:
  Substituted assertions' predicates for labels  [serial 1754] 


Theorem (510)                               [serial 1748] 
P [163] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [177] ca!(0 mpss)
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  <<P>> S3 <<Q>> in concurrent composition for [serial 1581]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 503 509:
Theorem (503) [serial 1753] used for:
  applied port output <<pre and (ca=0 mpss)@now>> -> <<post>> [serial 1748] 
Theorem (509) [serial 1754] used for:
  applied port output of conditional expression <<pre>> -> <<( SB()
   or EB() )>> where ( SB()
   or EB() ) -> 0 mpss for ca!(0 mpss) 
[serial 1748] 


Theorem (511)                               [serial 1581] 
P [163] << b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [177]   sb!(true)
  &
  eb!(false)
  &
  ca!(0 mpss) 
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1567]
Solved by:  Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>>
and theorems 491 501 510:
Theorem (491) [serial 1746] used for:
  <<P>> S1 <<Q>> in concurrent composition for [serial 1581] 
Theorem (501) [serial 1747] used for:
  <<P>> S2 <<Q>> in concurrent composition for [serial 1581] 
Theorem (510) [serial 1748] used for:
  <<P>> S3 <<Q>> in concurrent composition for [serial 1581] 


Theorem (512)                               [serial 1567] 
P [163] << ( b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v
  and v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
  and ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) ) >>
S [177]   sb!(true)
  &
  eb!(false)
  &
  ca!(0 mpss) 
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:    normalization of [serial 1554]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 511:
Theorem (511) [serial 1581] used for:
  Associativity: (b.c).a = a.b.c [serial 1567] 


Theorem (513)                               [serial 1554] 
P [163] << ( i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) >>
S [177]   sb!(true)
  &
  eb!(false)
  &
  ca!(0 mpss) 
Q [65] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA >>
Why created:  <<P>> T <<Q>> in existential lattice quantification for [serial 1549]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 512:
Theorem (512) [serial 1567] used for:
    normalization of [serial 1554] 


Theorem (514)                               [serial 1549] 
P [163] << ( i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
  and v < iSeg.v_e
  and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) >>
S [177]   {
    sb!(true)
    &
    eb!(false)
    &
    ca!(0 mpss) 
  } 
Q [65] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA >>
Why created:    <<P and B3>> S3 <<Q>> in alternative for [serial 1544]
Solved by:  Introduction of Existential Quantification
and theorem 513:
Theorem (513) [serial 1554] used for:
  <<P>> T <<Q>> in existential lattice quantification for [serial 1549] 


Theorem (515)                               [serial 1841] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [182] << not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or ( v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) >>
Why created:    normalization of [serial 1837]
Solved by:  Guided Substitution of Equals
  Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (516)                               [serial 1837] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [182] << not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
   or ( not ( not ( v < iSeg.v_n ) )
  and not ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) ) >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1836]
Solved by:  Complement
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 515:
Theorem (515) [serial 1841] used for:
    normalization of [serial 1837] 


Theorem (517)                               [serial 1836] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [182] << ( not ( not ( v < iSeg.v_n ) )
  and not ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) )
   or ( not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) >>
Why created:  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1832]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 516:
Theorem (516) [serial 1837] used for:
  Associativity: (b.c).a = a.b.c [serial 1836] 


Theorem (518)                               [serial 1832] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [182] << not ( not ( v < iSeg.v_n )
   or not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) )
   or ( not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) >>
Why created:    normalization of [serial 1828]
Solved by:  DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 517:
Theorem (517) [serial 1836] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1832] 


Theorem (519)                               [serial 1828] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [182] << not ( ( not ( v < iSeg.v_n ) )
   or ( not ( v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n ) ) )
   or ( ( not ( v < iSeg.v_e ) )
   or ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1824]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 518:
Theorem (518) [serial 1832] used for:
    normalization of [serial 1828] 


Theorem (520)                               [serial 1824] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [182] << not ( iSeg.v_n <= v
   or b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n <= v*v )
   or ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v ) >>
Why created:    normalization of [serial 1820]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 519:
Theorem (519) [serial 1828] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1824] 


Theorem (521)                               [serial 1820] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = ( [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;] )
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [182] << ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) )
   or not ( v >= iSeg.v_n
   or v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1817]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 520:
Theorem (520) [serial 1824] used for:
    normalization of [serial 1820] 


Theorem (522)                               [serial 1817] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [182] << EB()
   or not SB() >>
Why created:    normalization of [serial 1814]
Solved by:  Substitution of Assertion Labels
and theorem 521:
Theorem (521) [serial 1820] used for:
  Substituted assertions' predicates for labels  [serial 1817] 


Theorem (523)                               [serial 1814] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [182] << ( not ( SB() )
   or not ( not EB() ) ) >>
Why created:  DeMorgan's Law: not (A and B) = (not A) or (not B)  [serial 1806]
Solved by:  Complement
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 522:
Theorem (522) [serial 1817] used for:
    normalization of [serial 1814] 


Theorem (524)                               [serial 1806] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [182] << not ( SB()
  and not EB() ) >>
Why created:  applied port output of value <<pre>> -> <<M(sb)[sb|false]>> [serial 1803]
Solved by:  DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 523:
Theorem (523) [serial 1814] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B)  [serial 1806] 


Theorem (525)                               [serial 1811] 
P [182] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and ( not ( SB()
  and not EB() ) )@now >>
S [182] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1807]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (526)                               [serial 1807] 
P [182] << ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
  and ( not ( SB()
  and not EB() ) )@now >>
S [182] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  applied port output <<pre and (not ( SB()
  and not EB() ))@now>> -> <<post>> [serial 1803]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 525:
Theorem (525) [serial 1811] used for:
  Associativity: (b.c).a = a.b.c [serial 1807] 


Theorem (527)                               [serial 1803] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] sb!(false)
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  <<P>> S1 <<Q>> in concurrent composition for [serial 1582]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 524 526:
Theorem (524) [serial 1806] used for:
  applied port output of value <<pre>> -> <<M(sb)[sb|false]>> [serial 1803] 
Theorem (526) [serial 1807] used for:
  applied port output <<pre and (not ( SB()
  and not EB() ))@now>> -> <<post>> [serial 1803] 


Theorem (528)                               [serial 1849] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and v < iSeg.v_e >>
S [182] ->
Q [86] << v < iSeg.v_e >>
Why created:  Transitivity: x<y and y<z -> x<z  [serial 1847]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (529)                               [serial 1847] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [86] << v < iSeg.v_e >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1839]
Solved by:  Transitivity: x<y and y<z -> x<z
and theorem 528:
Theorem (528) [serial 1849] used for:
  Transitivity: x<y and y<z -> x<z  [serial 1847] 


Theorem (530)                               [serial 1848] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [86] << v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1839]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (531)                               [serial 1839] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [182] << v < iSeg.v_e
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
Why created:    normalization of [serial 1835]
Solved by:  Guided Substitution of Equals
  Guided Substitution of Equals
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 529 530:
Theorem (529) [serial 1847] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1839] 
Theorem (530) [serial 1848] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1839] 


Theorem (532)                               [serial 1835] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [182] << ( not ( not ( v < iSeg.v_e ) )
  and not ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) ) >>
Why created:  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1830]
Solved by:  Complement
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 531:
Theorem (531) [serial 1839] used for:
    normalization of [serial 1835] 


Theorem (533)                               [serial 1830] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [182] << not ( not ( v < iSeg.v_e )
   or not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) >>
Why created:    normalization of [serial 1827]
Solved by:  DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 532:
Theorem (532) [serial 1835] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B)  [serial 1830] 


Theorem (534)                               [serial 1827] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [182] << not ( ( not ( v < iSeg.v_e ) )
   or ( not ( v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) ) ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1822]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 533:
Theorem (533) [serial 1830] used for:
    normalization of [serial 1827] 


Theorem (535)                               [serial 1822] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and b = CTCS_Property::SB_Rate mpss
  and e = CTCS_Property::EB_Rate mpss
  and nSeg = [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;]
  and iSeg.v_n < iSeg.v_e
  and nSeg.v_n < nSeg.v_e
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [182] << not ( iSeg.v_e <= v
   or e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e <= v*v ) >>
Why created:    normalization of [serial 1819]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 534:
Theorem (534) [serial 1827] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1822] 


Theorem (536)                               [serial 1819] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = ( [segment: v_n->0 mps; v_e->0 mps; e->CMA.ea;] )
  and ( b = CTCS_Property::SB_Rate mpss )
  and ( e = CTCS_Property::EB_Rate mpss )
  and ( iSeg.v_n < iSeg.v_e )
  and ( nSeg.v_n < nSeg.v_e )
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [182] << not ( v >= iSeg.v_e
   or v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
Why created:  Substituted assertions' predicates for labels  [serial 1808]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 535:
Theorem (535) [serial 1822] used for:
    normalization of [serial 1819] 


Theorem (537)                               [serial 1808] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ->
Q [182] << not EB() >>
Why created:  applied port output of value <<pre>> -> <<M(eb)[eb|false]>> [serial 1804]
Solved by:  Substitution of Assertion Labels
and theorem 536:
Theorem (536) [serial 1819] used for:
  Substituted assertions' predicates for labels  [serial 1808] 


Theorem (538)                               [serial 1812] 
P [182] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and ( not EB() )@now >>
S [182] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1809]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (539)                               [serial 1809] 
P [182] << ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
  and ( not EB() )@now >>
S [182] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  applied port output <<pre and (not EB())@now>> -> <<post>> [serial 1804]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 538:
Theorem (538) [serial 1812] used for:
  Associativity: (b.c).a = a.b.c [serial 1809] 


Theorem (540)                               [serial 1804] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] eb!(false)
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  <<P>> S2 <<Q>> in concurrent composition for [serial 1582]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 537 539:
Theorem (537) [serial 1808] used for:
  applied port output of value <<pre>> -> <<M(eb)[eb|false]>> [serial 1804] 
Theorem (539) [serial 1809] used for:
  applied port output <<pre and (not EB())@now>> -> <<post>> [serial 1804] 


Theorem (541)                               [serial 1813] 
P [182] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e
  and ( ca = xl )@now >>
S [182] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1810]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (542)                               [serial 1810] 
P [182] << ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e )
  and ( ca = xl )@now >>
S [182] ->
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  applied port output <<pre and (ca=xl)@now>> -> <<post>> [serial 1805]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 541:
Theorem (541) [serial 1813] used for:
  Associativity: (b.c).a = a.b.c [serial 1810] 


Theorem (543)                               [serial 1805] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182] ca!(xl)
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  <<P>> S3 <<Q>> in concurrent composition for [serial 1582]
Solved by:  Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorem 542:
Theorem (542) [serial 1810] used for:
  applied port output <<pre and (ca=xl)@now>> -> <<post>> [serial 1805] 


Theorem (544)                               [serial 1582] 
P [163] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg)
  and v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e >>
S [182]   sb!(false)
  &
  eb!(false)
  &
  ca!(xl) 
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1569]
Solved by:  Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>>
and theorems 527 540 543:
Theorem (527) [serial 1803] used for:
  <<P>> S1 <<Q>> in concurrent composition for [serial 1582] 
Theorem (540) [serial 1804] used for:
  <<P>> S2 <<Q>> in concurrent composition for [serial 1582] 
Theorem (543) [serial 1805] used for:
  <<P>> S3 <<Q>> in concurrent composition for [serial 1582] 


Theorem (545)                               [serial 1569] 
P [163] << ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v < iSeg.v_n
  and v*v < b*( iSeg.e - p )*2 + nSeg.v_n*nSeg.v_n
  and v*v < e*( iSeg.e - p )*2 + nSeg.v_e*nSeg.v_e ) >>
S [182]   sb!(false)
  &
  eb!(false)
  &
  ca!(xl) 
Q [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT() >>
Why created:    normalization of [serial 1555]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 544:
Theorem (544) [serial 1582] used for:
  Associativity: (b.c).a = a.b.c [serial 1569] 


Theorem (546)                               [serial 1555] 
P [163] << ( i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v < iSeg.v_n
  and v*v < nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p )
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [182]   sb!(false)
  &
  eb!(false)
  &
  ca!(xl) 
Q [65] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA >>
Why created:  <<P>> T <<Q>> in existential lattice quantification for [serial 1550]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Multiplication: a*b=b*a
  Reflexivity of Equality: (a=b) = (b=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 545:
Theorem (545) [serial 1569] used for:
    normalization of [serial 1555] 


Theorem (547)                               [serial 1550] 
P [163] << ( i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) )
  and ( v < iSeg.v_n
  and v*v < nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p )
  and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ) ) >>
S [182]   {
    sb!(false)
    &
    eb!(false)
    &
    ca!(xl) 
  } 
Q [65] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA >>
Why created:    <<P and B4>> S4 <<Q>> in alternative for [serial 1544]
Solved by:  Introduction of Existential Quantification
and theorem 546:
Theorem (546) [serial 1555] used for:
  <<P>> T <<Q>> in existential lattice quantification for [serial 1550] 


Theorem (548)                               [serial 1544] 
P [160] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
S [163]   if 
    (v >= iSeg.v_e)~> 
        {
          eb!(true)
          &
          sb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ))~> 
        {
          eb!(true)
          &
          sb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v >= iSeg.v_n
    and v < iSeg.v_e
    and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ))~> 
        {
          sb!(true)
          &
          eb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
    and v < iSeg.v_e
    and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ))~> 
        {
          sb!(true)
          &
          eb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v < iSeg.v_n
    and v*v < nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p )
    and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ))~> 
        {
          sb!(false)
          &
          eb!(false)
          &
          ca!(xl) 
        }  
  fi
Q [65] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA >>
Why created:  as <<pre>> S <<Q>> in <<P>> { <<pre>> S  } <<Q>> [serial 1023]
Solved by:  Alternative Rule:
 <<P>> -> <<B1 or B2 or ... or Bn>>,
 <<P and B1>> -> <<P1>>, <<P and B2>> -> <<P2>>, . . . , <<P and Bn>> -> <<Pn>>,
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>,
 <<Q1>> -> <<Q>>, <<Q2>> -> <<Q>>, . . . <<Qn>> -> <<Q>>
 -------------------------------------------------------------------------
 <<P>> if B1-><<P1>>S1<<Q1>> [] B2-><<P2>>S2<<Q2>> [] . . . [] Bn-><<Pn>>Sn<<Qn>> fi <<Q>>
and theorems 377 405 438 476 514 547:
Theorem (377) [serial 1545] used for:
    <<P>> -> <<B1 or B2 or ... or Bn>> in alternative for [serial 1544] 
Theorem (405) [serial 1546] used for:
    <<P and B0>> S0 <<Q>> in alternative for [serial 1544] 
Theorem (438) [serial 1547] used for:
    <<P and B1>> S1 <<Q>> in alternative for [serial 1544] 
Theorem (476) [serial 1548] used for:
    <<P and B2>> S2 <<Q>> in alternative for [serial 1544] 
Theorem (514) [serial 1549] used for:
    <<P and B3>> S3 <<Q>> in alternative for [serial 1544] 
Theorem (547) [serial 1550] used for:
    <<P and B4>> S4 <<Q>> in alternative for [serial 1544] 


Theorem (549)                               [serial 1023] 
P [159] << ( i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA )
  and ( p@now )
  and not ( exists u ~ time
  in tops ,, now 
  that p@u  ) >>
S [160] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA
  and AXIOM_B()
  and AXIOM_E()
  and AXIOM_V(seg : iSeg)
  and AXIOM_V(seg : nSeg) >>
  if 
    (v >= iSeg.v_e)~> 
        {
          eb!(true)
          &
          sb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v*v >= nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ))~> 
        {
          eb!(true)
          &
          sb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v >= iSeg.v_n
    and v < iSeg.v_e
    and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ))~> 
        {
          sb!(true)
          &
          eb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p )
    and v < iSeg.v_e
    and v*v >= nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p ))~> 
        {
          sb!(true)
          &
          eb!(false)
          &
          ca!(0 mpss) 
        }  
  []
    (v < iSeg.v_n
    and v*v < nSeg.v_n*nSeg.v_n + 2*b*( iSeg.e - p )
    and v*v < nSeg.v_e*nSeg.v_e + 2*e*( iSeg.e - p ))~> 
        {
          sb!(false)
          &
          eb!(false)
          &
          ca!(xl) 
        }  
  fi
Q [65] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA >>
Why created:   <<M(MoveForwardLastSegment) and x>> A <<M(CheckMoveForwardLastSegment)>> for LastSegmentMoveForwardLastSegment-[x]->CheckMoveForwardLastSegment{A};
Solved by:  Introduction of Existential Quantification
and theorems 365 548:
Theorem (365) [serial 1543] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1023] 
Theorem (548) [serial 1544] used for:
  as <<pre>> S <<Q>> in <<P>> { <<pre>> S  } <<Q>> [serial 1023] 


Theorem (550)                               [serial 1024] 
P [65] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA
  and ( not m_a'fresh ) >>
S [186] ->
Q [63] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA >>
Why created:   <<M(CheckMoveForwardLastSegment) and x>> -> <<M(MoveForwardLastSegment)>> for NoMAYetCheckMoveForwardLastSegment-[x]->MoveForwardLastSegment{};
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (551)                               [serial 1867] 
P [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and m_a'fresh >>
S [65] ->
Q [191] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg >>
Why created:  Law of And-Simplification:  P and true is P [serial 1866]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (552)                               [serial 1866] 
P [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and m_a'fresh >>
S [65] ->
Q [191] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and true >>
Why created:   add user-defined axioms to postcondition
Solved by:  Law of And-Simplification:  P and true is P
and theorem 551:
Theorem (551) [serial 1867] used for:
  Law of And-Simplification:  P and true is P [serial 1866] 


Theorem (553)                               [serial 1867] 
P [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and m_a'fresh >>
S [65] ->
Q [191] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg >>
Why created:  Law of And-Simplification:  P and true is P [serial 1866]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (554)                               [serial 1866] 
P [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and m_a'fresh >>
S [65] ->
Q [191] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and true >>
Why created:   add user-defined axioms to postcondition
Solved by:  Law of And-Simplification:  P and true is P
and theorem 553:
Theorem (553) [serial 1867] used for:
  Law of And-Simplification:  P and true is P [serial 1866] 


Theorem (555)                               [serial 1855] 
P [65] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and nSeg = NULL_SEGMENT()
  and m_a'fresh >>
S [65] ->
Q [191] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and AXIOM_NEXT_MA_IS_RMA() >>
Why created:    normalization of [serial 1850]
Solved by:  Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 554 554:
Theorem (554) [serial 1866] used for:
   add user-defined axioms to postcondition 
Theorem (554) [serial 1866] used for:
   add user-defined axioms to postcondition 


Theorem (556)                               [serial 1850] 
P [65] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA
  and ( m_a'fresh ) >>
S [65] ->
Q [191] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and ma = CMA
  and AXIOM_NEXT_MA_IS_RMA() >>
Why created:  <<P>> -> <<P1>> in sequential composition for [serial 1025]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 555:
Theorem (555) [serial 1855] used for:
    normalization of [serial 1850] 


Theorem (557)                               [serial 1868] 
P [197] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma
  and NEXT_MA.seg[1] = nSeg >>
S [67] ->
Q [67] << CMA = ma >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1857]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (558)                               [serial 1869] 
P [197] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma
  and NEXT_MA.seg[1] = nSeg >>
S [67] ->
Q [67] << CMA.num_segments = i >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1857]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (559)                               [serial 1873] 
P [197] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma
  and NEXT_MA.seg[1] = nSeg >>
S [67] ->
Q [67] << CMA.seg[CMA.num_segments] = iSeg >>
Why created:  Guided Substitution of Equals 
 replacing "i" with its = "
^{CMA 
 ^{. num_segments}}" in its postcondition [serial 1870]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (560)                               [serial 1870] 
P [197] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma
  and NEXT_MA.seg[1] = nSeg >>
S [67] ->
Q [67] << CMA.seg[i] = iSeg >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1857]
Solved by:  Guided Substitution of Equals
and theorem 559:
Theorem (559) [serial 1873] used for:
  Guided Substitution of Equals 
 replacing "i" with its = "
^{CMA 
 ^{. num_segments}}" in its postcondition [serial 1870] 


Theorem (561)                               [serial 1871] 
P [197] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma
  and NEXT_MA.seg[1] = nSeg >>
S [67] ->
Q [68] << NEXT_MA = next_ma >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1857]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (562)                               [serial 1872] 
P [197] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma
  and NEXT_MA.seg[1] = nSeg >>
S [67] ->
Q [67] << NEXT_MA.seg[1] = nSeg >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1857]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (563)                               [serial 1857] 
P [197] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma
  and NEXT_MA.seg[1] = nSeg >>
S [67] ->
Q [67] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and NEXT_MA = next_ma
  and NEXT_MA.seg[1] = nSeg >>
Why created:    normalization of [serial 1851]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 557 558 560 561 562:
Theorem (557) [serial 1868] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1857] 
Theorem (558) [serial 1869] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1857] 
Theorem (560) [serial 1870] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1857] 
Theorem (561) [serial 1871] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1857] 
Theorem (562) [serial 1872] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1857] 


Theorem (564)                               [serial 1851] 
P [197] << i = CMA.num_segments
  and next_ma = NEXT_MA
  and iSeg = CMA.seg[CMA.num_segments]
  and ma = CMA
  and nSeg = NEXT_MA.seg[1] >>
S [67] ->
Q [67] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NEXT_MA.seg[1]
  and ma = CMA
  and next_ma = NEXT_MA >>
Why created:  <<Q1>> -> <<Q>> in sequential composition for [serial 1025]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 563:
Theorem (563) [serial 1857] used for:
    normalization of [serial 1851] 


Theorem (565)                               [serial 1882] 
P [193] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and AXIOM_NEXT_MA_IS_RMA()
  and RMA = next_ma >>
S [193] ->
Q [195] << CMA = ma >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1878]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (566)                               [serial 1878] 
P [193] << RMA = next_ma
  and ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and AXIOM_NEXT_MA_IS_RMA() ) >>
S [193] ->
Q [195] << CMA = ma >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1876]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 565:
Theorem (565) [serial 1882] used for:
  Associativity: (b.c).a = a.b.c [serial 1878] 


Theorem (567)                               [serial 1883] 
P [193] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and AXIOM_NEXT_MA_IS_RMA()
  and RMA = next_ma >>
S [193] ->
Q [194] << CMA.num_segments = i >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1879]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (568)                               [serial 1879] 
P [193] << RMA = next_ma
  and ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and AXIOM_NEXT_MA_IS_RMA() ) >>
S [193] ->
Q [194] << CMA.num_segments = i >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1876]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 567:
Theorem (567) [serial 1883] used for:
  Associativity: (b.c).a = a.b.c [serial 1879] 


Theorem (569)                               [serial 1895] 
P [193] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and NEXT_MA = RMA
  and RMA = next_ma >>
S [193] ->
Q [195] << CMA.seg[i] = iSeg >>
Why created:  Guided Substitution of Equals Guided Substitution of Equals 
 replacing "
^{CMA 
 ^{. num_segments}}" with its = "i" in its postcondition [serial 1889]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (570)                               [serial 1889] 
P [193] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and NEXT_MA = RMA
  and RMA = next_ma >>
S [193] ->
Q [195] << CMA.seg[CMA.num_segments] = iSeg >>
Why created:    normalization of [serial 1886]
Solved by:  Guided Substitution of Equals
  Guided Substitution of Equals
and theorem 569:
Theorem (569) [serial 1895] used for:
  Guided Substitution of Equals Guided Substitution of Equals 
 replacing "
^{CMA 
 ^{. num_segments}}" with its = "i" in its postcondition [serial 1889] 


Theorem (571)                               [serial 1886] 
P [193] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and ( NEXT_MA = RMA )
  and RMA = next_ma >>
S [193] ->
Q [195] << CMA.seg[CMA.num_segments] = iSeg >>
Why created:  Substituted assertions' predicates for labels in preconditions [serial 1884]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 570:
Theorem (570) [serial 1889] used for:
    normalization of [serial 1886] 


Theorem (572)                               [serial 1884] 
P [193] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and AXIOM_NEXT_MA_IS_RMA()
  and RMA = next_ma >>
S [193] ->
Q [195] << CMA.seg[CMA.num_segments] = iSeg >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1880]
Solved by:  Substitution of Assertion Labels
and theorem 571:
Theorem (571) [serial 1886] used for:
  Substituted assertions' predicates for labels in preconditions [serial 1884] 


Theorem (573)                               [serial 1880] 
P [193] << RMA = next_ma
  and ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and AXIOM_NEXT_MA_IS_RMA() ) >>
S [193] ->
Q [195] << CMA.seg[CMA.num_segments] = iSeg >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1876]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 572:
Theorem (572) [serial 1884] used for:
  Associativity: (b.c).a = a.b.c [serial 1880] 


Theorem (574)                               [serial 1894] 
P [193] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and NEXT_MA = RMA
  and RMA = next_ma >>
S [193] ->
Q [194] << RMA = next_ma >>
Why created:  Guided Substitution of Equals 
 replacing "NEXT_MA" with its = "RMA" in its postcondition [serial 1891]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (575)                               [serial 1891] 
P [193] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and NEXT_MA = RMA
  and RMA = next_ma >>
S [193] ->
Q [194] << NEXT_MA = next_ma >>
Why created:    normalization of [serial 1887]
Solved by:  Guided Substitution of Equals
and theorem 574:
Theorem (574) [serial 1894] used for:
  Guided Substitution of Equals 
 replacing "NEXT_MA" with its = "RMA" in its postcondition [serial 1891] 


Theorem (576)                               [serial 1887] 
P [193] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and ( NEXT_MA = RMA )
  and RMA = next_ma >>
S [193] ->
Q [194] << NEXT_MA = next_ma >>
Why created:  Substituted assertions' predicates for labels in preconditions [serial 1885]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 575:
Theorem (575) [serial 1891] used for:
    normalization of [serial 1887] 


Theorem (577)                               [serial 1885] 
P [193] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and AXIOM_NEXT_MA_IS_RMA()
  and RMA = next_ma >>
S [193] ->
Q [194] << NEXT_MA = next_ma >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1881]
Solved by:  Substitution of Assertion Labels
and theorem 576:
Theorem (576) [serial 1887] used for:
  Substituted assertions' predicates for labels in preconditions [serial 1885] 


Theorem (578)                               [serial 1881] 
P [193] << RMA = next_ma
  and ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and AXIOM_NEXT_MA_IS_RMA() ) >>
S [193] ->
Q [194] << NEXT_MA = next_ma >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1876]
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 577:
Theorem (577) [serial 1885] used for:
  Associativity: (b.c).a = a.b.c [serial 1881] 


Theorem (579)                               [serial 1876] 
P [193] << RMA = next_ma
  and ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and AXIOM_NEXT_MA_IS_RMA() ) >>
S [193] ->
Q [194] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma >>
Why created:    normalization of [serial 1874]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 566 568 573 578:
Theorem (566) [serial 1878] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1876] 
Theorem (568) [serial 1879] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1876] 
Theorem (573) [serial 1880] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1876] 
Theorem (578) [serial 1881] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1876] 


Theorem (580)                               [serial 1874] 
P [193] << ( CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and AXIOM_NEXT_MA_IS_RMA() )
  and next_ma = RMA >>
S [193] ->
Q [194] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma >>
Why created:  applied port input of value <<pre and next_ma=M(m_a)>> -> <<post>> [serial 1859]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 579:
Theorem (579) [serial 1876] used for:
    normalization of [serial 1874] 


Theorem (581)                               [serial 1859] 
P [191] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and AXIOM_NEXT_MA_IS_RMA() >>
S [193] m_a?(next_ma)
Q [194] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma >>
Why created:    normalization of [serial 1852]
Solved by:  Port Data Input: when <<A and v=M(p)>> -> <<B>> then <<A>> p?(v) <<B>>
and theorem 580:
Theorem (580) [serial 1874] used for:
  applied port input of value <<pre and next_ma=M(m_a)>> -> <<post>> [serial 1859] 


Theorem (582)                               [serial 1852] 
P [191] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and ma = CMA
  and AXIOM_NEXT_MA_IS_RMA() >>
S [193] m_a?(next_ma)
Q [194] << i = CMA.num_segments
  and next_ma = NEXT_MA
  and iSeg = CMA.seg[CMA.num_segments]
  and ma = CMA >>
Why created:  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1025]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 581:
Theorem (581) [serial 1859] used for:
    normalization of [serial 1852] 


Theorem (583)                               [serial 1897] 
P [194] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma >>
S [196] ->
Q [198] << CMA = ma >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1896]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (584)                               [serial 1898] 
P [194] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma >>
S [196] ->
Q [197] << CMA.num_segments = i >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1896]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (585)                               [serial 1899] 
P [194] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma >>
S [196] ->
Q [198] << CMA.seg[CMA.num_segments] = iSeg >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1896]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (586)                               [serial 1900] 
P [194] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma >>
S [196] ->
Q [197] << NEXT_MA = next_ma >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1896]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (587)                               [serial 1903] 
P [194] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma >>
S [196] ->
Q [199] << true >>
Why created:  Equality Law (idistr):  a=a <-> true [serial 1902]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (588)                               [serial 1902] 
P [194] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma >>
S [196] ->
Q [199] << next_ma.seg[1] = next_ma.seg[1] >>
Why created:  Guided Substitution of Equals 
 replacing "NEXT_MA" with its = "next_ma" in its postcondition [serial 1901]
Solved by:  Equality Law (idistr):  a=a <-> true
and theorem 587:
Theorem (587) [serial 1903] used for:
  Equality Law (idistr):  a=a <-> true [serial 1902] 


Theorem (589)                               [serial 1901] 
P [194] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma >>
S [196] ->
Q [199] << NEXT_MA.seg[1] = next_ma.seg[1] >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1896]
Solved by:  Guided Substitution of Equals
and theorem 588:
Theorem (588) [serial 1902] used for:
  Guided Substitution of Equals 
 replacing "NEXT_MA" with its = "next_ma" in its postcondition [serial 1901] 


Theorem (590)                               [serial 1896] 
P [194] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma >>
S [196] ->
Q [197] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma
  and NEXT_MA.seg[1] = next_ma.seg[1] >>
Why created:  applied wp for assignment [serial 1861]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 583 584 585 586 589:
Theorem (583) [serial 1897] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1896] 
Theorem (584) [serial 1898] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1896] 
Theorem (585) [serial 1899] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1896] 
Theorem (586) [serial 1900] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1896] 
Theorem (589) [serial 1901] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1896] 


Theorem (591)                               [serial 1861] 
P [194] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma >>
S [196] nSeg := next_ma.seg[1]
Q [197] << CMA = ma
  and CMA.num_segments = i
  and CMA.seg[CMA.num_segments] = iSeg
  and NEXT_MA = next_ma
  and NEXT_MA.seg[1] = nSeg >>
Why created:    normalization of [serial 1853]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 590:
Theorem (590) [serial 1896] used for:
  applied wp for assignment [serial 1861] 


Theorem (592)                               [serial 1853] 
P [194] << i = CMA.num_segments
  and next_ma = NEXT_MA
  and iSeg = CMA.seg[CMA.num_segments]
  and ma = CMA >>
S [196] nSeg := next_ma.seg[1]
Q [197] << i = CMA.num_segments
  and next_ma = NEXT_MA
  and iSeg = CMA.seg[CMA.num_segments]
  and ma = CMA
  and nSeg = NEXT_MA.seg[1] >>
Why created:  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1025]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 591:
Theorem (591) [serial 1861] used for:
    normalization of [serial 1853] 


Theorem (593)                               [serial 1025] 
P [65] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NULL_SEGMENT()
  and ma = CMA
  and ( m_a'fresh ) >>
S [191]   << i = CMA.num_segments
    and iSeg = CMA.seg[i]
    and ma = CMA
    and AXIOM_NEXT_MA_IS_RMA() >>
  m_a?(next_ma)
  ;
  << i = CMA.num_segments
    and next_ma = NEXT_MA
    and iSeg = CMA.seg[CMA.num_segments]
    and ma = CMA >>
  nSeg := next_ma.seg[1]
  << i = CMA.num_segments
    and next_ma = NEXT_MA
    and iSeg = CMA.seg[CMA.num_segments]
    and ma = CMA
    and nSeg = NEXT_MA.seg[1] >> 
Q [67] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NEXT_MA.seg[1]
  and ma = CMA
  and next_ma = NEXT_MA >>
Why created:   <<M(CheckMoveForwardLastSegment) and x>> A <<M(GotNewMA)>> for GetNewMACheckMoveForwardLastSegment-[x]->GotNewMA{A};
Solved by:  Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>>
and theorems 556 564 582 592:
Theorem (556) [serial 1850] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 1025] 
Theorem (564) [serial 1851] used for:
  <<Q1>> -> <<Q>> in sequential composition for [serial 1025] 
Theorem (582) [serial 1852] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1025] 
Theorem (592) [serial 1853] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1025] 


Theorem (594)                               [serial 1904] 
P [203] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NEXT_MA.seg[1]
  and ma = CMA
  and next_ma = NEXT_MA
  and ( p@now )
  and not ( exists u ~ time
  in tops ,, now 
  that p@u  ) >>
S [202] ->
Q [70] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NEXT_MA.seg[1]
  and ma = CMA
  and next_ma = NEXT_MA >>
Why created:  Associativity: (b.c).a = a.b.c [serial 1026]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (595)                               [serial 1026] 
P [203] << ( i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NEXT_MA.seg[1]
  and ma = CMA
  and next_ma = NEXT_MA )
  and ( p@now )
  and not ( exists u ~ time
  in tops ,, now 
  that p@u  ) >>
S [202] ->
Q [70] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NEXT_MA.seg[1]
  and ma = CMA
  and next_ma = NEXT_MA >>
Why created:   <<M(GotNewMA) and x>> -> <<M(CheckMATransition)>> for LastBitOfMaGotNewMA-[x]->CheckMATransition{};
Solved by:  Associativity: (b.c).a = a.b.c
and theorem 594:
Theorem (594) [serial 1904] used for:
  Associativity: (b.c).a = a.b.c [serial 1026] 


Theorem (596)                               [serial 1027] 
P [70] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NEXT_MA.seg[1]
  and ma = CMA
  and next_ma = NEXT_MA
  and ( p < ma.ea ) >>
S [205] ->
Q [67] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NEXT_MA.seg[1]
  and ma = CMA
  and next_ma = NEXT_MA >>
Why created:   <<M(CheckMATransition) and x>> -> <<M(GotNewMA)>> for NotEndOfMACheckMATransition-[x]->GotNewMA{};
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (597)                               [serial 1914] 
P [70] << ma.ea <= p
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and NEXT_MA = next_ma
  and NEXT_MA.seg[1] = nSeg >>
S [70] ->
Q [210] << NEXT_MA = next_ma >>
Why created:    normalization of [serial 1912]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (598)                               [serial 1912] 
P [70] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NEXT_MA.seg[1]
  and ma = CMA
  and next_ma = NEXT_MA
  and ( p >= ma.ea ) >>
S [70] ->
Q [210] << ( next_ma = NEXT_MA ) >>
Why created:  Law of And-Simplification:  P and true is P [serial 1911]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 597:
Theorem (597) [serial 1914] used for:
    normalization of [serial 1912] 


Theorem (599)                               [serial 1911] 
P [70] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NEXT_MA.seg[1]
  and ma = CMA
  and next_ma = NEXT_MA
  and ( p >= ma.ea ) >>
S [70] ->
Q [210] << true
  and next_ma = NEXT_MA >>
Why created:   add user-defined axioms to postcondition
Solved by:  Law of And-Simplification:  P and true is P
and theorem 598:
Theorem (598) [serial 1912] used for:
  Law of And-Simplification:  P and true is P [serial 1911] 


Theorem (600)                               [serial 1914] 
P [70] << ma.ea <= p
  and CMA = ma
  and CMA.num_segments = i
  and CMA.seg[i] = iSeg
  and NEXT_MA = next_ma
  and NEXT_MA.seg[1] = nSeg >>
S [70] ->
Q [210] << NEXT_MA = next_ma >>
Why created:    normalization of [serial 1912]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (601)                               [serial 1912] 
P [70] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NEXT_MA.seg[1]
  and ma = CMA
  and next_ma = NEXT_MA
  and ( p >= ma.ea ) >>
S [70] ->
Q [210] << ( next_ma = NEXT_MA ) >>
Why created:  Law of And-Simplification:  P and true is P [serial 1911]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 600:
Theorem (600) [serial 1914] used for:
    normalization of [serial 1912] 


Theorem (602)                               [serial 1911] 
P [70] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NEXT_MA.seg[1]
  and ma = CMA
  and next_ma = NEXT_MA
  and ( p >= ma.ea ) >>
S [70] ->
Q [210] << true
  and next_ma = NEXT_MA >>
Why created:   add user-defined axioms to postcondition
Solved by:  Law of And-Simplification:  P and true is P
and theorem 601:
Theorem (601) [serial 1912] used for:
  Law of And-Simplification:  P and true is P [serial 1911] 


Theorem (603)                               [serial 1905] 
P [70] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NEXT_MA.seg[1]
  and ma = CMA
  and next_ma = NEXT_MA
  and ( p >= ma.ea ) >>
S [70] ->
Q [210] << AXIOM_CMA_IS_NEXT_MA()
  and next_ma = NEXT_MA >>
Why created:  <<P>> -> <<P1>> in sequential composition for [serial 1028]
Solved by:  Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 602 602:
Theorem (602) [serial 1911] used for:
   add user-defined axioms to postcondition 
Theorem (602) [serial 1911] used for:
   add user-defined axioms to postcondition 


Theorem (604)                               [serial 1920] 
P [218] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and 1 < ma.num_segments >>
S [57] ->
Q [57] << CMA = ma >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1918]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (605)                               [serial 1921] 
P [218] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and 1 < ma.num_segments >>
S [57] ->
Q [57] << CMA.seg[i] = iSeg >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1918]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (606)                               [serial 1922] 
P [218] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and 1 < ma.num_segments >>
S [57] ->
Q [57] << CMA.seg[1 + i] = nSeg >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1918]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (607)                               [serial 1927] 
P [218] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and 1 < ma.num_segments >>
S [57] ->
Q [57] << 1 < ma.num_segments >>
Why created:    normalization of [serial 1925]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (608)                               [serial 1925] 
P [218] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and 1 < ma.num_segments >>
S [57] ->
Q [57] << ( 1 ) < ma.num_segments >>
Why created:  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1924]
Solved by:  Reflexivity of Addition: a+b=b+a
  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 607:
Theorem (607) [serial 1927] used for:
    normalization of [serial 1925] 


Theorem (609)                               [serial 1924] 
P [218] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and 1 < ma.num_segments >>
S [57] ->
Q [57] << ( 1 ) < CMA.num_segments >>
Why created:  Guided Substitution of Equals 
 replacing "i" with its = "( 1 )" in its postcondition [serial 1923]
Solved by:  Guided Substitution of Equals
and theorem 608:
Theorem (608) [serial 1925] used for:
  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1924] 


Theorem (610)                               [serial 1923] 
P [218] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and 1 < ma.num_segments >>
S [57] ->
Q [57] << i < CMA.num_segments >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1918]
Solved by:  Guided Substitution of Equals
and theorem 609:
Theorem (609) [serial 1924] used for:
  Guided Substitution of Equals 
 replacing "i" with its = "( 1 )" in its postcondition [serial 1923] 


Theorem (611)                               [serial 1918] 
P [218] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i = 1
  and 1 < ma.num_segments >>
S [57] ->
Q [57] << CMA = ma
  and CMA.seg[i] = iSeg
  and CMA.seg[1 + i] = nSeg
  and i < CMA.num_segments >>
Why created:    normalization of [serial 1916]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 604 605 606 610:
Theorem (604) [serial 1920] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1918] 
Theorem (605) [serial 1921] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1918] 
Theorem (606) [serial 1922] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1918] 
Theorem (610) [serial 1923] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1918] 


Theorem (612)                               [serial 1916] 
P [218] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ( 1 < ma.num_segments ) >>
S [57] ->
Q [57] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  Substituted assertions' predicates for labels in preconditions [serial 1906]
Solved by:  Reflexivity of Addition: a+b=b+a
  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 611:
Theorem (611) [serial 1918] used for:
    normalization of [serial 1916] 


Theorem (613)                               [serial 1906] 
P [218] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and AXIOM_NUM_SEG(ma : ma) >>
S [57] ->
Q [57] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:  <<Q3>> -> <<Q>> in sequential composition for [serial 1028]
Solved by:  Substitution of Assertion Labels
and theorem 612:
Theorem (612) [serial 1916] used for:
  Substituted assertions' predicates for labels in preconditions [serial 1906] 


Theorem (614)                               [serial 1934] 
P [210] << CMA = NEXT_MA
  and NEXT_MA = next_ma >>
S [211] ->
Q [212] << NEXT_MA = next_ma >>
Why created:  Guided Substitution of Equals 
 replacing "CMA" with its = "NEXT_MA" in its postcondition [serial 1932]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (615)                               [serial 1932] 
P [210] << CMA = NEXT_MA
  and NEXT_MA = next_ma >>
S [211] ->
Q [212] << CMA = next_ma >>
Why created:    normalization of [serial 1930]
Solved by:  Guided Substitution of Equals
and theorem 614:
Theorem (614) [serial 1934] used for:
  Guided Substitution of Equals 
 replacing "CMA" with its = "NEXT_MA" in its postcondition [serial 1932] 


Theorem (616)                               [serial 1930] 
P [210] << ( CMA = NEXT_MA )
  and next_ma = NEXT_MA >>
S [211] ->
Q [212] << next_ma = CMA >>
Why created:  Substituted assertions' predicates for labels in preconditions [serial 1929]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 615:
Theorem (615) [serial 1932] used for:
    normalization of [serial 1930] 


Theorem (617)                               [serial 1929] 
P [210] << AXIOM_CMA_IS_NEXT_MA()
  and next_ma = NEXT_MA >>
S [211] ->
Q [212] << next_ma = CMA >>
Why created:  applied wp for assignment [serial 1907]
Solved by:  Substitution of Assertion Labels
and theorem 616:
Theorem (616) [serial 1930] used for:
  Substituted assertions' predicates for labels in preconditions [serial 1929] 


Theorem (618)                               [serial 1907] 
P [210] << AXIOM_CMA_IS_NEXT_MA()
  and next_ma = NEXT_MA >>
S [211] ma := next_ma
Q [212] << ma = CMA >>
Why created:  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1028]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 617:
Theorem (617) [serial 1929] used for:
  applied wp for assignment [serial 1907] 


Theorem (619)                               [serial 1942] 
P [212] << CMA = ma >>
S [213] ->
Q [214] << CMA = ma >>
Why created:    normalization of [serial 1940]
Solved by:  Identity (id):  P->P is tautology


Theorem (620)                               [serial 1940] 
P [212] << CMA = ma >>
S [213] ->
Q [214] << ( CMA = ma ) >>
Why created:  Law of And-Simplification:  P and true is P [serial 1939]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 619:
Theorem (619) [serial 1942] used for:
    normalization of [serial 1940] 


Theorem (621)                               [serial 1939] 
P [212] << CMA = ma >>
S [213] ->
Q [214] << CMA = ma
  and true >>
Why created:  Equality Law (idistr):  a=a <-> true [serial 1937]
Solved by:  Law of And-Simplification:  P and true is P
and theorem 620:
Theorem (620) [serial 1940] used for:
  Law of And-Simplification:  P and true is P [serial 1939] 


Theorem (622)                               [serial 1937] 
P [212] << CMA = ma >>
S [213] ->
Q [214] << CMA = ma
  and 1 = 1 >>
Why created:    normalization of [serial 1935]
Solved by:  Equality Law (idistr):  a=a <-> true
and theorem 621:
Theorem (621) [serial 1939] used for:
  Equality Law (idistr):  a=a <-> true [serial 1937] 


Theorem (623)                               [serial 1935] 
P [212] << ma = CMA >>
S [213] ->
Q [214] << ( 1 ) = 1
  and ma = CMA >>
Why created:  applied wp for assignment [serial 1908]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 622:
Theorem (622) [serial 1937] used for:
    normalization of [serial 1935] 


Theorem (624)                               [serial 1908] 
P [212] << ma = CMA >>
S [213] i := 1
Q [214] << i = 1
  and ma = CMA >>
Why created:  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1028]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 623:
Theorem (623) [serial 1935] used for:
  applied wp for assignment [serial 1908] 


Theorem (625)                               [serial 1945] 
P [214] << i = 1
  and ma = CMA >>
S [215] ->
Q [216] << i = 1 >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1944]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (626)                               [serial 1946] 
P [214] << i = 1
  and ma = CMA >>
S [215] ->
Q [216] << ma = CMA >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1944]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (627)                               [serial 1953] 
P [214] << CMA = ma
  and i = 1 >>
S [215] ->
Q [216] << true >>
Why created:  Equality Law (idistr):  a=a <-> true [serial 1951]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (628)                               [serial 1951] 
P [214] << CMA = ma
  and i = 1 >>
S [215] ->
Q [216] << ma.seg[1] = ma.seg[1] >>
Why created:    normalization of [serial 1949]
Solved by:  Equality Law (idistr):  a=a <-> true
and theorem 627:
Theorem (627) [serial 1953] used for:
  Equality Law (idistr):  a=a <-> true [serial 1951] 


Theorem (629)                               [serial 1949] 
P [214] << i = 1
  and ma = CMA >>
S [215] ->
Q [216] << ma.seg[1] = ma.seg[( 1 )] >>
Why created:  Guided Substitution of Equals 
 replacing "i" with its = "( 1 )" in its postcondition [serial 1948]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 628:
Theorem (628) [serial 1951] used for:
    normalization of [serial 1949] 


Theorem (630)                               [serial 1948] 
P [214] << i = 1
  and ma = CMA >>
S [215] ->
Q [216] << ma.seg[1] = ma.seg[i] >>
Why created:  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1947]
Solved by:  Guided Substitution of Equals
and theorem 629:
Theorem (629) [serial 1949] used for:
  Guided Substitution of Equals 
 replacing "i" with its = "( 1 )" in its postcondition [serial 1948] 


Theorem (631)                               [serial 1947] 
P [214] << i = 1
  and ma = CMA >>
S [215] ->
Q [216] << ma.seg[1] = CMA.seg[i] >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1944]
Solved by:  Guided Substitution of Equals
and theorem 630:
Theorem (630) [serial 1948] used for:
  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1947] 


Theorem (632)                               [serial 1944] 
P [214] << i = 1
  and ma = CMA >>
S [215] ->
Q [216] << i = 1
  and ma = CMA
  and ma.seg[1] = CMA.seg[i] >>
Why created:  applied wp for assignment [serial 1909]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 625 626 631:
Theorem (625) [serial 1945] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1944] 
Theorem (626) [serial 1946] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1944] 
Theorem (631) [serial 1947] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1944] 


Theorem (633)                               [serial 1909] 
P [214] << i = 1
  and ma = CMA >>
S [215] iSeg := ma.seg[1]
Q [216] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
Why created:  <<Q1 and P2>> S2 <<Q2 and P3>> in sequential composition for [serial 1028]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 632:
Theorem (632) [serial 1944] used for:
  applied wp for assignment [serial 1909] 


Theorem (634)                               [serial 1957] 
P [216] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
S [217] ->
Q [218] << i = 1 >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1956]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (635)                               [serial 1958] 
P [216] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
S [217] ->
Q [218] << ma = CMA >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1956]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (636)                               [serial 1959] 
P [216] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
S [217] ->
Q [218] << iSeg = CMA.seg[i] >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1956]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (637)                               [serial 1966] 
P [216] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1 >>
S [217] ->
Q [218] << true >>
Why created:  Equality Law (idistr):  a=a <-> true [serial 1965]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (638)                               [serial 1965] 
P [216] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1 >>
S [217] ->
Q [218] << ma.seg[2] = ma.seg[2] >>
Why created:  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1963]
Solved by:  Equality Law (idistr):  a=a <-> true
and theorem 637:
Theorem (637) [serial 1966] used for:
  Equality Law (idistr):  a=a <-> true [serial 1965] 


Theorem (639)                               [serial 1963] 
P [216] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1 >>
S [217] ->
Q [218] << CMA.seg[2] = ma.seg[2] >>
Why created:    normalization of [serial 1961]
Solved by:  Guided Substitution of Equals
and theorem 638:
Theorem (638) [serial 1965] used for:
  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1963] 


Theorem (640)                               [serial 1961] 
P [216] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
S [217] ->
Q [218] << ma.seg[2] = CMA.seg[( 1 ) + 1] >>
Why created:  Guided Substitution of Equals 
 replacing "i" with its = "( 1 )" in its postcondition [serial 1960]
Solved by:  Literal Arithmetic
  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 639:
Theorem (639) [serial 1963] used for:
    normalization of [serial 1961] 


Theorem (641)                               [serial 1960] 
P [216] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
S [217] ->
Q [218] << ma.seg[2] = CMA.seg[i + 1] >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1956]
Solved by:  Guided Substitution of Equals
and theorem 640:
Theorem (640) [serial 1961] used for:
  Guided Substitution of Equals 
 replacing "i" with its = "( 1 )" in its postcondition [serial 1960] 


Theorem (642)                               [serial 1956] 
P [216] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
S [217] ->
Q [218] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and ma.seg[2] = CMA.seg[i + 1] >>
Why created:  applied wp for assignment [serial 1955]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 634 635 636 641:
Theorem (634) [serial 1957] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1956] 
Theorem (635) [serial 1958] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1956] 
Theorem (636) [serial 1959] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1956] 
Theorem (641) [serial 1960] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1956] 


Theorem (643)                               [serial 1955] 
P [216] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
S [217] nSeg := ma.seg[2]
Q [218] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1] >>
Why created:  Law of And-Simplification:  P and true is P [serial 1954]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 642:
Theorem (642) [serial 1956] used for:
  applied wp for assignment [serial 1955] 


Theorem (644)                               [serial 1954] 
P [216] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
S [217] nSeg := ma.seg[2]
Q [218] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and true >>
Why created:   add user-defined axioms to postcondition
Solved by:  Law of And-Simplification:  P and true is P
and theorem 643:
Theorem (643) [serial 1955] used for:
  Law of And-Simplification:  P and true is P [serial 1954] 


Theorem (645)                               [serial 1957] 
P [216] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
S [217] ->
Q [218] << i = 1 >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1956]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (646)                               [serial 1958] 
P [216] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
S [217] ->
Q [218] << ma = CMA >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1956]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (647)                               [serial 1959] 
P [216] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
S [217] ->
Q [218] << iSeg = CMA.seg[i] >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1956]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (648)                               [serial 1966] 
P [216] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1 >>
S [217] ->
Q [218] << true >>
Why created:  Equality Law (idistr):  a=a <-> true [serial 1965]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (649)                               [serial 1965] 
P [216] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1 >>
S [217] ->
Q [218] << ma.seg[2] = ma.seg[2] >>
Why created:  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1963]
Solved by:  Equality Law (idistr):  a=a <-> true
and theorem 648:
Theorem (648) [serial 1966] used for:
  Equality Law (idistr):  a=a <-> true [serial 1965] 


Theorem (650)                               [serial 1963] 
P [216] << CMA = ma
  and CMA.seg[i] = iSeg
  and i = 1 >>
S [217] ->
Q [218] << CMA.seg[2] = ma.seg[2] >>
Why created:    normalization of [serial 1961]
Solved by:  Guided Substitution of Equals
and theorem 649:
Theorem (649) [serial 1965] used for:
  Guided Substitution of Equals 
 replacing "CMA" with its = "ma" in its postcondition [serial 1963] 


Theorem (651)                               [serial 1961] 
P [216] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
S [217] ->
Q [218] << ma.seg[2] = CMA.seg[( 1 ) + 1] >>
Why created:  Guided Substitution of Equals 
 replacing "i" with its = "( 1 )" in its postcondition [serial 1960]
Solved by:  Literal Arithmetic
  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 650:
Theorem (650) [serial 1963] used for:
    normalization of [serial 1961] 


Theorem (652)                               [serial 1960] 
P [216] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
S [217] ->
Q [218] << ma.seg[2] = CMA.seg[i + 1] >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1956]
Solved by:  Guided Substitution of Equals
and theorem 651:
Theorem (651) [serial 1961] used for:
  Guided Substitution of Equals 
 replacing "i" with its = "( 1 )" in its postcondition [serial 1960] 


Theorem (653)                               [serial 1956] 
P [216] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
S [217] ->
Q [218] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and ma.seg[2] = CMA.seg[i + 1] >>
Why created:  applied wp for assignment [serial 1955]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 645 646 647 652:
Theorem (645) [serial 1957] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1956] 
Theorem (646) [serial 1958] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1956] 
Theorem (647) [serial 1959] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1956] 
Theorem (652) [serial 1960] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1956] 


Theorem (654)                               [serial 1955] 
P [216] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
S [217] nSeg := ma.seg[2]
Q [218] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1] >>
Why created:  Law of And-Simplification:  P and true is P [serial 1954]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 653:
Theorem (653) [serial 1956] used for:
  applied wp for assignment [serial 1955] 


Theorem (655)                               [serial 1954] 
P [216] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
S [217] nSeg := ma.seg[2]
Q [218] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and true >>
Why created:   add user-defined axioms to postcondition
Solved by:  Law of And-Simplification:  P and true is P
and theorem 654:
Theorem (654) [serial 1955] used for:
  Law of And-Simplification:  P and true is P [serial 1954] 


Theorem (656)                               [serial 1910] 
P [216] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i] >>
S [217] nSeg := ma.seg[2]
Q [218] << i = 1
  and ma = CMA
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and AXIOM_NUM_SEG(ma : ma) >>
Why created:  <<Q2 and P3>> S3 <<Q3>> in sequential composition for [serial 1028]
Solved by:  Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 655 655:
Theorem (655) [serial 1954] used for:
   add user-defined axioms to postcondition 
Theorem (655) [serial 1954] used for:
   add user-defined axioms to postcondition 


Theorem (657)                               [serial 1028] 
P [70] << i = CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = NEXT_MA.seg[1]
  and ma = CMA
  and next_ma = NEXT_MA
  and ( p >= ma.ea ) >>
S [210]   << AXIOM_CMA_IS_NEXT_MA()
    and next_ma = NEXT_MA >>
  ma := next_ma
  ;
  << ma = CMA >>
  i := 1
  ;
  << i = 1
    and ma = CMA >>
  iSeg := ma.seg[1]
  ;
  << i = 1
    and ma = CMA
    and iSeg = CMA.seg[i] >>
  nSeg := ma.seg[2]
  << i = 1
    and ma = CMA
    and iSeg = CMA.seg[i]
    and nSeg = CMA.seg[i + 1]
    and AXIOM_NUM_SEG(ma : ma) >> 
Q [57] << i < CMA.num_segments
  and iSeg = CMA.seg[i]
  and nSeg = CMA.seg[i + 1]
  and ma = CMA >>
Why created:   <<M(CheckMATransition) and x>> A <<M(MoveForward)>> for StartNextMaCheckMATransition-[x]->MoveForward{A};
Solved by:  Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>>
and theorems 603 613 618 624 633 656:
Theorem (603) [serial 1905] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 1028] 
Theorem (613) [serial 1906] used for:
  <<Q3>> -> <<Q>> in sequential composition for [serial 1028] 
Theorem (618) [serial 1907] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1028] 
Theorem (624) [serial 1908] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1028] 
Theorem (633) [serial 1909] used for:
  <<Q1 and P2>> S2 <<Q2 and P3>> in sequential composition for [serial 1028] 
Theorem (656) [serial 1910] used for:
  <<Q2 and P3>> S3 <<Q3>> in sequential composition for [serial 1028] 


Theorem (658)                               [serial 1002] 
P [33] <<   >>
S [39] ->
Q [33] << AutoBrake.i proof obligations >>
Why created:  Initial proof obligations for AutoBrake.i
Solved by:  Component verification conditions
and theorems 1 2 3 5 9 11 12 15 17 21 25 26 27 106 313 315 322 332 357 358 549 550 593 595 596 657:
Theorem (1) [serial 1003] used for:
  <<M(MoveForwardLastSegment)>> -> <<I>> from invariant I when complete state MoveForwardLastSegment has Assertion <<M(MoveForwardLastSegment)>> in its definition. 
Theorem (2) [serial 1004] used for:
  <<M(WaitFirstMA)>> -> <<I>> from invariant I when complete state WaitFirstMA has Assertion <<M(WaitFirstMA)>> in its definition. 
Theorem (3) [serial 1005] used for:
  <<M(MoveForward)>> -> <<I>> from invariant I when complete state MoveForward has Assertion <<M(MoveForward)>> in its definition. 
Theorem (5) [serial 1006] used for:
  <<M(GotNewMA)>> -> <<I>> from invariant I when complete state GotNewMA has Assertion <<M(GotNewMA)>> in its definition. 
Theorem (9) [serial 1007] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state CheckMoveForward, <<M(CheckMoveForward)>> -> <<e1 or e2 or . . . en>> 
Theorem (11) [serial 1008] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state CheckMoveForwardLastSegment, <<M(CheckMoveForwardLastSegment)>> -> <<e1 or e2 or . . . en>> 
Theorem (12) [serial 1009] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state Start, <<M(Start)>> -> <<e1 or e2 or . . . en>> 
Theorem (15) [serial 1010] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state CheckForLastSegment, <<M(CheckForLastSegment)>> -> <<e1 or e2 or . . . en>> 
Theorem (17) [serial 1011] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state CheckFirstMA, <<M(CheckFirstMA)>> -> <<e1 or e2 or . . . en>> 
Theorem (21) [serial 1012] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state CheckMATransition, <<M(CheckMATransition)>> -> <<e1 or e2 or . . . en>> 
Theorem (25) [serial 1013] used for:
   <<M(Start)>> A <<M(WaitFirstMA)>> for GoStart-[ ]->WaitFirstMA{A}; 
Theorem (26) [serial 1014] used for:
   <<M(WaitFirstMA) and x>> -> <<M(CheckFirstMA)>> for FirstMAWaitFirstMA-[x]->CheckFirstMA{}; 
Theorem (27) [serial 1015] used for:
   <<M(CheckFirstMA) and x>> -> <<M(WaitFirstMA)>> for NotYetCheckFirstMA-[x]->WaitFirstMA{}; 
Theorem (106) [serial 1016] used for:
   <<M(CheckFirstMA) and x>> A <<M(MoveForward)>> for GotFirstMACheckFirstMA-[x]->MoveForward{A}; 
Theorem (313) [serial 1017] used for:
   <<M(MoveForward) and x>> A <<M(CheckMoveForward)>> for CheckSpeedMoveForward-[x]->CheckMoveForward{A}; 
Theorem (315) [serial 1018] used for:
   <<M(CheckMoveForward) and x>> -> <<M(MoveForward)>> for SameSegmentCheckMoveForward-[x]->MoveForward{}; 
Theorem (322) [serial 1019] used for:
   <<M(CheckMoveForward) and x>> A <<M(CheckForLastSegment)>> for NextSegmentCheckMoveForward-[x]->CheckForLastSegment{A}; 
Theorem (332) [serial 1020] used for:
   <<M(CheckForLastSegment) and x>> A <<M(MoveForward)>> for NotLastSegmentCheckForLastSegment-[x]->MoveForward{A}; 
Theorem (357) [serial 1021] used for:
   <<M(CheckForLastSegment) and x>> A <<M(MoveForwardLastSegment)>> for IsLastSegmentCheckForLastSegment-[x]->MoveForwardLastSegment{A}; 
Theorem (358) [serial 1022] used for:
   <<M(CheckForLastSegment) and x>> -> <<M(FAIL)>> for PastLastSegmentCheckForLastSegment-[x]->FAIL{}; 
Theorem (549) [serial 1023] used for:
   <<M(MoveForwardLastSegment) and x>> A <<M(CheckMoveForwardLastSegment)>> for LastSegmentMoveForwardLastSegment-[x]->CheckMoveForwardLastSegment{A}; 
Theorem (550) [serial 1024] used for:
   <<M(CheckMoveForwardLastSegment) and x>> -> <<M(MoveForwardLastSegment)>> for NoMAYetCheckMoveForwardLastSegment-[x]->MoveForwardLastSegment{}; 
Theorem (593) [serial 1025] used for:
   <<M(CheckMoveForwardLastSegment) and x>> A <<M(GotNewMA)>> for GetNewMACheckMoveForwardLastSegment-[x]->GotNewMA{A}; 
Theorem (595) [serial 1026] used for:
   <<M(GotNewMA) and x>> -> <<M(CheckMATransition)>> for LastBitOfMaGotNewMA-[x]->CheckMATransition{}; 
Theorem (596) [serial 1027] used for:
   <<M(CheckMATransition) and x>> -> <<M(GotNewMA)>> for NotEndOfMACheckMATransition-[x]->GotNewMA{}; 
Theorem (657) [serial 1028] used for:
   <<M(CheckMATransition) and x>> A <<M(MoveForward)>> for StartNextMaCheckMATransition-[x]->MoveForward{A}; 


Theorem (659)                               [serial 1029] 
P [1] << xl = OPERATOR_XL >>
S [2] ->
Q [1] << xl = OPERATOR_XL >>
Why created:  Composition of Subcomponents via Directional Connection driver.xl -> motor.xl:
 xl -> xl
Solved by:  Identity (id):  P->P is tautology


Theorem (660)                               [serial 1030] 
P [1] << p = POSITION >>
S [2] ->
Q [1] << p = POSITION >>
Why created:  Composition of Subcomponents via Directional Connection sensor.p -> controller.control.p:
 p -> p
Solved by:  Identity (id):  P->P is tautology


Theorem (661)                               [serial 1031] 
P [1] << v = VELOCITY >>
S [2] ->
Q [1] << v = VELOCITY >>
Why created:  Composition of Subcomponents via Directional Connection sensor.v -> controller.control.v:
 v -> v
Solved by:  Identity (id):  P->P is tautology


Theorem (662)                               [serial 1032] 
P [1] << SB()
  and not EB() >>
S [2] ->
Q [1] << SB()
  and not EB() >>
Why created:  Composition of Subcomponents via Directional Connection controller.control.sb -> sbrake.brake:
 sb -> brake
Solved by:  Identity (id):  P->P is tautology


Theorem (663)                               [serial 1033] 
P [1] << EB() >>
S [2] ->
Q [1] << EB() >>
Why created:  Composition of Subcomponents via Directional Connection controller.control.eb -> ebrake.brake:
 eb -> brake
Solved by:  Identity (id):  P->P is tautology


Theorem (664)                               [serial 1034] 
P [1] << ma_m_a = RMA >>
S [2] ->
Q [1] << ma_m_a = RMA >>
Why created:  Composition of Subcomponents via Directional Connection rbc.ma -> train.controller.control.m_a:
 ma -> m_a
Solved by:  Identity (id):  P->P is tautology


Theorem (665)                               [serial 1035] 
P [27] << ma = RMA >>
S [19] ->
Q [14] << ma = RMA >>
Why created:  Composition of Subcomponents via Directional Connection CTCS::MovementAuthority.i.ma:
 ma -> ma
Solved by:  Identity (id):  P->P is tautology


Theorem (666)                               [serial 1036] 
P [14] << ma_m_a = RMA >>
S [73] ->
Q [94] << ma_m_a = RMA >>
Why created:  Composition of Subcomponents via Directional Connection Train::Train.i.auth:
 ma -> m_a
Solved by:  Identity (id):  P->P is tautology


Theorem (667)                               [serial 1037] 
P [32] << p = POSITION >>
S [74] ->
Q [89] << p = POSITION >>
Why created:  Composition of Subcomponents via Directional Connection Train::Train.i.pos:
 p -> p
Solved by:  Identity (id):  P->P is tautology


Theorem (668)                               [serial 1038] 
P [34] << v = VELOCITY >>
S [75] ->
Q [91] << v = VELOCITY >>
Why created:  Composition of Subcomponents via Directional Connection Train::Train.i.vel:
 v -> v
Solved by:  Identity (id):  P->P is tautology


Theorem (669)                               [serial 1039] 
P [59] << xl = OPERATOR_XL >>
S [76] ->
Q [23] << xl = OPERATOR_XL >>
Why created:  Composition of Subcomponents via Directional Connection Train::Train.i.dxl:
 xl -> xl
Solved by:  Identity (id):  P->P is tautology


Theorem (670)                               [serial 1040] 
P [85] << SB()
  and not EB() >>
S [77] ->
Q [44] << SB()
  and not EB() >>
Why created:  Composition of Subcomponents via Directional Connection Train::Train.i.cpsb:
 sb -> brake
Solved by:  Identity (id):  P->P is tautology


Theorem (671)                               [serial 1041] 
P [87] << EB() >>
S [78] ->
Q [51] << EB() >>
Why created:  Composition of Subcomponents via Directional Connection Train::Train.i.cpeb:
 eb -> brake
Solved by:  Identity (id):  P->P is tautology


Theorem (672)                               [serial 1042] 
P [89] << p = POSITION >>
S [103] ->
Q [19] << p = POSITION >>
Why created:  Composition of Subcomponents via Directional Connection Train::ControllerProcess.i.conn_s:
 p -> p
Solved by:  Identity (id):  P->P is tautology


Theorem (673)                               [serial 1043] 
P [91] << v = VELOCITY >>
S [104] ->
Q [21] << v = VELOCITY >>
Why created:  Composition of Subcomponents via Directional Connection Train::ControllerProcess.i.conn_v:
 v -> v
Solved by:  Identity (id):  P->P is tautology


Theorem (674)                               [serial 1044] 
P [94] << m_a = RMA >>
S [106] ->
Q [17] << m_a = RMA >>
Why created:  Composition of Subcomponents via Directional Connection Train::ControllerProcess.i.conn_ma:
 m_a -> m_a
Solved by:  Identity (id):  P->P is tautology


Theorem (675)                               [serial 1045] 
P [12] << SB()
  and not EB() >>
S [108] ->
Q [85] << SB()
  and not EB() >>
Why created:  Composition of Subcomponents via Directional Connection Train::ControllerProcess.i.conn_sb:
 sb -> sb
Solved by:  Identity (id):  P->P is tautology


Theorem (676)                               [serial 1046] 
P [14] << EB() >>
S [109] ->
Q [87] << EB() >>
Why created:  Composition of Subcomponents via Directional Connection Train::ControllerProcess.i.conn_eb:
 eb -> eb
Solved by:  Identity (id):  P->P is tautology


Theorem (677)                               [serial 1001] 
Why created:  All verification conditions have been proved correct. 
Solved by:  Component and Connection Proofs
and theorems 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676:
Theorem (658) [serial 1002] used for:
  Initial proof obligations for AutoBrake.i 
Theorem (659) [serial 1029] used for:
  Composition of Subcomponents via Directional Connection driver.xl -> motor.xl:
 xl -> xl 
Theorem (660) [serial 1030] used for:
  Composition of Subcomponents via Directional Connection sensor.p -> controller.control.p:
 p -> p 
Theorem (661) [serial 1031] used for:
  Composition of Subcomponents via Directional Connection sensor.v -> controller.control.v:
 v -> v 
Theorem (662) [serial 1032] used for:
  Composition of Subcomponents via Directional Connection controller.control.sb -> sbrake.brake:
 sb -> brake 
Theorem (663) [serial 1033] used for:
  Composition of Subcomponents via Directional Connection controller.control.eb -> ebrake.brake:
 eb -> brake 
Theorem (664) [serial 1034] used for:
  Composition of Subcomponents via Directional Connection rbc.ma -> train.controller.control.m_a:
 ma -> m_a 
Theorem (665) [serial 1035] used for:
  Composition of Subcomponents via Directional Connection CTCS::MovementAuthority.i.ma:
 ma -> ma 
Theorem (666) [serial 1036] used for:
  Composition of Subcomponents via Directional Connection Train::Train.i.auth:
 ma -> m_a 
Theorem (667) [serial 1037] used for:
  Composition of Subcomponents via Directional Connection Train::Train.i.pos:
 p -> p 
Theorem (668) [serial 1038] used for:
  Composition of Subcomponents via Directional Connection Train::Train.i.vel:
 v -> v 
Theorem (669) [serial 1039] used for:
  Composition of Subcomponents via Directional Connection Train::Train.i.dxl:
 xl -> xl 
Theorem (670) [serial 1040] used for:
  Composition of Subcomponents via Directional Connection Train::Train.i.cpsb:
 sb -> brake 
Theorem (671) [serial 1041] used for:
  Composition of Subcomponents via Directional Connection Train::Train.i.cpeb:
 eb -> brake 
Theorem (672) [serial 1042] used for:
  Composition of Subcomponents via Directional Connection Train::ControllerProcess.i.conn_s:
 p -> p 
Theorem (673) [serial 1043] used for:
  Composition of Subcomponents via Directional Connection Train::ControllerProcess.i.conn_v:
 v -> v 
Theorem (674) [serial 1044] used for:
  Composition of Subcomponents via Directional Connection Train::ControllerProcess.i.conn_ma:
 m_a -> m_a 
Theorem (675) [serial 1045] used for:
  Composition of Subcomponents via Directional Connection Train::ControllerProcess.i.conn_sb:
 sb -> sb 
Theorem (676) [serial 1046] used for:
  Composition of Subcomponents via Directional Connection Train::ControllerProcess.i.conn_eb:
 eb -> eb 


closing proof.txt file 