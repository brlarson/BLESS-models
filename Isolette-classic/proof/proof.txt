This file, proof.txt, was produced the BLESS Proof Assistant v3.1
  at Wed Feb 24 13:29:53 CST 2021 by brianlarson

Theorem (1)                               [serial 1003] 
P [165] << true >>
S [156] ->
Q [156] << true >>
by True Conclusion Schema (tc): P->true


Theorem (2)                               [serial 1004] 
P [170] << RUN() >>
S [156] ->
Q [156] << true >>
by True Conclusion Schema (tc): P->true


Theorem (3)                               [serial 1121] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << true >>
by True Conclusion Schema (tc): P->true


Theorem (4)                               [serial 1119] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 3:
Theorem (3) [serial 1121] used for:
    normalization of [serial 1119]
 


Theorem (5)                               [serial 1118] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 4:
Theorem (4) [serial 1119] used for:
  Law of And-Simplification:  P and P is P [serial 1118]
 


Theorem (6)                               [serial 1116] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not INTERNAL_FAILURE^0 or 
not Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 5:
Theorem (5) [serial 1118] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1116]
 


Theorem (7)                               [serial 1114] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (not INTERNAL_FAILURE^0 or INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
(not MONITOR_INTERFACE_FAILURE^0 or INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 6:
Theorem (6) [serial 1116] used for:
    normalization of [serial 1114]
 


Theorem (8)                               [serial 1111] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 7:
Theorem (7) [serial 1114] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 1111]
 


Theorem (9)                               [serial 1109] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << ((INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 8:
Theorem (8) [serial 1111] used for:
    normalization of [serial 1109]
 


Theorem (10)                               [serial 1107] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << true and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and true is P
and theorem 9:
Theorem (9) [serial 1109] used for:
  Law of And-Simplification:  P and true is P [serial 1107]
 


Theorem (11)                               [serial 1105] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (true) and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 10:
Theorem (10) [serial 1107] used for:
    normalization of [serial 1105]
 


Theorem (12)                               [serial 1104] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (true) and (true) and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and P is P
and theorem 11:
Theorem (11) [serial 1105] used for:
  Law of And-Simplification:  P and P is P [serial 1104]
 


Theorem (13)                               [serial 1103] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (true) and (true) and (true) and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and P is P
and theorem 12:
Theorem (12) [serial 1104] used for:
  Law of And-Simplification:  P and P is P [serial 1103]
 


Theorem (14)                               [serial 1102] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (true) and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
(true) and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 13:
Theorem (13) [serial 1103] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1102]
 


Theorem (15)                               [serial 1101] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (true) and (Valid = current_temperature_status or (INTERNAL_FAILURE^0 or 
MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (true) and 
((not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or 
MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Associativity: (b.c).a = a.b.c
and theorem 14:
Theorem (14) [serial 1102] used for:
  Associativity: (b.c).a = a.b.c [serial 1101]
 


Theorem (16)                               [serial 1100] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (true) and (true) and (Valid = current_temperature_status or (INTERNAL_FAILURE^0 or 
MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (true) and 
((not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or 
MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and P is P
and theorem 15:
Theorem (15) [serial 1101] used for:
  Law of And-Simplification:  P and P is P [serial 1100]
 


Theorem (17)                               [serial 1099] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (true) and (true) and (true) and (Valid = current_temperature_status or 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (true) and 
((not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or 
MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and P is P
and theorem 16:
Theorem (16) [serial 1100] used for:
  Law of And-Simplification:  P and P is P [serial 1099]
 


Theorem (18)                               [serial 1098] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (Valid = current_temperature_status or not (now - start_time) < #Iso_Properties::Initialization_Timeout or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (not (now - start_time) < #Iso_Properties::Initialization_Timeout or 
not (now - start_time) < #Iso_Properties::Initialization_Timeout or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
((not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or not (now - start_time) < #Iso_Properties::Initialization_Timeout or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (Valid = current_temperature_status or 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (not (now - start_time) < #Iso_Properties::Initialization_Timeout or 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and ((not INTERNAL_FAILURE^0 and 
not MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 17:
Theorem (17) [serial 1099] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1098]
 


Theorem (19)                               [serial 1096] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (Valid = current_temperature_status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0)) or (not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 18:
Theorem (18) [serial 1098] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 1096]
 


Theorem (20)                               [serial 1094] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << ((not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
Valid = current_temperature_status and (not (INTERNAL_FAILURE^0) and not (MONITOR_INTERFACE_FAILURE^0))) or 
((not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 19:
Theorem (19) [serial 1096] used for:
    normalization of [serial 1094]
 


Theorem (21)                               [serial 1093] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << ((not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
Valid = current_temperature_status and not (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0)) or 
((not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 20:
Theorem (20) [serial 1094] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1093]
 


Theorem (22)                               [serial 1091] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (#Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
not (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0)) or (#Iso_Properties::Initialization_Timeout <= (now - start_time) and 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 21:
Theorem (21) [serial 1093] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1091]
 


Theorem (23)                               [serial 1005] 
P [167] << (current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS() >>
S [167] ->
Q [167] << ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
((MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0) or (not ((current_temperature_status = Valid))))) or 
((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and not (
(MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0)) and ((current_temperature_status = Valid))) or 
(((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 22:
Theorem (22) [serial 1091] used for:
    normalization of [serial 1005]
 


Theorem (24)                               [serial 1006] 
P [164] << true >>
S [164] ->
Q [164] << true >>
by True Conclusion Schema (tc): P->true


Theorem (25)                               [serial 1143] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << true >>
by True Conclusion Schema (tc): P->true


Theorem (26)                               [serial 1141] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 25:
Theorem (25) [serial 1143] used for:
    normalization of [serial 1141]
 


Theorem (27)                               [serial 1140] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << (true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 26:
Theorem (26) [serial 1141] used for:
  Law of And-Simplification:  P and P is P [serial 1140]
 


Theorem (28)                               [serial 1139] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << (not INTERNAL_FAILURE^0 or INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) and (not MONITOR_INTERFACE_FAILURE^0 or 
INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 27:
Theorem (27) [serial 1140] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1139]
 


Theorem (29)                               [serial 1136] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 28:
Theorem (28) [serial 1139] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 1136]
 


Theorem (30)                               [serial 1134] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << ((INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 29:
Theorem (29) [serial 1136] used for:
    normalization of [serial 1134]
 


Theorem (31)                               [serial 1132] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << true and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0)) >>
by Law of And-Simplification:  P and true is P
and theorem 30:
Theorem (30) [serial 1134] used for:
  Law of And-Simplification:  P and true is P [serial 1132]
 


Theorem (32)                               [serial 1130] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << (true) and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 31:
Theorem (31) [serial 1132] used for:
    normalization of [serial 1130]
 


Theorem (33)                               [serial 1129] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
Valid = current_temperature_status) and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0)) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 32:
Theorem (32) [serial 1130] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1129]
 


Theorem (34)                               [serial 1128] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << (Valid = current_temperature_status or (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status)) and ((not INTERNAL_FAILURE^0 and 
not MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status)) >>
by Associativity: (b.c).a = a.b.c
and theorem 33:
Theorem (33) [serial 1129] used for:
  Associativity: (b.c).a = a.b.c [serial 1128]
 


Theorem (35)                               [serial 1125] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << (Valid = current_temperature_status and (not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0)) or 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 34:
Theorem (34) [serial 1128] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 1125]
 


Theorem (36)                               [serial 1123] 
P [171] << (current_temperature_status = temperature.status) and RUN() and AXIOM_CTS() and 
AXIOM_ST() >>
S [171] ->
Q [171] << ((not ((MONITOR_INTERFACE_FAILURE^0)) and not ((INTERNAL_FAILURE^0))) and 
((current_temperature_status = Valid))) or (((MONITOR_INTERFACE_FAILURE^0) or 
(INTERNAL_FAILURE^0) or (not ((current_temperature_status = Valid))))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 35:
Theorem (35) [serial 1125] used for:
    normalization of [serial 1123]
 


Theorem (37)                               [serial 1007] 
P [171] << (current_temperature_status = temperature.status) and RUN() and AXIOM_CTS() and 
AXIOM_ST() >>
S [171] ->
Q [171] << (not ((MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0)) and ((current_temperature_status = Valid))) or 
(((MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0) or (not ((current_temperature_status = Valid))))) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 36:
Theorem (36) [serial 1123] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1007]
 


Theorem (38)                               [serial 1167] 
P [164] << true >>
S [178] ->
Q [179] << true >>
by True Conclusion Schema (tc): P->true


Theorem (39)                               [serial 1156] 
P [164] << true >>
S [178] ->
Q [179] << true and true >>
by Law of And-Simplification:  P and true is P
and theorem 38:
Theorem (38) [serial 1167] used for:
  Law of And-Simplification:  P and true is P [serial 1156]
 


Theorem (40)                               [serial 1167] 
P [164] << true >>
S [178] ->
Q [179] << true >>
by True Conclusion Schema (tc): P->true


Theorem (41)                               [serial 1156] 
P [164] << true >>
S [178] ->
Q [179] << true and true >>
by Law of And-Simplification:  P and true is P
and theorem 40:
Theorem (40) [serial 1167] used for:
  Law of And-Simplification:  P and true is P [serial 1156]
 


Theorem (42)                               [serial 1155] 
P [164] << true >>
S [178] ->
Q [179] << AXIOM_ST() and AXIOM_TOGT0() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 41 41:
Theorem (41) [serial 1156] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (41) [serial 1156] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (43)                               [serial 1153] 
P [164] << true >>
S [178] ->
Q [179] << true and AXIOM_ST() and AXIOM_TOGT0() >>
by Law of And-Simplification:  P and true is P
and theorem 42:
Theorem (42) [serial 1155] used for:
  Law of And-Simplification:  P and true is P [serial 1153]
 


Theorem (44)                               [serial 1150] 
P [164] << true >>
S [178] ->
Q [179] << now = now and AXIOM_ST() and AXIOM_TOGT0() >>
by Equality Law (idistr):  a=a <-> true
and theorem 43:
Theorem (43) [serial 1153] used for:
  Equality Law (idistr):  a=a <-> true [serial 1150]
 


Theorem (45)                               [serial 1148] 
P [164] << true >>
S [178] start_time := now
Q [179] << start_time = now and AXIOM_ST() and AXIOM_TOGT0() >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 44:
Theorem (44) [serial 1150] used for:
  applied wp for assignment [serial 1148]
 


Theorem (46)                               [serial 1172] 
P [179] << START_TIME = start_time and start_time = now and 0 < #Iso_Properties::Initialization_Timeout >>
S [181] ->
Q [78] << 0 < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (47)                               [serial 1169] 
P [179] << START_TIME = start_time and start_time = now and 0 < #Iso_Properties::Initialization_Timeout >>
S [181] ->
Q [78] << (now - now) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Subtraction of Same:  a-a is 0
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 46:
Theorem (46) [serial 1172] used for:
    normalization of [serial 1169]
 


Theorem (48)                               [serial 1168] 
P [179] << START_TIME = start_time and start_time = now and 0 < #Iso_Properties::Initialization_Timeout >>
S [181] ->
Q [78] << (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Guided Substitution of Equals
and theorem 47:
Theorem (47) [serial 1169] used for:
  Guided Substitution of Equals
 replacing "start_time" with its = "now" in its postcondition [serial 1168]
 


Theorem (49)                               [serial 1165] 
P [179] << START_TIME = start_time and start_time = now and 0 < #Iso_Properties::Initialization_Timeout >>
S [181] ->
Q [78] << (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Guided Substitution of Equals
and theorem 48:
Theorem (48) [serial 1168] used for:
  Guided Substitution of Equals
 replacing "START_TIME" with its = "start_time" in its postcondition [serial 1165]
 


Theorem (50)                               [serial 1162] 
P [179] << start_time = now and ((start_time = START_TIME)) and ((0 < #Iso_Properties::Initialization_Timeout)) >>
S [181] ->
Q [78] << (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 49:
Theorem (49) [serial 1165] used for:
    normalization of [serial 1162]
 


Theorem (51)                               [serial 1151] 
P [179] << start_time = now and AXIOM_ST() and AXIOM_TOGT0() >>
S [181] ->
Q [78] << INI() >>
by Substitution of Assertion Labels
and theorem 50:
Theorem (50) [serial 1162] used for:
  substituted Assertions' predicates for  labels  [serial 1151]
 


Theorem (52)                               [serial 1159] 
P [181] << (Init = monitor_mode)^0 and start_time = now and AXIOM_ST() and AXIOM_TOGT0() >>
S [181] ->
Q [165] << true >>
by True Conclusion Schema (tc): P->true


Theorem (53)                               [serial 1154] 
P [181] << start_time = now and AXIOM_ST() and AXIOM_TOGT0() and (monitor_mode = Init)^0 >>
S [181] ->
Q [165] << true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 52:
Theorem (52) [serial 1159] used for:
    normalization of [serial 1154]
 


Theorem (54)                               [serial 1152] 
P [181] << (start_time = now and AXIOM_ST() and AXIOM_TOGT0()) and (monitor_mode = Init)^0 >>
S [181] ->
Q [165] << true >>
by Associativity: (b.c).a = a.b.c
and theorem 53:
Theorem (53) [serial 1154] used for:
  Associativity: (b.c).a = a.b.c [serial 1152]
 


Theorem (55)                               [serial 1149] 
P [179] << start_time = now and AXIOM_ST() and AXIOM_TOGT0() >>
S [181] monitor_mode!(Init)
Q [165] << true >>
by Enumeration Type Port Output 
and theorems 51 54:
Theorem (51) [serial 1151] used for:
  applied port output of enumeration type  monitor_mode!(Init) [serial 1149]
 
Theorem (54) [serial 1152] used for:
  applied port output <<pre and (monitor_mode=Init)^0>> -> <<post>> [serial 1149]
 


Theorem (56)                               [serial 1146] 
P [164] << true >>
S [178] start_time := now
<< start_time = now and AXIOM_ST() and AXIOM_TOGT0() >>
;
monitor_mode!(Init)
Q [165] << true >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 45 55:
Theorem (45) [serial 1148] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1146]
 
Theorem (55) [serial 1149] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1146]
 


Theorem (57)                               [serial 1008] 
P [164] << true >>
S [178] start_time := now
<< ((start_time = now)) and AXIOM_TOGT0() and AXIOM_ST() >>
;
monitor_mode!(Init)
Q [165] << (true)^1 >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Constants are always the same
and theorem 56:
Theorem (56) [serial 1146] used for:
    normalization of [serial 1008]
 


Theorem (58)                               [serial 1192] 
P [189] << current_temperature_status = temperature.status >>
S [167] ->
Q [167] << current_temperature_status = temperature.status >>
by Identity (id):  P->P is tautology


Theorem (59)                               [serial 1190] 
P [189] << current_temperature_status = temperature.status >>
S [167] ->
Q [167] << (current_temperature_status = temperature.status) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 58:
Theorem (58) [serial 1192] used for:
    normalization of [serial 1190]
 


Theorem (60)                               [serial 1189] 
P [189] << current_temperature_status = temperature.status >>
S [167] ->
Q [167] << current_temperature_status = temperature.status and true and true >>
by Law of And-Simplification:  P and true is P
and theorem 59:
Theorem (59) [serial 1190] used for:
  Law of And-Simplification:  P and true is P [serial 1189]
 


Theorem (61)                               [serial 1192] 
P [189] << current_temperature_status = temperature.status >>
S [167] ->
Q [167] << current_temperature_status = temperature.status >>
by Identity (id):  P->P is tautology


Theorem (62)                               [serial 1190] 
P [189] << current_temperature_status = temperature.status >>
S [167] ->
Q [167] << (current_temperature_status = temperature.status) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 61:
Theorem (61) [serial 1192] used for:
    normalization of [serial 1190]
 


Theorem (63)                               [serial 1189] 
P [189] << current_temperature_status = temperature.status >>
S [167] ->
Q [167] << current_temperature_status = temperature.status and true and true >>
by Law of And-Simplification:  P and true is P
and theorem 62:
Theorem (62) [serial 1190] used for:
  Law of And-Simplification:  P and true is P [serial 1189]
 


Theorem (64)                               [serial 1180] 
P [189] << current_temperature_status = temperature.status >>
S [167] ->
Q [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 63 63:
Theorem (63) [serial 1189] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (63) [serial 1189] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (65)                               [serial 1174] 
P [189] << (current_temperature_status = temperature.status) >>
S [167] ->
Q [167] << (current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 64:
Theorem (64) [serial 1180] used for:
    normalization of [serial 1174]
 


Theorem (66)                               [serial 1182] 
P [186] << CURRENT_TEMP = temperature and true >>
S [186] ->
Q [186] << true >>
by True Conclusion Schema (tc): P->true


Theorem (67)                               [serial 1177] 
P [186] << true and temperature = CURRENT_TEMP >>
S [186] ->
Q [186] << true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 66:
Theorem (66) [serial 1182] used for:
    normalization of [serial 1177]
 


Theorem (68)                               [serial 1175] 
P [165] << true >>
S [186] current_temperature?(temperature)
Q [186] << true >>
by Port Data Input: when <<A and v=M(p)>> -> <<B>> then <<A>> p?(v) <<B>> (bl.pi)
and theorem 67:
Theorem (67) [serial 1177] used for:
  applied port input of value <<pre and temperature=M(current_temperature)>> -> <<post>> [serial 1175]
 


Theorem (69)                               [serial 1188] 
P [186] << true >>
S [188] ->
Q [189] << true >>
by True Conclusion Schema (tc): P->true


Theorem (70)                               [serial 1184] 
P [186] << true >>
S [188] ->
Q [189] << temperature.status = temperature.status >>
by Equality Law (idistr):  a=a <-> true
and theorem 69:
Theorem (69) [serial 1188] used for:
  Equality Law (idistr):  a=a <-> true [serial 1184]
 


Theorem (71)                               [serial 1178] 
P [186] << true >>
S [188] ->
Q [189] << ((temperature.status) = temperature.status) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 70:
Theorem (70) [serial 1184] used for:
    normalization of [serial 1178]
 


Theorem (72)                               [serial 1176] 
P [186] << true >>
S [188] current_temperature_status := temperature.status
Q [189] << (current_temperature_status = temperature.status) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 71:
Theorem (71) [serial 1178] used for:
  applied wp for assignment [serial 1176]
 


Theorem (73)                               [serial 1009] 
P [165] << true >>
S [186] current_temperature?(temperature)
;
current_temperature_status := temperature.status
<< (current_temperature_status = temperature.status) >>
Q [167] << (current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS() >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 65 68 72:
Theorem (65) [serial 1174] used for:
  Q1 -> Q in sequential composition for [serial 1009]
 
Theorem (68) [serial 1175] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1009]
 
Theorem (72) [serial 1176] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1009]
 


Theorem (74)                               [serial 1238] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [167] ->
Q [198] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (75)                               [serial 1234] 
P [167] << (not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [167] ->
Q [198] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 74:
Theorem (74) [serial 1238] used for:
    normalization of [serial 1234]
 


Theorem (76)                               [serial 1226] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [198] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 75:
Theorem (75) [serial 1234] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1226]
 


Theorem (77)                               [serial 1232] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [196] << INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (78)                               [serial 1227] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [196] << (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 77:
Theorem (77) [serial 1232] used for:
    normalization of [serial 1227]
 


Theorem (79)                               [serial 1221] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [196] << not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 76 78:
Theorem (76) [serial 1226] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1221]
 
Theorem (78) [serial 1227] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1221]
 


Theorem (80)                               [serial 1217] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [196] << (not (not INTERNAL_FAILURE) or not (not MONITOR_INTERFACE_FAILURE) or 
not (Valid = current_temperature_status)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 79:
Theorem (79) [serial 1221] used for:
    normalization of [serial 1217]
 


Theorem (81)                               [serial 1215] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [196] << not (not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE and Valid = current_temperature_status) and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 80:
Theorem (80) [serial 1217] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 1215]
 


Theorem (82)                               [serial 1211] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [196] << not (Valid = current_temperature_status and (not INTERNAL_FAILURE and 
not MONITOR_INTERFACE_FAILURE)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 81:
Theorem (81) [serial 1215] used for:
  Associativity: (b.c).a = a.b.c [serial 1211]
 


Theorem (83)                               [serial 1207] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) and 
current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [196] << ((not ((Valid = current_temperature_status and (not INTERNAL_FAILURE and 
not MONITOR_INTERFACE_FAILURE))) and not ((now - start_time) < #Iso_Properties::Initialization_Timeout))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 82:
Theorem (82) [serial 1211] used for:
    normalization of [serial 1207]
 


Theorem (84)                               [serial 1205] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) and 
current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [196] << (not ((Valid = current_temperature_status and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 83:
Theorem (83) [serial 1207] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1205]
 


Theorem (85)                               [serial 1204] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
(#Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status)) >>
S [167] ->
Q [196] << (not ((Valid = current_temperature_status and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Associativity: (b.c).a = a.b.c
and theorem 84:
Theorem (84) [serial 1205] used for:
  Associativity: (b.c).a = a.b.c [serial 1204]
 


Theorem (86)                               [serial 1199] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
(#Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status)) >>
S [167] ->
Q [196] << not ((Valid = current_temperature_status and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
true and true >>
by Law of And-Simplification:  P and true is P
and theorem 85:
Theorem (85) [serial 1204] used for:
  Law of And-Simplification:  P and true is P [serial 1199]
 


Theorem (87)                               [serial 1198] 
P [167] << (current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
((MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0) or (not ((current_temperature_status = Valid))))) >>
S [167] ->
Q [196] << not ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((current_temperature_status = Valid))) or 
(((now - start_time) < #Iso_Properties::Initialization_Timeout))) and true and 
true >>
by Assume Present:  P = P@now = P^0 
and theorem 86:
Theorem (86) [serial 1199] used for:
  Assume Present:  P = P@now = P^0  [serial 1198]
 


Theorem (88)                               [serial 1238] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [167] ->
Q [198] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (89)                               [serial 1234] 
P [167] << (not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [167] ->
Q [198] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 88:
Theorem (88) [serial 1238] used for:
    normalization of [serial 1234]
 


Theorem (90)                               [serial 1226] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [198] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 89:
Theorem (89) [serial 1234] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1226]
 


Theorem (91)                               [serial 1232] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [196] << INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (92)                               [serial 1227] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [196] << (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 91:
Theorem (91) [serial 1232] used for:
    normalization of [serial 1227]
 


Theorem (93)                               [serial 1221] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [196] << not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 90 92:
Theorem (90) [serial 1226] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1221]
 
Theorem (92) [serial 1227] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1221]
 


Theorem (94)                               [serial 1217] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [196] << (not (not INTERNAL_FAILURE) or not (not MONITOR_INTERFACE_FAILURE) or 
not (Valid = current_temperature_status)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 93:
Theorem (93) [serial 1221] used for:
    normalization of [serial 1217]
 


Theorem (95)                               [serial 1215] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [196] << not (not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE and Valid = current_temperature_status) and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 94:
Theorem (94) [serial 1217] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 1215]
 


Theorem (96)                               [serial 1211] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [196] << not (Valid = current_temperature_status and (not INTERNAL_FAILURE and 
not MONITOR_INTERFACE_FAILURE)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 95:
Theorem (95) [serial 1215] used for:
  Associativity: (b.c).a = a.b.c [serial 1211]
 


Theorem (97)                               [serial 1207] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) and 
current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [196] << ((not ((Valid = current_temperature_status and (not INTERNAL_FAILURE and 
not MONITOR_INTERFACE_FAILURE))) and not ((now - start_time) < #Iso_Properties::Initialization_Timeout))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 96:
Theorem (96) [serial 1211] used for:
    normalization of [serial 1207]
 


Theorem (98)                               [serial 1205] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) and 
current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [196] << (not ((Valid = current_temperature_status and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 97:
Theorem (97) [serial 1207] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1205]
 


Theorem (99)                               [serial 1204] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
(#Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status)) >>
S [167] ->
Q [196] << (not ((Valid = current_temperature_status and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Associativity: (b.c).a = a.b.c
and theorem 98:
Theorem (98) [serial 1205] used for:
  Associativity: (b.c).a = a.b.c [serial 1204]
 


Theorem (100)                               [serial 1199] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
(#Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status)) >>
S [167] ->
Q [196] << not ((Valid = current_temperature_status and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
true and true >>
by Law of And-Simplification:  P and true is P
and theorem 99:
Theorem (99) [serial 1204] used for:
  Law of And-Simplification:  P and true is P [serial 1199]
 


Theorem (101)                               [serial 1198] 
P [167] << (current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
((MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0) or (not ((current_temperature_status = Valid))))) >>
S [167] ->
Q [196] << not ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((current_temperature_status = Valid))) or 
(((now - start_time) < #Iso_Properties::Initialization_Timeout))) and true and 
true >>
by Assume Present:  P = P@now = P^0 
and theorem 100:
Theorem (100) [serial 1199] used for:
  Assume Present:  P = P@now = P^0  [serial 1198]
 


Theorem (102)                               [serial 1194] 
P [167] << (current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
((MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0) or (not ((current_temperature_status = Valid))))) >>
S [167] ->
Q [196] << not ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((current_temperature_status = Valid))) or 
(((now - start_time) < #Iso_Properties::Initialization_Timeout))) and AXIOM_ST() and 
AXIOM_CTS() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 101 101:
Theorem (101) [serial 1198] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (101) [serial 1198] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (103)                               [serial 1252] 
P [196] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (104)                               [serial 1249] 
P [196] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << (not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 103:
Theorem (103) [serial 1252] used for:
    normalization of [serial 1249]
 


Theorem (105)                               [serial 1248] 
P [196] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << #Iso_Properties::Initialization_Timeout <= (now - start_time) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 104:
Theorem (104) [serial 1249] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1248]
 


Theorem (106)                               [serial 1243] 
P [196] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Guided Substitution of Equals
and theorem 105:
Theorem (105) [serial 1248] used for:
  Guided Substitution of Equals
 replacing "START_TIME" with its = "start_time" in its postcondition [serial 1243]
 


Theorem (107)                               [serial 1240] 
P [196] << ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and ((start_time = START_TIME)) and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 106:
Theorem (106) [serial 1243] used for:
    normalization of [serial 1240]
 


Theorem (108)                               [serial 1224] 
P [196] << AXIOM_CTS() and AXIOM_ST() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << RUN() >>
by Substitution of Assertion Labels
and theorem 107:
Theorem (107) [serial 1240] used for:
  substituted Assertions' predicates for  labels  [serial 1224]
 


Theorem (109)                               [serial 1265] 
P [196] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (110)                               [serial 1263] 
P [196] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not current_temperature_status = Valid >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 109:
Theorem (109) [serial 1265] used for:
    normalization of [serial 1263]
 


Theorem (111)                               [serial 1262] 
P [196] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid >>
by Guided Substitution of Equals
and theorem 110:
Theorem (110) [serial 1263] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 1262]
 


Theorem (112)                               [serial 1260] 
P [196] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << not CURRENT_TEMPERATURE_STATUS = Valid or (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
by Associativity: (b.c).a = a.b.c
and theorem 111:
Theorem (111) [serial 1262] used for:
  Associativity: (b.c).a = a.b.c [serial 1260]
 


Theorem (113)                               [serial 1258] 
P [196] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << not CURRENT_TEMPERATURE_STATUS = Valid or (not (not INTERNAL_FAILURE) or 
not (not MONITOR_INTERFACE_FAILURE)) >>
by Normalization
  Normalization Axiom:
    Complement
and theorem 112:
Theorem (112) [serial 1260] used for:
    normalization of [serial 1258]
 


Theorem (114)                               [serial 1256] 
P [196] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << not CURRENT_TEMPERATURE_STATUS = Valid or not (not INTERNAL_FAILURE and 
not MONITOR_INTERFACE_FAILURE) >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 113:
Theorem (113) [serial 1258] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 1256]
 


Theorem (115)                               [serial 1254] 
P [196] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << (not (CURRENT_TEMPERATURE_STATUS = Valid) or not ((not INTERNAL_FAILURE and 
not MONITOR_INTERFACE_FAILURE))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 114:
Theorem (114) [serial 1256] used for:
    normalization of [serial 1254]
 


Theorem (116)                               [serial 1245] 
P [196] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 115:
Theorem (115) [serial 1254] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1245]
 


Theorem (117)                               [serial 1241] 
P [196] << ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and ((start_time = START_TIME)) and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << not (not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 116:
Theorem (116) [serial 1245] used for:
    normalization of [serial 1241]
 


Theorem (118)                               [serial 1225] 
P [196] << AXIOM_CTS() and AXIOM_ST() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << not MONITOR_OK() >>
by Substitution of Assertion Labels
and theorem 117:
Theorem (117) [serial 1241] used for:
  substituted Assertions' predicates for  labels  [serial 1225]
 


Theorem (119)                               [serial 1219] 
P [196] << AXIOM_CTS() and AXIOM_ST() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << RUN() and not MONITOR_OK() >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 108 118:
Theorem (108) [serial 1224] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1219]
 
Theorem (118) [serial 1225] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1219]
 


Theorem (120)                               [serial 1216] 
P [196] << (not (not INTERNAL_FAILURE) or not (not MONITOR_INTERFACE_FAILURE) or 
not (Valid = current_temperature_status)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
AXIOM_CTS() and AXIOM_ST() >>
S [200] ->
Q [80] << RUN() and not MONITOR_OK() >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 119:
Theorem (119) [serial 1219] used for:
    normalization of [serial 1216]
 


Theorem (121)                               [serial 1214] 
P [196] << not (not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE and Valid = current_temperature_status) and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and AXIOM_CTS() and 
AXIOM_ST() >>
S [200] ->
Q [80] << RUN() and not MONITOR_OK() >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 120:
Theorem (120) [serial 1216] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 1214]
 


Theorem (122)                               [serial 1209] 
P [196] << AXIOM_CTS() and AXIOM_ST() and (not (Valid = current_temperature_status and 
(not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [200] ->
Q [80] << RUN() and not MONITOR_OK() >>
by Associativity: (b.c).a = a.b.c
and theorem 121:
Theorem (121) [serial 1214] used for:
  Associativity: (b.c).a = a.b.c [serial 1209]
 


Theorem (123)                               [serial 1206] 
P [196] << AXIOM_CTS() and AXIOM_ST() and (not ((Valid = current_temperature_status and 
(not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE))) and not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
S [200] ->
Q [80] << RUN() and not MONITOR_OK() >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 122:
Theorem (122) [serial 1209] used for:
    normalization of [serial 1206]
 


Theorem (124)                               [serial 1201] 
P [196] << AXIOM_CTS() and AXIOM_ST() and not ((Valid = current_temperature_status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [200] ->
Q [80] << RUN() and not MONITOR_OK() >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 123:
Theorem (123) [serial 1206] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1201]
 


Theorem (125)                               [serial 1196] 
P [196] << not ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((current_temperature_status = Valid))) or 
(((now - start_time) < #Iso_Properties::Initialization_Timeout))) and AXIOM_ST() and 
AXIOM_CTS() >>
S [200] ->
Q [80] << not MONITOR_OK() and RUN() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 124:
Theorem (124) [serial 1201] used for:
    normalization of [serial 1196]
 


Theorem (126)                               [serial 1197] 
P [200] << (not ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((current_temperature_status = Valid))) or 
(((now - start_time) < #Iso_Properties::Initialization_Timeout))) and AXIOM_ST() and 
AXIOM_CTS()) and (monitor_mode = Failed)^0 >>
S [200] ->
Q [173] << true >>
by True Conclusion Schema (tc): P->true


Theorem (127)                               [serial 1195] 
P [196] << not ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((current_temperature_status = Valid))) or 
(((now - start_time) < #Iso_Properties::Initialization_Timeout))) and AXIOM_ST() and 
AXIOM_CTS() >>
S [200] monitor_mode!(Failed)
Q [173] << true >>
by Enumeration Type Port Output 
and theorems 125 126:
Theorem (125) [serial 1196] used for:
  applied port output of enumeration type  monitor_mode!(Failed) [serial 1195]
 
Theorem (126) [serial 1197] used for:
  applied port output <<pre and (monitor_mode=Failed)^0>> -> <<post>> [serial 1195]
 


Theorem (128)                               [serial 1010] 
P [167] << (current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
((MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0) or (not ((current_temperature_status = Valid))))) >>
S [196] << not ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((current_temperature_status = Valid))) or (((now - start_time) < #Iso_Properties::Initialization_Timeout))) and AXIOM_ST() and AXIOM_CTS() >>
monitor_mode!(Failed)
Q [173] << true >>
by Introduction of Existential Quantification (bl.aapre)
and theorems 102 127:
Theorem (102) [serial 1194] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1010]
 
Theorem (127) [serial 1195] used for:
  as <<pre>> S <<Q>> in <<P>> { <<pre>> S  } <<Q>> [serial 1010]
 


Theorem (129)                               [serial 1314] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [167] ->
Q [207] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (130)                               [serial 1312] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [167] ->
Q [207] << current_temperature_status = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - start_time) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 129:
Theorem (129) [serial 1314] used for:
    normalization of [serial 1312]
 


Theorem (131)                               [serial 1311] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [167] ->
Q [207] << current_temperature_status = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Guided Substitution of Equals
and theorem 130:
Theorem (130) [serial 1312] used for:
  Guided Substitution of Equals
 replacing "START_TIME" with its = "start_time" in its postcondition [serial 1311]
 


Theorem (132)                               [serial 1310] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [167] ->
Q [207] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Guided Substitution of Equals
and theorem 131:
Theorem (131) [serial 1311] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 1310]
 


Theorem (133)                               [serial 1304] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [167] ->
Q [207] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) >>
by Associativity: (b.c).a = a.b.c
and theorem 132:
Theorem (132) [serial 1310] used for:
  Associativity: (b.c).a = a.b.c [serial 1304]
 


Theorem (134)                               [serial 1301] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [167] ->
Q [207] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 133:
Theorem (133) [serial 1304] used for:
    normalization of [serial 1301]
 


Theorem (135)                               [serial 1293] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [167] ->
Q [207] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) >>
by Substitution of Assertion Labels
and theorem 134:
Theorem (134) [serial 1301] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1293]
 


Theorem (136)                               [serial 1289] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [167] ->
Q [207] << (not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 135:
Theorem (135) [serial 1293] used for:
    normalization of [serial 1289]
 


Theorem (137)                               [serial 1282] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [167] ->
Q [207] << MONITOR_OK() and RUN() >>
by Substitution of Assertion Labels
and theorem 136:
Theorem (136) [serial 1289] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1282]
 


Theorem (138)                               [serial 1275] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [207] << MONITOR_OK() and RUN() >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 137:
Theorem (137) [serial 1282] used for:
    normalization of [serial 1275]
 


Theorem (139)                               [serial 1273] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
(#Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) >>
S [167] ->
Q [207] << MONITOR_OK() and RUN() >>
by Associativity: (b.c).a = a.b.c
and theorem 138:
Theorem (138) [serial 1275] used for:
  Associativity: (b.c).a = a.b.c [serial 1273]
 


Theorem (140)                               [serial 1267] 
P [167] << (current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
not ((MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0)) and ((current_temperature_status = Valid))) >>
S [167] ->
Q [207] << MONITOR_OK() and RUN() >>
by Assume Present:  P = P@now = P^0 
and theorem 139:
Theorem (139) [serial 1273] used for:
  Assume Present:  P = P@now = P^0  [serial 1267]
 


Theorem (141)                               [serial 1309] 
P [209] << (now - START_TIME) <= (now - START_TIME)^1 and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
S [170] ->
Q [170] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (142)                               [serial 1306] 
P [209] << (now - START_TIME) <= (now - START_TIME)^1 and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [170] ->
Q [170] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
by Transitivity: x<y and y<z -> x<z
and theorem 141:
Theorem (141) [serial 1309] used for:
  Transitivity: x<y and y<z -> x<z [serial 1306]
 


Theorem (143)                               [serial 1302] 
P [209] << (((now - START_TIME) <= (now - START_TIME)^1)) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [170] ->
Q [170] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 142:
Theorem (142) [serial 1306] used for:
    normalization of [serial 1302]
 


Theorem (144)                               [serial 1299] 
P [209] << AXIOM_PAST_INIT() and RUN() >>
S [170] ->
Q [170] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
by Substitution of Assertion Labels
and theorem 143:
Theorem (143) [serial 1302] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1299]
 


Theorem (145)                               [serial 1296] 
P [209] << AXIOM_PAST_INIT() and RUN() >>
S [170] ->
Q [170] << ((#Iso_Properties::Initialization_Timeout)^1 <= (now - START_TIME)^1) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 144:
Theorem (144) [serial 1299] used for:
    normalization of [serial 1296]
 


Theorem (146)                               [serial 1291] 
P [209] << AXIOM_PAST_INIT() and RUN() >>
S [170] ->
Q [170] << (#Iso_Properties::Initialization_Timeout <= (now - START_TIME))^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 145:
Theorem (145) [serial 1296] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1291]
 


Theorem (147)                               [serial 1288] 
P [209] << AXIOM_PAST_INIT() and RUN() >>
S [170] ->
Q [170] << ((((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)))^1 >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 146:
Theorem (146) [serial 1291] used for:
    normalization of [serial 1288]
 


Theorem (148)                               [serial 1279] 
P [209] << AXIOM_PAST_INIT() and RUN() >>
S [170] ->
Q [170] << (RUN())^1 >>
by Substitution of Assertion Labels
and theorem 147:
Theorem (147) [serial 1288] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1279]
 


Theorem (149)                               [serial 1268] 
P [209] << RUN() and AXIOM_PAST_INIT() >>
S [170] ->
Q [170] << (RUN())^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 148:
Theorem (148) [serial 1279] used for:
    normalization of [serial 1268]
 


Theorem (150)                               [serial 1270] 
P [207] << MONITOR_OK() and RUN() >>
S [208] ->
Q [79] << MONITOR_OK() and RUN() >>
by Identity (id):  P->P is tautology


Theorem (151)                               [serial 1284] 
P [208] << Normal = monitor_mode and MONITOR_OK() and RUN() >>
S [208] ->
Q [209] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (152)                               [serial 1277] 
P [208] << MONITOR_OK() and RUN() and Normal = monitor_mode >>
S [208] ->
Q [209] << (RUN()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 151:
Theorem (151) [serial 1284] used for:
    normalization of [serial 1277]
 


Theorem (153)                               [serial 1276] 
P [208] << Normal = monitor_mode and (MONITOR_OK() and RUN()) >>
S [208] ->
Q [209] << (RUN()) >>
by Associativity: (b.c).a = a.b.c
and theorem 152:
Theorem (152) [serial 1277] used for:
  Associativity: (b.c).a = a.b.c [serial 1276]
 


Theorem (154)                               [serial 1274] 
P [208] << Normal = monitor_mode and (MONITOR_OK() and RUN()) >>
S [208] ->
Q [209] << RUN() and true >>
by Law of And-Simplification:  P and true is P
and theorem 153:
Theorem (153) [serial 1276] used for:
  Law of And-Simplification:  P and true is P [serial 1274]
 


Theorem (155)                               [serial 1272] 
P [208] << (MONITOR_OK() and RUN()) and (monitor_mode = Normal)^0 >>
S [208] ->
Q [209] << RUN() and true >>
by Assume Present:  P = P@now = P^0 
and theorem 154:
Theorem (154) [serial 1274] used for:
  Assume Present:  P = P@now = P^0  [serial 1272]
 


Theorem (156)                               [serial 1284] 
P [208] << Normal = monitor_mode and MONITOR_OK() and RUN() >>
S [208] ->
Q [209] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (157)                               [serial 1277] 
P [208] << MONITOR_OK() and RUN() and Normal = monitor_mode >>
S [208] ->
Q [209] << (RUN()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 156:
Theorem (156) [serial 1284] used for:
    normalization of [serial 1277]
 


Theorem (158)                               [serial 1276] 
P [208] << Normal = monitor_mode and (MONITOR_OK() and RUN()) >>
S [208] ->
Q [209] << (RUN()) >>
by Associativity: (b.c).a = a.b.c
and theorem 157:
Theorem (157) [serial 1277] used for:
  Associativity: (b.c).a = a.b.c [serial 1276]
 


Theorem (159)                               [serial 1274] 
P [208] << Normal = monitor_mode and (MONITOR_OK() and RUN()) >>
S [208] ->
Q [209] << RUN() and true >>
by Law of And-Simplification:  P and true is P
and theorem 158:
Theorem (158) [serial 1276] used for:
  Law of And-Simplification:  P and true is P [serial 1274]
 


Theorem (160)                               [serial 1272] 
P [208] << (MONITOR_OK() and RUN()) and (monitor_mode = Normal)^0 >>
S [208] ->
Q [209] << RUN() and true >>
by Assume Present:  P = P@now = P^0 
and theorem 159:
Theorem (159) [serial 1274] used for:
  Assume Present:  P = P@now = P^0  [serial 1272]
 


Theorem (161)                               [serial 1271] 
P [208] << (MONITOR_OK() and RUN()) and (monitor_mode = Normal)^0 >>
S [208] ->
Q [209] << RUN() and AXIOM_PAST_INIT() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 160 160:
Theorem (160) [serial 1272] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (160) [serial 1272] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (162)                               [serial 1269] 
P [207] << MONITOR_OK() and RUN() >>
S [208] monitor_mode!(Normal)
Q [209] << RUN() and AXIOM_PAST_INIT() >>
by Enumeration Type Port Output 
and theorems 150 161:
Theorem (150) [serial 1270] used for:
  applied port output of enumeration type  monitor_mode!(Normal) [serial 1269]
 
Theorem (161) [serial 1271] used for:
  applied port output <<pre and (monitor_mode=Normal)^0>> -> <<post>> [serial 1269]
 


Theorem (163)                               [serial 1011] 
P [167] << (current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
not ((MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0)) and ((current_temperature_status = Valid))) >>
S [207] << MONITOR_OK() and RUN() >>
monitor_mode!(Normal)
<< RUN() and AXIOM_PAST_INIT() >>
Q [170] << (RUN())^1 >>
by Introduction of Existential Quantification (bl.aab)
and theorems 140 149 162:
Theorem (140) [serial 1267] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1011]
 
Theorem (149) [serial 1268] used for:
  as <<post>> -> <<Q>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1011]
 
Theorem (162) [serial 1269] used for:
  as <<pre>> S <<post>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1011]
 


Theorem (164)                               [serial 1317] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
(now - start_time) < #Iso_Properties::Initialization_Timeout >>
S [211] ->
Q [165] << true >>
by True Conclusion Schema (tc): P->true


Theorem (165)                               [serial 1012] 
P [167] << (current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS() and (((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
S [211] ->
Q [165] << (true)^1 >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Constants are always the same
and theorem 164:
Theorem (164) [serial 1317] used for:
    normalization of [serial 1012]
 


Theorem (166)                               [serial 1319] 
P [170] << RUN() >>
S [170] ->
Q [217] << RUN() >>
by Identity (id):  P->P is tautology


Theorem (167)                               [serial 1324] 
P [221] << (current_temperature_status = temperature.status) and RUN() >>
S [171] ->
Q [171] << (current_temperature_status = temperature.status) and RUN() >>
by Identity (id):  P->P is tautology


Theorem (168)                               [serial 1323] 
P [221] << (current_temperature_status = temperature.status) and RUN() >>
S [171] ->
Q [171] << (current_temperature_status = temperature.status) and RUN() and true and 
true >>
by Law of And-Simplification:  P and true is P
and theorem 167:
Theorem (167) [serial 1324] used for:
  Law of And-Simplification:  P and true is P [serial 1323]
 


Theorem (169)                               [serial 1324] 
P [221] << (current_temperature_status = temperature.status) and RUN() >>
S [171] ->
Q [171] << (current_temperature_status = temperature.status) and RUN() >>
by Identity (id):  P->P is tautology


Theorem (170)                               [serial 1323] 
P [221] << (current_temperature_status = temperature.status) and RUN() >>
S [171] ->
Q [171] << (current_temperature_status = temperature.status) and RUN() and true and 
true >>
by Law of And-Simplification:  P and true is P
and theorem 169:
Theorem (169) [serial 1324] used for:
  Law of And-Simplification:  P and true is P [serial 1323]
 


Theorem (171)                               [serial 1320] 
P [221] << (current_temperature_status = temperature.status) and RUN() >>
S [171] ->
Q [171] << (current_temperature_status = temperature.status) and RUN() and AXIOM_CTS() and 
AXIOM_ST() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 170 170:
Theorem (170) [serial 1323] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (170) [serial 1323] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (172)                               [serial 1328] 
P [218] << CURRENT_TEMP = temperature and RUN() >>
S [218] ->
Q [219] << CURRENT_TEMP = temperature and RUN() >>
by Identity (id):  P->P is tautology


Theorem (173)                               [serial 1325] 
P [218] << (RUN()) and temperature = CURRENT_TEMP >>
S [218] ->
Q [219] << (temperature = CURRENT_TEMP) and RUN() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 172:
Theorem (172) [serial 1328] used for:
    normalization of [serial 1325]
 


Theorem (174)                               [serial 1321] 
P [217] << RUN() >>
S [218] current_temperature?(temperature)
Q [219] << (temperature = CURRENT_TEMP) and RUN() >>
by Port Data Input: when <<A and v=M(p)>> -> <<B>> then <<A>> p?(v) <<B>> (bl.pi)
and theorem 173:
Theorem (173) [serial 1325] used for:
  applied port input of value <<pre and temperature=M(current_temperature)>> -> <<post>> [serial 1321]
 


Theorem (175)                               [serial 1337] 
P [219] << CURRENT_TEMP = temperature and RUN() >>
S [220] ->
Q [221] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (176)                               [serial 1334] 
P [219] << CURRENT_TEMP = temperature and RUN() >>
S [220] ->
Q [221] << (RUN()) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 175:
Theorem (175) [serial 1337] used for:
    normalization of [serial 1334]
 


Theorem (177)                               [serial 1333] 
P [219] << CURRENT_TEMP = temperature and RUN() >>
S [220] ->
Q [221] << true and RUN() >>
by Law of And-Simplification:  P and true is P
and theorem 176:
Theorem (176) [serial 1334] used for:
  Law of And-Simplification:  P and true is P [serial 1333]
 


Theorem (178)                               [serial 1330] 
P [219] << CURRENT_TEMP = temperature and RUN() >>
S [220] ->
Q [221] << temperature.status = temperature.status and RUN() >>
by Equality Law (idistr):  a=a <-> true
and theorem 177:
Theorem (177) [serial 1333] used for:
  Equality Law (idistr):  a=a <-> true [serial 1330]
 


Theorem (179)                               [serial 1326] 
P [219] << (temperature = CURRENT_TEMP) and RUN() >>
S [220] ->
Q [221] << ((temperature.status) = temperature.status) and RUN() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 178:
Theorem (178) [serial 1330] used for:
    normalization of [serial 1326]
 


Theorem (180)                               [serial 1322] 
P [219] << (temperature = CURRENT_TEMP) and RUN() >>
S [220] current_temperature_status := temperature.status
Q [221] << (current_temperature_status = temperature.status) and RUN() >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 179:
Theorem (179) [serial 1326] used for:
  applied wp for assignment [serial 1322]
 


Theorem (181)                               [serial 1013] 
P [170] << RUN() >>
S [217] << RUN() >>
current_temperature?(temperature)
;
<< (temperature = CURRENT_TEMP) and RUN() >>
current_temperature_status := temperature.status
<< (current_temperature_status = temperature.status) and RUN() >>
Q [171] << (current_temperature_status = temperature.status) and RUN() and AXIOM_CTS() and 
AXIOM_ST() >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 166 171 174 180:
Theorem (166) [serial 1319] used for:
  P -> P1 in sequential composition for [serial 1013]
 
Theorem (171) [serial 1320] used for:
  Q1 -> Q in sequential composition for [serial 1013]
 
Theorem (174) [serial 1321] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1013]
 
Theorem (180) [serial 1322] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1013]
 


Theorem (182)                               [serial 1370] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [171] ->
Q [227] << Valid = current_temperature_status and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (183)                               [serial 1369] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0) >>
S [171] ->
Q [227] << current_temperature_status = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
by Assume Present:  P = P@now = P^0 
and theorem 182:
Theorem (182) [serial 1370] used for:
  Assume Present:  P = P@now = P^0  [serial 1369]
 


Theorem (184)                               [serial 1366] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0) >>
S [171] ->
Q [227] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
by Guided Substitution of Equals
and theorem 183:
Theorem (183) [serial 1369] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 1366]
 


Theorem (185)                               [serial 1362] 
P [171] << Valid = current_temperature_status and current_temperature_status = temperature.status and 
((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and ((start_time = START_TIME)) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and not (
INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0) >>
S [171] ->
Q [227] << (not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 184:
Theorem (184) [serial 1366] used for:
    normalization of [serial 1362]
 


Theorem (186)                               [serial 1360] 
P [171] << Valid = current_temperature_status and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and RUN() and not (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0) >>
S [171] ->
Q [227] << (not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) >>
by Substitution of Assertion Labels
and theorem 185:
Theorem (185) [serial 1362] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1360]
 


Theorem (187)                               [serial 1357] 
P [171] << Valid = current_temperature_status and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and RUN() and not (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0) >>
S [171] ->
Q [227] << MONITOR_OK() >>
by Substitution of Assertion Labels
and theorem 186:
Theorem (186) [serial 1360] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1357]
 


Theorem (188)                               [serial 1358] 
P [171] << Valid = current_temperature_status and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and RUN() and not (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0) >>
S [171] ->
Q [227] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (189)                               [serial 1351] 
P [171] << Valid = current_temperature_status and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and RUN() and not (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0) >>
S [171] ->
Q [227] << MONITOR_OK() and RUN() >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 187 188:
Theorem (187) [serial 1357] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1351]
 
Theorem (188) [serial 1358] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1351]
 


Theorem (190)                               [serial 1345] 
P [171] << not ((MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0)) and ((current_temperature_status = Valid)) and 
(current_temperature_status = temperature.status) and RUN() and AXIOM_CTS() and 
AXIOM_ST() >>
S [171] ->
Q [227] << MONITOR_OK() and RUN() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 189:
Theorem (189) [serial 1351] used for:
    normalization of [serial 1345]
 


Theorem (191)                               [serial 1339] 
P [171] << (current_temperature_status = temperature.status) and RUN() and AXIOM_CTS() and 
AXIOM_ST() and (not ((MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0)) and 
((current_temperature_status = Valid))) >>
S [171] ->
Q [227] << MONITOR_OK() and RUN() >>
by Associativity: (b.c).a = a.b.c
and theorem 190:
Theorem (190) [serial 1345] used for:
  Associativity: (b.c).a = a.b.c [serial 1339]
 


Theorem (192)                               [serial 1377] 
P [229] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
#Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) >>
S [170] ->
Q [170] << #Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (193)                               [serial 1375] 
P [229] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [170] ->
Q [170] << #Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) >>
by Transitivity: x<y and y<z -> x<z
and theorem 192:
Theorem (192) [serial 1377] used for:
  Transitivity: x<y and y<z -> x<z [serial 1375]
 


Theorem (194)                               [serial 1373] 
P [229] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [170] ->
Q [170] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 193:
Theorem (193) [serial 1375] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1373]
 


Theorem (195)                               [serial 1371] 
P [229] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [170] ->
Q [170] << ((#Iso_Properties::Initialization_Timeout)^1 <= (now - START_TIME)^1) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 194:
Theorem (194) [serial 1373] used for:
    normalization of [serial 1371]
 


Theorem (196)                               [serial 1364] 
P [229] << (now - START_TIME) <= (now - START_TIME)^1 and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [170] ->
Q [170] << (#Iso_Properties::Initialization_Timeout <= (now - START_TIME))^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 195:
Theorem (195) [serial 1371] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1364]
 


Theorem (197)                               [serial 1361] 
P [229] << (((now - START_TIME) <= (now - START_TIME)^1)) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [170] ->
Q [170] << ((((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)))^1 >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 196:
Theorem (196) [serial 1364] used for:
    normalization of [serial 1361]
 


Theorem (198)                               [serial 1359] 
P [229] << AXIOM_PAST_INIT() and RUN() >>
S [170] ->
Q [170] << ((((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)))^1 >>
by Substitution of Assertion Labels
and theorem 197:
Theorem (197) [serial 1361] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1359]
 


Theorem (199)                               [serial 1349] 
P [229] << AXIOM_PAST_INIT() and RUN() >>
S [170] ->
Q [170] << (RUN())^1 >>
by Substitution of Assertion Labels
and theorem 198:
Theorem (198) [serial 1359] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1349]
 


Theorem (200)                               [serial 1340] 
P [229] << RUN() and AXIOM_PAST_INIT() >>
S [170] ->
Q [170] << (RUN())^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 199:
Theorem (199) [serial 1349] used for:
    normalization of [serial 1340]
 


Theorem (201)                               [serial 1342] 
P [227] << MONITOR_OK() and RUN() >>
S [228] ->
Q [79] << MONITOR_OK() and RUN() >>
by Identity (id):  P->P is tautology


Theorem (202)                               [serial 1353] 
P [228] << (Normal = monitor_mode)^0 and MONITOR_OK() and RUN() >>
S [228] ->
Q [229] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (203)                               [serial 1347] 
P [228] << MONITOR_OK() and RUN() and (monitor_mode = Normal)^0 >>
S [228] ->
Q [229] << (RUN()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 202:
Theorem (202) [serial 1353] used for:
    normalization of [serial 1347]
 


Theorem (204)                               [serial 1346] 
P [228] << (MONITOR_OK() and RUN()) and (monitor_mode = Normal)^0 >>
S [228] ->
Q [229] << (RUN()) >>
by Associativity: (b.c).a = a.b.c
and theorem 203:
Theorem (203) [serial 1347] used for:
  Associativity: (b.c).a = a.b.c [serial 1346]
 


Theorem (205)                               [serial 1344] 
P [228] << (MONITOR_OK() and RUN()) and (monitor_mode = Normal)^0 >>
S [228] ->
Q [229] << RUN() and true >>
by Law of And-Simplification:  P and true is P
and theorem 204:
Theorem (204) [serial 1346] used for:
  Law of And-Simplification:  P and true is P [serial 1344]
 


Theorem (206)                               [serial 1353] 
P [228] << (Normal = monitor_mode)^0 and MONITOR_OK() and RUN() >>
S [228] ->
Q [229] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (207)                               [serial 1347] 
P [228] << MONITOR_OK() and RUN() and (monitor_mode = Normal)^0 >>
S [228] ->
Q [229] << (RUN()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 206:
Theorem (206) [serial 1353] used for:
    normalization of [serial 1347]
 


Theorem (208)                               [serial 1346] 
P [228] << (MONITOR_OK() and RUN()) and (monitor_mode = Normal)^0 >>
S [228] ->
Q [229] << (RUN()) >>
by Associativity: (b.c).a = a.b.c
and theorem 207:
Theorem (207) [serial 1347] used for:
  Associativity: (b.c).a = a.b.c [serial 1346]
 


Theorem (209)                               [serial 1344] 
P [228] << (MONITOR_OK() and RUN()) and (monitor_mode = Normal)^0 >>
S [228] ->
Q [229] << RUN() and true >>
by Law of And-Simplification:  P and true is P
and theorem 208:
Theorem (208) [serial 1346] used for:
  Law of And-Simplification:  P and true is P [serial 1344]
 


Theorem (210)                               [serial 1343] 
P [228] << (MONITOR_OK() and RUN()) and (monitor_mode = Normal)^0 >>
S [228] ->
Q [229] << RUN() and AXIOM_PAST_INIT() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 209 209:
Theorem (209) [serial 1344] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (209) [serial 1344] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (211)                               [serial 1341] 
P [227] << MONITOR_OK() and RUN() >>
S [228] monitor_mode!(Normal)
Q [229] << RUN() and AXIOM_PAST_INIT() >>
by Enumeration Type Port Output 
and theorems 201 210:
Theorem (201) [serial 1342] used for:
  applied port output of enumeration type  monitor_mode!(Normal) [serial 1341]
 
Theorem (210) [serial 1343] used for:
  applied port output <<pre and (monitor_mode=Normal)^0>> -> <<post>> [serial 1341]
 


Theorem (212)                               [serial 1014] 
P [171] << (current_temperature_status = temperature.status) and RUN() and AXIOM_CTS() and 
AXIOM_ST() and (not ((MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0)) and 
((current_temperature_status = Valid))) >>
S [227] << MONITOR_OK() and RUN() >>
monitor_mode!(Normal)
<< RUN() and AXIOM_PAST_INIT() >>
Q [170] << (RUN())^1 >>
by Introduction of Existential Quantification (bl.aab)
and theorems 191 200 211:
Theorem (191) [serial 1339] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1014]
 
Theorem (200) [serial 1340] used for:
  as <<post>> -> <<Q>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1014]
 
Theorem (211) [serial 1341] used for:
  as <<pre>> S <<post>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1014]
 


Theorem (213)                               [serial 1399] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << AXIOM_ST() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (214)                               [serial 1421] 
P [171] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (215)                               [serial 1419] 
P [171] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Guided Substitution of Equals
and theorem 214:
Theorem (214) [serial 1421] used for:
  Guided Substitution of Equals
 replacing "start_time" with its = "START_TIME" in its postcondition [serial 1419]
 


Theorem (216)                               [serial 1420] 
P [171] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [69] << (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (217)                               [serial 1417] 
P [171] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 215 216:
Theorem (215) [serial 1419] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1417]
 
Theorem (216) [serial 1420] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1417]
 


Theorem (218)                               [serial 1415] 
P [171] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not current_temperature_status = Valid) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 217:
Theorem (217) [serial 1417] used for:
    normalization of [serial 1415]
 


Theorem (219)                               [serial 1414] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not current_temperature_status = Valid) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 218:
Theorem (218) [serial 1415] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1414]
 


Theorem (220)                               [serial 1413] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid) >>
by Guided Substitution of Equals
and theorem 219:
Theorem (219) [serial 1414] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 1413]
 


Theorem (221)                               [serial 1411] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(not CURRENT_TEMPERATURE_STATUS = Valid or (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) >>
by Associativity: (b.c).a = a.b.c
and theorem 220:
Theorem (220) [serial 1413] used for:
  Associativity: (b.c).a = a.b.c [serial 1411]
 


Theorem (222)                               [serial 1409] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(not CURRENT_TEMPERATURE_STATUS = Valid or (not (not INTERNAL_FAILURE) or 
not (not MONITOR_INTERFACE_FAILURE))) >>
by Normalization
  Normalization Axiom:
    Complement
and theorem 221:
Theorem (221) [serial 1411] used for:
    normalization of [serial 1409]
 


Theorem (223)                               [serial 1407] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(not CURRENT_TEMPERATURE_STATUS = Valid or not (not INTERNAL_FAILURE and 
not MONITOR_INTERFACE_FAILURE)) >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 222:
Theorem (222) [serial 1409] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 1407]
 


Theorem (224)                               [serial 1405] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << (not (CURRENT_TEMPERATURE_STATUS = Valid) or not ((not INTERNAL_FAILURE and 
not MONITOR_INTERFACE_FAILURE))) and not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 223:
Theorem (223) [serial 1407] used for:
    normalization of [serial 1405]
 


Theorem (225)                               [serial 1404] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 224:
Theorem (224) [serial 1405] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1404]
 


Theorem (226)                               [serial 1403] 
P [171] << current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << (not (not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Assume Present:  P = P@now = P^0 
and theorem 225:
Theorem (225) [serial 1404] used for:
  Assume Present:  P = P@now = P^0  [serial 1403]
 


Theorem (227)                               [serial 1400] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << (not MONITOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Substitution of Assertion Labels
and theorem 226:
Theorem (226) [serial 1403] used for:
  substituted Assertions' predicates for  labels  [serial 1400]
 


Theorem (228)                               [serial 1394] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << AXIOM_ST() and (not MONITOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 213 227:
Theorem (213) [serial 1399] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1394]
 
Theorem (227) [serial 1400] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1394]
 


Theorem (229)                               [serial 1391] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << AXIOM_ST() and (not (MONITOR_OK()) and not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 228:
Theorem (228) [serial 1394] used for:
    normalization of [serial 1391]
 


Theorem (230)                               [serial 1383] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << AXIOM_ST() and not (MONITOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 229:
Theorem (229) [serial 1391] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1383]
 


Theorem (231)                               [serial 1378] 
P [171] << (current_temperature_status = temperature.status) and RUN() and AXIOM_CTS() and 
AXIOM_ST() and (((MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0) or 
(not ((current_temperature_status = Valid))))) >>
S [171] ->
Q [235] << not ((MONITOR_OK()) or (((now - start_time) < #Iso_Properties::Initialization_Timeout))) and 
AXIOM_ST() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 230:
Theorem (230) [serial 1383] used for:
    normalization of [serial 1378]
 


Theorem (232)                               [serial 1431] 
P [235] << not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
START_TIME = start_time >>
S [236] ->
Q [80] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (233)                               [serial 1430] 
P [235] << START_TIME = start_time and (not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [236] ->
Q [80] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 232:
Theorem (232) [serial 1431] used for:
  Associativity: (b.c).a = a.b.c [serial 1430]
 


Theorem (234)                               [serial 1428] 
P [235] << START_TIME = start_time and (not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [236] ->
Q [80] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Guided Substitution of Equals
and theorem 233:
Theorem (233) [serial 1430] used for:
  Guided Substitution of Equals
 replacing "START_TIME" with its = "start_time" in its postcondition [serial 1428]
 


Theorem (235)                               [serial 1426] 
P [235] << START_TIME = start_time and (not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [236] ->
Q [80] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 234:
Theorem (234) [serial 1428] used for:
    normalization of [serial 1426]
 


Theorem (236)                               [serial 1424] 
P [235] << START_TIME = start_time and (not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [236] ->
Q [80] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 235:
Theorem (235) [serial 1426] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1424]
 


Theorem (237)                               [serial 1422] 
P [235] << ((start_time = START_TIME)) and (not (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [236] ->
Q [80] << (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 236:
Theorem (236) [serial 1424] used for:
    normalization of [serial 1422]
 


Theorem (238)                               [serial 1401] 
P [235] << AXIOM_ST() and (not MONITOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [236] ->
Q [80] << RUN() >>
by Substitution of Assertion Labels
and theorem 237:
Theorem (237) [serial 1422] used for:
  substituted Assertions' predicates for  labels  [serial 1401]
 


Theorem (239)                               [serial 1432] 
P [235] << not MONITOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
AXIOM_ST() >>
S [236] ->
Q [80] << not MONITOR_OK() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (240)                               [serial 1402] 
P [235] << AXIOM_ST() and (not MONITOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [236] ->
Q [80] << not MONITOR_OK() >>
by Associativity: (b.c).a = a.b.c
and theorem 239:
Theorem (239) [serial 1432] used for:
  Associativity: (b.c).a = a.b.c [serial 1402]
 


Theorem (241)                               [serial 1396] 
P [235] << AXIOM_ST() and (not MONITOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [236] ->
Q [80] << RUN() and not MONITOR_OK() >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 238 240:
Theorem (238) [serial 1401] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1396]
 
Theorem (240) [serial 1402] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1396]
 


Theorem (242)                               [serial 1392] 
P [235] << AXIOM_ST() and (not (MONITOR_OK()) and not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
S [236] ->
Q [80] << RUN() and not MONITOR_OK() >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 241:
Theorem (241) [serial 1396] used for:
    normalization of [serial 1392]
 


Theorem (243)                               [serial 1385] 
P [235] << AXIOM_ST() and not (MONITOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [236] ->
Q [80] << RUN() and not MONITOR_OK() >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 242:
Theorem (242) [serial 1392] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1385]
 


Theorem (244)                               [serial 1380] 
P [235] << not ((MONITOR_OK()) or (((now - start_time) < #Iso_Properties::Initialization_Timeout))) and 
AXIOM_ST() >>
S [236] ->
Q [80] << not MONITOR_OK() and RUN() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 243:
Theorem (243) [serial 1385] used for:
    normalization of [serial 1380]
 


Theorem (245)                               [serial 1387] 
P [236] << (Failed = monitor_mode)^0 and (AXIOM_ST() and not (MONITOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
S [236] ->
Q [173] << true >>
by True Conclusion Schema (tc): P->true


Theorem (246)                               [serial 1381] 
P [236] << (not ((MONITOR_OK()) or (((now - start_time) < #Iso_Properties::Initialization_Timeout))) and 
AXIOM_ST()) and (monitor_mode = Failed)^0 >>
S [236] ->
Q [173] << true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 245:
Theorem (245) [serial 1387] used for:
    normalization of [serial 1381]
 


Theorem (247)                               [serial 1379] 
P [235] << not ((MONITOR_OK()) or (((now - start_time) < #Iso_Properties::Initialization_Timeout))) and 
AXIOM_ST() >>
S [236] monitor_mode!(Failed)
Q [173] << true >>
by Enumeration Type Port Output 
and theorems 244 246:
Theorem (244) [serial 1380] used for:
  applied port output of enumeration type  monitor_mode!(Failed) [serial 1379]
 
Theorem (246) [serial 1381] used for:
  applied port output <<pre and (monitor_mode=Failed)^0>> -> <<post>> [serial 1379]
 


Theorem (248)                               [serial 1015] 
P [171] << (current_temperature_status = temperature.status) and RUN() and AXIOM_CTS() and 
AXIOM_ST() and (((MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0) or 
(not ((current_temperature_status = Valid))))) >>
S [235] << not ((MONITOR_OK()) or (((now - start_time) < #Iso_Properties::Initialization_Timeout))) and AXIOM_ST() >>
monitor_mode!(Failed)
Q [173] << true >>
by Introduction of Existential Quantification (bl.aapre)
and theorems 231 247:
Theorem (231) [serial 1378] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1015]
 
Theorem (247) [serial 1379] used for:
  as <<pre>> S <<Q>> in <<P>> { <<pre>> S  } <<Q>> [serial 1015]
 


Theorem (249)                               [serial 1002] 
P [156] <<   >>
S [156] ->
Q [156] << manage_monitor_mode.impl proof obligations >>
by Initial Thread Obligations
and theorems 1 2 23 24 37 57 73 128 163 165 181 212 248:
Theorem (1) [serial 1003] used for:
  <<M(init)>> -> <<I>> from invariant I when complete state init has Assertion <<M(init)>> in its definition.
 
Theorem (2) [serial 1004] used for:
  <<M(normal)>> -> <<I>> from invariant I when complete state normal has Assertion <<M(normal)>> in its definition.
 
Theorem (23) [serial 1005] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_init, <<M(check_init)>> -> <<e1 or e2 or . . . en>>
 
Theorem (24) [serial 1006] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (37) [serial 1007] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_normal, <<M(check_normal)>> -> <<e1 or e2 or . . . en>>
 
Theorem (57) [serial 1008] used for:
   <<M(start)>> A <<M(init)>> for mmm1:start-[ ]->init{A};
 
Theorem (73) [serial 1009] used for:
   <<M(init) and x>> A <<M(check_init)>> for wait_init:init-[x]->check_init{A};
 
Theorem (128) [serial 1010] used for:
   <<M(check_init) and x>> A <<M(failed)>> for mmm:check_init-[x]->failed{A};
 
Theorem (163) [serial 1011] used for:
   <<M(check_init) and x>> A <<M(normal)>> for mmm2:check_init-[x]->normal{A};
 
Theorem (165) [serial 1012] used for:
   <<M(check_init) and x>> -> <<M(init)>> for mmm2x:check_init-[x]->init{};
 
Theorem (181) [serial 1013] used for:
   <<M(normal) and x>> A <<M(check_normal)>> for wait_normal:normal-[x]->check_normal{A};
 
Theorem (212) [serial 1014] used for:
   <<M(check_normal) and x>> A <<M(normal)>> for mmm3:check_normal-[x]->normal{A};
 
Theorem (248) [serial 1015] used for:
   <<M(check_normal) and x>> A <<M(failed)>> for mmm3x:check_normal-[x]->failed{A};
 


Theorem (250)                               [serial 1435] 
P [302] << alarm_control^-1 = alarm_previous_period >>
S [295] ->
Q [295] << alarm_control^-1 = alarm_previous_period >>
by Identity (id):  P->P is tautology


Theorem (251)                               [serial 1433] 
P [302] << ((alarm_previous_period = alarm_control^-1)) >>
S [295] ->
Q [295] << (alarm_previous_period = alarm_control^-1) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 250:
Theorem (250) [serial 1435] used for:
    normalization of [serial 1433]
 


Theorem (252)                               [serial 1017] 
P [302] << INVMA() >>
S [295] ->
Q [295] << (alarm_previous_period = alarm_control^-1) >>
by Substitution of Assertion Labels
and theorem 251:
Theorem (251) [serial 1433] used for:
  substituted Assertions' predicates for  labels  [serial 1017]
 


Theorem (253)                               [serial 1460] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << true >>
by True Conclusion Schema (tc): P->true


Theorem (254)                               [serial 1459] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << not CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
(UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP or 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 253:
Theorem (253) [serial 1460] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1459]
 


Theorem (255)                               [serial 1457] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << not CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or 
(UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0 or 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP^0) >>
by Assume Present:  P = P@now = P^0 
and theorem 254:
Theorem (254) [serial 1459] used for:
  Assume Present:  P = P@now = P^0  [serial 1457]
 


Theorem (256)                               [serial 1455] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << ((not CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or 
(UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0 or 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP^0))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 255:
Theorem (255) [serial 1457] used for:
    normalization of [serial 1455]
 


Theorem (257)                               [serial 1453] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << true and (not CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or 
(UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0 or 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP^0)) >>
by Law of And-Simplification:  P and true is P
and theorem 256:
Theorem (256) [serial 1455] used for:
  Law of And-Simplification:  P and true is P [serial 1453]
 


Theorem (258)                               [serial 1451] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << (true) and ((UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or not CURRENT_TEMP.t < (
0.5 + LOWER_ALARM_TEMP) or CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP^0) or 
UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 257:
Theorem (257) [serial 1453] used for:
    normalization of [serial 1451]
 


Theorem (259)                               [serial 1450] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << (true) and (true) and ((UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or 
not CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP) or CURRENT_TEMP.t < (0.5 + 
LOWER_ALARM_TEMP^0) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) >>
by Law of And-Simplification:  P and P is P
and theorem 258:
Theorem (258) [serial 1451] used for:
  Law of And-Simplification:  P and P is P [serial 1450]
 


Theorem (260)                               [serial 1449] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << (true) and (true) and (true) and (true) and ((UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or 
not CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP) or CURRENT_TEMP.t < (0.5 + 
LOWER_ALARM_TEMP^0) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) >>
by Law of And-Simplification:  P and P is P
and theorem 259:
Theorem (259) [serial 1450] used for:
  Law of And-Simplification:  P and P is P [serial 1449]
 


Theorem (261)                               [serial 1448] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << (true) and (true) and (true) and (true) and (true) and (true) and (true) and 
((UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or not CURRENT_TEMP.t < (0.5 + 
LOWER_ALARM_TEMP) or CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP^0) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) >>
by Law of And-Simplification:  P and P is P
and theorem 260:
Theorem (260) [serial 1449] used for:
  Law of And-Simplification:  P and P is P [serial 1448]
 


Theorem (262)                               [serial 1447] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << (not UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or not (UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or 
not CURRENT_TEMP.t < LOWER_ALARM_TEMP^0 or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) and ((UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or 
not (UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or not CURRENT_TEMP.t < LOWER_ALARM_TEMP^0 or 
UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) and 
(not UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or not CURRENT_TEMP.t < (0.5 + 
LOWER_ALARM_TEMP) or not CURRENT_TEMP.t < LOWER_ALARM_TEMP^0 or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) and ((UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or 
not CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP) or not CURRENT_TEMP.t < LOWER_ALARM_TEMP^0 or 
UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) and 
(not UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or not (UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP^0) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) and ((UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or 
not (UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or CURRENT_TEMP.t < (0.5 + 
LOWER_ALARM_TEMP^0) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) and 
(not UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or not CURRENT_TEMP.t < (0.5 + 
LOWER_ALARM_TEMP) or CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP^0) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) and ((UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or 
not CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP) or CURRENT_TEMP.t < (0.5 + 
LOWER_ALARM_TEMP^0) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 261:
Theorem (261) [serial 1448] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1447]
 


Theorem (263)                               [serial 1445] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << (not UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t and (UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t) or 
(not (UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t and not CURRENT_TEMP.t < (
0.5 + LOWER_ALARM_TEMP)) or (not CURRENT_TEMP.t < LOWER_ALARM_TEMP^0 and 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP^0)) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP^0 >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 262:
Theorem (262) [serial 1447] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 1445]
 


Theorem (264)                               [serial 1443] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << (not UPPER_ALARM_TEMP^0 < current_temperature.t and (UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t) or 
(not (UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t and not current_temperature.t < (
0.5 + lower_alarm_temperature)) or (not current_temperature.t < LOWER_ALARM_TEMP^0 and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or UPPER_ALARM_TEMP^0 < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP^0 >>
by Replacing port names with Assertions
and theorem 263:
Theorem (263) [serial 1445] used for:
  Replacing port names with Assertions [serial 1443]
 


Theorem (265)                               [serial 1441] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << ((not (current_temperature.t < LOWER_ALARM_TEMP^0)) and current_temperature.t < (
0.5 + LOWER_ALARM_TEMP^0)) or ((not (UPPER_ALARM_TEMP^0 < current_temperature.t)) and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t) or UPPER_ALARM_TEMP^0 < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP^0 or ((not (current_temperature.t < (
0.5 + lower_alarm_temperature))) and (not ((UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 264:
Theorem (264) [serial 1443] used for:
    normalization of [serial 1441]
 


Theorem (266)                               [serial 1440] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << ((not (current_temperature.t < (0.5 + lower_alarm_temperature))) and 
(not ((UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t))) or (((not (current_temperature.t < LOWER_ALARM_TEMP^0)) and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or ((not (UPPER_ALARM_TEMP^0 < current_temperature.t)) and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) or (UPPER_ALARM_TEMP^0 < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP^0) >>
by Associativity: (b.c).a = a.b.c
and theorem 265:
Theorem (265) [serial 1441] used for:
  Associativity: (b.c).a = a.b.c [serial 1440]
 


Theorem (267)                               [serial 1438] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << ((0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP^0 - 0.5)) or 
((LOWER_ALARM_TEMP^0 <= current_temperature.t and current_temperature.t < (
0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) or (UPPER_ALARM_TEMP^0 < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP^0) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 266:
Theorem (266) [serial 1440] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1438]
 


Theorem (268)                               [serial 1018] 
P [304] << INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON() >>
S [304] ->
Q [304] << ((((current_temperature.t < LOWER_ALARM_TEMP^0))) or (((current_temperature.t > UPPER_ALARM_TEMP^0)))) or 
(((current_temperature.t >= (lower_alarm_temperature + 0.5))) and ((current_temperature.t <= (UPPER_ALARM_TEMP^0 - 0.5)))) or 
(((((current_temperature.t >= LOWER_ALARM_TEMP^0)) and ((current_temperature.t < (
LOWER_ALARM_TEMP^0 + 0.5))))) or ((((current_temperature.t > (UPPER_ALARM_TEMP^0 - 0.5))) and 
((current_temperature.t <= UPPER_ALARM_TEMP^0))))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 267:
Theorem (267) [serial 1438] used for:
    normalization of [serial 1018]
 


Theorem (269)                               [serial 1019] 
P [301] << (alarm_previous_period = Off) and (INVMA())^1 >>
S [301] ->
Q [301] << true >>
by True Conclusion Schema (tc): P->true


Theorem (270)                               [serial 1463] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [305] << O_n = alarm_previous_period or Off = alarm_previous_period >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (271)                               [serial 1461] 
P [305] << ((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (LOWER_ALARM_TEMP + 0.5)))) or 
(((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
(not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and ((alarm_previous_period = alarm_control^-1)) and 
((((alarm_previous_period = O_n))) or (((alarm_previous_period = Off)))) >>
S [305] ->
Q [305] << ((alarm_previous_period = O_n)) or ((alarm_previous_period = Off)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 270:
Theorem (270) [serial 1463] used for:
    normalization of [serial 1461]
 


Theorem (272)                               [serial 1020] 
P [305] << EDGE_TEMP() and MONITOR_OK() and RUN() and INVMA() and AXIOM_OFFON() >>
S [305] ->
Q [305] << ((alarm_previous_period = O_n)) or ((alarm_previous_period = Off)) >>
by Substitution of Assertion Labels
and theorem 271:
Theorem (271) [serial 1461] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1020]
 


Theorem (273)                               [serial 1496] 
P [303] << INVMA() >>
S [303] ->
Q [303] << true >>
by True Conclusion Schema (tc): P->true


Theorem (274)                               [serial 1494] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 273:
Theorem (273) [serial 1496] used for:
    normalization of [serial 1494]
 


Theorem (275)                               [serial 1493] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 274:
Theorem (274) [serial 1494] used for:
  Law of And-Simplification:  P and P is P [serial 1493]
 


Theorem (276)                               [serial 1492] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (not CURRENT_TEMPERATURE_STATUS = Valid or not (not INTERNAL_FAILURE and 
not MONITOR_INTERFACE_FAILURE) or CURRENT_TEMPERATURE_STATUS = Valid or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) and (not CURRENT_TEMPERATURE_STATUS = Valid or 
not (not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE) or (not INTERNAL_FAILURE and 
not MONITOR_INTERFACE_FAILURE) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 275:
Theorem (275) [serial 1493] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1492]
 


Theorem (277)                               [serial 1490] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (CURRENT_TEMPERATURE_STATUS = Valid or (not CURRENT_TEMPERATURE_STATUS = Valid or 
not (not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
((not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE) or (not CURRENT_TEMPERATURE_STATUS = Valid or 
not (not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
by Associativity: (b.c).a = a.b.c
and theorem 276:
Theorem (276) [serial 1492] used for:
  Associativity: (b.c).a = a.b.c [serial 1490]
 


Theorem (278)                               [serial 1488] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (CURRENT_TEMPERATURE_STATUS = Valid or (not (CURRENT_TEMPERATURE_STATUS = Valid) or 
not ((not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE))) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
((not (CURRENT_TEMPERATURE_STATUS = Valid) or not ((not INTERNAL_FAILURE and 
not MONITOR_INTERFACE_FAILURE))) or (not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 277:
Theorem (277) [serial 1490] used for:
    normalization of [serial 1488]
 


Theorem (279)                               [serial 1487] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (CURRENT_TEMPERATURE_STATUS = Valid or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 278:
Theorem (278) [serial 1488] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1487]
 


Theorem (280)                               [serial 1485] 
P [303] << INVMA() >>
S [303] ->
Q [303] << true and (CURRENT_TEMPERATURE_STATUS = Valid or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and true is P
and theorem 279:
Theorem (279) [serial 1487] used for:
  Law of And-Simplification:  P and true is P [serial 1485]
 


Theorem (281)                               [serial 1483] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (CURRENT_TEMPERATURE_STATUS = Valid or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(true) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 280:
Theorem (280) [serial 1485] used for:
    normalization of [serial 1483]
 


Theorem (282)                               [serial 1482] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (CURRENT_TEMPERATURE_STATUS = Valid or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 281:
Theorem (281) [serial 1483] used for:
  Law of And-Simplification:  P and P is P [serial 1482]
 


Theorem (283)                               [serial 1481] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (CURRENT_TEMPERATURE_STATUS = Valid or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(true) and (true) and (true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 282:
Theorem (282) [serial 1482] used for:
  Law of And-Simplification:  P and P is P [serial 1481]
 


Theorem (284)                               [serial 1480] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (CURRENT_TEMPERATURE_STATUS = Valid or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(not (now - START_TIME) < #Iso_Properties::Initialization_Timeout or not (
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) and (CURRENT_TEMPERATURE_STATUS = Valid or 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) or not (now - START_TIME) < #Iso_Properties::Initialization_Timeout or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) and (not (now - START_TIME) < #Iso_Properties::Initialization_Timeout or 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 283:
Theorem (283) [serial 1481] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1480]
 


Theorem (285)                               [serial 1478] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout) or (not (
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 284:
Theorem (284) [serial 1480] used for:
  Distributing Postcondition Or-Over-And [serial 1478]
 


Theorem (286)                               [serial 1476] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout) or 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axiom:
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 285:
Theorem (285) [serial 1478] used for:
    normalization of [serial 1476]
 


Theorem (287)                               [serial 1474] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout) or 
(not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 286:
Theorem (286) [serial 1476] used for:
  Associativity: (b.c).a = a.b.c [serial 1474]
 


Theorem (288)                               [serial 1472] 
P [303] << INVMA() >>
S [303] ->
Q [303] << ((not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) or 
((not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 287:
Theorem (287) [serial 1474] used for:
    normalization of [serial 1472]
 


Theorem (289)                               [serial 1470] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and not (
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) or 
(#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 288:
Theorem (288) [serial 1472] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1470]
 


Theorem (290)                               [serial 1468] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) or (
(not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) or ((((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
not (not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid)))) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 289:
Theorem (289) [serial 1470] used for:
    normalization of [serial 1468]
 


Theorem (291)                               [serial 1466] 
P [303] << INVMA() >>
S [303] ->
Q [303] << INI() or (MONITOR_OK() and RUN()) or (RUN() and not MONITOR_OK()) >>
by Substitution of Assertion Labels
and theorem 290:
Theorem (290) [serial 1468] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1466]
 


Theorem (292)                               [serial 1021] 
P [303] << INVMA() >>
S [303] ->
Q [303] << ((not MONITOR_OK() and RUN())) or ((INI())) or ((MONITOR_OK() and RUN())) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 291:
Theorem (291) [serial 1466] used for:
    normalization of [serial 1021]
 


Theorem (293)                               [serial 1022] 
P [301] << (alarm_previous_period = Off) and (INVMA())^1 >>
S [308] ->
Q [302] << (INVMA())^1 >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (294)                               [serial 1023] 
P [302] << INVMA() >>
S [309] ->
Q [303] << INVMA() >>
by Identity (id):  P->P is tautology


Theorem (295)                               [serial 1542] 
P [303] << INVMA() and RUN() and not MONITOR_OK() >>
S [303] ->
Q [312] << RUN() and not MONITOR_OK() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (296)                               [serial 1540] 
P [303] << INVMA() and RUN() and not MONITOR_OK() >>
S [303] ->
Q [312] << (not MONITOR_OK() and RUN()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 295:
Theorem (295) [serial 1542] used for:
    normalization of [serial 1540]
 


Theorem (297)                               [serial 1534] 
P [303] << INVMA() and RUN() and not MONITOR_OK() >>
S [303] ->
Q [312] << MONITOR_MODE(x:Failed) >>
by Substitution of Assertion Labels
and theorem 296:
Theorem (296) [serial 1540] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1534]
 


Theorem (298)                               [serial 1531] 
P [303] << RUN() and not MONITOR_OK() and INVMA() >>
S [303] ->
Q [312] << MONITOR_MODE(x:Failed) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 297:
Theorem (297) [serial 1534] used for:
    normalization of [serial 1531]
 


Theorem (299)                               [serial 1526] 
P [303] << INVMA() and (RUN() and not MONITOR_OK()) >>
S [303] ->
Q [312] << MONITOR_MODE(x:Failed) >>
by Associativity: (b.c).a = a.b.c
and theorem 298:
Theorem (298) [serial 1531] used for:
  Associativity: (b.c).a = a.b.c [serial 1526]
 


Theorem (300)                               [serial 1523] 
P [303] << INVMA() and (RUN() and not MONITOR_OK()) >>
S [303] ->
Q [312] << (MONITOR_MODE(x:Failed)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 299:
Theorem (299) [serial 1526] used for:
    normalization of [serial 1523]
 


Theorem (301)                               [serial 1509] 
P [303] << INVMA() and (RUN() and not MONITOR_OK()) >>
S [303] ->
Q [312] << REQMA5() >>
by Substitution of Assertion Labels
and theorem 300:
Theorem (300) [serial 1523] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1509]
 


Theorem (302)                               [serial 1498] 
P [303] << (INVMA()) and ((not MONITOR_OK() and RUN())) >>
S [303] ->
Q [312] << REQMA5() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 301:
Theorem (301) [serial 1509] used for:
    normalization of [serial 1498]
 


Theorem (303)                               [serial 1539] 
P [316] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_previous_period^1 = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (304)                               [serial 1536] 
P [316] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control^0 = alarm_previous_period^1 >>
by Assume Present:  P = P@now = P^0 
and theorem 303:
Theorem (303) [serial 1539] used for:
  Assume Present:  P = P@now = P^0  [serial 1536]
 


Theorem (305)                               [serial 1532] 
P [316] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (alarm_control^(-1+1) = alarm_previous_period^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 304:
Theorem (304) [serial 1536] used for:
    normalization of [serial 1532]
 


Theorem (306)                               [serial 1528] 
P [316] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (alarm_control^-1 = alarm_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 305:
Theorem (305) [serial 1532] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1528]
 


Theorem (307)                               [serial 1524] 
P [316] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (((alarm_previous_period = alarm_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 306:
Theorem (306) [serial 1528] used for:
    normalization of [serial 1524]
 


Theorem (308)                               [serial 1515] 
P [316] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Substitution of Assertion Labels
and theorem 307:
Theorem (307) [serial 1524] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1515]
 


Theorem (309)                               [serial 1505] 
P [316] << ((alarm_previous_period)^1 = alarm_control) >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 308:
Theorem (308) [serial 1515] used for:
    normalization of [serial 1505]
 


Theorem (310)                               [serial 1499] 
P [316] << (alarm_previous_period' = alarm_control) >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 309:
Theorem (309) [serial 1505] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1499]
 


Theorem (311)                               [serial 1511] 
P [312] << REQMA5() >>
S [313] ->
Q [36] << REQMA2() or REQMA5() or (ALARM_CONTROL^-1 = O_n and REQMA3()) >>
by Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (312)                               [serial 1502] 
P [312] << REQMA5() >>
S [313] ->
Q [36] << (REQMA2()) or (REQMA5()) or ((REQMA3() and ((ALARM_CONTROL^-1 = O_n)))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 311:
Theorem (311) [serial 1511] used for:
    normalization of [serial 1502]
 


Theorem (313)                               [serial 1517] 
P [313] << O_n = alarm_control and REQMA5() >>
S [313] ->
Q [314] << O_n = alarm_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (314)                               [serial 1507] 
P [313] << (REQMA5()) and (alarm_control = O_n) >>
S [313] ->
Q [314] << (alarm_control = O_n) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 313:
Theorem (313) [serial 1517] used for:
    normalization of [serial 1507]
 


Theorem (315)                               [serial 1506] 
P [313] << (REQMA5()) and (alarm_control^0 = O_n^0) >>
S [313] ->
Q [314] << (alarm_control = O_n) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 314:
Theorem (314) [serial 1507] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1506]
 


Theorem (316)                               [serial 1503] 
P [313] << (REQMA5()) and (alarm_control = O_n)^0 >>
S [313] ->
Q [314] << (alarm_control = O_n) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 315:
Theorem (315) [serial 1506] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1503]
 


Theorem (317)                               [serial 1500] 
P [312] << REQMA5() >>
S [313] alarm_control!(O_n)
Q [314] << (alarm_control = O_n) >>
by Enumeration Type Port Output 
and theorems 312 316:
Theorem (312) [serial 1502] used for:
  applied port output of enumeration type  alarm_control!(O_n) [serial 1500]
 
Theorem (316) [serial 1503] used for:
  applied port output <<pre and (alarm_control=O_n)^0>> -> <<post>> [serial 1500]
 


Theorem (318)                               [serial 1513] 
P [314] << O_n = alarm_control >>
S [315] ->
Q [316] << O_n = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (319)                               [serial 1504] 
P [314] << (alarm_control = O_n) >>
S [315] ->
Q [316] << (O_n = alarm_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 318:
Theorem (318) [serial 1513] used for:
    normalization of [serial 1504]
 


Theorem (320)                               [serial 1501] 
P [314] << (alarm_control = O_n) >>
S [315] alarm_previous_period' := O_n
Q [316] << (alarm_previous_period' = alarm_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 319:
Theorem (319) [serial 1504] used for:
  applied wp for assignment [serial 1501]
 


Theorem (321)                               [serial 1024] 
P [303] << (INVMA()) and ((not MONITOR_OK() and RUN())) >>
S [312] << REQMA5() >>
alarm_control!(O_n)
;
<< (alarm_control = O_n) >>
alarm_previous_period' := O_n
<< (alarm_previous_period' = alarm_control) >>
Q [302] << (INVMA())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 302 310 317 320:
Theorem (302) [serial 1498] used for:
  P -> P1 in sequential composition for [serial 1024]
 
Theorem (310) [serial 1499] used for:
  Q1 -> Q in sequential composition for [serial 1024]
 
Theorem (317) [serial 1500] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1024]
 
Theorem (320) [serial 1501] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1024]
 


Theorem (322)                               [serial 1589] 
P [303] << INI() and INVMA() >>
S [303] ->
Q [320] << INI() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (323)                               [serial 1587] 
P [303] << INI() and INVMA() >>
S [303] ->
Q [320] << (INI()) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 322:
Theorem (322) [serial 1589] used for:
    normalization of [serial 1587]
 


Theorem (324)                               [serial 1570] 
P [303] << INI() and INVMA() >>
S [303] ->
Q [320] << MONITOR_MODE(x:Init) >>
by Substitution of Assertion Labels
and theorem 323:
Theorem (323) [serial 1587] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1570]
 


Theorem (325)                               [serial 1567] 
P [303] << INI() and INVMA() >>
S [303] ->
Q [320] << (MONITOR_MODE(x:Init)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 324:
Theorem (324) [serial 1570] used for:
    normalization of [serial 1567]
 


Theorem (326)                               [serial 1552] 
P [303] << INI() and INVMA() >>
S [303] ->
Q [320] << REQMA1() >>
by Substitution of Assertion Labels
and theorem 325:
Theorem (325) [serial 1567] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1552]
 


Theorem (327)                               [serial 1544] 
P [303] << (INVMA()) and ((INI())) >>
S [303] ->
Q [320] << REQMA1() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 326:
Theorem (326) [serial 1552] used for:
    normalization of [serial 1544]
 


Theorem (328)                               [serial 1583] 
P [324] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_previous_period^1 = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (329)                               [serial 1580] 
P [324] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control = alarm_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 328:
Theorem (328) [serial 1583] used for:
    normalization of [serial 1580]
 


Theorem (330)                               [serial 1578] 
P [324] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control^0 = alarm_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 329:
Theorem (329) [serial 1580] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1578]
 


Theorem (331)                               [serial 1575] 
P [324] << alarm_control = (alarm_previous_period)^1 >>
S [302] ->
Q [305] << (alarm_control^(-1+1) = alarm_previous_period^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 330:
Theorem (330) [serial 1578] used for:
    normalization of [serial 1575]
 


Theorem (332)                               [serial 1572] 
P [324] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (alarm_control^-1 = alarm_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 331:
Theorem (331) [serial 1575] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1572]
 


Theorem (333)                               [serial 1568] 
P [324] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (((alarm_previous_period = alarm_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 332:
Theorem (332) [serial 1572] used for:
    normalization of [serial 1568]
 


Theorem (334)                               [serial 1554] 
P [324] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Substitution of Assertion Labels
and theorem 333:
Theorem (333) [serial 1568] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1554]
 


Theorem (335)                               [serial 1545] 
P [324] << (alarm_previous_period' = alarm_control) >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 334:
Theorem (334) [serial 1554] used for:
    normalization of [serial 1545]
 


Theorem (336)                               [serial 1556] 
P [320] << REQMA1() >>
S [321] ->
Q [39] << REQMA1() or REQMA4() or (ALARM_CONTROL^-1 = Off and REQMA3()) >>
by Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (337)                               [serial 1548] 
P [320] << REQMA1() >>
S [321] ->
Q [39] << (REQMA1()) or (REQMA4()) or ((REQMA3() and ((ALARM_CONTROL^-1 = Off)))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 336:
Theorem (336) [serial 1556] used for:
    normalization of [serial 1548]
 


Theorem (338)                               [serial 1566] 
P [321] << Off = alarm_control and REQMA1() >>
S [321] ->
Q [322] << Off = alarm_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (339)                               [serial 1558] 
P [321] << (Off = alarm_control)^0 and REQMA1() >>
S [321] ->
Q [322] << Off = alarm_control >>
by Assume Present:  P = P@now = P^0 
and theorem 338:
Theorem (338) [serial 1566] used for:
  Assume Present:  P = P@now = P^0  [serial 1558]
 


Theorem (340)                               [serial 1549] 
P [321] << (REQMA1()) and (alarm_control = Off)^0 >>
S [321] ->
Q [322] << (alarm_control = Off) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 339:
Theorem (339) [serial 1558] used for:
    normalization of [serial 1549]
 


Theorem (341)                               [serial 1546] 
P [320] << REQMA1() >>
S [321] alarm_control!(Off)
Q [322] << (alarm_control = Off) >>
by Enumeration Type Port Output 
and theorems 337 340:
Theorem (337) [serial 1548] used for:
  applied port output of enumeration type  alarm_control!(Off) [serial 1546]
 
Theorem (340) [serial 1549] used for:
  applied port output <<pre and (alarm_control=Off)^0>> -> <<post>> [serial 1546]
 


Theorem (342)                               [serial 1560] 
P [322] << Off = alarm_control >>
S [323] ->
Q [324] << Off = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (343)                               [serial 1550] 
P [322] << (alarm_control = Off) >>
S [323] ->
Q [324] << (Off = alarm_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 342:
Theorem (342) [serial 1560] used for:
    normalization of [serial 1550]
 


Theorem (344)                               [serial 1547] 
P [322] << (alarm_control = Off) >>
S [323] alarm_previous_period' := Off
Q [324] << (alarm_previous_period' = alarm_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 343:
Theorem (343) [serial 1550] used for:
  applied wp for assignment [serial 1547]
 


Theorem (345)                               [serial 1025] 
P [303] << (INVMA()) and ((INI())) >>
S [320] << REQMA1() >>
alarm_control!(Off)
;
<< (alarm_control = Off) >>
alarm_previous_period' := Off
<< (alarm_previous_period' = alarm_control) >>
Q [302] << (INVMA())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 327 335 341 344:
Theorem (327) [serial 1544] used for:
  P -> P1 in sequential composition for [serial 1025]
 
Theorem (335) [serial 1545] used for:
  Q1 -> Q in sequential composition for [serial 1025]
 
Theorem (341) [serial 1546] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1025]
 
Theorem (344) [serial 1547] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1025]
 


Theorem (346)                               [serial 1597] 
P [303] << MONITOR_OK() and RUN() and INVMA() >>
S [326] ->
Q [304] << INVMA() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (347)                               [serial 1598] 
P [303] << MONITOR_OK() and RUN() and INVMA() >>
S [326] ->
Q [304] << MONITOR_OK() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (348)                               [serial 1599] 
P [303] << MONITOR_OK() and RUN() and INVMA() >>
S [326] ->
Q [304] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (349)                               [serial 1596] 
P [303] << MONITOR_OK() and RUN() and INVMA() >>
S [326] ->
Q [304] << INVMA() and MONITOR_OK() and RUN() >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 346 347 348:
Theorem (346) [serial 1597] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1596]
 
Theorem (347) [serial 1598] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1596]
 
Theorem (348) [serial 1599] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1596]
 


Theorem (350)                               [serial 1595] 
P [303] << INVMA() and (MONITOR_OK() and RUN()) >>
S [326] ->
Q [304] << INVMA() and MONITOR_OK() and RUN() >>
by Associativity: (b.c).a = a.b.c
and theorem 349:
Theorem (349) [serial 1596] used for:
  Associativity: (b.c).a = a.b.c [serial 1595]
 


Theorem (351)                               [serial 1594] 
P [303] << INVMA() and (MONITOR_OK() and RUN()) >>
S [326] ->
Q [304] << true and INVMA() and MONITOR_OK() and RUN() >>
by Law of And-Simplification:  P and true is P
and theorem 350:
Theorem (350) [serial 1595] used for:
  Law of And-Simplification:  P and true is P [serial 1594]
 


Theorem (352)                               [serial 1597] 
P [303] << MONITOR_OK() and RUN() and INVMA() >>
S [326] ->
Q [304] << INVMA() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (353)                               [serial 1598] 
P [303] << MONITOR_OK() and RUN() and INVMA() >>
S [326] ->
Q [304] << MONITOR_OK() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (354)                               [serial 1599] 
P [303] << MONITOR_OK() and RUN() and INVMA() >>
S [326] ->
Q [304] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (355)                               [serial 1596] 
P [303] << MONITOR_OK() and RUN() and INVMA() >>
S [326] ->
Q [304] << INVMA() and MONITOR_OK() and RUN() >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 352 353 354:
Theorem (352) [serial 1597] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1596]
 
Theorem (353) [serial 1598] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1596]
 
Theorem (354) [serial 1599] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1596]
 


Theorem (356)                               [serial 1595] 
P [303] << INVMA() and (MONITOR_OK() and RUN()) >>
S [326] ->
Q [304] << INVMA() and MONITOR_OK() and RUN() >>
by Associativity: (b.c).a = a.b.c
and theorem 355:
Theorem (355) [serial 1596] used for:
  Associativity: (b.c).a = a.b.c [serial 1595]
 


Theorem (357)                               [serial 1594] 
P [303] << INVMA() and (MONITOR_OK() and RUN()) >>
S [326] ->
Q [304] << true and INVMA() and MONITOR_OK() and RUN() >>
by Law of And-Simplification:  P and true is P
and theorem 356:
Theorem (356) [serial 1595] used for:
  Law of And-Simplification:  P and true is P [serial 1594]
 


Theorem (358)                               [serial 1592] 
P [303] << INVMA() and (MONITOR_OK() and RUN()) >>
S [326] ->
Q [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 357 357:
Theorem (357) [serial 1594] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (357) [serial 1594] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (359)                               [serial 1026] 
P [303] << (INVMA()) and ((MONITOR_OK() and RUN())) >>
S [326] ->
Q [304] << INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 358:
Theorem (358) [serial 1592] used for:
    normalization of [serial 1026]
 


Theorem (360)                               [serial 1666] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [48] << MONITOR_OK() and RUN() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (361)                               [serial 1663] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [48] << (MONITOR_OK() and RUN()) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 360:
Theorem (360) [serial 1666] used for:
    normalization of [serial 1663]
 


Theorem (362)                               [serial 1660] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [48] << MONITOR_MODE(x:Normal) >>
by Substitution of Assertion Labels
and theorem 361:
Theorem (361) [serial 1663] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1660]
 


Theorem (363)                               [serial 1657] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [48] << MONITOR_MODE(x:Normal) >>
by Replacing port names with Assertions
and theorem 362:
Theorem (362) [serial 1660] used for:
  Replacing port names with Assertions [serial 1657]
 


Theorem (364)                               [serial 1678] 
P [304] << alarm_control^-1 = alarm_previous_period and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [331] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (365)                               [serial 1676] 
P [304] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
alarm_control^-1 = alarm_previous_period and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [331] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 364:
Theorem (364) [serial 1678] used for:
    normalization of [serial 1676]
 


Theorem (366)                               [serial 1674] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [331] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 365:
Theorem (365) [serial 1676] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1674]
 


Theorem (367)                               [serial 1672] 
P [304] << ((((alarm_previous_period = O_n))) or (((alarm_previous_period = Off)))) and 
((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
(UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [331] << not (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 366:
Theorem (366) [serial 1674] used for:
    normalization of [serial 1672]
 


Theorem (368)                               [serial 1671] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [331] << not (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) >>
by Substitution of Assertion Labels
and theorem 367:
Theorem (367) [serial 1672] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1671]
 


Theorem (369)                               [serial 1668] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [331] << not INI() >>
by Substitution of Assertion Labels
and theorem 368:
Theorem (368) [serial 1671] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1668]
 


Theorem (370)                               [serial 1664] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [331] << not (INI()) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 369:
Theorem (369) [serial 1668] used for:
    normalization of [serial 1664]
 


Theorem (371)                               [serial 1661] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [331] << not MONITOR_MODE(x:Init) >>
by Substitution of Assertion Labels
and theorem 370:
Theorem (370) [serial 1664] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1661]
 


Theorem (372)                               [serial 1658] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [331] << not MONITOR_MODE(x:Init) >>
by Replacing port names with Assertions
and theorem 371:
Theorem (371) [serial 1661] used for:
  Replacing port names with Assertions [serial 1658]
 


Theorem (373)                               [serial 1662] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [49] << (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (374)                               [serial 1659] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [49] << (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
by Replacing port names with Assertions
and theorem 373:
Theorem (373) [serial 1662] used for:
  Replacing port names with Assertions [serial 1659]
 


Theorem (375)                               [serial 1642] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [331] << MONITOR_MODE(x:Normal) and not MONITOR_MODE(x:Init) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 363 372 374:
Theorem (363) [serial 1657] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1642]
 
Theorem (372) [serial 1658] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1642]
 
Theorem (374) [serial 1659] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1642]
 


Theorem (376)                               [serial 1637] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP^0 < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP^0) >>
S [304] ->
Q [331] << MONITOR_MODE(x:Normal) and not MONITOR_MODE(x:Init) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 375:
Theorem (375) [serial 1642] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1637]
 


Theorem (377)                               [serial 1632] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP^0 < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP^0) >>
S [304] ->
Q [331] << MONITOR_MODE(x:Normal) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP) and 
not MONITOR_MODE(x:Init) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 376:
Theorem (376) [serial 1637] used for:
    normalization of [serial 1632]
 


Theorem (378)                               [serial 1626] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP^0 < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP^0) >>
S [304] ->
Q [331] << not MONITOR_MODE(x:Init) and (MONITOR_MODE(x:Normal) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 377:
Theorem (377) [serial 1632] used for:
  Associativity: (b.c).a = a.b.c [serial 1626]
 


Theorem (379)                               [serial 1622] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP^0 < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP^0) >>
S [304] ->
Q [331] << (MONITOR_MODE(x:Normal) and (((CURRENT_TEMP.t < LOWER_ALARM_TEMP)) or 
((CURRENT_TEMP.t > UPPER_ALARM_TEMP)))) and not (MONITOR_MODE(x:Init)) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 378:
Theorem (378) [serial 1626] used for:
    normalization of [serial 1622]
 


Theorem (380)                               [serial 1608] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP^0 < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP^0) >>
S [304] ->
Q [331] << REQMA2() and not REQMA1() >>
by Substitution of Assertion Labels
and theorem 379:
Theorem (379) [serial 1622] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1608]
 


Theorem (381)                               [serial 1600] 
P [304] << INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON() and ((((current_temperature.t < LOWER_ALARM_TEMP^0))) or 
(((current_temperature.t > UPPER_ALARM_TEMP^0)))) >>
S [304] ->
Q [331] << REQMA2() and not REQMA1() >>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 380:
Theorem (380) [serial 1608] used for:
    normalization of [serial 1600]
 


Theorem (382)                               [serial 1654] 
P [335] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_previous_period^1 = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (383)                               [serial 1650] 
P [335] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control = alarm_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 382:
Theorem (382) [serial 1654] used for:
    normalization of [serial 1650]
 


Theorem (384)                               [serial 1644] 
P [335] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control^0 = alarm_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 383:
Theorem (383) [serial 1650] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1644]
 


Theorem (385)                               [serial 1640] 
P [335] << alarm_control = (alarm_previous_period)^1 >>
S [302] ->
Q [305] << (alarm_control^(-1+1) = alarm_previous_period^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 384:
Theorem (384) [serial 1644] used for:
    normalization of [serial 1640]
 


Theorem (386)                               [serial 1628] 
P [335] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (alarm_control^-1 = alarm_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 385:
Theorem (385) [serial 1640] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1628]
 


Theorem (387)                               [serial 1623] 
P [335] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (((alarm_previous_period = alarm_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 386:
Theorem (386) [serial 1628] used for:
    normalization of [serial 1623]
 


Theorem (388)                               [serial 1610] 
P [335] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Substitution of Assertion Labels
and theorem 387:
Theorem (387) [serial 1623] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1610]
 


Theorem (389)                               [serial 1601] 
P [335] << (alarm_previous_period' = alarm_control) >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 388:
Theorem (388) [serial 1610] used for:
    normalization of [serial 1601]
 


Theorem (390)                               [serial 1612] 
P [331] << REQMA2() and not REQMA1() >>
S [332] ->
Q [36] << REQMA2() or REQMA5() or (ALARM_CONTROL^-1 = O_n and REQMA3()) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (391)                               [serial 1604] 
P [331] << REQMA2() and not REQMA1() >>
S [332] ->
Q [36] << (REQMA2()) or (REQMA5()) or ((REQMA3() and ((ALARM_CONTROL^-1 = O_n)))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 390:
Theorem (390) [serial 1612] used for:
    normalization of [serial 1604]
 


Theorem (392)                               [serial 1651] 
P [332] << O_n = alarm_control and REQMA2() and not REQMA1() >>
S [332] ->
Q [333] << O_n = alarm_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (393)                               [serial 1646] 
P [332] << O_n^0 = alarm_control^0 and REQMA2() and not REQMA1() >>
S [332] ->
Q [333] << O_n = alarm_control >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 392:
Theorem (392) [serial 1651] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1646]
 


Theorem (394)                               [serial 1641] 
P [332] << (O_n^0 = alarm_control^0) and REQMA2() and not REQMA1() >>
S [332] ->
Q [333] << O_n = alarm_control >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 393:
Theorem (393) [serial 1646] used for:
    normalization of [serial 1641]
 


Theorem (395)                               [serial 1635] 
P [332] << (O_n = alarm_control)^0 and REQMA2() and not REQMA1() >>
S [332] ->
Q [333] << O_n = alarm_control >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 394:
Theorem (394) [serial 1641] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1635]
 


Theorem (396)                               [serial 1631] 
P [332] << REQMA2() and not REQMA1() and (O_n = alarm_control)^0 >>
S [332] ->
Q [333] << O_n = alarm_control >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 395:
Theorem (395) [serial 1635] used for:
    normalization of [serial 1631]
 


Theorem (397)                               [serial 1614] 
P [332] << (O_n = alarm_control)^0 and (REQMA2() and not REQMA1()) >>
S [332] ->
Q [333] << O_n = alarm_control >>
by Associativity: (b.c).a = a.b.c
and theorem 396:
Theorem (396) [serial 1631] used for:
  Associativity: (b.c).a = a.b.c [serial 1614]
 


Theorem (398)                               [serial 1605] 
P [332] << (REQMA2() and not REQMA1()) and (alarm_control = O_n)^0 >>
S [332] ->
Q [333] << (alarm_control = O_n) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 397:
Theorem (397) [serial 1614] used for:
    normalization of [serial 1605]
 


Theorem (399)                               [serial 1602] 
P [331] << REQMA2() and not REQMA1() >>
S [332] alarm_control!(O_n)
Q [333] << (alarm_control = O_n) >>
by Enumeration Type Port Output 
and theorems 391 398:
Theorem (391) [serial 1604] used for:
  applied port output of enumeration type  alarm_control!(O_n) [serial 1602]
 
Theorem (398) [serial 1605] used for:
  applied port output <<pre and (alarm_control=O_n)^0>> -> <<post>> [serial 1602]
 


Theorem (400)                               [serial 1616] 
P [333] << O_n = alarm_control >>
S [334] ->
Q [335] << O_n = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (401)                               [serial 1606] 
P [333] << (alarm_control = O_n) >>
S [334] ->
Q [335] << (O_n = alarm_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 400:
Theorem (400) [serial 1616] used for:
    normalization of [serial 1606]
 


Theorem (402)                               [serial 1603] 
P [333] << (alarm_control = O_n) >>
S [334] alarm_previous_period' := O_n
Q [335] << (alarm_previous_period' = alarm_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 401:
Theorem (401) [serial 1606] used for:
  applied wp for assignment [serial 1603]
 


Theorem (403)                               [serial 1027] 
P [304] << INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON() and ((((current_temperature.t < LOWER_ALARM_TEMP^0))) or 
(((current_temperature.t > UPPER_ALARM_TEMP^0)))) >>
S [331] << REQMA2() and not REQMA1() >>
alarm_control!(O_n)
;
<< (alarm_control = O_n) >>
alarm_previous_period' := O_n
<< (alarm_previous_period' = alarm_control) >>
Q [302] << (INVMA())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 381 389 399 402:
Theorem (381) [serial 1600] used for:
  P -> P1 in sequential composition for [serial 1027]
 
Theorem (389) [serial 1601] used for:
  Q1 -> Q in sequential composition for [serial 1027]
 
Theorem (399) [serial 1602] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1027]
 
Theorem (402) [serial 1603] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1027]
 


Theorem (404)                               [serial 1758] 
P [304] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and not (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and not CURRENT_TEMP.t < (
0.5 + LOWER_ALARM_TEMP) and (O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [62] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (405)                               [serial 1755] 
P [304] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(not (CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP))) and (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(not ((UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) and alarm_control^-1 = alarm_previous_period and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [62] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 404:
Theorem (404) [serial 1758] used for:
    normalization of [serial 1755]
 


Theorem (406)                               [serial 1753] 
P [304] << (not (CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP))) and (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(not ((UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [62] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) >>
by Associativity: (b.c).a = a.b.c
and theorem 405:
Theorem (405) [serial 1755] used for:
  Associativity: (b.c).a = a.b.c [serial 1753]
 


Theorem (407)                               [serial 1748] 
P [304] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [62] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 406:
Theorem (406) [serial 1753] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1748]
 


Theorem (408)                               [serial 1745] 
P [304] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and 
((((alarm_previous_period = O_n))) or (((alarm_previous_period = Off)))) and 
((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [304] ->
Q [62] << ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 407:
Theorem (407) [serial 1748] used for:
    normalization of [serial 1745]
 


Theorem (409)                               [serial 1743] 
P [304] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and 
((((alarm_previous_period = O_n))) or (((alarm_previous_period = Off)))) and 
((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [304] ->
Q [62] << (MONITOR_OK() and RUN()) >>
by Substitution of Assertion Labels
and theorem 408:
Theorem (408) [serial 1745] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1743]
 


Theorem (410)                               [serial 1740] 
P [304] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [62] << MONITOR_MODE(x:Normal) >>
by Substitution of Assertion Labels
and theorem 409:
Theorem (409) [serial 1743] used for:
  substituted Assertions' predicates for  labels  [serial 1740]
 


Theorem (411)                               [serial 1731] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [62] << MONITOR_MODE(x:Normal) >>
by Replacing port names with Assertions
and theorem 410:
Theorem (410) [serial 1740] used for:
  Replacing port names with Assertions [serial 1731]
 


Theorem (412)                               [serial 1760] 
P [304] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and not (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and not CURRENT_TEMP.t < (
0.5 + LOWER_ALARM_TEMP) and (O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [340] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (413)                               [serial 1756] 
P [304] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(not (CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP))) and (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(not ((UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) and alarm_control^-1 = alarm_previous_period and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [340] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 412:
Theorem (412) [serial 1760] used for:
    normalization of [serial 1756]
 


Theorem (414)                               [serial 1754] 
P [304] << (not (CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP))) and (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(not ((UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [340] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 413:
Theorem (413) [serial 1756] used for:
  Associativity: (b.c).a = a.b.c [serial 1754]
 


Theorem (415)                               [serial 1750] 
P [304] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [340] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 414:
Theorem (414) [serial 1754] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1750]
 


Theorem (416)                               [serial 1746] 
P [304] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and 
((((alarm_previous_period = O_n))) or (((alarm_previous_period = Off)))) and 
((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [304] ->
Q [340] << not ((((now - START_TIME) < #Iso_Properties::Initialization_Timeout))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 415:
Theorem (415) [serial 1750] used for:
    normalization of [serial 1746]
 


Theorem (417)                               [serial 1744] 
P [304] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and 
((((alarm_previous_period = O_n))) or (((alarm_previous_period = Off)))) and 
((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [304] ->
Q [340] << not (INI()) >>
by Substitution of Assertion Labels
and theorem 416:
Theorem (416) [serial 1746] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1744]
 


Theorem (418)                               [serial 1741] 
P [304] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [340] << not MONITOR_MODE(x:Init) >>
by Substitution of Assertion Labels
and theorem 417:
Theorem (417) [serial 1744] used for:
  substituted Assertions' predicates for  labels  [serial 1741]
 


Theorem (419)                               [serial 1732] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [340] << not MONITOR_MODE(x:Init) >>
by Replacing port names with Assertions
and theorem 418:
Theorem (418) [serial 1741] used for:
  Replacing port names with Assertions [serial 1732]
 


Theorem (420)                               [serial 1742] 
P [304] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [63] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (421)                               [serial 1738] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [63] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) >>
by Replacing port names with Assertions
and theorem 420:
Theorem (420) [serial 1742] used for:
  Replacing port names with Assertions [serial 1738]
 


Theorem (422)                               [serial 1734] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [63] << ((0.5 + LOWER_ALARM_TEMP) <= (CURRENT_TEMP.t) and (CURRENT_TEMP.t) <= (UPPER_ALARM_TEMP - 0.5)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 421:
Theorem (421) [serial 1738] used for:
    normalization of [serial 1734]
 


Theorem (423)                               [serial 1733] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [63] << (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5) >>
by Replace expression with range:   a<=x and x<=b  iff  x in a..b
and theorem 422:
Theorem (422) [serial 1734] used for:
  Replace expression with range:   a<=x and x<=b  iff  x in a..b [serial 1733]
 


Theorem (424)                               [serial 1721] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [340] << MONITOR_MODE(x:Normal) and not MONITOR_MODE(x:Init) and (CURRENT_TEMP.t in 
0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 411 419 423:
Theorem (411) [serial 1731] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1721]
 
Theorem (419) [serial 1732] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1721]
 
Theorem (423) [serial 1733] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1721]
 


Theorem (425)                               [serial 1718] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [340] << MONITOR_MODE(x:Normal) and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5) and 
not MONITOR_MODE(x:Init) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 424:
Theorem (424) [serial 1721] used for:
    normalization of [serial 1718]
 


Theorem (426)                               [serial 1717] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [340] << not MONITOR_MODE(x:Init) and (MONITOR_MODE(x:Normal) and (CURRENT_TEMP.t in 
0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Associativity: (b.c).a = a.b.c
and theorem 425:
Theorem (425) [serial 1718] used for:
  Associativity: (b.c).a = a.b.c [serial 1717]
 


Theorem (427)                               [serial 1714] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [340] << not MONITOR_MODE(x:Init) and true and (MONITOR_MODE(x:Normal) and (CURRENT_TEMP.t in 
0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Law of And-Simplification:  P and true is P
and theorem 426:
Theorem (426) [serial 1717] used for:
  Law of And-Simplification:  P and true is P [serial 1714]
 


Theorem (428)                               [serial 1710] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [340] << true and (MONITOR_MODE(x:Normal) and ((CURRENT_TEMP.t in (LOWER_ALARM_TEMP + 
0.5) .. (UPPER_ALARM_TEMP - 0.5)))) and not (MONITOR_MODE(x:Init)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 427:
Theorem (427) [serial 1714] used for:
    normalization of [serial 1710]
 


Theorem (429)                               [serial 1708] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [340] << true and REQMA4() and not REQMA1() >>
by Substitution of Assertion Labels
and theorem 428:
Theorem (428) [serial 1710] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1708]
 


Theorem (430)                               [serial 1758] 
P [304] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and not (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and not CURRENT_TEMP.t < (
0.5 + LOWER_ALARM_TEMP) and (O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [62] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (431)                               [serial 1755] 
P [304] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(not (CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP))) and (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(not ((UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) and alarm_control^-1 = alarm_previous_period and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [62] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 430:
Theorem (430) [serial 1758] used for:
    normalization of [serial 1755]
 


Theorem (432)                               [serial 1753] 
P [304] << (not (CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP))) and (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(not ((UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [62] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) >>
by Associativity: (b.c).a = a.b.c
and theorem 431:
Theorem (431) [serial 1755] used for:
  Associativity: (b.c).a = a.b.c [serial 1753]
 


Theorem (433)                               [serial 1748] 
P [304] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [62] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 432:
Theorem (432) [serial 1753] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1748]
 


Theorem (434)                               [serial 1745] 
P [304] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and 
((((alarm_previous_period = O_n))) or (((alarm_previous_period = Off)))) and 
((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [304] ->
Q [62] << ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 433:
Theorem (433) [serial 1748] used for:
    normalization of [serial 1745]
 


Theorem (435)                               [serial 1743] 
P [304] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and 
((((alarm_previous_period = O_n))) or (((alarm_previous_period = Off)))) and 
((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [304] ->
Q [62] << (MONITOR_OK() and RUN()) >>
by Substitution of Assertion Labels
and theorem 434:
Theorem (434) [serial 1745] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1743]
 


Theorem (436)                               [serial 1740] 
P [304] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [62] << MONITOR_MODE(x:Normal) >>
by Substitution of Assertion Labels
and theorem 435:
Theorem (435) [serial 1743] used for:
  substituted Assertions' predicates for  labels  [serial 1740]
 


Theorem (437)                               [serial 1731] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [62] << MONITOR_MODE(x:Normal) >>
by Replacing port names with Assertions
and theorem 436:
Theorem (436) [serial 1740] used for:
  Replacing port names with Assertions [serial 1731]
 


Theorem (438)                               [serial 1760] 
P [304] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and not (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and not CURRENT_TEMP.t < (
0.5 + LOWER_ALARM_TEMP) and (O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [340] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (439)                               [serial 1756] 
P [304] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(not (CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP))) and (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(not ((UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) and alarm_control^-1 = alarm_previous_period and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [340] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 438:
Theorem (438) [serial 1760] used for:
    normalization of [serial 1756]
 


Theorem (440)                               [serial 1754] 
P [304] << (not (CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP))) and (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(not ((UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [340] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 439:
Theorem (439) [serial 1756] used for:
  Associativity: (b.c).a = a.b.c [serial 1754]
 


Theorem (441)                               [serial 1750] 
P [304] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [340] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 440:
Theorem (440) [serial 1754] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1750]
 


Theorem (442)                               [serial 1746] 
P [304] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and 
((((alarm_previous_period = O_n))) or (((alarm_previous_period = Off)))) and 
((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [304] ->
Q [340] << not ((((now - START_TIME) < #Iso_Properties::Initialization_Timeout))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 441:
Theorem (441) [serial 1750] used for:
    normalization of [serial 1746]
 


Theorem (443)                               [serial 1744] 
P [304] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and 
((((alarm_previous_period = O_n))) or (((alarm_previous_period = Off)))) and 
((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [304] ->
Q [340] << not (INI()) >>
by Substitution of Assertion Labels
and theorem 442:
Theorem (442) [serial 1746] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1744]
 


Theorem (444)                               [serial 1741] 
P [304] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [340] << not MONITOR_MODE(x:Init) >>
by Substitution of Assertion Labels
and theorem 443:
Theorem (443) [serial 1744] used for:
  substituted Assertions' predicates for  labels  [serial 1741]
 


Theorem (445)                               [serial 1732] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [340] << not MONITOR_MODE(x:Init) >>
by Replacing port names with Assertions
and theorem 444:
Theorem (444) [serial 1741] used for:
  Replacing port names with Assertions [serial 1732]
 


Theorem (446)                               [serial 1742] 
P [304] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [63] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (447)                               [serial 1738] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [63] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) >>
by Replacing port names with Assertions
and theorem 446:
Theorem (446) [serial 1742] used for:
  Replacing port names with Assertions [serial 1738]
 


Theorem (448)                               [serial 1734] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [63] << ((0.5 + LOWER_ALARM_TEMP) <= (CURRENT_TEMP.t) and (CURRENT_TEMP.t) <= (UPPER_ALARM_TEMP - 0.5)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 447:
Theorem (447) [serial 1738] used for:
    normalization of [serial 1734]
 


Theorem (449)                               [serial 1733] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [63] << (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5) >>
by Replace expression with range:   a<=x and x<=b  iff  x in a..b
and theorem 448:
Theorem (448) [serial 1734] used for:
  Replace expression with range:   a<=x and x<=b  iff  x in a..b [serial 1733]
 


Theorem (450)                               [serial 1721] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [340] << MONITOR_MODE(x:Normal) and not MONITOR_MODE(x:Init) and (CURRENT_TEMP.t in 
0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 437 445 449:
Theorem (437) [serial 1731] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1721]
 
Theorem (445) [serial 1732] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1721]
 
Theorem (449) [serial 1733] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1721]
 


Theorem (451)                               [serial 1718] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [340] << MONITOR_MODE(x:Normal) and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5) and 
not MONITOR_MODE(x:Init) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 450:
Theorem (450) [serial 1721] used for:
    normalization of [serial 1718]
 


Theorem (452)                               [serial 1717] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [340] << not MONITOR_MODE(x:Init) and (MONITOR_MODE(x:Normal) and (CURRENT_TEMP.t in 
0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Associativity: (b.c).a = a.b.c
and theorem 451:
Theorem (451) [serial 1718] used for:
  Associativity: (b.c).a = a.b.c [serial 1717]
 


Theorem (453)                               [serial 1714] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [340] << not MONITOR_MODE(x:Init) and true and (MONITOR_MODE(x:Normal) and (CURRENT_TEMP.t in 
0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Law of And-Simplification:  P and true is P
and theorem 452:
Theorem (452) [serial 1717] used for:
  Law of And-Simplification:  P and true is P [serial 1714]
 


Theorem (454)                               [serial 1710] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [340] << true and (MONITOR_MODE(x:Normal) and ((CURRENT_TEMP.t in (LOWER_ALARM_TEMP + 
0.5) .. (UPPER_ALARM_TEMP - 0.5)))) and not (MONITOR_MODE(x:Init)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 453:
Theorem (453) [serial 1714] used for:
    normalization of [serial 1710]
 


Theorem (455)                               [serial 1708] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [340] << true and REQMA4() and not REQMA1() >>
by Substitution of Assertion Labels
and theorem 454:
Theorem (454) [serial 1710] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1708]
 


Theorem (456)                               [serial 1700] 
P [304] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [340] << AXIOM_AR() and REQMA4() and not REQMA1() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 455 455:
Theorem (455) [serial 1708] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (455) [serial 1708] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (457)                               [serial 1690] 
P [304] << ((current_temperature.t >= (lower_alarm_temperature + 0.5))) and ((current_temperature.t <= (UPPER_ALARM_TEMP - 0.5))) and 
INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON() >>
S [304] ->
Q [340] << REQMA4() and not REQMA1() and AXIOM_AR() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 456:
Theorem (456) [serial 1700] used for:
    normalization of [serial 1690]
 


Theorem (458)                               [serial 1687] 
P [304] << ((current_temperature.t >= (lower_alarm_temperature + 0.5))) and ((current_temperature.t <= (UPPER_ALARM_TEMP^0 - 0.5))) and 
INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON() >>
S [304] ->
Q [340] << REQMA4() and not REQMA1() and AXIOM_AR() >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 457:
Theorem (457) [serial 1690] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1687]
 


Theorem (459)                               [serial 1680] 
P [304] << INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON() and (((current_temperature.t >= (
lower_alarm_temperature + 0.5))) and ((current_temperature.t <= (UPPER_ALARM_TEMP^0 - 0.5)))) >>
S [304] ->
Q [340] << REQMA4() and not REQMA1() and AXIOM_AR() >>
by Associativity: (b.c).a = a.b.c
and theorem 458:
Theorem (458) [serial 1687] used for:
  Associativity: (b.c).a = a.b.c [serial 1680]
 


Theorem (460)                               [serial 1729] 
P [344] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_previous_period^1 = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (461)                               [serial 1726] 
P [344] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control = alarm_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 460:
Theorem (460) [serial 1729] used for:
    normalization of [serial 1726]
 


Theorem (462)                               [serial 1723] 
P [344] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control^0 = alarm_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 461:
Theorem (461) [serial 1726] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1723]
 


Theorem (463)                               [serial 1719] 
P [344] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (alarm_control^(-1+1) = alarm_previous_period^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 462:
Theorem (462) [serial 1723] used for:
    normalization of [serial 1719]
 


Theorem (464)                               [serial 1712] 
P [344] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (alarm_control^-1 = alarm_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 463:
Theorem (463) [serial 1719] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1712]
 


Theorem (465)                               [serial 1709] 
P [344] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (((alarm_previous_period = alarm_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 464:
Theorem (464) [serial 1712] used for:
    normalization of [serial 1709]
 


Theorem (466)                               [serial 1698] 
P [344] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Substitution of Assertion Labels
and theorem 465:
Theorem (465) [serial 1709] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1698]
 


Theorem (467)                               [serial 1689] 
P [344] << ((alarm_previous_period)^1 = alarm_control) >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 466:
Theorem (466) [serial 1698] used for:
    normalization of [serial 1689]
 


Theorem (468)                               [serial 1681] 
P [344] << (alarm_previous_period' = alarm_control) >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 467:
Theorem (467) [serial 1689] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1681]
 


Theorem (469)                               [serial 1694] 
P [340] << AXIOM_AR() and REQMA4() and not REQMA1() >>
S [341] ->
Q [39] << REQMA1() or REQMA4() or (ALARM_CONTROL^-1 = Off and REQMA3()) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (470)                               [serial 1684] 
P [340] << REQMA4() and not REQMA1() and AXIOM_AR() >>
S [341] ->
Q [39] << (REQMA1()) or (REQMA4()) or ((REQMA3() and ((ALARM_CONTROL^-1 = Off)))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 469:
Theorem (469) [serial 1694] used for:
    normalization of [serial 1684]
 


Theorem (471)                               [serial 1702] 
P [341] << Off = alarm_control and AXIOM_AR() and REQMA4() and not REQMA1() >>
S [341] ->
Q [342] << Off = alarm_control and AXIOM_AR() and REQMA4() and not REQMA1() >>
by Identity (id):  P->P is tautology


Theorem (472)                               [serial 1692] 
P [341] << REQMA4() and not REQMA1() and AXIOM_AR() and (alarm_control = Off) >>
S [341] ->
Q [342] << REQMA4() and not REQMA1() and AXIOM_AR() and ((alarm_control = Off)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 471:
Theorem (471) [serial 1702] used for:
    normalization of [serial 1692]
 


Theorem (473)                               [serial 1691] 
P [341] << REQMA4() and not REQMA1() and AXIOM_AR() and (alarm_control^0 = Off^0) >>
S [341] ->
Q [342] << REQMA4() and not REQMA1() and AXIOM_AR() and ((alarm_control = Off)) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 472:
Theorem (472) [serial 1692] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1691]
 


Theorem (474)                               [serial 1688] 
P [341] << REQMA4() and not REQMA1() and AXIOM_AR() and (alarm_control = Off)^0 >>
S [341] ->
Q [342] << REQMA4() and not REQMA1() and AXIOM_AR() and ((alarm_control = Off)) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 473:
Theorem (473) [serial 1691] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1688]
 


Theorem (475)                               [serial 1685] 
P [341] << (REQMA4() and not REQMA1() and AXIOM_AR()) and (alarm_control = Off)^0 >>
S [341] ->
Q [342] << REQMA4() and not REQMA1() and AXIOM_AR() and ((alarm_control = Off)) >>
by Associativity: (b.c).a = a.b.c
and theorem 474:
Theorem (474) [serial 1688] used for:
  Associativity: (b.c).a = a.b.c [serial 1685]
 


Theorem (476)                               [serial 1682] 
P [340] << REQMA4() and not REQMA1() and AXIOM_AR() >>
S [341] alarm_control!(Off)
Q [342] << REQMA4() and not REQMA1() and AXIOM_AR() and ((alarm_control = Off)) >>
by Enumeration Type Port Output 
and theorems 470 475:
Theorem (470) [serial 1684] used for:
  applied port output of enumeration type  alarm_control!(Off) [serial 1682]
 
Theorem (475) [serial 1685] used for:
  applied port output <<pre and (alarm_control=Off)^0>> -> <<post>> [serial 1682]
 


Theorem (477)                               [serial 1696] 
P [342] << Off = alarm_control and AXIOM_AR() and REQMA4() and not REQMA1() >>
S [343] ->
Q [344] << Off = alarm_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (478)                               [serial 1686] 
P [342] << REQMA4() and not REQMA1() and AXIOM_AR() and ((alarm_control = Off)) >>
S [343] ->
Q [344] << (Off = alarm_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 477:
Theorem (477) [serial 1696] used for:
    normalization of [serial 1686]
 


Theorem (479)                               [serial 1683] 
P [342] << REQMA4() and not REQMA1() and AXIOM_AR() and ((alarm_control = Off)) >>
S [343] alarm_previous_period' := Off
Q [344] << (alarm_previous_period' = alarm_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 478:
Theorem (478) [serial 1686] used for:
  applied wp for assignment [serial 1683]
 


Theorem (480)                               [serial 1028] 
P [304] << INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON() and (((current_temperature.t >= (
lower_alarm_temperature + 0.5))) and ((current_temperature.t <= (UPPER_ALARM_TEMP^0 - 0.5)))) >>
S [340] << REQMA4() and not REQMA1() and AXIOM_AR() >>
alarm_control!(Off)
;
<< REQMA4() and not REQMA1() and AXIOM_AR() and ((alarm_control = Off)) >>
alarm_previous_period' := Off
<< (alarm_previous_period' = alarm_control) >>
Q [302] << (INVMA())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 459 468 476 479:
Theorem (459) [serial 1680] used for:
  P -> P1 in sequential composition for [serial 1028]
 
Theorem (468) [serial 1681] used for:
  Q1 -> Q in sequential composition for [serial 1028]
 
Theorem (476) [serial 1682] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1028]
 
Theorem (479) [serial 1683] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1028]
 


Theorem (481)                               [serial 1777] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or (CURRENT_TEMP.t <= UPPER_ALARM_TEMP and 
(UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (482)                               [serial 1775] 
P [304] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or (CURRENT_TEMP.t <= UPPER_ALARM_TEMP and 
(UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
S [346] ->
Q [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 481:
Theorem (481) [serial 1777] used for:
    normalization of [serial 1775]
 


Theorem (483)                               [serial 1774] 
P [304] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP)) or (current_temperature.t <= UPPER_ALARM_TEMP and 
(UPPER_ALARM_TEMP - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Replacing port names with Assertions
and theorem 482:
Theorem (482) [serial 1775] used for:
  Replacing port names with Assertions [serial 1774]
 


Theorem (484)                               [serial 1773] 
P [304] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 483:
Theorem (483) [serial 1774] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1773]
 


Theorem (485)                               [serial 1772] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Associativity: (b.c).a = a.b.c
and theorem 484:
Theorem (484) [serial 1773] used for:
  Associativity: (b.c).a = a.b.c [serial 1772]
 


Theorem (486)                               [serial 1770] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
true and (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and ((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or (CURRENT_TEMP.t <= UPPER_ALARM_TEMP and 
(UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Law of And-Simplification:  P and true is P
and theorem 485:
Theorem (485) [serial 1772] used for:
  Law of And-Simplification:  P and true is P [serial 1770]
 


Theorem (487)                               [serial 1768] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
true and (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and (((UPPER_ALARM_TEMP - 0.5) < (CURRENT_TEMP.t) and 
(CURRENT_TEMP.t) <= UPPER_ALARM_TEMP) or (LOWER_ALARM_TEMP <= (CURRENT_TEMP.t) and 
(CURRENT_TEMP.t) < (0.5 + LOWER_ALARM_TEMP))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 486:
Theorem (486) [serial 1770] used for:
    normalization of [serial 1768]
 


Theorem (488)                               [serial 1766] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
true and (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Replace expression with range:  a<=x and x<b  iff  x in a.,b
and theorem 487:
Theorem (487) [serial 1768] used for:
  Replace expression with range:  a<=x and x<b  iff  x in a.,b [serial 1766]
 


Theorem (489)                               [serial 1764] 
P [304] << ((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
((((alarm_previous_period = O_n))) or (((alarm_previous_period = Off)))) and 
(((((current_temperature.t >= LOWER_ALARM_TEMP^0)) and ((current_temperature.t < (
LOWER_ALARM_TEMP^0 + 0.5))))) or ((((current_temperature.t > (UPPER_ALARM_TEMP^0 - 0.5))) and 
((current_temperature.t <= UPPER_ALARM_TEMP^0))))) >>
S [346] ->
Q [305] << ((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (LOWER_ALARM_TEMP + 0.5)))) or 
(((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
(not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and ((alarm_previous_period = alarm_control^-1)) and 
true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 488:
Theorem (488) [serial 1766] used for:
    normalization of [serial 1764]
 


Theorem (490)                               [serial 1763] 
P [304] << INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON() and (((((current_temperature.t >= LOWER_ALARM_TEMP^0)) and 
((current_temperature.t < (LOWER_ALARM_TEMP^0 + 0.5))))) or ((((current_temperature.t > (UPPER_ALARM_TEMP^0 - 0.5))) and 
((current_temperature.t <= UPPER_ALARM_TEMP^0))))) >>
S [346] ->
Q [305] << EDGE_TEMP() and MONITOR_OK() and RUN() and INVMA() and true >>
by Substitution of Assertion Labels
and theorem 489:
Theorem (489) [serial 1764] used for:
  substituted Assertions' predicates for  labels  [serial 1763]
 


Theorem (491)                               [serial 1777] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or (CURRENT_TEMP.t <= UPPER_ALARM_TEMP and 
(UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (492)                               [serial 1775] 
P [304] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or (CURRENT_TEMP.t <= UPPER_ALARM_TEMP and 
(UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
S [346] ->
Q [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 491:
Theorem (491) [serial 1777] used for:
    normalization of [serial 1775]
 


Theorem (493)                               [serial 1774] 
P [304] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP)) or (current_temperature.t <= UPPER_ALARM_TEMP and 
(UPPER_ALARM_TEMP - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Replacing port names with Assertions
and theorem 492:
Theorem (492) [serial 1775] used for:
  Replacing port names with Assertions [serial 1774]
 


Theorem (494)                               [serial 1773] 
P [304] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 493:
Theorem (493) [serial 1774] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1773]
 


Theorem (495)                               [serial 1772] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Associativity: (b.c).a = a.b.c
and theorem 494:
Theorem (494) [serial 1773] used for:
  Associativity: (b.c).a = a.b.c [serial 1772]
 


Theorem (496)                               [serial 1770] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
true and (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and ((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or (CURRENT_TEMP.t <= UPPER_ALARM_TEMP and 
(UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Law of And-Simplification:  P and true is P
and theorem 495:
Theorem (495) [serial 1772] used for:
  Law of And-Simplification:  P and true is P [serial 1770]
 


Theorem (497)                               [serial 1768] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
true and (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and (((UPPER_ALARM_TEMP - 0.5) < (CURRENT_TEMP.t) and 
(CURRENT_TEMP.t) <= UPPER_ALARM_TEMP) or (LOWER_ALARM_TEMP <= (CURRENT_TEMP.t) and 
(CURRENT_TEMP.t) < (0.5 + LOWER_ALARM_TEMP))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 496:
Theorem (496) [serial 1770] used for:
    normalization of [serial 1768]
 


Theorem (498)                               [serial 1766] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
true and (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Replace expression with range:  a<=x and x<b  iff  x in a.,b
and theorem 497:
Theorem (497) [serial 1768] used for:
  Replace expression with range:  a<=x and x<b  iff  x in a.,b [serial 1766]
 


Theorem (499)                               [serial 1764] 
P [304] << ((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
((((alarm_previous_period = O_n))) or (((alarm_previous_period = Off)))) and 
(((((current_temperature.t >= LOWER_ALARM_TEMP^0)) and ((current_temperature.t < (
LOWER_ALARM_TEMP^0 + 0.5))))) or ((((current_temperature.t > (UPPER_ALARM_TEMP^0 - 0.5))) and 
((current_temperature.t <= UPPER_ALARM_TEMP^0))))) >>
S [346] ->
Q [305] << ((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (LOWER_ALARM_TEMP + 0.5)))) or 
(((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
(not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and ((alarm_previous_period = alarm_control^-1)) and 
true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 498:
Theorem (498) [serial 1766] used for:
    normalization of [serial 1764]
 


Theorem (500)                               [serial 1763] 
P [304] << INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON() and (((((current_temperature.t >= LOWER_ALARM_TEMP^0)) and 
((current_temperature.t < (LOWER_ALARM_TEMP^0 + 0.5))))) or ((((current_temperature.t > (UPPER_ALARM_TEMP^0 - 0.5))) and 
((current_temperature.t <= UPPER_ALARM_TEMP^0))))) >>
S [346] ->
Q [305] << EDGE_TEMP() and MONITOR_OK() and RUN() and INVMA() and true >>
by Substitution of Assertion Labels
and theorem 499:
Theorem (499) [serial 1764] used for:
  substituted Assertions' predicates for  labels  [serial 1763]
 


Theorem (501)                               [serial 1029] 
P [304] << INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON() and (((((current_temperature.t >= LOWER_ALARM_TEMP^0)) and 
((current_temperature.t < (LOWER_ALARM_TEMP^0 + 0.5))))) or ((((current_temperature.t > (UPPER_ALARM_TEMP^0 - 0.5))) and 
((current_temperature.t <= UPPER_ALARM_TEMP^0))))) >>
S [346] ->
Q [305] << EDGE_TEMP() and MONITOR_OK() and RUN() and INVMA() and AXIOM_OFFON() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 500 500:
Theorem (500) [serial 1763] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (500) [serial 1763] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (502)                               [serial 1899] 
P [305] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [354] << alarm_control^-1 = alarm_previous_period >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (503)                               [serial 1885] 
P [305] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [354] << alarm_control^-1 = O_n >>
by Guided Substitution of Equals
and theorem 502:
Theorem (502) [serial 1899] used for:
  Guided Substitution of Equals
 replacing "O_n" with its = "alarm_previous_period" in its postcondition [serial 1885]
 


Theorem (504)                               [serial 1886] 
P [305] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [70] << CURRENT_TEMPERATURE_STATUS = Valid >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (505)                               [serial 1887] 
P [305] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [69] << not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (506)                               [serial 1888] 
P [305] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [4] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (507)                               [serial 1896] 
P [305] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [293] << (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (508)                               [serial 1889] 
P [305] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [293] << ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 507:
Theorem (507) [serial 1896] used for:
    normalization of [serial 1889]
 


Theorem (509)                               [serial 1880] 
P [305] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << alarm_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 503 504 505 506 508:
Theorem (503) [serial 1885] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1880]
 
Theorem (504) [serial 1886] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1880]
 
Theorem (505) [serial 1887] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1880]
 
Theorem (506) [serial 1888] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1880]
 
Theorem (508) [serial 1889] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1880]
 


Theorem (510)                               [serial 1877] 
P [305] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
alarm_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 509:
Theorem (509) [serial 1880] used for:
    normalization of [serial 1877]
 


Theorem (511)                               [serial 1872] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = O_n and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 510:
Theorem (510) [serial 1877] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1872]
 


Theorem (512)                               [serial 1870] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and true and 
alarm_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Law of And-Simplification:  P and true is P
and theorem 511:
Theorem (511) [serial 1872] used for:
  Law of And-Simplification:  P and true is P [serial 1870]
 


Theorem (513)                               [serial 1863] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_control^-1 and 
alarm_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Equality Law (idistr):  a=a <-> true
and theorem 512:
Theorem (512) [serial 1870] used for:
  Equality Law (idistr):  a=a <-> true [serial 1863]
 


Theorem (514)                               [serial 1853] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
and theorem 513:
Theorem (513) [serial 1863] used for:
  Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
 replacing "alarm_previous_period"
 with its ="
 (alarm_control^-1)" [serial 1853]
 


Theorem (515)                               [serial 1850] 
P [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (O_n = alarm_previous_period or Off = alarm_previous_period) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 514:
Theorem (514) [serial 1853] used for:
    normalization of [serial 1850]
 


Theorem (516)                               [serial 1849] 
P [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (O_n = alarm_previous_period or Off = alarm_previous_period) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 515:
Theorem (515) [serial 1850] used for:
  Associativity: (b.c).a = a.b.c [serial 1849]
 


Theorem (517)                               [serial 1847] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
(#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 516:
Theorem (516) [serial 1849] used for:
  Associativity: (b.c).a = a.b.c [serial 1847]
 


Theorem (518)                               [serial 1843] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
true and (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
by Law of And-Simplification:  P and true is P
and theorem 517:
Theorem (517) [serial 1847] used for:
  Law of And-Simplification:  P and true is P [serial 1843]
 


Theorem (519)                               [serial 1839] 
P [305] << O_n = alarm_previous_period and ((((alarm_previous_period = O_n))) or 
(((alarm_previous_period = Off)))) and ((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (
LOWER_ALARM_TEMP + 0.5)))) or (((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [305] ->
Q [353] << alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
true and ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) and (
(CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 518:
Theorem (518) [serial 1843] used for:
    normalization of [serial 1839]
 


Theorem (520)                               [serial 1822] 
P [305] << O_n = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [353] << alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
true and (MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Substitution of Assertion Labels
and theorem 519:
Theorem (519) [serial 1839] used for:
  substituted Assertions' predicates for  labels  [serial 1822]
 


Theorem (521)                               [serial 1816] 
P [305] << O_n = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [353] << O_n = alarm_previous_period and true and ((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (
LOWER_ALARM_TEMP + 0.5)))) or (((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
((alarm_previous_period = alarm_control^-1)) and (MONITOR_OK() and RUN()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 520:
Theorem (520) [serial 1822] used for:
    normalization of [serial 1816]
 


Theorem (522)                               [serial 1813] 
P [305] << O_n = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [353] << O_n = alarm_previous_period and true and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
by Substitution of Assertion Labels
and theorem 521:
Theorem (521) [serial 1816] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1813]
 


Theorem (523)                               [serial 1899] 
P [305] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [354] << alarm_control^-1 = alarm_previous_period >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (524)                               [serial 1885] 
P [305] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [354] << alarm_control^-1 = O_n >>
by Guided Substitution of Equals
and theorem 523:
Theorem (523) [serial 1899] used for:
  Guided Substitution of Equals
 replacing "O_n" with its = "alarm_previous_period" in its postcondition [serial 1885]
 


Theorem (525)                               [serial 1886] 
P [305] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [70] << CURRENT_TEMPERATURE_STATUS = Valid >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (526)                               [serial 1887] 
P [305] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [69] << not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (527)                               [serial 1888] 
P [305] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [4] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (528)                               [serial 1896] 
P [305] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [293] << (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (529)                               [serial 1889] 
P [305] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [293] << ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 528:
Theorem (528) [serial 1896] used for:
    normalization of [serial 1889]
 


Theorem (530)                               [serial 1880] 
P [305] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << alarm_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 524 525 526 527 529:
Theorem (524) [serial 1885] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1880]
 
Theorem (525) [serial 1886] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1880]
 
Theorem (526) [serial 1887] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1880]
 
Theorem (527) [serial 1888] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1880]
 
Theorem (529) [serial 1889] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1880]
 


Theorem (531)                               [serial 1877] 
P [305] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
alarm_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 530:
Theorem (530) [serial 1880] used for:
    normalization of [serial 1877]
 


Theorem (532)                               [serial 1872] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = O_n and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 531:
Theorem (531) [serial 1877] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1872]
 


Theorem (533)                               [serial 1870] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and true and 
alarm_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Law of And-Simplification:  P and true is P
and theorem 532:
Theorem (532) [serial 1872] used for:
  Law of And-Simplification:  P and true is P [serial 1870]
 


Theorem (534)                               [serial 1863] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_control^-1 and 
alarm_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Equality Law (idistr):  a=a <-> true
and theorem 533:
Theorem (533) [serial 1870] used for:
  Equality Law (idistr):  a=a <-> true [serial 1863]
 


Theorem (535)                               [serial 1853] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
and theorem 534:
Theorem (534) [serial 1863] used for:
  Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
 replacing "alarm_previous_period"
 with its ="
 (alarm_control^-1)" [serial 1853]
 


Theorem (536)                               [serial 1850] 
P [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (O_n = alarm_previous_period or Off = alarm_previous_period) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 535:
Theorem (535) [serial 1853] used for:
    normalization of [serial 1850]
 


Theorem (537)                               [serial 1849] 
P [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (O_n = alarm_previous_period or Off = alarm_previous_period) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 536:
Theorem (536) [serial 1850] used for:
  Associativity: (b.c).a = a.b.c [serial 1849]
 


Theorem (538)                               [serial 1847] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
(#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 537:
Theorem (537) [serial 1849] used for:
  Associativity: (b.c).a = a.b.c [serial 1847]
 


Theorem (539)                               [serial 1843] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [353] << alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
true and (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
by Law of And-Simplification:  P and true is P
and theorem 538:
Theorem (538) [serial 1847] used for:
  Law of And-Simplification:  P and true is P [serial 1843]
 


Theorem (540)                               [serial 1839] 
P [305] << O_n = alarm_previous_period and ((((alarm_previous_period = O_n))) or 
(((alarm_previous_period = Off)))) and ((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (
LOWER_ALARM_TEMP + 0.5)))) or (((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [305] ->
Q [353] << alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
true and ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) and (
(CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 539:
Theorem (539) [serial 1843] used for:
    normalization of [serial 1839]
 


Theorem (541)                               [serial 1822] 
P [305] << O_n = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [353] << alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
true and (MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Substitution of Assertion Labels
and theorem 540:
Theorem (540) [serial 1839] used for:
  substituted Assertions' predicates for  labels  [serial 1822]
 


Theorem (542)                               [serial 1816] 
P [305] << O_n = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [353] << O_n = alarm_previous_period and true and ((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (
LOWER_ALARM_TEMP + 0.5)))) or (((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
((alarm_previous_period = alarm_control^-1)) and (MONITOR_OK() and RUN()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 541:
Theorem (541) [serial 1822] used for:
    normalization of [serial 1816]
 


Theorem (543)                               [serial 1813] 
P [305] << O_n = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [353] << O_n = alarm_previous_period and true and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
by Substitution of Assertion Labels
and theorem 542:
Theorem (542) [serial 1816] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1813]
 


Theorem (544)                               [serial 1788] 
P [305] << O_n = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [353] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 543 543:
Theorem (543) [serial 1813] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (543) [serial 1813] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (545)                               [serial 1779] 
P [305] << EDGE_TEMP() and MONITOR_OK() and RUN() and INVMA() and AXIOM_OFFON() and 
((alarm_previous_period = O_n)) >>
S [305] ->
Q [353] << EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = O_n)) and 
INVMA() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 544:
Theorem (544) [serial 1788] used for:
    normalization of [serial 1779]
 


Theorem (546)                               [serial 1836] 
P [358] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_previous_period^1 = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (547)                               [serial 1832] 
P [358] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control = alarm_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 546:
Theorem (546) [serial 1836] used for:
    normalization of [serial 1832]
 


Theorem (548)                               [serial 1830] 
P [358] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control^0 = alarm_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 547:
Theorem (547) [serial 1832] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1830]
 


Theorem (549)                               [serial 1826] 
P [358] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (alarm_control^(-1+1) = alarm_previous_period^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 548:
Theorem (548) [serial 1830] used for:
    normalization of [serial 1826]
 


Theorem (550)                               [serial 1820] 
P [358] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (alarm_control^-1 = alarm_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 549:
Theorem (549) [serial 1826] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1820]
 


Theorem (551)                               [serial 1815] 
P [358] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (((alarm_previous_period = alarm_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 550:
Theorem (550) [serial 1820] used for:
    normalization of [serial 1815]
 


Theorem (552)                               [serial 1808] 
P [358] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Substitution of Assertion Labels
and theorem 551:
Theorem (551) [serial 1815] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1808]
 


Theorem (553)                               [serial 1802] 
P [358] << alarm_control = (alarm_previous_period)^1 >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 552:
Theorem (552) [serial 1808] used for:
    normalization of [serial 1802]
 


Theorem (554)                               [serial 1790] 
P [358] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 553:
Theorem (553) [serial 1802] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1790]
 


Theorem (555)                               [serial 1780] 
P [358] << (alarm_previous_period' = alarm_control) >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 554:
Theorem (554) [serial 1790] used for:
    normalization of [serial 1780]
 


Theorem (556)                               [serial 1898] 
P [353] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << (alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP))) or (CURRENT_TEMPERATURE_STATUS = Valid and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) or 
(not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (557)                               [serial 1882] 
P [353] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << (alarm_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP))) or (CURRENT_TEMPERATURE_STATUS = Valid and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) or 
(not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
by Guided Substitution of Equals
and theorem 556:
Theorem (556) [serial 1898] used for:
  Guided Substitution of Equals
 replacing "O_n" with its = "alarm_previous_period" in its postcondition [serial 1882]
 


Theorem (558)                               [serial 1878] 
P [353] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << ((not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
alarm_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or ((not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) or 
((not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 557:
Theorem (557) [serial 1882] used for:
    normalization of [serial 1878]
 


Theorem (559)                               [serial 1874] 
P [353] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and ALARM_CONTROL^-1 = alarm_control^-1 and 
alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = O_n and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP))) or (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) or 
(#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and not (
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 558:
Theorem (558) [serial 1878] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1874]
 


Theorem (560)                               [serial 1871] 
P [353] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and ALARM_CONTROL^-1 = alarm_control^-1 and 
alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = O_n and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP))) or (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) or 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 559:
Theorem (559) [serial 1874] used for:
    normalization of [serial 1871]
 


Theorem (561)                               [serial 1868] 
P [353] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and ALARM_CONTROL^-1 = alarm_control^-1 and 
alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = O_n and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP))) or (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) or 
(#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 560:
Theorem (560) [serial 1871] used for:
  Associativity: (b.c).a = a.b.c [serial 1868]
 


Theorem (562)                               [serial 1865] 
P [353] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and ALARM_CONTROL^-1 = alarm_control^-1 and 
alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << (alarm_control^-1 = O_n and (not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and 
((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP))) or ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and 
((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
(UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) or 
((((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and not (
not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid)))) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 561:
Theorem (561) [serial 1868] used for:
    normalization of [serial 1865]
 


Theorem (563)                               [serial 1864] 
P [353] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and ALARM_CONTROL^-1 = alarm_control^-1 and 
alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << (alarm_control^-1 = O_n and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) or 
(RUN() and not MONITOR_OK()) >>
by Substitution of Assertion Labels
and theorem 562:
Theorem (562) [serial 1865] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1864]
 


Theorem (564)                               [serial 1861] 
P [353] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and ALARM_CONTROL^-1 = alarm_control^-1 and 
alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = alarm_previous_period and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << (ALARM_CONTROL^-1 = O_n and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) or 
(RUN() and not MONITOR_OK()) >>
by Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
and theorem 563:
Theorem (563) [serial 1864] used for:
  Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
 replacing "ALARM_CONTROL^-1"
 with its ="
 (alarm_control^-1)" [serial 1861]
 


Theorem (565)                               [serial 1858] 
P [353] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and ALARM_CONTROL^-1 = alarm_control^-1 and 
alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << (ALARM_CONTROL^-1 = O_n and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) or 
(RUN() and not MONITOR_OK()) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 564:
Theorem (564) [serial 1861] used for:
    normalization of [serial 1858]
 


Theorem (566)                               [serial 1855] 
P [353] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and ALARM_CONTROL^-1 = alarm_control^-1 and 
alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << (ALARM_CONTROL^-1 = O_n and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) or 
(RUN() and not MONITOR_OK()) >>
by Associativity: (b.c).a = a.b.c
and theorem 565:
Theorem (565) [serial 1858] used for:
  Associativity: (b.c).a = a.b.c [serial 1855]
 


Theorem (567)                               [serial 1851] 
P [353] << (not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and ALARM_CONTROL^-1 = alarm_control^-1 and 
alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << (MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) and ALARM_CONTROL^-1 = O_n) or 
(RUN() and not MONITOR_OK()) or (MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 566:
Theorem (566) [serial 1855] used for:
    normalization of [serial 1851]
 


Theorem (568)                               [serial 1848] 
P [353] << MONITOR_OK() and RUN() and ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << (MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) and ALARM_CONTROL^-1 = O_n) or 
(RUN() and not MONITOR_OK()) or (MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP)) >>
by Substitution of Assertion Labels
and theorem 567:
Theorem (567) [serial 1851] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1848]
 


Theorem (569)                               [serial 1846] 
P [353] << MONITOR_OK() and RUN() and ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << ((MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) and ALARM_CONTROL^-1 = O_n) or 
(RUN() and not MONITOR_OK()) or (MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 568:
Theorem (568) [serial 1848] used for:
  Associativity: (b.c).a = a.b.c [serial 1846]
 


Theorem (570)                               [serial 1841] 
P [353] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << (ALARM_CONTROL^-1 = O_n and ((MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)))) or (RUN() and 
not MONITOR_OK()) or ((MONITOR_OK() and RUN()) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 569:
Theorem (569) [serial 1846] used for:
  Associativity: (b.c).a = a.b.c [serial 1841]
 


Theorem (571)                               [serial 1838] 
P [353] << O_n = alarm_previous_period and ((ALARM_CONTROL^-1 = alarm_control^-1)) and 
((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (LOWER_ALARM_TEMP + 0.5)))) or 
(((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
((alarm_previous_period = alarm_control^-1)) and (MONITOR_OK() and RUN()) >>
S [355] ->
Q [36] << (not MONITOR_OK() and RUN()) or (ALARM_CONTROL^-1 = O_n and ((MONITOR_OK() and 
RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)))) or ((MONITOR_OK() and 
RUN()) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 570:
Theorem (570) [serial 1841] used for:
    normalization of [serial 1838]
 


Theorem (572)                               [serial 1818] 
P [353] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << MONITOR_MODE(x:Failed) or (ALARM_CONTROL^-1 = O_n and (MONITOR_MODE(x:Normal) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)))) or (MONITOR_MODE(x:Normal) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP)) >>
by Substitution of Assertion Labels
and theorem 571:
Theorem (571) [serial 1838] used for:
  substituted Assertions' predicates for  labels  [serial 1818]
 


Theorem (573)                               [serial 1814] 
P [353] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (MONITOR_MODE(x:Normal) and (((CURRENT_TEMP.t < LOWER_ALARM_TEMP)) or 
((CURRENT_TEMP.t > UPPER_ALARM_TEMP)))) or (MONITOR_MODE(x:Failed)) or (
ALARM_CONTROL^-1 = O_n and (MONITOR_MODE(x:Normal) and (((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (
LOWER_ALARM_TEMP + 0.5))) or ((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP))))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 572:
Theorem (572) [serial 1818] used for:
    normalization of [serial 1814]
 


Theorem (574)                               [serial 1792] 
P [353] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << REQMA2() or REQMA5() or (ALARM_CONTROL^-1 = O_n and REQMA3()) >>
by Substitution of Assertion Labels
and theorem 573:
Theorem (573) [serial 1814] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1792]
 


Theorem (575)                               [serial 1783] 
P [353] << EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = O_n)) and 
INVMA() >>
S [355] ->
Q [36] << (REQMA2()) or (REQMA5()) or ((REQMA3() and ((ALARM_CONTROL^-1 = O_n)))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 574:
Theorem (574) [serial 1792] used for:
    normalization of [serial 1783]
 


Theorem (576)                               [serial 1810] 
P [355] << O_n = alarm_control and O_n = alarm_previous_period and AXIOM_AC() and 
EDGE_TEMP() and INVMA() and MONITOR_MODE(x:Normal) >>
S [355] ->
Q [356] << O_n = alarm_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (577)                               [serial 1804] 
P [355] << (O_n = alarm_control) and O_n = alarm_previous_period and AXIOM_AC() and 
EDGE_TEMP() and INVMA() and MONITOR_MODE(x:Normal) >>
S [355] ->
Q [356] << O_n = alarm_control >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 576:
Theorem (576) [serial 1810] used for:
    normalization of [serial 1804]
 


Theorem (578)                               [serial 1803] 
P [355] << (O_n^0 = alarm_control^0) and O_n = alarm_previous_period and AXIOM_AC() and 
EDGE_TEMP() and INVMA() and MONITOR_MODE(x:Normal) >>
S [355] ->
Q [356] << O_n = alarm_control >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 577:
Theorem (577) [serial 1804] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1803]
 


Theorem (579)                               [serial 1796] 
P [355] << (O_n = alarm_control)^0 and O_n = alarm_previous_period and AXIOM_AC() and 
EDGE_TEMP() and INVMA() and MONITOR_MODE(x:Normal) >>
S [355] ->
Q [356] << O_n = alarm_control >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 578:
Theorem (578) [serial 1803] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1796]
 


Theorem (580)                               [serial 1786] 
P [355] << EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = O_n)) and 
INVMA() and (alarm_control = O_n)^0 >>
S [355] ->
Q [356] << (alarm_control = O_n) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 579:
Theorem (579) [serial 1796] used for:
    normalization of [serial 1786]
 


Theorem (581)                               [serial 1784] 
P [355] << (EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = O_n)) and 
INVMA()) and (alarm_control = O_n)^0 >>
S [355] ->
Q [356] << (alarm_control = O_n) >>
by Associativity: (b.c).a = a.b.c
and theorem 580:
Theorem (580) [serial 1786] used for:
  Associativity: (b.c).a = a.b.c [serial 1784]
 


Theorem (582)                               [serial 1781] 
P [353] << EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = O_n)) and 
INVMA() >>
S [355] alarm_control!(O_n)
Q [356] << (alarm_control = O_n) >>
by Enumeration Type Port Output 
and theorems 575 581:
Theorem (575) [serial 1783] used for:
  applied port output of enumeration type  alarm_control!(O_n) [serial 1781]
 
Theorem (581) [serial 1784] used for:
  applied port output <<pre and (alarm_control=O_n)^0>> -> <<post>> [serial 1781]
 


Theorem (583)                               [serial 1794] 
P [356] << O_n = alarm_control >>
S [357] ->
Q [358] << O_n = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (584)                               [serial 1785] 
P [356] << (alarm_control = O_n) >>
S [357] ->
Q [358] << (O_n = alarm_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 583:
Theorem (583) [serial 1794] used for:
    normalization of [serial 1785]
 


Theorem (585)                               [serial 1782] 
P [356] << (alarm_control = O_n) >>
S [357] alarm_previous_period' := O_n
Q [358] << (alarm_previous_period' = alarm_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 584:
Theorem (584) [serial 1785] used for:
  applied wp for assignment [serial 1782]
 


Theorem (586)                               [serial 1030] 
P [305] << EDGE_TEMP() and MONITOR_OK() and RUN() and INVMA() and AXIOM_OFFON() and 
((alarm_previous_period = O_n)) >>
S [353] << EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = O_n)) and INVMA() >>
alarm_control!(O_n)
;
<< (alarm_control = O_n) >>
alarm_previous_period' := O_n
<< (alarm_previous_period' = alarm_control) >>
Q [302] << (INVMA())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 545 555 582 585:
Theorem (545) [serial 1779] used for:
  P -> P1 in sequential composition for [serial 1030]
 
Theorem (555) [serial 1780] used for:
  Q1 -> Q in sequential composition for [serial 1030]
 
Theorem (582) [serial 1781] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1030]
 
Theorem (585) [serial 1782] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1030]
 


Theorem (587)                               [serial 1926] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [363] << Off = alarm_previous_period >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (588)                               [serial 1927] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << EDGE_TEMP() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (589)                               [serial 1928] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [363] << INVMA() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (590)                               [serial 1976] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << MONITOR_OK() and RUN() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (591)                               [serial 1974] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << (MONITOR_OK() and RUN()) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 590:
Theorem (590) [serial 1976] used for:
    normalization of [serial 1974]
 


Theorem (592)                               [serial 1929] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << MONITOR_MODE(x:Normal) >>
by Substitution of Assertion Labels
and theorem 591:
Theorem (591) [serial 1974] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1929]
 


Theorem (593)                               [serial 1924] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << Off = alarm_previous_period and EDGE_TEMP() and INVMA() and MONITOR_MODE(
x:Normal) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 587 588 589 592:
Theorem (587) [serial 1926] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1924]
 
Theorem (588) [serial 1927] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1924]
 
Theorem (589) [serial 1928] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1924]
 
Theorem (592) [serial 1929] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1924]
 


Theorem (594)                               [serial 1922] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << Off = alarm_previous_period and true and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
by Law of And-Simplification:  P and true is P
and theorem 593:
Theorem (593) [serial 1924] used for:
  Law of And-Simplification:  P and true is P [serial 1922]
 


Theorem (595)                               [serial 1926] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [363] << Off = alarm_previous_period >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (596)                               [serial 1927] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << EDGE_TEMP() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (597)                               [serial 1928] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [363] << INVMA() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (598)                               [serial 1976] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << MONITOR_OK() and RUN() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (599)                               [serial 1974] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << (MONITOR_OK() and RUN()) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 598:
Theorem (598) [serial 1976] used for:
    normalization of [serial 1974]
 


Theorem (600)                               [serial 1929] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << MONITOR_MODE(x:Normal) >>
by Substitution of Assertion Labels
and theorem 599:
Theorem (599) [serial 1974] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1929]
 


Theorem (601)                               [serial 1924] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << Off = alarm_previous_period and EDGE_TEMP() and INVMA() and MONITOR_MODE(
x:Normal) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 595 596 597 600:
Theorem (595) [serial 1926] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1924]
 
Theorem (596) [serial 1927] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1924]
 
Theorem (597) [serial 1928] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1924]
 
Theorem (600) [serial 1929] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1924]
 


Theorem (602)                               [serial 1922] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << Off = alarm_previous_period and true and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
by Law of And-Simplification:  P and true is P
and theorem 601:
Theorem (601) [serial 1924] used for:
  Law of And-Simplification:  P and true is P [serial 1922]
 


Theorem (603)                               [serial 1908] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << Off = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 602 602:
Theorem (602) [serial 1922] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (602) [serial 1922] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (604)                               [serial 1900] 
P [305] << EDGE_TEMP() and MONITOR_OK() and RUN() and INVMA() and AXIOM_OFFON() and 
((alarm_previous_period = Off)) >>
S [305] ->
Q [362] << EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = Off)) and 
INVMA() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 603:
Theorem (603) [serial 1908] used for:
    normalization of [serial 1900]
 


Theorem (605)                               [serial 1941] 
P [367] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_previous_period^1 = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (606)                               [serial 1939] 
P [367] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control = alarm_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 605:
Theorem (605) [serial 1941] used for:
    normalization of [serial 1939]
 


Theorem (607)                               [serial 1937] 
P [367] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control^0 = alarm_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 606:
Theorem (606) [serial 1939] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1937]
 


Theorem (608)                               [serial 1935] 
P [367] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (alarm_control^(-1+1) = alarm_previous_period^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 607:
Theorem (607) [serial 1937] used for:
    normalization of [serial 1935]
 


Theorem (609)                               [serial 1933] 
P [367] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (alarm_control^-1 = alarm_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 608:
Theorem (608) [serial 1935] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1933]
 


Theorem (610)                               [serial 1931] 
P [367] << alarm_control = (alarm_previous_period)^1 >>
S [302] ->
Q [305] << (((alarm_previous_period = alarm_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 609:
Theorem (609) [serial 1933] used for:
    normalization of [serial 1931]
 


Theorem (611)                               [serial 1930] 
P [367] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (((alarm_previous_period = alarm_control^-1)))^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 610:
Theorem (610) [serial 1931] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1930]
 


Theorem (612)                               [serial 1910] 
P [367] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Substitution of Assertion Labels
and theorem 611:
Theorem (611) [serial 1930] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1910]
 


Theorem (613)                               [serial 1901] 
P [367] << (alarm_previous_period' = alarm_control) >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 612:
Theorem (612) [serial 1910] used for:
    normalization of [serial 1901]
 


Theorem (614)                               [serial 1973] 
P [362] << ALARM_CONTROL^-1 = alarm_control^-1 and ALARM_CONTROL^-1 = Off and ALARM_CONTROL^-1 = alarm_previous_period and 
alarm_control^-1 = Off and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << INI() or (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (615)                               [serial 1972] 
P [362] << ALARM_CONTROL^-1 = alarm_control^-1 and ALARM_CONTROL^-1 = Off and ALARM_CONTROL^-1 = alarm_previous_period and 
alarm_control^-1 = Off and alarm_control^-1 = alarm_previous_period and 
alarm_control^-1 = alarm_previous_period and Off = alarm_previous_period and 
MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << INI() or (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Law of And-Simplification:  P and P is P
and theorem 614:
Theorem (614) [serial 1973] used for:
  Law of And-Simplification:  P and P is P [serial 1972]
 


Theorem (616)                               [serial 1971] 
P [362] << ALARM_CONTROL^-1 = alarm_control^-1 and ALARM_CONTROL^-1 = alarm_control^-1 and 
ALARM_CONTROL^-1 = Off and ALARM_CONTROL^-1 = Off and ALARM_CONTROL^-1 = alarm_previous_period and 
ALARM_CONTROL^-1 = alarm_previous_period and alarm_control^-1 = Off and 
alarm_control^-1 = Off and alarm_control^-1 = alarm_previous_period and 
alarm_control^-1 = alarm_previous_period and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and Off = alarm_previous_period and MONITOR_OK() and 
RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << INI() or (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Law of And-Simplification:  P and P is P
and theorem 615:
Theorem (615) [serial 1972] used for:
  Law of And-Simplification:  P and P is P [serial 1971]
 


Theorem (617)                               [serial 1969] 
P [362] << ALARM_CONTROL^-1 = alarm_control^-1 and ALARM_CONTROL^-1 = alarm_control^-1 and 
ALARM_CONTROL^-1 = alarm_control^-1 and ALARM_CONTROL^-1 = Off and ALARM_CONTROL^-1 = Off and 
ALARM_CONTROL^-1 = Off and ALARM_CONTROL^-1 = Off and ALARM_CONTROL^-1 = alarm_previous_period and 
ALARM_CONTROL^-1 = alarm_previous_period and ALARM_CONTROL^-1 = alarm_previous_period and 
alarm_control^-1 = Off and alarm_control^-1 = Off and alarm_control^-1 = Off and 
alarm_control^-1 = alarm_previous_period and alarm_control^-1 = alarm_previous_period and 
alarm_control^-1 = alarm_previous_period and alarm_control^-1 = alarm_previous_period and 
alarm_control^-1 = alarm_previous_period and Off = alarm_previous_period and 
Off = alarm_previous_period and Off = alarm_previous_period and MONITOR_OK() and 
RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << INI() or (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Law of And-Simplification:  P and P is P
and theorem 616:
Theorem (616) [serial 1971] used for:
  Law of And-Simplification:  P and P is P [serial 1969]
 


Theorem (618)                               [serial 1967] 
P [362] << ALARM_CONTROL^-1 = alarm_control^-1 and ALARM_CONTROL^-1 = alarm_previous_period and 
alarm_control^-1 = Off and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) and alarm_control^-1 = alarm_previous_period and 
ALARM_CONTROL^-1 = Off and ALARM_CONTROL^-1 = alarm_previous_period and 
alarm_previous_period = alarm_control^-1 and alarm_control^-1 = ALARM_CONTROL^-1 and 
Off = ALARM_CONTROL^-1 and ALARM_CONTROL^-1 = Off and Off = alarm_previous_period and 
alarm_control^-1 = alarm_previous_period and ALARM_CONTROL^-1 = alarm_previous_period and 
ALARM_CONTROL^-1 = alarm_control^-1 and alarm_previous_period = Off and 
Off = alarm_control^-1 and ALARM_CONTROL^-1 = Off and alarm_control^-1 = alarm_previous_period and 
alarm_control^-1 = Off >>
S [364] ->
Q [39] << INI() or (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 617:
Theorem (617) [serial 1969] used for:
    normalization of [serial 1967]
 


Theorem (619)                               [serial 1966] 
P [362] << ALARM_CONTROL^-1 = alarm_control^-1 and ALARM_CONTROL^-1 = alarm_previous_period and 
alarm_control^-1 = Off and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << INI() or (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Remove Equivalent Term: P(a) and P(b) and a=b is P(a) and a=b
and theorem 618:
Theorem (618) [serial 1967] used for:
  Remove Equivalent Term: P(a) and P(b) and a=b is P(a) and a=b [serial 1966]
 


Theorem (620)                               [serial 1964] 
P [362] << ALARM_CONTROL^-1 = alarm_control^-1 and ALARM_CONTROL^-1 = alarm_previous_period and 
ALARM_CONTROL^-1 = alarm_previous_period and alarm_control^-1 = Off and 
alarm_control^-1 = Off and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << INI() or (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Law of And-Simplification:  P and P is P
and theorem 619:
Theorem (619) [serial 1966] used for:
  Law of And-Simplification:  P and P is P [serial 1964]
 


Theorem (621)                               [serial 1962] 
P [362] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) and ALARM_CONTROL^-1 = alarm_previous_period and 
ALARM_CONTROL^-1 = alarm_previous_period and Off = alarm_control^-1 and 
alarm_control^-1 = Off >>
S [364] ->
Q [39] << INI() or (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 620:
Theorem (620) [serial 1964] used for:
    normalization of [serial 1962]
 


Theorem (622)                               [serial 1961] 
P [362] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << INI() or (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Remove Equivalent Term: P(a) and P(b) and a=b is P(a) and a=b
and theorem 621:
Theorem (621) [serial 1962] used for:
  Remove Equivalent Term: P(a) and P(b) and a=b is P(a) and a=b [serial 1961]
 


Theorem (623)                               [serial 1960] 
P [362] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << INI() or (ALARM_CONTROL^-1 = alarm_previous_period and MONITOR_OK() and 
RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Guided Substitution of Equals
and theorem 622:
Theorem (622) [serial 1961] used for:
  Guided Substitution of Equals
 replacing "alarm_previous_period" with its = "Off" in its postcondition [serial 1960]
 


Theorem (624)                               [serial 1958] 
P [362] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << INI() or (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Guided Substitution of Equals
and theorem 623:
Theorem (623) [serial 1960] used for:
  Guided Substitution of Equals
 replacing "Off" with its = "alarm_previous_period" in its postcondition [serial 1958]
 


Theorem (625)                               [serial 1956] 
P [362] << MONITOR_OK() and RUN() and ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << INI() or (MONITOR_OK() and RUN() and ALARM_CONTROL^-1 = Off and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 624:
Theorem (624) [serial 1958] used for:
    normalization of [serial 1956]
 


Theorem (626)                               [serial 1954] 
P [362] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and (MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << INI() or (ALARM_CONTROL^-1 = Off and (MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or ((MONITOR_OK() and 
RUN()) and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Associativity: (b.c).a = a.b.c
and theorem 625:
Theorem (625) [serial 1956] used for:
  Associativity: (b.c).a = a.b.c [serial 1954]
 


Theorem (627)                               [serial 1952] 
P [362] << Off = alarm_previous_period and ((ALARM_CONTROL^-1 = alarm_control^-1)) and 
((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (LOWER_ALARM_TEMP + 0.5)))) or 
(((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
((alarm_previous_period = alarm_control^-1)) and (MONITOR_OK() and RUN()) >>
S [364] ->
Q [39] << (INI()) or (ALARM_CONTROL^-1 = Off and (MONITOR_OK() and RUN()) and (
(CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP))) or ((MONITOR_OK() and RUN()) and (CURRENT_TEMP.t in 
0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 626:
Theorem (626) [serial 1954] used for:
    normalization of [serial 1952]
 


Theorem (628)                               [serial 1950] 
P [362] << Off = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [364] ->
Q [39] << MONITOR_MODE(x:Init) or (ALARM_CONTROL^-1 = Off and MONITOR_MODE(x:Normal) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP))) or (MONITOR_MODE(x:Normal) and (CURRENT_TEMP.t in 
0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Substitution of Assertion Labels
and theorem 627:
Theorem (627) [serial 1952] used for:
  substituted Assertions' predicates for  labels  [serial 1950]
 


Theorem (629)                               [serial 1948] 
P [362] << Off = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [364] ->
Q [39] << MONITOR_MODE(x:Init) or (MONITOR_MODE(x:Normal) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) and ALARM_CONTROL^-1 = Off) or 
(MONITOR_MODE(x:Normal) and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 628:
Theorem (628) [serial 1950] used for:
    normalization of [serial 1948]
 


Theorem (630)                               [serial 1946] 
P [362] << Off = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [364] ->
Q [39] << MONITOR_MODE(x:Init) or (ALARM_CONTROL^-1 = Off and (MONITOR_MODE(x:Normal) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)))) or (MONITOR_MODE(x:Normal) and (CURRENT_TEMP.t in 
0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Associativity: (b.c).a = a.b.c
and theorem 629:
Theorem (629) [serial 1948] used for:
  Associativity: (b.c).a = a.b.c [serial 1946]
 


Theorem (631)                               [serial 1944] 
P [362] << Off = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [364] ->
Q [39] << (MONITOR_MODE(x:Init)) or (MONITOR_MODE(x:Normal) and ((CURRENT_TEMP.t in (
LOWER_ALARM_TEMP + 0.5) .. (UPPER_ALARM_TEMP - 0.5)))) or (ALARM_CONTROL^-1 = Off and 
(MONITOR_MODE(x:Normal) and (((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (LOWER_ALARM_TEMP + 
0.5))) or ((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP))))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 630:
Theorem (630) [serial 1946] used for:
    normalization of [serial 1944]
 


Theorem (632)                               [serial 1912] 
P [362] << Off = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [364] ->
Q [39] << REQMA1() or REQMA4() or (ALARM_CONTROL^-1 = Off and REQMA3()) >>
by Substitution of Assertion Labels
and theorem 631:
Theorem (631) [serial 1944] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1912]
 


Theorem (633)                               [serial 1904] 
P [362] << EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = Off)) and 
INVMA() >>
S [364] ->
Q [39] << (REQMA1()) or (REQMA4()) or ((REQMA3() and ((ALARM_CONTROL^-1 = Off)))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 632:
Theorem (632) [serial 1912] used for:
    normalization of [serial 1904]
 


Theorem (634)                               [serial 1925] 
P [364] << Off = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) and Off = alarm_control >>
S [364] ->
Q [365] << Off = alarm_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (635)                               [serial 1923] 
P [364] << Off = alarm_control and (Off = alarm_previous_period and AXIOM_AC() and 
EDGE_TEMP() and INVMA() and MONITOR_MODE(x:Normal)) >>
S [364] ->
Q [365] << Off = alarm_control >>
by Associativity: (b.c).a = a.b.c
and theorem 634:
Theorem (634) [serial 1925] used for:
  Associativity: (b.c).a = a.b.c [serial 1923]
 


Theorem (636)                               [serial 1914] 
P [364] << (Off = alarm_control)^0 and (Off = alarm_previous_period and AXIOM_AC() and 
EDGE_TEMP() and INVMA() and MONITOR_MODE(x:Normal)) >>
S [364] ->
Q [365] << Off = alarm_control >>
by Assume Present:  P = P@now = P^0 
and theorem 635:
Theorem (635) [serial 1923] used for:
  Assume Present:  P = P@now = P^0  [serial 1914]
 


Theorem (637)                               [serial 1905] 
P [364] << (EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = Off)) and 
INVMA()) and (alarm_control = Off)^0 >>
S [364] ->
Q [365] << (alarm_control = Off) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 636:
Theorem (636) [serial 1914] used for:
    normalization of [serial 1905]
 


Theorem (638)                               [serial 1902] 
P [362] << EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = Off)) and 
INVMA() >>
S [364] alarm_control!(Off)
Q [365] << (alarm_control = Off) >>
by Enumeration Type Port Output 
and theorems 633 637:
Theorem (633) [serial 1904] used for:
  applied port output of enumeration type  alarm_control!(Off) [serial 1902]
 
Theorem (637) [serial 1905] used for:
  applied port output <<pre and (alarm_control=Off)^0>> -> <<post>> [serial 1902]
 


Theorem (639)                               [serial 1916] 
P [365] << Off = alarm_control >>
S [366] ->
Q [367] << Off = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (640)                               [serial 1906] 
P [365] << (alarm_control = Off) >>
S [366] ->
Q [367] << (Off = alarm_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 639:
Theorem (639) [serial 1916] used for:
    normalization of [serial 1906]
 


Theorem (641)                               [serial 1903] 
P [365] << (alarm_control = Off) >>
S [366] alarm_previous_period' := Off
Q [367] << (alarm_previous_period' = alarm_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 640:
Theorem (640) [serial 1906] used for:
  applied wp for assignment [serial 1903]
 


Theorem (642)                               [serial 1031] 
P [305] << EDGE_TEMP() and MONITOR_OK() and RUN() and INVMA() and AXIOM_OFFON() and 
((alarm_previous_period = Off)) >>
S [362] << EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = Off)) and INVMA() >>
alarm_control!(Off)
;
<< (alarm_control = Off) >>
alarm_previous_period' := Off
<< (alarm_previous_period' = alarm_control) >>
Q [302] << (INVMA())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 604 613 638 641:
Theorem (604) [serial 1900] used for:
  P -> P1 in sequential composition for [serial 1031]
 
Theorem (613) [serial 1901] used for:
  Q1 -> Q in sequential composition for [serial 1031]
 
Theorem (638) [serial 1902] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1031]
 
Theorem (641) [serial 1903] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1031]
 


Theorem (643)                               [serial 1032] 
P [369] << (INVMA()) and stop@now and not (exists u~time
  in tops,,now 
  that true ) and not (exists u~time
  in tops,,now 
  that stop@u ) >>
S [369] ->
Q [306] << true >>
by True Conclusion Schema (tc): P->true


Theorem (644)                               [serial 1016] 
P [288] <<   >>
S [295] ->
Q [288] << manage_alarm.impl proof obligations >>
by Initial Thread Obligations
and theorems 252 268 269 272 292 293 294 321 345 359 403 480 501 586 642 643:
Theorem (252) [serial 1017] used for:
  <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
 
Theorem (268) [serial 1018] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_temp, <<M(check_temp)>> -> <<e1 or e2 or . . . en>>
 
Theorem (269) [serial 1019] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state poweron, <<M(poweron)>> -> <<e1 or e2 or . . . en>>
 
Theorem (272) [serial 1020] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_hyst, <<M(check_hyst)>> -> <<e1 or e2 or . . . en>>
 
Theorem (292) [serial 1021] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_mode, <<M(check_mode)>> -> <<e1 or e2 or . . . en>>
 
Theorem (293) [serial 1022] used for:
   <<M(poweron)>> -> <<M(run)>> for maPo:poweron-[ ]->run{};
 
Theorem (294) [serial 1023] used for:
   <<M(run) and x>> -> <<M(check_mode)>> for maRun:run-[x]->check_mode{};
 
Theorem (321) [serial 1024] used for:
   <<M(check_mode) and x>> A <<M(run)>> for maFailed:check_mode-[x]->run{A};
 
Theorem (345) [serial 1025] used for:
   <<M(check_mode) and x>> A <<M(run)>> for maInit:check_mode-[x]->run{A};
 
Theorem (359) [serial 1026] used for:
   <<M(check_mode) and x>> -> <<M(check_temp)>> for maNormal:check_mode-[x]->check_temp{};
 
Theorem (403) [serial 1027] used for:
   <<M(check_temp) and x>> A <<M(run)>> for maOor:check_temp-[x]->run{A};
 
Theorem (480) [serial 1028] used for:
   <<M(check_temp) and x>> A <<M(run)>> for maIr:check_temp-[x]->run{A};
 
Theorem (501) [serial 1029] used for:
   <<M(check_temp) and x>> -> <<M(check_hyst)>> for maHys:check_temp-[x]->check_hyst{};
 
Theorem (586) [serial 1030] used for:
   <<M(check_hyst) and x>> A <<M(run)>> for maHysOn:check_hyst-[x]->run{A};
 
Theorem (642) [serial 1031] used for:
   <<M(check_hyst) and x>> A <<M(run)>> for maHysOff:check_hyst-[x]->run{A};
 
Theorem (643) [serial 1032] used for:
   <<M(run) and x>> -> <<M(halt)>> for maStop:run-[x]->halt{};
 


Theorem (645)                               [serial 1034] 
P [216] << true >>
S [207] ->
Q [207] << true >>
by True Conclusion Schema (tc): P->true


Theorem (646)                               [serial 1035] 
P [220] << RUN() >>
S [207] ->
Q [207] << true >>
by True Conclusion Schema (tc): P->true


Theorem (647)                               [serial 2516] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << true >>
by True Conclusion Schema (tc): P->true


Theorem (648)                               [serial 2514] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 647:
Theorem (647) [serial 2516] used for:
    normalization of [serial 2514]
 


Theorem (649)                               [serial 2513] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 648:
Theorem (648) [serial 2514] used for:
  Law of And-Simplification:  P and P is P [serial 2513]
 


Theorem (650)                               [serial 2511] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not INTERNAL_FAILURE^0 or 
not Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 649:
Theorem (649) [serial 2513] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2511]
 


Theorem (651)                               [serial 2509] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (not INTERNAL_FAILURE^0 or INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
(not REGULATOR_INTERFACE_FAILURE^0 or INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 650:
Theorem (650) [serial 2511] used for:
    normalization of [serial 2509]
 


Theorem (652)                               [serial 2506] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 651:
Theorem (651) [serial 2509] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 2506]
 


Theorem (653)                               [serial 2504] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << ((INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 652:
Theorem (652) [serial 2506] used for:
    normalization of [serial 2504]
 


Theorem (654)                               [serial 2502] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << true and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and true is P
and theorem 653:
Theorem (653) [serial 2504] used for:
  Law of And-Simplification:  P and true is P [serial 2502]
 


Theorem (655)                               [serial 2500] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (true) and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 654:
Theorem (654) [serial 2502] used for:
    normalization of [serial 2500]
 


Theorem (656)                               [serial 2499] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (true) and (true) and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and P is P
and theorem 655:
Theorem (655) [serial 2500] used for:
  Law of And-Simplification:  P and P is P [serial 2499]
 


Theorem (657)                               [serial 2498] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (true) and (true) and (true) and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and P is P
and theorem 656:
Theorem (656) [serial 2499] used for:
  Law of And-Simplification:  P and P is P [serial 2498]
 


Theorem (658)                               [serial 2497] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (true) and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
(true) and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 657:
Theorem (657) [serial 2498] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2497]
 


Theorem (659)                               [serial 2496] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (true) and (Valid = current_temperature_status or (INTERNAL_FAILURE^0 or 
REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (true) and 
((not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or 
REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Associativity: (b.c).a = a.b.c
and theorem 658:
Theorem (658) [serial 2497] used for:
  Associativity: (b.c).a = a.b.c [serial 2496]
 


Theorem (660)                               [serial 2495] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (true) and (true) and (Valid = current_temperature_status or (INTERNAL_FAILURE^0 or 
REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (true) and 
((not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or 
REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and P is P
and theorem 659:
Theorem (659) [serial 2496] used for:
  Law of And-Simplification:  P and P is P [serial 2495]
 


Theorem (661)                               [serial 2494] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (true) and (true) and (true) and (Valid = current_temperature_status or 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (true) and 
((not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or 
REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and P is P
and theorem 660:
Theorem (660) [serial 2495] used for:
  Law of And-Simplification:  P and P is P [serial 2494]
 


Theorem (662)                               [serial 2493] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (Valid = current_temperature_status or not (now - start_time) < #Iso_Properties::Initialization_Timeout or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (not (now - start_time) < #Iso_Properties::Initialization_Timeout or 
not (now - start_time) < #Iso_Properties::Initialization_Timeout or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
((not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or not (now - start_time) < #Iso_Properties::Initialization_Timeout or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (Valid = current_temperature_status or 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (not (now - start_time) < #Iso_Properties::Initialization_Timeout or 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and ((not INTERNAL_FAILURE^0 and 
not REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 661:
Theorem (661) [serial 2494] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2493]
 


Theorem (663)                               [serial 2491] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (Valid = current_temperature_status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0)) or (not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 662:
Theorem (662) [serial 2493] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 2491]
 


Theorem (664)                               [serial 2489] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << ((not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
Valid = current_temperature_status and (not (INTERNAL_FAILURE^0) and not (REGULATOR_INTERFACE_FAILURE^0))) or 
((not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 663:
Theorem (663) [serial 2491] used for:
    normalization of [serial 2489]
 


Theorem (665)                               [serial 2488] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << ((not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
Valid = current_temperature_status and not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0)) or 
((not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 664:
Theorem (664) [serial 2489] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2488]
 


Theorem (666)                               [serial 2486] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (#Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0)) or (#Iso_Properties::Initialization_Timeout <= (now - start_time) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 665:
Theorem (665) [serial 2488] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2486]
 


Theorem (667)                               [serial 1036] 
P [218] << (current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
((REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0) or (not ((current_temperature_status = Valid))))) or 
((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and not (
(REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0)) and ((current_temperature_status = Valid))) or 
(((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 666:
Theorem (666) [serial 2486] used for:
    normalization of [serial 1036]
 


Theorem (668)                               [serial 1037] 
P [215] << true >>
S [215] ->
Q [215] << true >>
by True Conclusion Schema (tc): P->true


Theorem (669)                               [serial 2538] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << true >>
by True Conclusion Schema (tc): P->true


Theorem (670)                               [serial 2536] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 669:
Theorem (669) [serial 2538] used for:
    normalization of [serial 2536]
 


Theorem (671)                               [serial 2535] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << (true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 670:
Theorem (670) [serial 2536] used for:
  Law of And-Simplification:  P and P is P [serial 2535]
 


Theorem (672)                               [serial 2534] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << (not INTERNAL_FAILURE^0 or INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) and (not REGULATOR_INTERFACE_FAILURE^0 or 
INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 671:
Theorem (671) [serial 2535] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2534]
 


Theorem (673)                               [serial 2531] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 672:
Theorem (672) [serial 2534] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 2531]
 


Theorem (674)                               [serial 2529] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << ((INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 673:
Theorem (673) [serial 2531] used for:
    normalization of [serial 2529]
 


Theorem (675)                               [serial 2527] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << true and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0)) >>
by Law of And-Simplification:  P and true is P
and theorem 674:
Theorem (674) [serial 2529] used for:
  Law of And-Simplification:  P and true is P [serial 2527]
 


Theorem (676)                               [serial 2525] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << (true) and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 675:
Theorem (675) [serial 2527] used for:
    normalization of [serial 2525]
 


Theorem (677)                               [serial 2524] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
Valid = current_temperature_status) and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0)) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 676:
Theorem (676) [serial 2525] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2524]
 


Theorem (678)                               [serial 2523] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << (Valid = current_temperature_status or (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status)) and ((not INTERNAL_FAILURE^0 and 
not REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status)) >>
by Associativity: (b.c).a = a.b.c
and theorem 677:
Theorem (677) [serial 2524] used for:
  Associativity: (b.c).a = a.b.c [serial 2523]
 


Theorem (679)                               [serial 2520] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << (Valid = current_temperature_status and (not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0)) or 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 678:
Theorem (678) [serial 2523] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 2520]
 


Theorem (680)                               [serial 2518] 
P [222] << (current_temperature_status = temperature.status) and RUN() and AXIOM_CTSR() and 
AXIOM_STR() >>
S [222] ->
Q [222] << ((not ((REGULATOR_INTERFACE_FAILURE^0)) and not ((INTERNAL_FAILURE^0))) and 
((current_temperature_status = Valid))) or (((REGULATOR_INTERFACE_FAILURE^0) or 
(INTERNAL_FAILURE^0) or (not ((current_temperature_status = Valid))))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 679:
Theorem (679) [serial 2520] used for:
    normalization of [serial 2518]
 


Theorem (681)                               [serial 1038] 
P [222] << (current_temperature_status = temperature.status) and RUN() and AXIOM_CTSR() and 
AXIOM_STR() >>
S [222] ->
Q [222] << (not ((REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0)) and ((current_temperature_status = Valid))) or 
(((REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0) or (not ((current_temperature_status = Valid))))) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 680:
Theorem (680) [serial 2518] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1038]
 


Theorem (682)                               [serial 2554] 
P [215] << true >>
S [229] ->
Q [230] << true >>
by True Conclusion Schema (tc): P->true


Theorem (683)                               [serial 2548] 
P [215] << true >>
S [229] ->
Q [230] << (((true))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 682:
Theorem (682) [serial 2554] used for:
    normalization of [serial 2548]
 


Theorem (684)                               [serial 2547] 
P [215] << true >>
S [229] ->
Q [230] << ((true)) and true and true >>
by Law of And-Simplification:  P and true is P
and theorem 683:
Theorem (683) [serial 2548] used for:
  Law of And-Simplification:  P and true is P [serial 2547]
 


Theorem (685)                               [serial 2545] 
P [215] << true >>
S [229] ->
Q [230] << ((now = now)) and true and true >>
by Equality Law (idistr):  a=a <-> true
and theorem 684:
Theorem (684) [serial 2547] used for:
  Equality Law (idistr):  a=a <-> true [serial 2545]
 


Theorem (686)                               [serial 2554] 
P [215] << true >>
S [229] ->
Q [230] << true >>
by True Conclusion Schema (tc): P->true


Theorem (687)                               [serial 2548] 
P [215] << true >>
S [229] ->
Q [230] << (((true))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 686:
Theorem (686) [serial 2554] used for:
    normalization of [serial 2548]
 


Theorem (688)                               [serial 2547] 
P [215] << true >>
S [229] ->
Q [230] << ((true)) and true and true >>
by Law of And-Simplification:  P and true is P
and theorem 687:
Theorem (687) [serial 2548] used for:
  Law of And-Simplification:  P and true is P [serial 2547]
 


Theorem (689)                               [serial 2545] 
P [215] << true >>
S [229] ->
Q [230] << ((now = now)) and true and true >>
by Equality Law (idistr):  a=a <-> true
and theorem 688:
Theorem (688) [serial 2547] used for:
  Equality Law (idistr):  a=a <-> true [serial 2545]
 


Theorem (690)                               [serial 2542] 
P [215] << true >>
S [229] ->
Q [230] << ((now = now)) and AXIOM_TOGT0() and AXIOM_STR() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 689 689:
Theorem (689) [serial 2545] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (689) [serial 2545] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (691)                               [serial 2540] 
P [215] << true >>
S [229] start_time := now
Q [230] << ((start_time = now)) and AXIOM_TOGT0() and AXIOM_STR() >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 690:
Theorem (690) [serial 2542] used for:
  applied wp for assignment [serial 2540]
 


Theorem (692)                               [serial 2565] 
P [230] << START_TIME = start_time and start_time = now and 0 < #Iso_Properties::Initialization_Timeout >>
S [233] ->
Q [133] << 0 < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (693)                               [serial 2563] 
P [230] << START_TIME = start_time and start_time = now and 0 < #Iso_Properties::Initialization_Timeout >>
S [233] ->
Q [133] << (start_time - start_time) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Subtraction of Same:  a-a is 0
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 692:
Theorem (692) [serial 2565] used for:
    normalization of [serial 2563]
 


Theorem (694)                               [serial 2562] 
P [230] << START_TIME = start_time and start_time = now and 0 < #Iso_Properties::Initialization_Timeout >>
S [233] ->
Q [133] << (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Guided Substitution of Equals
and theorem 693:
Theorem (693) [serial 2563] used for:
  Guided Substitution of Equals
 replacing "now" with its = "start_time" in its postcondition [serial 2562]
 


Theorem (695)                               [serial 2560] 
P [230] << START_TIME = start_time and start_time = now and 0 < #Iso_Properties::Initialization_Timeout >>
S [233] ->
Q [133] << (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Guided Substitution of Equals
and theorem 694:
Theorem (694) [serial 2562] used for:
  Guided Substitution of Equals
 replacing "START_TIME" with its = "start_time" in its postcondition [serial 2560]
 


Theorem (696)                               [serial 2558] 
P [230] << start_time = now and ((start_time = START_TIME)) and ((0 < #Iso_Properties::Initialization_Timeout)) >>
S [233] ->
Q [133] << (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 695:
Theorem (695) [serial 2560] used for:
    normalization of [serial 2558]
 


Theorem (697)                               [serial 2550] 
P [230] << start_time = now and AXIOM_STR() and AXIOM_TOGT0() >>
S [233] ->
Q [133] << INI() >>
by Substitution of Assertion Labels
and theorem 696:
Theorem (696) [serial 2558] used for:
  substituted Assertions' predicates for  labels  [serial 2550]
 


Theorem (698)                               [serial 2543] 
P [230] << ((start_time = now)) and AXIOM_TOGT0() and AXIOM_STR() >>
S [233] ->
Q [133] << INI() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 697:
Theorem (697) [serial 2550] used for:
    normalization of [serial 2543]
 


Theorem (699)                               [serial 2552] 
P [233] << (Init = regulator_mode)^0 and start_time = now and AXIOM_STR() and AXIOM_TOGT0() >>
S [233] ->
Q [305] << true >>
by True Conclusion Schema (tc): P->true


Theorem (700)                               [serial 2546] 
P [233] << ((start_time = now)) and AXIOM_TOGT0() and AXIOM_STR() and (regulator_mode = Init)^0 >>
S [233] ->
Q [305] << (true)^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Constants are always the same
and theorem 699:
Theorem (699) [serial 2552] used for:
    normalization of [serial 2546]
 


Theorem (701)                               [serial 2544] 
P [233] << (((start_time = now)) and AXIOM_TOGT0() and AXIOM_STR()) and (regulator_mode = Init)^0 >>
S [233] ->
Q [305] << (true)^1 >>
by Associativity: (b.c).a = a.b.c
and theorem 700:
Theorem (700) [serial 2546] used for:
  Associativity: (b.c).a = a.b.c [serial 2544]
 


Theorem (702)                               [serial 2541] 
P [230] << ((start_time = now)) and AXIOM_TOGT0() and AXIOM_STR() >>
S [233] regulator_mode!(Init)
Q [305] << (true)^1 >>
by Enumeration Type Port Output 
and theorems 698 701:
Theorem (698) [serial 2543] used for:
  applied port output of enumeration type  regulator_mode!(Init) [serial 2541]
 
Theorem (701) [serial 2544] used for:
  applied port output <<pre and (regulator_mode=Init)^0>> -> <<post>> [serial 2541]
 


Theorem (703)                               [serial 1039] 
P [215] << true >>
S [229] start_time := now
<< ((start_time = now)) and AXIOM_TOGT0() and AXIOM_STR() >>
;
regulator_mode!(Init)
Q [216] << (true)^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 691 702:
Theorem (691) [serial 2540] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1039]
 
Theorem (702) [serial 2541] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1039]
 


Theorem (704)                               [serial 2574] 
P [238] << CURRENT_TEMP = temperature >>
S [238] ->
Q [238] << true >>
by True Conclusion Schema (tc): P->true


Theorem (705)                               [serial 2571] 
P [238] << (temperature = CURRENT_TEMP) >>
S [238] ->
Q [238] << true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 704:
Theorem (704) [serial 2574] used for:
    normalization of [serial 2571]
 


Theorem (706)                               [serial 2569] 
P [238] << true and temperature = CURRENT_TEMP >>
S [238] ->
Q [238] << true >>
by Law of And-Simplification:  P and true is P
and theorem 705:
Theorem (705) [serial 2571] used for:
  Law of And-Simplification:  P and true is P [serial 2569]
 


Theorem (707)                               [serial 2567] 
P [216] << true >>
S [238] current_temperature?(temperature)
Q [238] << true >>
by Port Data Input: when <<A and v=M(p)>> -> <<B>> then <<A>> p?(v) <<B>> (bl.pi)
and theorem 706:
Theorem (706) [serial 2569] used for:
  applied port input of value <<pre and temperature=M(current_temperature)>> -> <<post>> [serial 2567]
 


Theorem (708)                               [serial 2580] 
P [238] << true >>
S [240] ->
Q [218] << true >>
by True Conclusion Schema (tc): P->true


Theorem (709)                               [serial 2579] 
P [238] << true >>
S [240] ->
Q [218] << true and true and true >>
by Law of And-Simplification:  P and true is P
and theorem 708:
Theorem (708) [serial 2580] used for:
  Law of And-Simplification:  P and true is P [serial 2579]
 


Theorem (710)                               [serial 2580] 
P [238] << true >>
S [240] ->
Q [218] << true >>
by True Conclusion Schema (tc): P->true


Theorem (711)                               [serial 2579] 
P [238] << true >>
S [240] ->
Q [218] << true and true and true >>
by Law of And-Simplification:  P and true is P
and theorem 710:
Theorem (710) [serial 2580] used for:
  Law of And-Simplification:  P and true is P [serial 2579]
 


Theorem (712)                               [serial 2576] 
P [238] << true >>
S [240] ->
Q [218] << AXIOM_CTSR() and AXIOM_STR() and true >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 711 711:
Theorem (711) [serial 2579] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (711) [serial 2579] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (713)                               [serial 2572] 
P [238] << true >>
S [240] ->
Q [218] << (true) and AXIOM_CTSR() and AXIOM_STR() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 712:
Theorem (712) [serial 2576] used for:
    normalization of [serial 2572]
 


Theorem (714)                               [serial 2570] 
P [238] << true >>
S [240] ->
Q [218] << ((temperature.status) = temperature.status) and AXIOM_CTSR() and AXIOM_STR() >>
by Equality Law (idistr):  a=a <-> true
and theorem 713:
Theorem (713) [serial 2572] used for:
  Equality Law (idistr):  a=a <-> true [serial 2570]
 


Theorem (715)                               [serial 2568] 
P [238] << true >>
S [240] current_temperature_status := temperature.status
Q [218] << (current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR() >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 714:
Theorem (714) [serial 2570] used for:
  applied wp for assignment [serial 2568]
 


Theorem (716)                               [serial 1040] 
P [216] << true >>
S [238] current_temperature?(temperature)
;
current_temperature_status := temperature.status
Q [218] << (current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR() >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 707 715:
Theorem (707) [serial 2567] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1040]
 
Theorem (715) [serial 2568] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1040]
 


Theorem (717)                               [serial 2643] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (718)                               [serial 2640] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not current_temperature_status = Valid >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 717:
Theorem (717) [serial 2643] used for:
    normalization of [serial 2640]
 


Theorem (719)                               [serial 2639] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid >>
by Guided Substitution of Equals
and theorem 718:
Theorem (718) [serial 2640] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 2639]
 


Theorem (720)                               [serial 2637] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid >>
by Assume Present:  P = P@now = P^0 
and theorem 719:
Theorem (719) [serial 2639] used for:
  Assume Present:  P = P@now = P^0  [serial 2637]
 


Theorem (721)                               [serial 2632] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not CURRENT_TEMPERATURE_STATUS = Valid or (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
by Associativity: (b.c).a = a.b.c
and theorem 720:
Theorem (720) [serial 2637] used for:
  Associativity: (b.c).a = a.b.c [serial 2632]
 


Theorem (722)                               [serial 2629] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not CURRENT_TEMPERATURE_STATUS = Valid or (not (not INTERNAL_FAILURE) or 
not (not REGULATOR_INTERFACE_FAILURE)) >>
by Normalization
  Normalization Axiom:
    Complement
and theorem 721:
Theorem (721) [serial 2632] used for:
    normalization of [serial 2629]
 


Theorem (723)                               [serial 2624] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not CURRENT_TEMPERATURE_STATUS = Valid or not (not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE) >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 722:
Theorem (722) [serial 2629] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 2624]
 


Theorem (724)                               [serial 2621] 
P [218] << current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << (not ((not REGULATOR_INTERFACE_FAILURE and not INTERNAL_FAILURE)) or 
not (((CURRENT_TEMPERATURE_STATUS = Valid)))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 723:
Theorem (723) [serial 2624] used for:
    normalization of [serial 2621]
 


Theorem (725)                               [serial 2619] 
P [218] << current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 724:
Theorem (724) [serial 2621] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2619]
 


Theorem (726)                               [serial 2615] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not REGULATOR_OK() >>
by Substitution of Assertion Labels
and theorem 725:
Theorem (725) [serial 2619] used for:
  substituted Assertions' predicates for  labels  [serial 2615]
 


Theorem (727)                               [serial 2616] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (728)                               [serial 2611] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not REGULATOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 726 727:
Theorem (726) [serial 2615] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2611]
 
Theorem (727) [serial 2616] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2611]
 


Theorem (729)                               [serial 2607] 
P [218] << (not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
current_temperature_status = temperature.status and AXIOM_CTSR() and AXIOM_STR() and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << (not (REGULATOR_OK()) and not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 728:
Theorem (728) [serial 2611] used for:
    normalization of [serial 2607]
 


Theorem (730)                               [serial 2606] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTSR() and AXIOM_STR() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [218] ->
Q [247] << (not (REGULATOR_OK()) and not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 729:
Theorem (729) [serial 2607] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2606]
 


Theorem (731)                               [serial 2602] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTSR() and AXIOM_STR() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 730:
Theorem (730) [serial 2606] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2602]
 


Theorem (732)                               [serial 2597] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE^0 or 
REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) and 
current_temperature_status = temperature.status and AXIOM_CTSR() and AXIOM_STR() >>
S [218] ->
Q [247] << (not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 731:
Theorem (731) [serial 2602] used for:
    normalization of [serial 2597]
 


Theorem (733)                               [serial 2596] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and (#Iso_Properties::Initialization_Timeout <= (now - start_time) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) >>
S [218] ->
Q [247] << (not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Associativity: (b.c).a = a.b.c
and theorem 732:
Theorem (732) [serial 2597] used for:
  Associativity: (b.c).a = a.b.c [serial 2596]
 


Theorem (734)                               [serial 2591] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and (#Iso_Properties::Initialization_Timeout <= (now - start_time) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) >>
S [218] ->
Q [247] << not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
true and true >>
by Law of And-Simplification:  P and true is P
and theorem 733:
Theorem (733) [serial 2596] used for:
  Law of And-Simplification:  P and true is P [serial 2591]
 


Theorem (735)                               [serial 2585] 
P [218] << (current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
((REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0) or (not ((current_temperature_status = Valid))))) >>
S [218] ->
Q [247] << not ((REGULATOR_OK()) or ((((now - start_time) < #Iso_Properties::Initialization_Timeout)))) and 
true and true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 734:
Theorem (734) [serial 2591] used for:
    normalization of [serial 2585]
 


Theorem (736)                               [serial 2643] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (737)                               [serial 2640] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not current_temperature_status = Valid >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 736:
Theorem (736) [serial 2643] used for:
    normalization of [serial 2640]
 


Theorem (738)                               [serial 2639] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid >>
by Guided Substitution of Equals
and theorem 737:
Theorem (737) [serial 2640] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 2639]
 


Theorem (739)                               [serial 2637] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid >>
by Assume Present:  P = P@now = P^0 
and theorem 738:
Theorem (738) [serial 2639] used for:
  Assume Present:  P = P@now = P^0  [serial 2637]
 


Theorem (740)                               [serial 2632] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not CURRENT_TEMPERATURE_STATUS = Valid or (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
by Associativity: (b.c).a = a.b.c
and theorem 739:
Theorem (739) [serial 2637] used for:
  Associativity: (b.c).a = a.b.c [serial 2632]
 


Theorem (741)                               [serial 2629] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not CURRENT_TEMPERATURE_STATUS = Valid or (not (not INTERNAL_FAILURE) or 
not (not REGULATOR_INTERFACE_FAILURE)) >>
by Normalization
  Normalization Axiom:
    Complement
and theorem 740:
Theorem (740) [serial 2632] used for:
    normalization of [serial 2629]
 


Theorem (742)                               [serial 2624] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not CURRENT_TEMPERATURE_STATUS = Valid or not (not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE) >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 741:
Theorem (741) [serial 2629] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 2624]
 


Theorem (743)                               [serial 2621] 
P [218] << current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << (not ((not REGULATOR_INTERFACE_FAILURE and not INTERNAL_FAILURE)) or 
not (((CURRENT_TEMPERATURE_STATUS = Valid)))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 742:
Theorem (742) [serial 2624] used for:
    normalization of [serial 2621]
 


Theorem (744)                               [serial 2619] 
P [218] << current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 743:
Theorem (743) [serial 2621] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2619]
 


Theorem (745)                               [serial 2615] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not REGULATOR_OK() >>
by Substitution of Assertion Labels
and theorem 744:
Theorem (744) [serial 2619] used for:
  substituted Assertions' predicates for  labels  [serial 2615]
 


Theorem (746)                               [serial 2616] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (747)                               [serial 2611] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not REGULATOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 745 746:
Theorem (745) [serial 2615] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2611]
 
Theorem (746) [serial 2616] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2611]
 


Theorem (748)                               [serial 2607] 
P [218] << (not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
current_temperature_status = temperature.status and AXIOM_CTSR() and AXIOM_STR() and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << (not (REGULATOR_OK()) and not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 747:
Theorem (747) [serial 2611] used for:
    normalization of [serial 2607]
 


Theorem (749)                               [serial 2606] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTSR() and AXIOM_STR() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [218] ->
Q [247] << (not (REGULATOR_OK()) and not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 748:
Theorem (748) [serial 2607] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2606]
 


Theorem (750)                               [serial 2602] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTSR() and AXIOM_STR() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 749:
Theorem (749) [serial 2606] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2602]
 


Theorem (751)                               [serial 2597] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE^0 or 
REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) and 
current_temperature_status = temperature.status and AXIOM_CTSR() and AXIOM_STR() >>
S [218] ->
Q [247] << (not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 750:
Theorem (750) [serial 2602] used for:
    normalization of [serial 2597]
 


Theorem (752)                               [serial 2596] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and (#Iso_Properties::Initialization_Timeout <= (now - start_time) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) >>
S [218] ->
Q [247] << (not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Associativity: (b.c).a = a.b.c
and theorem 751:
Theorem (751) [serial 2597] used for:
  Associativity: (b.c).a = a.b.c [serial 2596]
 


Theorem (753)                               [serial 2591] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and (#Iso_Properties::Initialization_Timeout <= (now - start_time) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) >>
S [218] ->
Q [247] << not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
true and true >>
by Law of And-Simplification:  P and true is P
and theorem 752:
Theorem (752) [serial 2596] used for:
  Law of And-Simplification:  P and true is P [serial 2591]
 


Theorem (754)                               [serial 2585] 
P [218] << (current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
((REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0) or (not ((current_temperature_status = Valid))))) >>
S [218] ->
Q [247] << not ((REGULATOR_OK()) or ((((now - start_time) < #Iso_Properties::Initialization_Timeout)))) and 
true and true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 753:
Theorem (753) [serial 2591] used for:
    normalization of [serial 2585]
 


Theorem (755)                               [serial 2581] 
P [218] << (current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
((REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0) or (not ((current_temperature_status = Valid))))) >>
S [218] ->
Q [247] << not ((REGULATOR_OK()) or ((((now - start_time) < #Iso_Properties::Initialization_Timeout)))) and 
AXIOM_STR() and AXIOM_CTSR() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 754 754:
Theorem (754) [serial 2585] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (754) [serial 2585] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (756)                               [serial 2648] 
P [247] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid) >>
S [249] ->
Q [135] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (757)                               [serial 2646] 
P [247] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid) >>
S [249] ->
Q [135] << (not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 756:
Theorem (756) [serial 2648] used for:
    normalization of [serial 2646]
 


Theorem (758)                               [serial 2645] 
P [247] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid) >>
S [249] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - start_time) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 757:
Theorem (757) [serial 2646] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2645]
 


Theorem (759)                               [serial 2638] 
P [247] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid) >>
S [249] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Guided Substitution of Equals
and theorem 758:
Theorem (758) [serial 2645] used for:
  Guided Substitution of Equals
 replacing "START_TIME" with its = "start_time" in its postcondition [serial 2638]
 


Theorem (760)                               [serial 2634] 
P [247] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (not CURRENT_TEMPERATURE_STATUS = Valid or 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) >>
S [249] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Associativity: (b.c).a = a.b.c
and theorem 759:
Theorem (759) [serial 2638] used for:
  Associativity: (b.c).a = a.b.c [serial 2634]
 


Theorem (761)                               [serial 2630] 
P [247] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (not CURRENT_TEMPERATURE_STATUS = Valid or 
(not (not INTERNAL_FAILURE) or not (not REGULATOR_INTERFACE_FAILURE))) >>
S [249] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Normalization
  Normalization Axiom:
    Complement
and theorem 760:
Theorem (760) [serial 2634] used for:
    normalization of [serial 2630]
 


Theorem (762)                               [serial 2626] 
P [247] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (not CURRENT_TEMPERATURE_STATUS = Valid or 
not (not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE)) >>
S [249] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 761:
Theorem (761) [serial 2630] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 2626]
 


Theorem (763)                               [serial 2622] 
P [247] << (not ((not REGULATOR_INTERFACE_FAILURE and not INTERNAL_FAILURE)) or 
not (((CURRENT_TEMPERATURE_STATUS = Valid)))) and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and ((start_time = START_TIME)) >>
S [249] ->
Q [135] << (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 762:
Theorem (762) [serial 2626] used for:
    normalization of [serial 2622]
 


Theorem (764)                               [serial 2620] 
P [247] << not (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) >>
S [249] ->
Q [135] << (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 763:
Theorem (763) [serial 2622] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2620]
 


Theorem (765)                               [serial 2617] 
P [247] << not REGULATOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
AXIOM_CTSR() and AXIOM_STR() >>
S [249] ->
Q [135] << RUN() >>
by Substitution of Assertion Labels
and theorem 764:
Theorem (764) [serial 2620] used for:
  substituted Assertions' predicates for  labels  [serial 2617]
 


Theorem (766)                               [serial 2618] 
P [247] << not REGULATOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
AXIOM_CTSR() and AXIOM_STR() >>
S [249] ->
Q [135] << not REGULATOR_OK() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (767)                               [serial 2614] 
P [247] << not REGULATOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
AXIOM_CTSR() and AXIOM_STR() >>
S [249] ->
Q [135] << RUN() and not REGULATOR_OK() >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 765 766:
Theorem (765) [serial 2617] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2614]
 
Theorem (766) [serial 2618] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2614]
 


Theorem (768)                               [serial 2609] 
P [247] << AXIOM_CTSR() and AXIOM_STR() and (not REGULATOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [249] ->
Q [135] << RUN() and not REGULATOR_OK() >>
by Associativity: (b.c).a = a.b.c
and theorem 767:
Theorem (767) [serial 2614] used for:
  Associativity: (b.c).a = a.b.c [serial 2609]
 


Theorem (769)                               [serial 2605] 
P [247] << AXIOM_CTSR() and AXIOM_STR() and (not (REGULATOR_OK()) and not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
S [249] ->
Q [135] << RUN() and not REGULATOR_OK() >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 768:
Theorem (768) [serial 2609] used for:
    normalization of [serial 2605]
 


Theorem (770)                               [serial 2587] 
P [247] << AXIOM_CTSR() and AXIOM_STR() and not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [249] ->
Q [135] << RUN() and not REGULATOR_OK() >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 769:
Theorem (769) [serial 2605] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2587]
 


Theorem (771)                               [serial 2583] 
P [247] << not ((REGULATOR_OK()) or ((((now - start_time) < #Iso_Properties::Initialization_Timeout)))) and 
AXIOM_STR() and AXIOM_CTSR() >>
S [249] ->
Q [135] << not REGULATOR_OK() and RUN() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 770:
Theorem (770) [serial 2587] used for:
    normalization of [serial 2583]
 


Theorem (772)                               [serial 2600] 
P [249] << (Failed = regulator_mode)^0 and AXIOM_CTSR() and AXIOM_STR() and not (
REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [249] ->
Q [223] << true >>
by True Conclusion Schema (tc): P->true


Theorem (773)                               [serial 2595] 
P [249] << AXIOM_CTSR() and AXIOM_STR() and not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
(Failed = regulator_mode)^0 >>
S [249] ->
Q [223] << true >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 772:
Theorem (772) [serial 2600] used for:
    normalization of [serial 2595]
 


Theorem (774)                               [serial 2589] 
P [249] << (Failed = regulator_mode)^0 and (AXIOM_CTSR() and AXIOM_STR() and not (
REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
S [249] ->
Q [223] << true >>
by Associativity: (b.c).a = a.b.c
and theorem 773:
Theorem (773) [serial 2595] used for:
  Associativity: (b.c).a = a.b.c [serial 2589]
 


Theorem (775)                               [serial 2584] 
P [249] << (not ((REGULATOR_OK()) or ((((now - start_time) < #Iso_Properties::Initialization_Timeout)))) and 
AXIOM_STR() and AXIOM_CTSR()) and (regulator_mode = Failed)^0 >>
S [249] ->
Q [223] << true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 774:
Theorem (774) [serial 2589] used for:
    normalization of [serial 2584]
 


Theorem (776)                               [serial 2582] 
P [247] << not ((REGULATOR_OK()) or ((((now - start_time) < #Iso_Properties::Initialization_Timeout)))) and 
AXIOM_STR() and AXIOM_CTSR() >>
S [249] regulator_mode!(Failed)
Q [223] << true >>
by Enumeration Type Port Output 
and theorems 771 775:
Theorem (771) [serial 2583] used for:
  applied port output of enumeration type  regulator_mode!(Failed) [serial 2582]
 
Theorem (775) [serial 2584] used for:
  applied port output <<pre and (regulator_mode=Failed)^0>> -> <<post>> [serial 2582]
 


Theorem (777)                               [serial 1041] 
P [218] << (current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
((REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0) or (not ((current_temperature_status = Valid))))) >>
S [247] << not ((REGULATOR_OK()) or ((((now - start_time) < #Iso_Properties::Initialization_Timeout)))) and AXIOM_STR() and AXIOM_CTSR() >>
regulator_mode!(Failed)
Q [223] << true >>
by Introduction of Existential Quantification (bl.aapre)
and theorems 755 776:
Theorem (755) [serial 2581] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1041]
 
Theorem (776) [serial 2582] used for:
  as <<pre>> S <<Q>> in <<P>> { <<pre>> S  } <<Q>> [serial 1041]
 


Theorem (778)                               [serial 2684] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
S [218] ->
Q [256] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (779)                               [serial 2683] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
S [218] ->
Q [256] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and Valid = current_temperature_status and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
by Guided Substitution of Equals
and theorem 778:
Theorem (778) [serial 2684] used for:
  Guided Substitution of Equals
 replacing "START_TIME" with its = "start_time" in its postcondition [serial 2683]
 


Theorem (780)                               [serial 2681] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [218] ->
Q [256] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and Valid = current_temperature_status and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
by Assume Present:  P = P@now = P^0 
and theorem 779:
Theorem (779) [serial 2683] used for:
  Assume Present:  P = P@now = P^0  [serial 2681]
 


Theorem (781)                               [serial 2678] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [218] ->
Q [256] << current_temperature_status = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 780:
Theorem (780) [serial 2681] used for:
    normalization of [serial 2678]
 


Theorem (782)                               [serial 2677] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [218] ->
Q [256] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (current_temperature_status = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) >>
by Associativity: (b.c).a = a.b.c
and theorem 781:
Theorem (781) [serial 2678] used for:
  Associativity: (b.c).a = a.b.c [serial 2677]
 


Theorem (783)                               [serial 2674] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [218] ->
Q [256] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) >>
by Guided Substitution of Equals
and theorem 782:
Theorem (782) [serial 2677] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 2674]
 


Theorem (784)                               [serial 2670] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [218] ->
Q [256] << (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 783:
Theorem (783) [serial 2674] used for:
    normalization of [serial 2670]
 


Theorem (785)                               [serial 2663] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
current_temperature_status = temperature.status and AXIOM_CTSR() and AXIOM_STR() and 
not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [218] ->
Q [256] << REGULATOR_OK() and RUN() >>
by Substitution of Assertion Labels
and theorem 784:
Theorem (784) [serial 2670] used for:
  substituted Assertions' predicates for  labels  [serial 2663]
 


Theorem (786)                               [serial 2656] 
P [218] << (((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
not ((REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0)) and ((current_temperature_status = Valid)) and 
(current_temperature_status = temperature.status) and AXIOM_CTSR() and AXIOM_STR() >>
S [218] ->
Q [256] << REGULATOR_OK() and RUN() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 785:
Theorem (785) [serial 2663] used for:
    normalization of [serial 2656]
 


Theorem (787)                               [serial 2650] 
P [218] << (current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
not ((REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0)) and ((current_temperature_status = Valid))) >>
S [218] ->
Q [256] << REGULATOR_OK() and RUN() >>
by Associativity: (b.c).a = a.b.c
and theorem 786:
Theorem (786) [serial 2656] used for:
  Associativity: (b.c).a = a.b.c [serial 2650]
 


Theorem (788)                               [serial 2690] 
P [258] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [220] ->
Q [220] << #Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (789)                               [serial 2688] 
P [258] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [220] ->
Q [220] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 788:
Theorem (788) [serial 2690] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2688]
 


Theorem (790)                               [serial 2686] 
P [258] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
#Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) >>
S [220] ->
Q [220] << ((#Iso_Properties::Initialization_Timeout)^1 <= (now - START_TIME)^1) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Constants are always the same
and theorem 789:
Theorem (789) [serial 2688] used for:
    normalization of [serial 2686]
 


Theorem (791)                               [serial 2685] 
P [258] << (now - START_TIME) <= (now - START_TIME)^1 and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
S [220] ->
Q [220] << (#Iso_Properties::Initialization_Timeout <= (now - START_TIME))^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 790:
Theorem (790) [serial 2686] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2685]
 


Theorem (792)                               [serial 2672] 
P [258] << (now - START_TIME) <= (now - START_TIME)^1 and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [220] ->
Q [220] << (#Iso_Properties::Initialization_Timeout <= (now - START_TIME))^1 >>
by Transitivity: x<y and y<z -> x<z
and theorem 791:
Theorem (791) [serial 2685] used for:
  Transitivity: x<y and y<z -> x<z [serial 2672]
 


Theorem (793)                               [serial 2669] 
P [258] << (((now - START_TIME) <= (now - START_TIME)^1)) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [220] ->
Q [220] << ((((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)))^1 >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 792:
Theorem (792) [serial 2672] used for:
    normalization of [serial 2669]
 


Theorem (794)                               [serial 2660] 
P [258] << AXIOM_PAST_INIT() and RUN() >>
S [220] ->
Q [220] << (RUN())^1 >>
by Substitution of Assertion Labels
and theorem 793:
Theorem (793) [serial 2669] used for:
  substituted Assertions' predicates for  labels  [serial 2660]
 


Theorem (795)                               [serial 2651] 
P [258] << RUN() and AXIOM_PAST_INIT() >>
S [220] ->
Q [220] << (RUN())^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 794:
Theorem (794) [serial 2660] used for:
    normalization of [serial 2651]
 


Theorem (796)                               [serial 2653] 
P [256] << REGULATOR_OK() and RUN() >>
S [257] ->
Q [134] << REGULATOR_OK() and RUN() >>
by Identity (id):  P->P is tautology


Theorem (797)                               [serial 2665] 
P [257] << (Normal = regulator_mode)^0 and REGULATOR_OK() and RUN() >>
S [257] ->
Q [258] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (798)                               [serial 2658] 
P [257] << REGULATOR_OK() and RUN() and (regulator_mode = Normal)^0 >>
S [257] ->
Q [258] << (RUN()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 797:
Theorem (797) [serial 2665] used for:
    normalization of [serial 2658]
 


Theorem (799)                               [serial 2657] 
P [257] << (REGULATOR_OK() and RUN()) and (regulator_mode = Normal)^0 >>
S [257] ->
Q [258] << (RUN()) >>
by Associativity: (b.c).a = a.b.c
and theorem 798:
Theorem (798) [serial 2658] used for:
  Associativity: (b.c).a = a.b.c [serial 2657]
 


Theorem (800)                               [serial 2655] 
P [257] << (REGULATOR_OK() and RUN()) and (regulator_mode = Normal)^0 >>
S [257] ->
Q [258] << RUN() and true >>
by Law of And-Simplification:  P and true is P
and theorem 799:
Theorem (799) [serial 2657] used for:
  Law of And-Simplification:  P and true is P [serial 2655]
 


Theorem (801)                               [serial 2665] 
P [257] << (Normal = regulator_mode)^0 and REGULATOR_OK() and RUN() >>
S [257] ->
Q [258] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (802)                               [serial 2658] 
P [257] << REGULATOR_OK() and RUN() and (regulator_mode = Normal)^0 >>
S [257] ->
Q [258] << (RUN()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 801:
Theorem (801) [serial 2665] used for:
    normalization of [serial 2658]
 


Theorem (803)                               [serial 2657] 
P [257] << (REGULATOR_OK() and RUN()) and (regulator_mode = Normal)^0 >>
S [257] ->
Q [258] << (RUN()) >>
by Associativity: (b.c).a = a.b.c
and theorem 802:
Theorem (802) [serial 2658] used for:
  Associativity: (b.c).a = a.b.c [serial 2657]
 


Theorem (804)                               [serial 2655] 
P [257] << (REGULATOR_OK() and RUN()) and (regulator_mode = Normal)^0 >>
S [257] ->
Q [258] << RUN() and true >>
by Law of And-Simplification:  P and true is P
and theorem 803:
Theorem (803) [serial 2657] used for:
  Law of And-Simplification:  P and true is P [serial 2655]
 


Theorem (805)                               [serial 2654] 
P [257] << (REGULATOR_OK() and RUN()) and (regulator_mode = Normal)^0 >>
S [257] ->
Q [258] << RUN() and AXIOM_PAST_INIT() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 804 804:
Theorem (804) [serial 2655] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (804) [serial 2655] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (806)                               [serial 2652] 
P [256] << REGULATOR_OK() and RUN() >>
S [257] regulator_mode!(Normal)
Q [258] << RUN() and AXIOM_PAST_INIT() >>
by Enumeration Type Port Output 
and theorems 796 805:
Theorem (796) [serial 2653] used for:
  applied port output of enumeration type  regulator_mode!(Normal) [serial 2652]
 
Theorem (805) [serial 2654] used for:
  applied port output <<pre and (regulator_mode=Normal)^0>> -> <<post>> [serial 2652]
 


Theorem (807)                               [serial 1042] 
P [218] << (current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
not ((REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0)) and ((current_temperature_status = Valid))) >>
S [256] << REGULATOR_OK() and RUN() >>
regulator_mode!(Normal)
<< RUN() and AXIOM_PAST_INIT() >>
Q [220] << (RUN())^1 >>
by Introduction of Existential Quantification (bl.aab)
and theorems 787 795 806:
Theorem (787) [serial 2650] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1042]
 
Theorem (795) [serial 2651] used for:
  as <<post>> -> <<Q>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1042]
 
Theorem (806) [serial 2652] used for:
  as <<pre>> S <<post>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1042]
 


Theorem (808)                               [serial 2694] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and (now - start_time) < #Iso_Properties::Initialization_Timeout >>
S [260] ->
Q [216] << true >>
by True Conclusion Schema (tc): P->true


Theorem (809)                               [serial 1043] 
P [218] << (current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR() and (((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
S [260] ->
Q [216] << (true)^1 >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 808:
Theorem (808) [serial 2694] used for:
    normalization of [serial 1043]
 


Theorem (810)                               [serial 2696] 
P [220] << RUN() >>
S [220] ->
Q [265] << RUN() >>
by Identity (id):  P->P is tautology


Theorem (811)                               [serial 2714] 
P [269] << CURRENT_TEMP = temperature and current_temperature_status = temperature.status and 
RUN() >>
S [222] ->
Q [222] << current_temperature_status = temperature.status and RUN() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (812)                               [serial 2709] 
P [269] << CURRENT_TEMP = temperature and current_temperature_status = temperature.status and 
RUN() >>
S [222] ->
Q [222] << current_temperature_status = temperature.status and RUN() and true and 
true >>
by Law of And-Simplification:  P and true is P
and theorem 811:
Theorem (811) [serial 2714] used for:
  Law of And-Simplification:  P and true is P [serial 2709]
 


Theorem (813)                               [serial 2702] 
P [269] << ((current_temperature_status = temperature.status)) and ((temperature = CURRENT_TEMP)) and 
RUN() >>
S [222] ->
Q [222] << (current_temperature_status = temperature.status) and RUN() and true and 
true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 812:
Theorem (812) [serial 2709] used for:
    normalization of [serial 2702]
 


Theorem (814)                               [serial 2714] 
P [269] << CURRENT_TEMP = temperature and current_temperature_status = temperature.status and 
RUN() >>
S [222] ->
Q [222] << current_temperature_status = temperature.status and RUN() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (815)                               [serial 2709] 
P [269] << CURRENT_TEMP = temperature and current_temperature_status = temperature.status and 
RUN() >>
S [222] ->
Q [222] << current_temperature_status = temperature.status and RUN() and true and 
true >>
by Law of And-Simplification:  P and true is P
and theorem 814:
Theorem (814) [serial 2714] used for:
  Law of And-Simplification:  P and true is P [serial 2709]
 


Theorem (816)                               [serial 2702] 
P [269] << ((current_temperature_status = temperature.status)) and ((temperature = CURRENT_TEMP)) and 
RUN() >>
S [222] ->
Q [222] << (current_temperature_status = temperature.status) and RUN() and true and 
true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 815:
Theorem (815) [serial 2709] used for:
    normalization of [serial 2702]
 


Theorem (817)                               [serial 2697] 
P [269] << ((current_temperature_status = temperature.status)) and ((temperature = CURRENT_TEMP)) and 
RUN() >>
S [222] ->
Q [222] << (current_temperature_status = temperature.status) and RUN() and AXIOM_CTSR() and 
AXIOM_STR() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 816 816:
Theorem (816) [serial 2702] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (816) [serial 2702] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (818)                               [serial 2705] 
P [266] << CURRENT_TEMP = temperature and RUN() >>
S [266] ->
Q [267] << CURRENT_TEMP = temperature and RUN() >>
by Identity (id):  P->P is tautology


Theorem (819)                               [serial 2700] 
P [266] << (RUN()) and temperature = CURRENT_TEMP >>
S [266] ->
Q [267] << (temperature = CURRENT_TEMP) and RUN() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 818:
Theorem (818) [serial 2705] used for:
    normalization of [serial 2700]
 


Theorem (820)                               [serial 2698] 
P [265] << RUN() >>
S [266] current_temperature?(temperature)
Q [267] << (temperature = CURRENT_TEMP) and RUN() >>
by Port Data Input: when <<A and v=M(p)>> -> <<B>> then <<A>> p?(v) <<B>> (bl.pi)
and theorem 819:
Theorem (819) [serial 2700] used for:
  applied port input of value <<pre and temperature=M(current_temperature)>> -> <<post>> [serial 2698]
 


Theorem (821)                               [serial 2715] 
P [267] << CURRENT_TEMP = temperature and RUN() >>
S [268] ->
Q [269] << CURRENT_TEMP = temperature and RUN() >>
by Identity (id):  P->P is tautology


Theorem (822)                               [serial 2713] 
P [267] << CURRENT_TEMP = temperature and RUN() >>
S [268] ->
Q [269] << CURRENT_TEMP = temperature and true and RUN() >>
by Law of And-Simplification:  P and true is P
and theorem 821:
Theorem (821) [serial 2715] used for:
  Law of And-Simplification:  P and true is P [serial 2713]
 


Theorem (823)                               [serial 2707] 
P [267] << CURRENT_TEMP = temperature and RUN() >>
S [268] ->
Q [269] << CURRENT_TEMP = temperature and temperature.status = temperature.status and 
RUN() >>
by Equality Law (idistr):  a=a <-> true
and theorem 822:
Theorem (822) [serial 2713] used for:
  Equality Law (idistr):  a=a <-> true [serial 2707]
 


Theorem (824)                               [serial 2701] 
P [267] << (temperature = CURRENT_TEMP) and RUN() >>
S [268] ->
Q [269] << (((temperature.status) = temperature.status)) and ((temperature = CURRENT_TEMP)) and 
RUN() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 823:
Theorem (823) [serial 2707] used for:
    normalization of [serial 2701]
 


Theorem (825)                               [serial 2699] 
P [267] << (temperature = CURRENT_TEMP) and RUN() >>
S [268] current_temperature_status := temperature.status
Q [269] << ((current_temperature_status = temperature.status)) and ((temperature = CURRENT_TEMP)) and 
RUN() >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 824:
Theorem (824) [serial 2701] used for:
  applied wp for assignment [serial 2699]
 


Theorem (826)                               [serial 1044] 
P [220] << RUN() >>
S [265] << RUN() >>
current_temperature?(temperature)
;
<< (temperature = CURRENT_TEMP) and RUN() >>
current_temperature_status := temperature.status
<< ((current_temperature_status = temperature.status)) and ((temperature = CURRENT_TEMP)) and RUN() >>
Q [222] << (current_temperature_status = temperature.status) and RUN() and AXIOM_CTSR() and 
AXIOM_STR() >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 810 817 820 825:
Theorem (810) [serial 2696] used for:
  P -> P1 in sequential composition for [serial 1044]
 
Theorem (817) [serial 2697] used for:
  Q1 -> Q in sequential composition for [serial 1044]
 
Theorem (820) [serial 2698] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1044]
 
Theorem (825) [serial 2699] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1044]
 


Theorem (827)                               [serial 2754] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
S [222] ->
Q [276] << Valid = current_temperature_status and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (828)                               [serial 2753] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [222] ->
Q [276] << current_temperature_status = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
by Assume Present:  P = P@now = P^0 
and theorem 827:
Theorem (827) [serial 2754] used for:
  Assume Present:  P = P@now = P^0  [serial 2753]
 


Theorem (829)                               [serial 2750] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [222] ->
Q [276] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
by Guided Substitution of Equals
and theorem 828:
Theorem (828) [serial 2753] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 2750]
 


Theorem (830)                               [serial 2746] 
P [222] << Valid = current_temperature_status and current_temperature_status = temperature.status and 
((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and ((start_time = START_TIME)) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and not (
INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [222] ->
Q [276] << (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 829:
Theorem (829) [serial 2750] used for:
    normalization of [serial 2746]
 


Theorem (831)                               [serial 2743] 
P [222] << Valid = current_temperature_status and current_temperature_status = temperature.status and 
AXIOM_CTSR() and AXIOM_STR() and RUN() and not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [222] ->
Q [276] << REGULATOR_OK() >>
by Substitution of Assertion Labels
and theorem 830:
Theorem (830) [serial 2746] used for:
  substituted Assertions' predicates for  labels  [serial 2743]
 


Theorem (832)                               [serial 2744] 
P [222] << Valid = current_temperature_status and current_temperature_status = temperature.status and 
AXIOM_CTSR() and AXIOM_STR() and RUN() and not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [222] ->
Q [276] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (833)                               [serial 2738] 
P [222] << Valid = current_temperature_status and current_temperature_status = temperature.status and 
AXIOM_CTSR() and AXIOM_STR() and RUN() and not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [222] ->
Q [276] << REGULATOR_OK() and RUN() >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 831 832:
Theorem (831) [serial 2743] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2738]
 
Theorem (832) [serial 2744] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2738]
 


Theorem (834)                               [serial 2732] 
P [222] << Valid = current_temperature_status and not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) and 
current_temperature_status = temperature.status and AXIOM_CTSR() and AXIOM_STR() and 
RUN() >>
S [222] ->
Q [276] << REGULATOR_OK() and RUN() >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 833:
Theorem (833) [serial 2738] used for:
    normalization of [serial 2732]
 


Theorem (835)                               [serial 2723] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() and (Valid = current_temperature_status and not (INTERNAL_FAILURE^0 or 
REGULATOR_INTERFACE_FAILURE^0)) >>
S [222] ->
Q [276] << REGULATOR_OK() and RUN() >>
by Associativity: (b.c).a = a.b.c
and theorem 834:
Theorem (834) [serial 2732] used for:
  Associativity: (b.c).a = a.b.c [serial 2723]
 


Theorem (836)                               [serial 2716] 
P [222] << (current_temperature_status = temperature.status) and RUN() and AXIOM_CTSR() and 
AXIOM_STR() and (not ((REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0)) and 
((current_temperature_status = Valid))) >>
S [222] ->
Q [276] << REGULATOR_OK() and RUN() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 835:
Theorem (835) [serial 2723] used for:
    normalization of [serial 2716]
 


Theorem (837)                               [serial 2760] 
P [278] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [220] ->
Q [220] << #Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (838)                               [serial 2758] 
P [278] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [220] ->
Q [220] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 837:
Theorem (837) [serial 2760] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2758]
 


Theorem (839)                               [serial 2756] 
P [278] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
#Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) >>
S [220] ->
Q [220] << ((#Iso_Properties::Initialization_Timeout)^1 <= (now - START_TIME)^1) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Constants are always the same
and theorem 838:
Theorem (838) [serial 2758] used for:
    normalization of [serial 2756]
 


Theorem (840)                               [serial 2755] 
P [278] << (now - START_TIME) <= (now - START_TIME)^1 and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
S [220] ->
Q [220] << (#Iso_Properties::Initialization_Timeout <= (now - START_TIME))^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 839:
Theorem (839) [serial 2756] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2755]
 


Theorem (841)                               [serial 2748] 
P [278] << (now - START_TIME) <= (now - START_TIME)^1 and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [220] ->
Q [220] << (#Iso_Properties::Initialization_Timeout <= (now - START_TIME))^1 >>
by Transitivity: x<y and y<z -> x<z
and theorem 840:
Theorem (840) [serial 2755] used for:
  Transitivity: x<y and y<z -> x<z [serial 2748]
 


Theorem (842)                               [serial 2745] 
P [278] << (((now - START_TIME) <= (now - START_TIME)^1)) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [220] ->
Q [220] << ((((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)))^1 >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 841:
Theorem (841) [serial 2748] used for:
    normalization of [serial 2745]
 


Theorem (843)                               [serial 2725] 
P [278] << AXIOM_PAST_INIT() and RUN() >>
S [220] ->
Q [220] << (RUN())^1 >>
by Substitution of Assertion Labels
and theorem 842:
Theorem (842) [serial 2745] used for:
  substituted Assertions' predicates for  labels  [serial 2725]
 


Theorem (844)                               [serial 2717] 
P [278] << RUN() and AXIOM_PAST_INIT() >>
S [220] ->
Q [220] << (RUN())^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 843:
Theorem (843) [serial 2725] used for:
    normalization of [serial 2717]
 


Theorem (845)                               [serial 2719] 
P [276] << REGULATOR_OK() and RUN() >>
S [277] ->
Q [134] << REGULATOR_OK() and RUN() >>
by Identity (id):  P->P is tautology


Theorem (846)                               [serial 2740] 
P [277] << (Normal = regulator_mode)^0 and REGULATOR_OK() and RUN() >>
S [277] ->
Q [278] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (847)                               [serial 2734] 
P [277] << REGULATOR_OK() and RUN() and (Normal = regulator_mode)^0 >>
S [277] ->
Q [278] << (RUN()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 846:
Theorem (846) [serial 2740] used for:
    normalization of [serial 2734]
 


Theorem (848)                               [serial 2733] 
P [277] << (Normal = regulator_mode)^0 and (REGULATOR_OK() and RUN()) >>
S [277] ->
Q [278] << (RUN()) >>
by Associativity: (b.c).a = a.b.c
and theorem 847:
Theorem (847) [serial 2734] used for:
  Associativity: (b.c).a = a.b.c [serial 2733]
 


Theorem (849)                               [serial 2728] 
P [277] << (Normal = regulator_mode)^0 and (REGULATOR_OK() and RUN()) >>
S [277] ->
Q [278] << RUN() and true >>
by Law of And-Simplification:  P and true is P
and theorem 848:
Theorem (848) [serial 2733] used for:
  Law of And-Simplification:  P and true is P [serial 2728]
 


Theorem (850)                               [serial 2721] 
P [277] << (REGULATOR_OK() and RUN()) and (regulator_mode = Normal)^0 >>
S [277] ->
Q [278] << RUN() and true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 849:
Theorem (849) [serial 2728] used for:
    normalization of [serial 2721]
 


Theorem (851)                               [serial 2740] 
P [277] << (Normal = regulator_mode)^0 and REGULATOR_OK() and RUN() >>
S [277] ->
Q [278] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (852)                               [serial 2734] 
P [277] << REGULATOR_OK() and RUN() and (Normal = regulator_mode)^0 >>
S [277] ->
Q [278] << (RUN()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 851:
Theorem (851) [serial 2740] used for:
    normalization of [serial 2734]
 


Theorem (853)                               [serial 2733] 
P [277] << (Normal = regulator_mode)^0 and (REGULATOR_OK() and RUN()) >>
S [277] ->
Q [278] << (RUN()) >>
by Associativity: (b.c).a = a.b.c
and theorem 852:
Theorem (852) [serial 2734] used for:
  Associativity: (b.c).a = a.b.c [serial 2733]
 


Theorem (854)                               [serial 2728] 
P [277] << (Normal = regulator_mode)^0 and (REGULATOR_OK() and RUN()) >>
S [277] ->
Q [278] << RUN() and true >>
by Law of And-Simplification:  P and true is P
and theorem 853:
Theorem (853) [serial 2733] used for:
  Law of And-Simplification:  P and true is P [serial 2728]
 


Theorem (855)                               [serial 2721] 
P [277] << (REGULATOR_OK() and RUN()) and (regulator_mode = Normal)^0 >>
S [277] ->
Q [278] << RUN() and true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 854:
Theorem (854) [serial 2728] used for:
    normalization of [serial 2721]
 


Theorem (856)                               [serial 2720] 
P [277] << (REGULATOR_OK() and RUN()) and (regulator_mode = Normal)^0 >>
S [277] ->
Q [278] << RUN() and AXIOM_PAST_INIT() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 855 855:
Theorem (855) [serial 2721] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (855) [serial 2721] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (857)                               [serial 2718] 
P [276] << REGULATOR_OK() and RUN() >>
S [277] regulator_mode!(Normal)
Q [278] << RUN() and AXIOM_PAST_INIT() >>
by Enumeration Type Port Output 
and theorems 845 856:
Theorem (845) [serial 2719] used for:
  applied port output of enumeration type  regulator_mode!(Normal) [serial 2718]
 
Theorem (856) [serial 2720] used for:
  applied port output <<pre and (regulator_mode=Normal)^0>> -> <<post>> [serial 2718]
 


Theorem (858)                               [serial 1045] 
P [222] << (current_temperature_status = temperature.status) and RUN() and AXIOM_CTSR() and 
AXIOM_STR() and (not ((REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0)) and 
((current_temperature_status = Valid))) >>
S [276] << REGULATOR_OK() and RUN() >>
regulator_mode!(Normal)
<< RUN() and AXIOM_PAST_INIT() >>
Q [220] << (RUN())^1 >>
by Introduction of Existential Quantification (bl.aab)
and theorems 836 844 857:
Theorem (836) [serial 2716] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1045]
 
Theorem (844) [serial 2717] used for:
  as <<post>> -> <<Q>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1045]
 
Theorem (857) [serial 2718] used for:
  as <<pre>> S <<post>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1045]
 


Theorem (859)                               [serial 2875] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [222] ->
Q [4] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (860)                               [serial 2871] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [222] ->
Q [4] << #Iso_Properties::Initialization_Timeout <= (now - start_time) >>
by Guided Substitution of Equals
and theorem 859:
Theorem (859) [serial 2875] used for:
  Guided Substitution of Equals
 replacing "start_time" with its = "START_TIME" in its postcondition [serial 2871]
 


Theorem (861)                               [serial 2803] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [4] << #Iso_Properties::Initialization_Timeout <= (now - start_time) >>
by Assume Present:  P = P@now = P^0 
and theorem 860:
Theorem (860) [serial 2871] used for:
  Assume Present:  P = P@now = P^0  [serial 2803]
 


Theorem (862)                               [serial 2796] 
P [222] << current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [4] << #Iso_Properties::Initialization_Timeout <= (now - start_time) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 861:
Theorem (861) [serial 2803] used for:
    normalization of [serial 2796]
 


Theorem (863)                               [serial 2782] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [222] ->
Q [4] << #Iso_Properties::Initialization_Timeout <= (now - start_time) >>
by Substitution of Assertion Labels
and theorem 862:
Theorem (862) [serial 2796] used for:
  substituted Assertions' predicates for  labels  [serial 2782]
 


Theorem (864)                               [serial 2873] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [222] ->
Q [286] << true >>
by True Conclusion Schema (tc): P->true


Theorem (865)                               [serial 2869] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [286] << true >>
by Assume Present:  P = P@now = P^0 
and theorem 864:
Theorem (864) [serial 2873] used for:
  Assume Present:  P = P@now = P^0  [serial 2869]
 


Theorem (866)                               [serial 2856] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [286] << current_temperature_status = current_temperature_status >>
by Equality Law (idistr):  a=a <-> true
and theorem 865:
Theorem (865) [serial 2869] used for:
  Equality Law (idistr):  a=a <-> true [serial 2856]
 


Theorem (867)                               [serial 2805] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [286] << CURRENT_TEMPERATURE_STATUS = current_temperature_status >>
by Guided Substitution of Equals
and theorem 866:
Theorem (866) [serial 2856] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 2805]
 


Theorem (868)                               [serial 2797] 
P [222] << current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [286] << ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 867:
Theorem (867) [serial 2805] used for:
    normalization of [serial 2797]
 


Theorem (869)                               [serial 2783] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [222] ->
Q [286] << AXIOM_CTSR() >>
by Substitution of Assertion Labels
and theorem 868:
Theorem (868) [serial 2797] used for:
  substituted Assertions' predicates for  labels  [serial 2783]
 


Theorem (870)                               [serial 2872] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [222] ->
Q [286] << START_TIME = start_time >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (871)                               [serial 2807] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [286] << START_TIME = start_time >>
by Assume Present:  P = P@now = P^0 
and theorem 870:
Theorem (870) [serial 2872] used for:
  Assume Present:  P = P@now = P^0  [serial 2807]
 


Theorem (872)                               [serial 2798] 
P [222] << current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [286] << ((start_time = START_TIME)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 871:
Theorem (871) [serial 2807] used for:
    normalization of [serial 2798]
 


Theorem (873)                               [serial 2784] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [222] ->
Q [286] << AXIOM_STR() >>
by Substitution of Assertion Labels
and theorem 872:
Theorem (872) [serial 2798] used for:
  substituted Assertions' predicates for  labels  [serial 2784]
 


Theorem (874)                               [serial 2874] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (875)                               [serial 2870] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by Assume Present:  P = P@now = P^0 
and theorem 874:
Theorem (874) [serial 2874] used for:
  Assume Present:  P = P@now = P^0  [serial 2870]
 


Theorem (876)                               [serial 2866] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status or 
not Valid = current_temperature_status >>
by Law of Or-Simplification: P or P is P
and theorem 875:
Theorem (875) [serial 2870] used for:
  Law of Or-Simplification: P or P is P [serial 2866]
 


Theorem (877)                               [serial 2858] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not current_temperature_status = Valid or 
not Valid = current_temperature_status >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 876:
Theorem (876) [serial 2866] used for:
    normalization of [serial 2858]
 


Theorem (878)                               [serial 2855] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid or 
not Valid = current_temperature_status >>
by Guided Substitution of Equals
and theorem 877:
Theorem (877) [serial 2858] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 2855]
 


Theorem (879)                               [serial 2852] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << not CURRENT_TEMPERATURE_STATUS = Valid or (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) or 
not Valid = current_temperature_status >>
by Associativity: (b.c).a = a.b.c
and theorem 878:
Theorem (878) [serial 2855] used for:
  Associativity: (b.c).a = a.b.c [serial 2852]
 


Theorem (880)                               [serial 2846] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << not Valid = current_temperature_status or (not CURRENT_TEMPERATURE_STATUS = Valid or 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) >>
by Associativity: (b.c).a = a.b.c
and theorem 879:
Theorem (879) [serial 2852] used for:
  Associativity: (b.c).a = a.b.c [serial 2846]
 


Theorem (881)                               [serial 2837] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << not Valid = current_temperature_status or (not CURRENT_TEMPERATURE_STATUS = Valid or 
(not (not INTERNAL_FAILURE) or not (not REGULATOR_INTERFACE_FAILURE))) >>
by Normalization
  Normalization Axiom:
    Complement
and theorem 880:
Theorem (880) [serial 2846] used for:
    normalization of [serial 2837]
 


Theorem (882)                               [serial 2831] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << not Valid = current_temperature_status or (not CURRENT_TEMPERATURE_STATUS = Valid or 
not (not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE)) >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 881:
Theorem (881) [serial 2837] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 2831]
 


Theorem (883)                               [serial 2822] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << not Valid = current_temperature_status or (not (CURRENT_TEMPERATURE_STATUS = Valid) or 
not ((not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 882:
Theorem (882) [serial 2831] used for:
    normalization of [serial 2822]
 


Theorem (884)                               [serial 2813] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << not Valid = current_temperature_status or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 883:
Theorem (883) [serial 2822] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2813]
 


Theorem (885)                               [serial 2801] 
P [222] << current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << not Valid = current_temperature_status or not (not (REGULATOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 884:
Theorem (884) [serial 2813] used for:
    normalization of [serial 2801]
 


Theorem (886)                               [serial 2792] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [222] ->
Q [284] << not Valid = current_temperature_status or not REGULATOR_OK() >>
by Substitution of Assertion Labels
and theorem 885:
Theorem (885) [serial 2801] used for:
  substituted Assertions' predicates for  labels  [serial 2792]
 


Theorem (887)                               [serial 2785] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [222] ->
Q [284] << (not Valid = current_temperature_status or not REGULATOR_OK()) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 886:
Theorem (886) [serial 2792] used for:
    normalization of [serial 2785]
 


Theorem (888)                               [serial 2768] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [222] ->
Q [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and AXIOM_CTSR() and 
AXIOM_STR() and (not Valid = current_temperature_status or not REGULATOR_OK()) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 863 869 873 887:
Theorem (863) [serial 2782] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2768]
 
Theorem (869) [serial 2783] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2768]
 
Theorem (873) [serial 2784] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2768]
 
Theorem (887) [serial 2785] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2768]
 


Theorem (889)                               [serial 2763] 
P [222] << (current_temperature_status = temperature.status) and RUN() and AXIOM_CTSR() and 
AXIOM_STR() and (((REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0) or 
(not ((current_temperature_status = Valid))))) >>
S [222] ->
Q [284] << ((not REGULATOR_OK()) or (not ((current_temperature_status = Valid)))) and 
(((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and AXIOM_STR() and 
AXIOM_CTSR() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 888:
Theorem (888) [serial 2768] used for:
    normalization of [serial 2763]
 


Theorem (890)                               [serial 2876] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or 
not CURRENT_TEMPERATURE_STATUS = Valid or not Valid = current_temperature_status) >>
S [287] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - start_time) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (891)                               [serial 2853] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or 
not CURRENT_TEMPERATURE_STATUS = Valid or not Valid = current_temperature_status) >>
S [287] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Guided Substitution of Equals
and theorem 890:
Theorem (890) [serial 2876] used for:
  Guided Substitution of Equals
 replacing "START_TIME" with its = "start_time" in its postcondition [serial 2853]
 


Theorem (892)                               [serial 2850] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not CURRENT_TEMPERATURE_STATUS = Valid or (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) or not Valid = current_temperature_status) >>
S [287] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Associativity: (b.c).a = a.b.c
and theorem 891:
Theorem (891) [serial 2853] used for:
  Associativity: (b.c).a = a.b.c [serial 2850]
 


Theorem (893)                               [serial 2842] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or (
not CURRENT_TEMPERATURE_STATUS = Valid or (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) >>
S [287] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Associativity: (b.c).a = a.b.c
and theorem 892:
Theorem (892) [serial 2850] used for:
  Associativity: (b.c).a = a.b.c [serial 2842]
 


Theorem (894)                               [serial 2835] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or (
not CURRENT_TEMPERATURE_STATUS = Valid or (not (not INTERNAL_FAILURE) or 
not (not REGULATOR_INTERFACE_FAILURE)))) >>
S [287] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Normalization
  Normalization Axiom:
    Complement
and theorem 893:
Theorem (893) [serial 2842] used for:
    normalization of [serial 2835]
 


Theorem (895)                               [serial 2827] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or (
not CURRENT_TEMPERATURE_STATUS = Valid or not (not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE))) >>
S [287] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 894:
Theorem (894) [serial 2835] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 2827]
 


Theorem (896)                               [serial 2820] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or (
not (CURRENT_TEMPERATURE_STATUS = Valid) or not ((not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE)))) >>
S [287] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 895:
Theorem (895) [serial 2827] used for:
    normalization of [serial 2820]
 


Theorem (897)                               [serial 2809] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or not (
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) >>
S [287] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 896:
Theorem (896) [serial 2820] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2809]
 


Theorem (898)                               [serial 2799] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and (not Valid = current_temperature_status or 
not (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid)))) >>
S [287] ->
Q [135] << (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 897:
Theorem (897) [serial 2809] used for:
    normalization of [serial 2799]
 


Theorem (899)                               [serial 2786] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and AXIOM_CTSR() and 
AXIOM_STR() and (not Valid = current_temperature_status or not REGULATOR_OK()) >>
S [287] ->
Q [135] << RUN() >>
by Substitution of Assertion Labels
and theorem 898:
Theorem (898) [serial 2799] used for:
  substituted Assertions' predicates for  labels  [serial 2786]
 


Theorem (900)                               [serial 2881] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [287] ->
Q [135] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (901)                               [serial 2879] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status or not Valid = current_temperature_status) >>
S [287] ->
Q [135] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by Law of Or-Simplification: P or P is P
and theorem 900:
Theorem (900) [serial 2881] used for:
  Law of Or-Simplification: P or P is P [serial 2879]
 


Theorem (902)                               [serial 2877] 
P [284] << (CURRENT_TEMPERATURE_STATUS = current_temperature_status) and (START_TIME = start_time) and 
(#Iso_Properties::Initialization_Timeout <= (now - start_time)) and (INTERNAL_FAILURE or 
REGULATOR_INTERFACE_FAILURE or not current_temperature_status = Valid or 
not Valid = current_temperature_status) >>
S [287] ->
Q [135] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 901:
Theorem (901) [serial 2879] used for:
    normalization of [serial 2877]
 


Theorem (903)                               [serial 2864] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or 
not CURRENT_TEMPERATURE_STATUS = Valid or not Valid = current_temperature_status) >>
S [287] ->
Q [135] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by Substituting Equals Within Conjunction
and theorem 902:
Theorem (902) [serial 2877] used for:
  Substituting Equals Within Conjunction [serial 2864]
 


Theorem (904)                               [serial 2857] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or 
not CURRENT_TEMPERATURE_STATUS = Valid or not Valid = current_temperature_status) >>
S [287] ->
Q [135] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not current_temperature_status = Valid >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 903:
Theorem (903) [serial 2864] used for:
    normalization of [serial 2857]
 


Theorem (905)                               [serial 2854] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or 
not CURRENT_TEMPERATURE_STATUS = Valid or not Valid = current_temperature_status) >>
S [287] ->
Q [135] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid >>
by Guided Substitution of Equals
and theorem 904:
Theorem (904) [serial 2857] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 2854]
 


Theorem (906)                               [serial 2851] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not CURRENT_TEMPERATURE_STATUS = Valid or (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) or not Valid = current_temperature_status) >>
S [287] ->
Q [135] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid >>
by Associativity: (b.c).a = a.b.c
and theorem 905:
Theorem (905) [serial 2854] used for:
  Associativity: (b.c).a = a.b.c [serial 2851]
 


Theorem (907)                               [serial 2844] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or (
not CURRENT_TEMPERATURE_STATUS = Valid or (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) >>
S [287] ->
Q [135] << not CURRENT_TEMPERATURE_STATUS = Valid or (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
by Associativity: (b.c).a = a.b.c
and theorem 906:
Theorem (906) [serial 2851] used for:
  Associativity: (b.c).a = a.b.c [serial 2844]
 


Theorem (908)                               [serial 2836] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or (
not CURRENT_TEMPERATURE_STATUS = Valid or (not (not INTERNAL_FAILURE) or 
not (not REGULATOR_INTERFACE_FAILURE)))) >>
S [287] ->
Q [135] << not CURRENT_TEMPERATURE_STATUS = Valid or (not (not INTERNAL_FAILURE) or 
not (not REGULATOR_INTERFACE_FAILURE)) >>
by Normalization
  Normalization Axiom:
    Complement
and theorem 907:
Theorem (907) [serial 2844] used for:
    normalization of [serial 2836]
 


Theorem (909)                               [serial 2829] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or (
not CURRENT_TEMPERATURE_STATUS = Valid or not (not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE))) >>
S [287] ->
Q [135] << not CURRENT_TEMPERATURE_STATUS = Valid or not (not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE) >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 908:
Theorem (908) [serial 2836] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 2829]
 


Theorem (910)                               [serial 2821] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or (
not (CURRENT_TEMPERATURE_STATUS = Valid) or not ((not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE)))) >>
S [287] ->
Q [135] << (not (CURRENT_TEMPERATURE_STATUS = Valid) or not ((not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 909:
Theorem (909) [serial 2829] used for:
    normalization of [serial 2821]
 


Theorem (911)                               [serial 2811] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or not (
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) >>
S [287] ->
Q [135] << not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
REGULATOR_INTERFACE_FAILURE)) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 910:
Theorem (910) [serial 2821] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2811]
 


Theorem (912)                               [serial 2800] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and (not Valid = current_temperature_status or 
not (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid)))) >>
S [287] ->
Q [135] << not (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 911:
Theorem (911) [serial 2811] used for:
    normalization of [serial 2800]
 


Theorem (913)                               [serial 2787] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and AXIOM_CTSR() and 
AXIOM_STR() and (not Valid = current_temperature_status or not REGULATOR_OK()) >>
S [287] ->
Q [135] << not REGULATOR_OK() >>
by Substitution of Assertion Labels
and theorem 912:
Theorem (912) [serial 2800] used for:
  substituted Assertions' predicates for  labels  [serial 2787]
 


Theorem (914)                               [serial 2770] 
P [284] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and AXIOM_CTSR() and 
AXIOM_STR() and (not Valid = current_temperature_status or not REGULATOR_OK()) >>
S [287] ->
Q [135] << RUN() and not REGULATOR_OK() >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 899 913:
Theorem (899) [serial 2786] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2770]
 
Theorem (913) [serial 2787] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2770]
 


Theorem (915)                               [serial 2765] 
P [284] << ((not REGULATOR_OK()) or (not ((current_temperature_status = Valid)))) and 
(((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and AXIOM_STR() and 
AXIOM_CTSR() >>
S [287] ->
Q [135] << not REGULATOR_OK() and RUN() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 914:
Theorem (914) [serial 2770] used for:
    normalization of [serial 2765]
 


Theorem (916)                               [serial 2780] 
P [287] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and (Failed = regulator_mode)^0 and 
AXIOM_CTSR() and AXIOM_STR() and (not Valid = current_temperature_status or 
not REGULATOR_OK()) >>
S [287] ->
Q [223] << true >>
by True Conclusion Schema (tc): P->true


Theorem (917)                               [serial 2776] 
P [287] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and AXIOM_CTSR() and 
AXIOM_STR() and (not Valid = current_temperature_status or not REGULATOR_OK()) and 
(Failed = regulator_mode)^0 >>
S [287] ->
Q [223] << true >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 916:
Theorem (916) [serial 2780] used for:
    normalization of [serial 2776]
 


Theorem (918)                               [serial 2772] 
P [287] << (Failed = regulator_mode)^0 and (#Iso_Properties::Initialization_Timeout <= (now - start_time) and 
AXIOM_CTSR() and AXIOM_STR() and (not Valid = current_temperature_status or 
not REGULATOR_OK())) >>
S [287] ->
Q [223] << true >>
by Associativity: (b.c).a = a.b.c
and theorem 917:
Theorem (917) [serial 2776] used for:
  Associativity: (b.c).a = a.b.c [serial 2772]
 


Theorem (919)                               [serial 2766] 
P [287] << (((not REGULATOR_OK()) or (not ((current_temperature_status = Valid)))) and 
(((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and AXIOM_STR() and 
AXIOM_CTSR()) and (regulator_mode = Failed)^0 >>
S [287] ->
Q [223] << true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 918:
Theorem (918) [serial 2772] used for:
    normalization of [serial 2766]
 


Theorem (920)                               [serial 2764] 
P [284] << ((not REGULATOR_OK()) or (not ((current_temperature_status = Valid)))) and 
(((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and AXIOM_STR() and 
AXIOM_CTSR() >>
S [287] regulator_mode!(Failed)
Q [223] << true >>
by Enumeration Type Port Output 
and theorems 915 919:
Theorem (915) [serial 2765] used for:
  applied port output of enumeration type  regulator_mode!(Failed) [serial 2764]
 
Theorem (919) [serial 2766] used for:
  applied port output <<pre and (regulator_mode=Failed)^0>> -> <<post>> [serial 2764]
 


Theorem (921)                               [serial 1046] 
P [222] << (current_temperature_status = temperature.status) and RUN() and AXIOM_CTSR() and 
AXIOM_STR() and (((REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0) or 
(not ((current_temperature_status = Valid))))) >>
S [284] << ((not REGULATOR_OK()) or (not ((current_temperature_status = Valid)))) and (((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and AXIOM_STR() and AXIOM_CTSR() >>
regulator_mode!(Failed)
Q [223] << true >>
by Introduction of Existential Quantification (bl.aapre)
and theorems 889 920:
Theorem (889) [serial 2763] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1046]
 
Theorem (920) [serial 2764] used for:
  as <<pre>> S <<Q>> in <<P>> { <<pre>> S  } <<Q>> [serial 1046]
 


Theorem (922)                               [serial 1033] 
P [207] <<   >>
S [207] ->
Q [207] << manage_regulator_mode.impl proof obligations >>
by Initial Thread Obligations
and theorems 645 646 667 668 681 703 716 777 807 809 826 858 921:
Theorem (645) [serial 1034] used for:
  <<M(init)>> -> <<I>> from invariant I when complete state init has Assertion <<M(init)>> in its definition.
 
Theorem (646) [serial 1035] used for:
  <<M(normal)>> -> <<I>> from invariant I when complete state normal has Assertion <<M(normal)>> in its definition.
 
Theorem (667) [serial 1036] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_init, <<M(check_init)>> -> <<e1 or e2 or . . . en>>
 
Theorem (668) [serial 1037] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (681) [serial 1038] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_normal, <<M(check_normal)>> -> <<e1 or e2 or . . . en>>
 
Theorem (703) [serial 1039] used for:
   <<M(start)>> A <<M(init)>> for mrm1:start-[ ]->init{A};
 
Theorem (716) [serial 1040] used for:
   <<M(init) and x>> A <<M(check_init)>> for wait_init:init-[x]->check_init{A};
 
Theorem (777) [serial 1041] used for:
   <<M(check_init) and x>> A <<M(failed)>> for mrm:check_init-[x]->failed{A};
 
Theorem (807) [serial 1042] used for:
   <<M(check_init) and x>> A <<M(normal)>> for mrm2:check_init-[x]->normal{A};
 
Theorem (809) [serial 1043] used for:
   <<M(check_init) and x>> -> <<M(init)>> for mrm2x:check_init-[x]->init{};
 
Theorem (826) [serial 1044] used for:
   <<M(normal) and x>> A <<M(check_normal)>> for wait_normal:normal-[x]->check_normal{A};
 
Theorem (858) [serial 1045] used for:
   <<M(check_normal) and x>> A <<M(normal)>> for mrm3:check_normal-[x]->normal{A};
 
Theorem (921) [serial 1046] used for:
   <<M(check_normal) and x>> A <<M(failed)>> for mrm3x:check_normal-[x]->failed{A};
 


Theorem (923)                               [serial 1980] 
P [345] << heat_control^-1 = heat_previous_period >>
S [340] ->
Q [340] << heat_control^-1 = heat_previous_period >>
by Identity (id):  P->P is tautology


Theorem (924)                               [serial 1978] 
P [345] << ((heat_previous_period = heat_control^-1)) >>
S [340] ->
Q [340] << (heat_previous_period = heat_control^-1) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 923:
Theorem (923) [serial 1980] used for:
    normalization of [serial 1978]
 


Theorem (925)                               [serial 1048] 
P [345] << INVMHS() >>
S [340] ->
Q [340] << (heat_previous_period = heat_control^-1) >>
by Substitution of Assertion Labels
and theorem 924:
Theorem (924) [serial 1978] used for:
  substituted Assertions' predicates for  labels  [serial 1048]
 


Theorem (926)                               [serial 1993] 
P [347] << AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [347] << true >>
by True Conclusion Schema (tc): P->true


Theorem (927)                               [serial 1991] 
P [347] << AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [347] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 926:
Theorem (926) [serial 1993] used for:
    normalization of [serial 1991]
 


Theorem (928)                               [serial 1990] 
P [347] << AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [347] << (true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 927:
Theorem (927) [serial 1991] used for:
  Law of And-Simplification:  P and P is P [serial 1990]
 


Theorem (929)                               [serial 1989] 
P [347] << AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [347] << (LOWER_DESIRED_TEMP^0 < current_temperature.t or not LOWER_DESIRED_TEMP^0 < current_temperature.t or 
not current_temperature.t < UPPER_DESIRED_TEMP^0) and (current_temperature.t < UPPER_DESIRED_TEMP^0 or 
not LOWER_DESIRED_TEMP^0 < current_temperature.t or not current_temperature.t < UPPER_DESIRED_TEMP^0) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 928:
Theorem (928) [serial 1990] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1989]
 


Theorem (930)                               [serial 1987] 
P [347] << AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [347] << not LOWER_DESIRED_TEMP^0 < current_temperature.t or not current_temperature.t < UPPER_DESIRED_TEMP^0 or 
(LOWER_DESIRED_TEMP^0 < current_temperature.t and current_temperature.t < UPPER_DESIRED_TEMP^0) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 929:
Theorem (929) [serial 1989] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 1987]
 


Theorem (931)                               [serial 1985] 
P [347] << AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [347] << (not (current_temperature.t < UPPER_DESIRED_TEMP^0)) or (not (LOWER_DESIRED_TEMP^0 < current_temperature.t)) or 
(LOWER_DESIRED_TEMP^0 < current_temperature.t and current_temperature.t < UPPER_DESIRED_TEMP^0) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 930:
Theorem (930) [serial 1987] used for:
    normalization of [serial 1985]
 


Theorem (932)                               [serial 1983] 
P [347] << AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [347] << UPPER_DESIRED_TEMP^0 <= current_temperature.t or current_temperature.t <= LOWER_DESIRED_TEMP^0 or 
(LOWER_DESIRED_TEMP^0 < current_temperature.t and current_temperature.t < UPPER_DESIRED_TEMP^0) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 931:
Theorem (931) [serial 1985] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1983]
 


Theorem (933)                               [serial 1049] 
P [347] << INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() >>
S [347] ->
Q [347] << ((current_temperature.t <= LOWER_DESIRED_TEMP^0)) or ((current_temperature.t >= UPPER_DESIRED_TEMP^0)) or 
(((current_temperature.t > LOWER_DESIRED_TEMP^0)) and ((current_temperature.t < UPPER_DESIRED_TEMP^0))) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 932:
Theorem (932) [serial 1983] used for:
    normalization of [serial 1049]
 


Theorem (934)                               [serial 1050] 
P [344] << ((heat_previous_period = Off)) and (INVMHS())^1 >>
S [344] ->
Q [344] << true >>
by True Conclusion Schema (tc): P->true


Theorem (935)                               [serial 1997] 
P [348] << heat_control^-1 = heat_previous_period and (REGULATOR_OK() and RUN()) and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [348] ->
Q [348] << O_n = heat_previous_period or Off = heat_previous_period >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (936)                               [serial 1995] 
P [348] << (((CURRENT_TEMP.t > LOWER_DESIRED_TEMP)) and ((CURRENT_TEMP.t < UPPER_DESIRED_TEMP))) and 
(REGULATOR_OK() and RUN()) and ((heat_previous_period = heat_control^-1)) and 
((((heat_previous_period = O_n))) or (((heat_previous_period = Off)))) >>
S [348] ->
Q [348] << (((heat_previous_period = O_n))) or ((heat_previous_period = Off)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 935:
Theorem (935) [serial 1997] used for:
    normalization of [serial 1995]
 


Theorem (937)                               [serial 1051] 
P [348] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT() >>
S [348] ->
Q [348] << (((heat_previous_period = O_n))) or ((heat_previous_period = Off)) >>
by Substitution of Assertion Labels
and theorem 936:
Theorem (936) [serial 1995] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1051]
 


Theorem (938)                               [serial 2022] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << true >>
by True Conclusion Schema (tc): P->true


Theorem (939)                               [serial 2020] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 938:
Theorem (938) [serial 2022] used for:
    normalization of [serial 2020]
 


Theorem (940)                               [serial 2019] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 939:
Theorem (939) [serial 2020] used for:
  Law of And-Simplification:  P and P is P [serial 2019]
 


Theorem (941)                               [serial 2018] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (true) and (true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 940:
Theorem (940) [serial 2019] used for:
  Law of And-Simplification:  P and P is P [serial 2018]
 


Theorem (942)                               [serial 2017] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << ((not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) or 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) and ((not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) or 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) and ((not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 941:
Theorem (941) [serial 2018] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2017]
 


Theorem (943)                               [serial 2015] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) or not (
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) and (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) or 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) and (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 942:
Theorem (942) [serial 2017] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2015]
 


Theorem (944)                               [serial 2013] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << ((((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) or 
(not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) or 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) and (
(((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) or (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) and 
((((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) or (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) or 
not (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid)))) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 943:
Theorem (943) [serial 2015] used for:
    normalization of [serial 2013]
 


Theorem (945)                               [serial 2012] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (INI() or REGULATOR_OK() or RUN()) and (INI() or RUN()) and (INI() or 
RUN() or not REGULATOR_OK()) >>
by Substitution of Assertion Labels
and theorem 944:
Theorem (944) [serial 2013] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2012]
 


Theorem (946)                               [serial 2010] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << true and (INI() or REGULATOR_OK() or RUN()) and (INI() or RUN()) and 
(INI() or RUN() or not REGULATOR_OK()) >>
by Law of And-Simplification:  P and true is P
and theorem 945:
Theorem (945) [serial 2012] used for:
  Law of And-Simplification:  P and true is P [serial 2010]
 


Theorem (947)                               [serial 2008] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (INI() or REGULATOR_OK() or RUN()) and (true) and (INI() or RUN()) and 
(INI() or RUN() or not REGULATOR_OK()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 946:
Theorem (946) [serial 2010] used for:
    normalization of [serial 2008]
 


Theorem (948)                               [serial 2007] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (INI() or REGULATOR_OK() or RUN()) and (true) and (INI() or RUN() or 
RUN()) and (INI() or RUN() or not REGULATOR_OK()) >>
by Law of Or-Simplification: P or P is P
and theorem 947:
Theorem (947) [serial 2008] used for:
  Law of Or-Simplification: P or P is P [serial 2007]
 


Theorem (949)                               [serial 2005] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (INI() or REGULATOR_OK() or RUN()) and (INI() or REGULATOR_OK() or not REGULATOR_OK()) and 
(INI() or RUN() or RUN()) and (INI() or RUN() or not REGULATOR_OK()) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 948:
Theorem (948) [serial 2007] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2005]
 


Theorem (950)                               [serial 2003] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (REGULATOR_OK() or RUN() or INI()) and (RUN() or RUN() or INI()) and 
(REGULATOR_OK() or not REGULATOR_OK() or INI()) and (RUN() or not REGULATOR_OK() or 
INI()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 949:
Theorem (949) [serial 2005] used for:
    normalization of [serial 2003]
 


Theorem (951)                               [serial 2000] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << INI() or (REGULATOR_OK() and RUN()) or (RUN() and not REGULATOR_OK()) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 950:
Theorem (950) [serial 2003] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 2000]
 


Theorem (952)                               [serial 1052] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << ((not REGULATOR_OK() and RUN())) or ((INI())) or ((REGULATOR_OK() and 
RUN())) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 951:
Theorem (951) [serial 2000] used for:
    normalization of [serial 1052]
 


Theorem (953)                               [serial 1053] 
P [344] << ((heat_previous_period = Off)) and (INVMHS())^1 >>
S [351] ->
Q [345] << (INVMHS())^1 >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (954)                               [serial 1054] 
P [345] << INVMHS() >>
S [352] ->
Q [346] << INVMHS() >>
by Identity (id):  P->P is tautology


Theorem (955)                               [serial 2072] 
P [346] << INVMHS() and RUN() and not REGULATOR_OK() >>
S [346] ->
Q [355] << RUN() and not REGULATOR_OK() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (956)                               [serial 2070] 
P [346] << INVMHS() and RUN() and not REGULATOR_OK() >>
S [346] ->
Q [355] << (not REGULATOR_OK() and RUN()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 955:
Theorem (955) [serial 2072] used for:
    normalization of [serial 2070]
 


Theorem (957)                               [serial 2060] 
P [346] << INVMHS() and RUN() and not REGULATOR_OK() >>
S [346] ->
Q [355] << REGULATOR_MODE(x:Failed) >>
by Substitution of Assertion Labels
and theorem 956:
Theorem (956) [serial 2070] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2060]
 


Theorem (958)                               [serial 2057] 
P [346] << RUN() and not REGULATOR_OK() and INVMHS() >>
S [346] ->
Q [355] << REGULATOR_MODE(x:Failed) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 957:
Theorem (957) [serial 2060] used for:
    normalization of [serial 2057]
 


Theorem (959)                               [serial 2052] 
P [346] << INVMHS() and (RUN() and not REGULATOR_OK()) >>
S [346] ->
Q [355] << REGULATOR_MODE(x:Failed) >>
by Associativity: (b.c).a = a.b.c
and theorem 958:
Theorem (958) [serial 2057] used for:
  Associativity: (b.c).a = a.b.c [serial 2052]
 


Theorem (960)                               [serial 2049] 
P [346] << INVMHS() and (RUN() and not REGULATOR_OK()) >>
S [346] ->
Q [355] << (REGULATOR_MODE(x:Failed)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 959:
Theorem (959) [serial 2052] used for:
    normalization of [serial 2049]
 


Theorem (961)                               [serial 2035] 
P [346] << INVMHS() and (RUN() and not REGULATOR_OK()) >>
S [346] ->
Q [355] << REQMHS5() >>
by Substitution of Assertion Labels
and theorem 960:
Theorem (960) [serial 2049] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2035]
 


Theorem (962)                               [serial 2024] 
P [346] << (INVMHS()) and ((not REGULATOR_OK() and RUN())) >>
S [346] ->
Q [355] << REQMHS5() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 961:
Theorem (961) [serial 2035] used for:
    normalization of [serial 2024]
 


Theorem (963)                               [serial 2068] 
P [359] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_previous_period^1 = heat_control >>
by Identity (id):  P->P is tautology


Theorem (964)                               [serial 2065] 
P [359] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control = heat_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 963:
Theorem (963) [serial 2068] used for:
    normalization of [serial 2065]
 


Theorem (965)                               [serial 2062] 
P [359] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control^0 = heat_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 964:
Theorem (964) [serial 2065] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2062]
 


Theorem (966)                               [serial 2058] 
P [359] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^(-1+1) = heat_previous_period^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 965:
Theorem (965) [serial 2062] used for:
    normalization of [serial 2058]
 


Theorem (967)                               [serial 2054] 
P [359] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^-1 = heat_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 966:
Theorem (966) [serial 2058] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2054]
 


Theorem (968)                               [serial 2050] 
P [359] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (((heat_previous_period = heat_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 967:
Theorem (967) [serial 2054] used for:
    normalization of [serial 2050]
 


Theorem (969)                               [serial 2041] 
P [359] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Substitution of Assertion Labels
and theorem 968:
Theorem (968) [serial 2050] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2041]
 


Theorem (970)                               [serial 2031] 
P [359] << ((heat_previous_period)^1 = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 969:
Theorem (969) [serial 2041] used for:
    normalization of [serial 2031]
 


Theorem (971)                               [serial 2025] 
P [359] << (heat_previous_period' = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 970:
Theorem (970) [serial 2031] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2025]
 


Theorem (972)                               [serial 2037] 
P [355] << REQMHS5() >>
S [356] ->
Q [98] << REQMHS1() or REQMHS3() or REQMHS5() or (HEAT_CONTROL^-1 = Off and REQMHS4()) >>
by Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (973)                               [serial 2028] 
P [355] << REQMHS5() >>
S [356] ->
Q [98] << (REQMHS1()) or (REQMHS3()) or (REQMHS5()) or ((REQMHS4() and ((HEAT_CONTROL^-1 = Off)))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 972:
Theorem (972) [serial 2037] used for:
    normalization of [serial 2028]
 


Theorem (974)                               [serial 2043] 
P [356] << Off = heat_control and REQMHS5() >>
S [356] ->
Q [357] << Off = heat_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (975)                               [serial 2033] 
P [356] << (REQMHS5()) and (heat_control = Off) >>
S [356] ->
Q [357] << (heat_control = Off) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 974:
Theorem (974) [serial 2043] used for:
    normalization of [serial 2033]
 


Theorem (976)                               [serial 2032] 
P [356] << (REQMHS5()) and (heat_control^0 = Off^0) >>
S [356] ->
Q [357] << (heat_control = Off) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 975:
Theorem (975) [serial 2033] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2032]
 


Theorem (977)                               [serial 2029] 
P [356] << (REQMHS5()) and (heat_control = Off)^0 >>
S [356] ->
Q [357] << (heat_control = Off) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 976:
Theorem (976) [serial 2032] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2029]
 


Theorem (978)                               [serial 2026] 
P [355] << REQMHS5() >>
S [356] heat_control!(Off)
Q [357] << (heat_control = Off) >>
by Enumeration Type Port Output 
and theorems 973 977:
Theorem (973) [serial 2028] used for:
  applied port output of enumeration type  heat_control!(Off) [serial 2026]
 
Theorem (977) [serial 2029] used for:
  applied port output <<pre and (heat_control=Off)^0>> -> <<post>> [serial 2026]
 


Theorem (979)                               [serial 2039] 
P [357] << Off = heat_control >>
S [358] ->
Q [359] << Off = heat_control >>
by Identity (id):  P->P is tautology


Theorem (980)                               [serial 2030] 
P [357] << (heat_control = Off) >>
S [358] ->
Q [359] << (Off = heat_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 979:
Theorem (979) [serial 2039] used for:
    normalization of [serial 2030]
 


Theorem (981)                               [serial 2027] 
P [357] << (heat_control = Off) >>
S [358] heat_previous_period' := Off
Q [359] << (heat_previous_period' = heat_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 980:
Theorem (980) [serial 2030] used for:
  applied wp for assignment [serial 2027]
 


Theorem (982)                               [serial 1055] 
P [346] << (INVMHS()) and ((not REGULATOR_OK() and RUN())) >>
S [355] << REQMHS5() >>
heat_control!(Off)
;
<< (heat_control = Off) >>
heat_previous_period' := Off
<< (heat_previous_period' = heat_control) >>
Q [345] << (INVMHS())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 962 971 978 981:
Theorem (962) [serial 2024] used for:
  P -> P1 in sequential composition for [serial 1055]
 
Theorem (971) [serial 2025] used for:
  Q1 -> Q in sequential composition for [serial 1055]
 
Theorem (978) [serial 2026] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1055]
 
Theorem (981) [serial 2027] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1055]
 


Theorem (983)                               [serial 2119] 
P [346] << INI() and INVMHS() >>
S [346] ->
Q [363] << INI() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (984)                               [serial 2117] 
P [346] << INI() and INVMHS() >>
S [346] ->
Q [363] << (INI()) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 983:
Theorem (983) [serial 2119] used for:
    normalization of [serial 2117]
 


Theorem (985)                               [serial 2102] 
P [346] << INI() and INVMHS() >>
S [346] ->
Q [363] << REGULATOR_MODE(x:Init) >>
by Substitution of Assertion Labels
and theorem 984:
Theorem (984) [serial 2117] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2102]
 


Theorem (986)                               [serial 2099] 
P [346] << INI() and INVMHS() >>
S [346] ->
Q [363] << (REGULATOR_MODE(x:Init)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 985:
Theorem (985) [serial 2102] used for:
    normalization of [serial 2099]
 


Theorem (987)                               [serial 2085] 
P [346] << INI() and INVMHS() >>
S [346] ->
Q [363] << REQMHS1() >>
by Substitution of Assertion Labels
and theorem 986:
Theorem (986) [serial 2099] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2085]
 


Theorem (988)                               [serial 2074] 
P [346] << (INVMHS()) and ((INI())) >>
S [346] ->
Q [363] << REQMHS1() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 987:
Theorem (987) [serial 2085] used for:
    normalization of [serial 2074]
 


Theorem (989)                               [serial 2115] 
P [367] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_previous_period^1 = heat_control >>
by Identity (id):  P->P is tautology


Theorem (990)                               [serial 2112] 
P [367] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control = heat_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 989:
Theorem (989) [serial 2115] used for:
    normalization of [serial 2112]
 


Theorem (991)                               [serial 2110] 
P [367] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control^0 = heat_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 990:
Theorem (990) [serial 2112] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2110]
 


Theorem (992)                               [serial 2107] 
P [367] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^(-1+1) = heat_previous_period^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 991:
Theorem (991) [serial 2110] used for:
    normalization of [serial 2107]
 


Theorem (993)                               [serial 2104] 
P [367] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^-1 = heat_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 992:
Theorem (992) [serial 2107] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2104]
 


Theorem (994)                               [serial 2100] 
P [367] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (((heat_previous_period = heat_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 993:
Theorem (993) [serial 2104] used for:
    normalization of [serial 2100]
 


Theorem (995)                               [serial 2091] 
P [367] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Substitution of Assertion Labels
and theorem 994:
Theorem (994) [serial 2100] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2091]
 


Theorem (996)                               [serial 2081] 
P [367] << ((heat_previous_period)^1 = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 995:
Theorem (995) [serial 2091] used for:
    normalization of [serial 2081]
 


Theorem (997)                               [serial 2075] 
P [367] << (heat_previous_period' = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 996:
Theorem (996) [serial 2081] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2075]
 


Theorem (998)                               [serial 2087] 
P [363] << REQMHS1() >>
S [364] ->
Q [98] << REQMHS1() or REQMHS3() or REQMHS5() or (HEAT_CONTROL^-1 = Off and REQMHS4()) >>
by Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (999)                               [serial 2078] 
P [363] << REQMHS1() >>
S [364] ->
Q [98] << (REQMHS1()) or (REQMHS3()) or (REQMHS5()) or ((REQMHS4() and ((HEAT_CONTROL^-1 = Off)))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 998:
Theorem (998) [serial 2087] used for:
    normalization of [serial 2078]
 


Theorem (1000)                               [serial 2093] 
P [364] << Off = heat_control and REQMHS1() >>
S [364] ->
Q [365] << Off = heat_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1001)                               [serial 2083] 
P [364] << (REQMHS1()) and (heat_control = Off) >>
S [364] ->
Q [365] << (heat_control = Off) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1000:
Theorem (1000) [serial 2093] used for:
    normalization of [serial 2083]
 


Theorem (1002)                               [serial 2082] 
P [364] << (REQMHS1()) and (heat_control^0 = Off^0) >>
S [364] ->
Q [365] << (heat_control = Off) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1001:
Theorem (1001) [serial 2083] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2082]
 


Theorem (1003)                               [serial 2079] 
P [364] << (REQMHS1()) and (heat_control = Off)^0 >>
S [364] ->
Q [365] << (heat_control = Off) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1002:
Theorem (1002) [serial 2082] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2079]
 


Theorem (1004)                               [serial 2076] 
P [363] << REQMHS1() >>
S [364] heat_control!(Off)
Q [365] << (heat_control = Off) >>
by Enumeration Type Port Output 
and theorems 999 1003:
Theorem (999) [serial 2078] used for:
  applied port output of enumeration type  heat_control!(Off) [serial 2076]
 
Theorem (1003) [serial 2079] used for:
  applied port output <<pre and (heat_control=Off)^0>> -> <<post>> [serial 2076]
 


Theorem (1005)                               [serial 2089] 
P [365] << Off = heat_control >>
S [366] ->
Q [367] << Off = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1006)                               [serial 2080] 
P [365] << (heat_control = Off) >>
S [366] ->
Q [367] << (Off = heat_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1005:
Theorem (1005) [serial 2089] used for:
    normalization of [serial 2080]
 


Theorem (1007)                               [serial 2077] 
P [365] << (heat_control = Off) >>
S [366] heat_previous_period' := Off
Q [367] << (heat_previous_period' = heat_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1006:
Theorem (1006) [serial 2080] used for:
  applied wp for assignment [serial 2077]
 


Theorem (1008)                               [serial 1056] 
P [346] << (INVMHS()) and ((INI())) >>
S [363] << REQMHS1() >>
heat_control!(Off)
;
<< (heat_control = Off) >>
heat_previous_period' := Off
<< (heat_previous_period' = heat_control) >>
Q [345] << (INVMHS())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 988 997 1004 1007:
Theorem (988) [serial 2074] used for:
  P -> P1 in sequential composition for [serial 1056]
 
Theorem (997) [serial 2075] used for:
  Q1 -> Q in sequential composition for [serial 1056]
 
Theorem (1004) [serial 2076] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1056]
 
Theorem (1007) [serial 2077] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1056]
 


Theorem (1009)                               [serial 2127] 
P [346] << REGULATOR_OK() and RUN() and INVMHS() >>
S [369] ->
Q [347] << INVMHS() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1010)                               [serial 2131] 
P [346] << INVMHS() and REGULATOR_OK() and RUN() >>
S [369] ->
Q [347] << REGULATOR_OK() and RUN() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1011)                               [serial 2129] 
P [346] << REGULATOR_OK() and RUN() and INVMHS() >>
S [369] ->
Q [347] << (REGULATOR_OK() and RUN()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1010:
Theorem (1010) [serial 2131] used for:
    normalization of [serial 2129]
 


Theorem (1012)                               [serial 2128] 
P [346] << REGULATOR_OK() and RUN() and INVMHS() >>
S [369] ->
Q [347] << REGULATOR_MODE(x:Normal) >>
by Substitution of Assertion Labels
and theorem 1011:
Theorem (1011) [serial 2129] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2128]
 


Theorem (1013)                               [serial 2126] 
P [346] << REGULATOR_OK() and RUN() and INVMHS() >>
S [369] ->
Q [347] << INVMHS() and REGULATOR_MODE(x:Normal) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1009 1012:
Theorem (1009) [serial 2127] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2126]
 
Theorem (1012) [serial 2128] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2126]
 


Theorem (1014)                               [serial 2125] 
P [346] << INVMHS() and (REGULATOR_OK() and RUN()) >>
S [369] ->
Q [347] << INVMHS() and REGULATOR_MODE(x:Normal) >>
by Associativity: (b.c).a = a.b.c
and theorem 1013:
Theorem (1013) [serial 2126] used for:
  Associativity: (b.c).a = a.b.c [serial 2125]
 


Theorem (1015)                               [serial 2124] 
P [346] << INVMHS() and (REGULATOR_OK() and RUN()) >>
S [369] ->
Q [347] << true and INVMHS() and REGULATOR_MODE(x:Normal) >>
by Law of And-Simplification:  P and true is P
and theorem 1014:
Theorem (1014) [serial 2125] used for:
  Law of And-Simplification:  P and true is P [serial 2124]
 


Theorem (1016)                               [serial 2127] 
P [346] << REGULATOR_OK() and RUN() and INVMHS() >>
S [369] ->
Q [347] << INVMHS() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1017)                               [serial 2131] 
P [346] << INVMHS() and REGULATOR_OK() and RUN() >>
S [369] ->
Q [347] << REGULATOR_OK() and RUN() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1018)                               [serial 2129] 
P [346] << REGULATOR_OK() and RUN() and INVMHS() >>
S [369] ->
Q [347] << (REGULATOR_OK() and RUN()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1017:
Theorem (1017) [serial 2131] used for:
    normalization of [serial 2129]
 


Theorem (1019)                               [serial 2128] 
P [346] << REGULATOR_OK() and RUN() and INVMHS() >>
S [369] ->
Q [347] << REGULATOR_MODE(x:Normal) >>
by Substitution of Assertion Labels
and theorem 1018:
Theorem (1018) [serial 2129] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2128]
 


Theorem (1020)                               [serial 2126] 
P [346] << REGULATOR_OK() and RUN() and INVMHS() >>
S [369] ->
Q [347] << INVMHS() and REGULATOR_MODE(x:Normal) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1016 1019:
Theorem (1016) [serial 2127] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2126]
 
Theorem (1019) [serial 2128] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2126]
 


Theorem (1021)                               [serial 2125] 
P [346] << INVMHS() and (REGULATOR_OK() and RUN()) >>
S [369] ->
Q [347] << INVMHS() and REGULATOR_MODE(x:Normal) >>
by Associativity: (b.c).a = a.b.c
and theorem 1020:
Theorem (1020) [serial 2126] used for:
  Associativity: (b.c).a = a.b.c [serial 2125]
 


Theorem (1022)                               [serial 2124] 
P [346] << INVMHS() and (REGULATOR_OK() and RUN()) >>
S [369] ->
Q [347] << true and INVMHS() and REGULATOR_MODE(x:Normal) >>
by Law of And-Simplification:  P and true is P
and theorem 1021:
Theorem (1021) [serial 2125] used for:
  Law of And-Simplification:  P and true is P [serial 2124]
 


Theorem (1023)                               [serial 2122] 
P [346] << INVMHS() and (REGULATOR_OK() and RUN()) >>
S [369] ->
Q [347] << AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(x:Normal) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1022 1022:
Theorem (1022) [serial 2124] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1022) [serial 2124] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1024)                               [serial 1057] 
P [346] << (INVMHS()) and ((REGULATOR_OK() and RUN())) >>
S [369] ->
Q [347] << INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1023:
Theorem (1023) [serial 2122] used for:
    normalization of [serial 1057]
 


Theorem (1025)                               [serial 2180] 
P [347] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [108] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1026)                               [serial 2178] 
P [347] << current_temperature.t <= LOWER_DESIRED_TEMP and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [108] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP >>
by Replacing port names with Assertions
and theorem 1025:
Theorem (1025) [serial 2180] used for:
  Replacing port names with Assertions [serial 2178]
 


Theorem (1027)                               [serial 2191] 
P [347] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [347] ->
Q [373] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1028)                               [serial 2189] 
P [347] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
(not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(not (LOWER_DESIRED_TEMP < CURRENT_TEMP.t)) and heat_control^-1 = heat_previous_period and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [347] ->
Q [373] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1027:
Theorem (1027) [serial 2191] used for:
    normalization of [serial 2189]
 


Theorem (1029)                               [serial 2188] 
P [347] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMP.t <= LOWER_DESIRED_TEMP and 
heat_control^-1 = heat_previous_period and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [347] ->
Q [373] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 1028:
Theorem (1028) [serial 2189] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2188]
 


Theorem (1030)                               [serial 2187] 
P [347] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) and CURRENT_TEMP.t <= LOWER_DESIRED_TEMP and 
heat_control^-1 = heat_previous_period and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [347] ->
Q [373] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 1029:
Theorem (1029) [serial 2188] used for:
  Associativity: (b.c).a = a.b.c [serial 2187]
 


Theorem (1031)                               [serial 2185] 
P [347] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
(#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [347] ->
Q [373] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 1030:
Theorem (1030) [serial 2187] used for:
  Associativity: (b.c).a = a.b.c [serial 2185]
 


Theorem (1032)                               [serial 2183] 
P [347] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP and ((((heat_previous_period = O_n))) or 
(((heat_previous_period = Off)))) and ((heat_previous_period = heat_control^-1)) and 
((not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) >>
S [347] ->
Q [373] << not ((((now - START_TIME) < #Iso_Properties::Initialization_Timeout))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1031:
Theorem (1031) [serial 2185] used for:
    normalization of [serial 2183]
 


Theorem (1033)                               [serial 2182] 
P [347] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP and ((((heat_previous_period = O_n))) or 
(((heat_previous_period = Off)))) and ((heat_previous_period = heat_control^-1)) and 
(REGULATOR_OK() and RUN()) >>
S [347] ->
Q [373] << not (INI()) >>
by Substitution of Assertion Labels
and theorem 1032:
Theorem (1032) [serial 2183] used for:
  substituted Assertions' predicates for  labels  [serial 2182]
 


Theorem (1034)                               [serial 2181] 
P [347] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [373] << not REGULATOR_MODE(x:Init) >>
by Substitution of Assertion Labels
and theorem 1033:
Theorem (1033) [serial 2182] used for:
  substituted Assertions' predicates for  labels  [serial 2181]
 


Theorem (1035)                               [serial 2179] 
P [347] << current_temperature.t <= LOWER_DESIRED_TEMP and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [373] << not REGULATOR_MODE(x:Init) >>
by Replacing port names with Assertions
and theorem 1034:
Theorem (1034) [serial 2181] used for:
  Replacing port names with Assertions [serial 2179]
 


Theorem (1036)                               [serial 2163] 
P [347] << current_temperature.t <= LOWER_DESIRED_TEMP and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [373] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP and not REGULATOR_MODE(x:Init) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1026 1035:
Theorem (1026) [serial 2178] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2163]
 
Theorem (1035) [serial 2179] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2163]
 


Theorem (1037)                               [serial 2160] 
P [347] << current_temperature.t <= LOWER_DESIRED_TEMP and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [373] << ((CURRENT_TEMP.t <= LOWER_DESIRED_TEMP)) and not (REGULATOR_MODE(x:Init)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1036:
Theorem (1036) [serial 2163] used for:
    normalization of [serial 2160]
 


Theorem (1038)                               [serial 2149] 
P [347] << current_temperature.t <= LOWER_DESIRED_TEMP and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [373] << REQMHS2() and not REQMHS1() >>
by Substitution of Assertion Labels
and theorem 1037:
Theorem (1037) [serial 2160] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2149]
 


Theorem (1039)                               [serial 2141] 
P [347] << INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() and ((current_temperature.t <= LOWER_DESIRED_TEMP)) >>
S [347] ->
Q [373] << REQMHS2() and not REQMHS1() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1038:
Theorem (1038) [serial 2149] used for:
    normalization of [serial 2141]
 


Theorem (1040)                               [serial 2133] 
P [347] << INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() and ((current_temperature.t <= LOWER_DESIRED_TEMP^0)) >>
S [347] ->
Q [373] << REQMHS2() and not REQMHS1() >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1039:
Theorem (1039) [serial 2141] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2133]
 


Theorem (1041)                               [serial 2176] 
P [377] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_previous_period^1 = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1042)                               [serial 2173] 
P [377] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control = heat_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 1041:
Theorem (1041) [serial 2176] used for:
    normalization of [serial 2173]
 


Theorem (1043)                               [serial 2171] 
P [377] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control^0 = heat_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1042:
Theorem (1042) [serial 2173] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2171]
 


Theorem (1044)                               [serial 2168] 
P [377] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^(-1+1) = heat_previous_period^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1043:
Theorem (1043) [serial 2171] used for:
    normalization of [serial 2168]
 


Theorem (1045)                               [serial 2165] 
P [377] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^-1 = heat_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1044:
Theorem (1044) [serial 2168] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2165]
 


Theorem (1046)                               [serial 2161] 
P [377] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (((heat_previous_period = heat_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1045:
Theorem (1045) [serial 2165] used for:
    normalization of [serial 2161]
 


Theorem (1047)                               [serial 2151] 
P [377] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Substitution of Assertion Labels
and theorem 1046:
Theorem (1046) [serial 2161] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2151]
 


Theorem (1048)                               [serial 2142] 
P [377] << ((heat_previous_period)^1 = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1047:
Theorem (1047) [serial 2151] used for:
    normalization of [serial 2142]
 


Theorem (1049)                               [serial 2134] 
P [377] << (heat_previous_period' = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1048:
Theorem (1048) [serial 2142] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2134]
 


Theorem (1050)                               [serial 2145] 
P [373] << REQMHS2() and not REQMHS1() >>
S [374] ->
Q [96] << REQMHS2() or (HEAT_CONTROL^-1 = O_n and REQMHS4()) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1051)                               [serial 2137] 
P [373] << REQMHS2() and not REQMHS1() >>
S [374] ->
Q [96] << (REQMHS2()) or ((REQMHS4() and ((HEAT_CONTROL^-1 = O_n)))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1050:
Theorem (1050) [serial 2145] used for:
    normalization of [serial 2137]
 


Theorem (1052)                               [serial 2159] 
P [374] << O_n = heat_control and REQMHS2() and not REQMHS1() >>
S [374] ->
Q [375] << O_n = heat_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1053)                               [serial 2153] 
P [374] << O_n^0 = heat_control^0 and REQMHS2() and not REQMHS1() >>
S [374] ->
Q [375] << O_n = heat_control >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1052:
Theorem (1052) [serial 2159] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2153]
 


Theorem (1054)                               [serial 2143] 
P [374] << REQMHS2() and not REQMHS1() and (heat_control^0 = O_n^0) >>
S [374] ->
Q [375] << (heat_control = O_n) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1053:
Theorem (1053) [serial 2153] used for:
    normalization of [serial 2143]
 


Theorem (1055)                               [serial 2140] 
P [374] << REQMHS2() and not REQMHS1() and (heat_control = O_n)^0 >>
S [374] ->
Q [375] << (heat_control = O_n) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1054:
Theorem (1054) [serial 2143] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2140]
 


Theorem (1056)                               [serial 2138] 
P [374] << (REQMHS2() and not REQMHS1()) and (heat_control = O_n)^0 >>
S [374] ->
Q [375] << (heat_control = O_n) >>
by Associativity: (b.c).a = a.b.c
and theorem 1055:
Theorem (1055) [serial 2140] used for:
  Associativity: (b.c).a = a.b.c [serial 2138]
 


Theorem (1057)                               [serial 2135] 
P [373] << REQMHS2() and not REQMHS1() >>
S [374] heat_control!(O_n)
Q [375] << (heat_control = O_n) >>
by Enumeration Type Port Output 
and theorems 1051 1056:
Theorem (1051) [serial 2137] used for:
  applied port output of enumeration type  heat_control!(O_n) [serial 2135]
 
Theorem (1056) [serial 2138] used for:
  applied port output <<pre and (heat_control=O_n)^0>> -> <<post>> [serial 2135]
 


Theorem (1058)                               [serial 2147] 
P [375] << O_n = heat_control >>
S [376] ->
Q [377] << O_n = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1059)                               [serial 2139] 
P [375] << (heat_control = O_n) >>
S [376] ->
Q [377] << (O_n = heat_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1058:
Theorem (1058) [serial 2147] used for:
    normalization of [serial 2139]
 


Theorem (1060)                               [serial 2136] 
P [375] << (heat_control = O_n) >>
S [376] heat_previous_period' := O_n
Q [377] << (heat_previous_period' = heat_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1059:
Theorem (1059) [serial 2139] used for:
  applied wp for assignment [serial 2136]
 


Theorem (1061)                               [serial 1058] 
P [347] << INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() and ((current_temperature.t <= LOWER_DESIRED_TEMP^0)) >>
S [373] << REQMHS2() and not REQMHS1() >>
heat_control!(O_n)
;
<< (heat_control = O_n) >>
heat_previous_period' := O_n
<< (heat_previous_period' = heat_control) >>
Q [345] << (INVMHS())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1040 1049 1057 1060:
Theorem (1040) [serial 2133] used for:
  P -> P1 in sequential composition for [serial 1058]
 
Theorem (1049) [serial 2134] used for:
  Q1 -> Q in sequential composition for [serial 1058]
 
Theorem (1057) [serial 2135] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1058]
 
Theorem (1060) [serial 2136] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1058]
 


Theorem (1062)                               [serial 2240] 
P [347] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [4] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1063)                               [serial 2238] 
P [347] << UPPER_DESIRED_TEMP <= current_temperature.t and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [4] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t >>
by Replacing port names with Assertions
and theorem 1062:
Theorem (1062) [serial 2240] used for:
  Replacing port names with Assertions [serial 2238]
 


Theorem (1064)                               [serial 2252] 
P [347] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
not CURRENT_TEMP.t < UPPER_DESIRED_TEMP and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [347] ->
Q [381] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1065)                               [serial 2250] 
P [347] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
(not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(not (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) and heat_control^-1 = heat_previous_period and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [347] ->
Q [381] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1064:
Theorem (1064) [serial 2252] used for:
    normalization of [serial 2250]
 


Theorem (1066)                               [serial 2249] 
P [347] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) and 
(not (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) and heat_control^-1 = heat_previous_period and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [347] ->
Q [381] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 1065:
Theorem (1065) [serial 2250] used for:
  Associativity: (b.c).a = a.b.c [serial 2249]
 


Theorem (1067)                               [serial 2248] 
P [347] << (not (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) and heat_control^-1 = heat_previous_period and 
((not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [347] ->
Q [381] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 1066:
Theorem (1066) [serial 2249] used for:
  Associativity: (b.c).a = a.b.c [serial 2248]
 


Theorem (1068)                               [serial 2246] 
P [347] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t and heat_control^-1 = heat_previous_period and 
(#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [347] ->
Q [381] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 1067:
Theorem (1067) [serial 2248] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2246]
 


Theorem (1069)                               [serial 2244] 
P [347] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t and ((((heat_previous_period = O_n))) or 
(((heat_previous_period = Off)))) and ((heat_previous_period = heat_control^-1)) and 
((not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) >>
S [347] ->
Q [381] << not ((((now - START_TIME) < #Iso_Properties::Initialization_Timeout))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1068:
Theorem (1068) [serial 2246] used for:
    normalization of [serial 2244]
 


Theorem (1070)                               [serial 2243] 
P [347] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t and ((((heat_previous_period = O_n))) or 
(((heat_previous_period = Off)))) and ((heat_previous_period = heat_control^-1)) and 
((not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) >>
S [347] ->
Q [381] << not (INI()) >>
by Substitution of Assertion Labels
and theorem 1069:
Theorem (1069) [serial 2244] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2243]
 


Theorem (1071)                               [serial 2242] 
P [347] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t and ((((heat_previous_period = O_n))) or 
(((heat_previous_period = Off)))) and ((heat_previous_period = heat_control^-1)) and 
(REGULATOR_OK() and RUN()) >>
S [347] ->
Q [381] << not (INI()) >>
by Substitution of Assertion Labels
and theorem 1070:
Theorem (1070) [serial 2243] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2242]
 


Theorem (1072)                               [serial 2241] 
P [347] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [381] << not REGULATOR_MODE(x:Init) >>
by Substitution of Assertion Labels
and theorem 1071:
Theorem (1071) [serial 2242] used for:
  substituted Assertions' predicates for  labels  [serial 2241]
 


Theorem (1073)                               [serial 2239] 
P [347] << UPPER_DESIRED_TEMP <= current_temperature.t and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [381] << not REGULATOR_MODE(x:Init) >>
by Replacing port names with Assertions
and theorem 1072:
Theorem (1072) [serial 2241] used for:
  Replacing port names with Assertions [serial 2239]
 


Theorem (1074)                               [serial 2223] 
P [347] << UPPER_DESIRED_TEMP <= current_temperature.t and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [381] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t and not REGULATOR_MODE(x:Init) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1063 1073:
Theorem (1063) [serial 2238] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2223]
 
Theorem (1073) [serial 2239] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2223]
 


Theorem (1075)                               [serial 2220] 
P [347] << UPPER_DESIRED_TEMP <= current_temperature.t and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [381] << ((CURRENT_TEMP.t >= UPPER_DESIRED_TEMP)) and not (REGULATOR_MODE(x:Init)) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1074:
Theorem (1074) [serial 2223] used for:
    normalization of [serial 2220]
 


Theorem (1076)                               [serial 2210] 
P [347] << UPPER_DESIRED_TEMP <= current_temperature.t and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [381] << REQMHS3() and not REQMHS1() >>
by Substitution of Assertion Labels
and theorem 1075:
Theorem (1075) [serial 2220] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2210]
 


Theorem (1077)                               [serial 2201] 
P [347] << INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() and ((current_temperature.t >= UPPER_DESIRED_TEMP)) >>
S [347] ->
Q [381] << REQMHS3() and not REQMHS1() >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1076:
Theorem (1076) [serial 2210] used for:
    normalization of [serial 2201]
 


Theorem (1078)                               [serial 2193] 
P [347] << INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() and ((current_temperature.t >= UPPER_DESIRED_TEMP^0)) >>
S [347] ->
Q [381] << REQMHS3() and not REQMHS1() >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1077:
Theorem (1077) [serial 2201] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2193]
 


Theorem (1079)                               [serial 2236] 
P [385] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_previous_period^1 = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1080)                               [serial 2233] 
P [385] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control = heat_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 1079:
Theorem (1079) [serial 2236] used for:
    normalization of [serial 2233]
 


Theorem (1081)                               [serial 2231] 
P [385] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control^0 = heat_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1080:
Theorem (1080) [serial 2233] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2231]
 


Theorem (1082)                               [serial 2228] 
P [385] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^(-1+1) = heat_previous_period^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1081:
Theorem (1081) [serial 2231] used for:
    normalization of [serial 2228]
 


Theorem (1083)                               [serial 2225] 
P [385] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^-1 = heat_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1082:
Theorem (1082) [serial 2228] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2225]
 


Theorem (1084)                               [serial 2221] 
P [385] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (((heat_previous_period = heat_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1083:
Theorem (1083) [serial 2225] used for:
    normalization of [serial 2221]
 


Theorem (1085)                               [serial 2212] 
P [385] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Substitution of Assertion Labels
and theorem 1084:
Theorem (1084) [serial 2221] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2212]
 


Theorem (1086)                               [serial 2202] 
P [385] << ((heat_previous_period)^1 = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1085:
Theorem (1085) [serial 2212] used for:
    normalization of [serial 2202]
 


Theorem (1087)                               [serial 2194] 
P [385] << (heat_previous_period' = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1086:
Theorem (1086) [serial 2202] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2194]
 


Theorem (1088)                               [serial 2206] 
P [381] << REQMHS3() and not REQMHS1() >>
S [382] ->
Q [98] << REQMHS1() or REQMHS3() or REQMHS5() or (HEAT_CONTROL^-1 = Off and REQMHS4()) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1089)                               [serial 2197] 
P [381] << REQMHS3() and not REQMHS1() >>
S [382] ->
Q [98] << (REQMHS1()) or (REQMHS3()) or (REQMHS5()) or ((REQMHS4() and ((HEAT_CONTROL^-1 = Off)))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1088:
Theorem (1088) [serial 2206] used for:
    normalization of [serial 2197]
 


Theorem (1090)                               [serial 2214] 
P [382] << Off = heat_control and REQMHS3() and not REQMHS1() >>
S [382] ->
Q [383] << Off = heat_control and REQMHS3() and not REQMHS1() >>
by Identity (id):  P->P is tautology


Theorem (1091)                               [serial 2204] 
P [382] << REQMHS3() and not REQMHS1() and (heat_control = Off) >>
S [382] ->
Q [383] << REQMHS3() and not REQMHS1() and ((heat_control = Off)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1090:
Theorem (1090) [serial 2214] used for:
    normalization of [serial 2204]
 


Theorem (1092)                               [serial 2203] 
P [382] << REQMHS3() and not REQMHS1() and (heat_control^0 = Off^0) >>
S [382] ->
Q [383] << REQMHS3() and not REQMHS1() and ((heat_control = Off)) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1091:
Theorem (1091) [serial 2204] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2203]
 


Theorem (1093)                               [serial 2200] 
P [382] << REQMHS3() and not REQMHS1() and (heat_control = Off)^0 >>
S [382] ->
Q [383] << REQMHS3() and not REQMHS1() and ((heat_control = Off)) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1092:
Theorem (1092) [serial 2203] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2200]
 


Theorem (1094)                               [serial 2198] 
P [382] << (REQMHS3() and not REQMHS1()) and (heat_control = Off)^0 >>
S [382] ->
Q [383] << REQMHS3() and not REQMHS1() and ((heat_control = Off)) >>
by Associativity: (b.c).a = a.b.c
and theorem 1093:
Theorem (1093) [serial 2200] used for:
  Associativity: (b.c).a = a.b.c [serial 2198]
 


Theorem (1095)                               [serial 2195] 
P [381] << REQMHS3() and not REQMHS1() >>
S [382] heat_control!(Off)
Q [383] << REQMHS3() and not REQMHS1() and ((heat_control = Off)) >>
by Enumeration Type Port Output 
and theorems 1089 1094:
Theorem (1089) [serial 2197] used for:
  applied port output of enumeration type  heat_control!(Off) [serial 2195]
 
Theorem (1094) [serial 2198] used for:
  applied port output <<pre and (heat_control=Off)^0>> -> <<post>> [serial 2195]
 


Theorem (1096)                               [serial 2208] 
P [383] << Off = heat_control and REQMHS3() and not REQMHS1() >>
S [384] ->
Q [385] << Off = heat_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1097)                               [serial 2199] 
P [383] << REQMHS3() and not REQMHS1() and ((heat_control = Off)) >>
S [384] ->
Q [385] << (Off = heat_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1096:
Theorem (1096) [serial 2208] used for:
    normalization of [serial 2199]
 


Theorem (1098)                               [serial 2196] 
P [383] << REQMHS3() and not REQMHS1() and ((heat_control = Off)) >>
S [384] heat_previous_period' := Off
Q [385] << (heat_previous_period' = heat_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1097:
Theorem (1097) [serial 2199] used for:
  applied wp for assignment [serial 2196]
 


Theorem (1099)                               [serial 1059] 
P [347] << INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() and ((current_temperature.t >= UPPER_DESIRED_TEMP^0)) >>
S [381] << REQMHS3() and not REQMHS1() >>
heat_control!(Off)
;
<< REQMHS3() and not REQMHS1() and ((heat_control = Off)) >>
heat_previous_period' := Off
<< (heat_previous_period' = heat_control) >>
Q [345] << (INVMHS())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1078 1087 1095 1098:
Theorem (1078) [serial 2193] used for:
  P -> P1 in sequential composition for [serial 1059]
 
Theorem (1087) [serial 2194] used for:
  Q1 -> Q in sequential composition for [serial 1059]
 
Theorem (1095) [serial 2195] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1059]
 
Theorem (1098) [serial 2196] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1059]
 


Theorem (1100)                               [serial 2262] 
P [347] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1101)                               [serial 2261] 
P [347] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < current_temperature.t and 
current_temperature.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period >>
by Replacing port names with Assertions
and theorem 1100:
Theorem (1100) [serial 2262] used for:
  Replacing port names with Assertions [serial 2261]
 


Theorem (1102)                               [serial 2260] 
P [347] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP^0 < current_temperature.t and 
current_temperature.t < UPPER_DESIRED_TEMP^0 and heat_control^-1 = heat_previous_period and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1101:
Theorem (1101) [serial 2261] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2260]
 


Theorem (1103)                               [serial 2259] 
P [347] << heat_control^-1 = heat_previous_period and (REGULATOR_OK() and RUN()) and 
(LOWER_DESIRED_TEMP^0 < current_temperature.t and current_temperature.t < UPPER_DESIRED_TEMP^0) and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << heat_control^-1 = heat_previous_period and (REGULATOR_OK() and RUN()) and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Associativity: (b.c).a = a.b.c
and theorem 1102:
Theorem (1102) [serial 2260] used for:
  Associativity: (b.c).a = a.b.c [serial 2259]
 


Theorem (1104)                               [serial 2257] 
P [347] << heat_control^-1 = heat_previous_period and (REGULATOR_OK() and RUN()) and 
(LOWER_DESIRED_TEMP^0 < current_temperature.t and current_temperature.t < UPPER_DESIRED_TEMP^0) and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << heat_control^-1 = heat_previous_period and true and (REGULATOR_OK() and 
RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Law of And-Simplification:  P and true is P
and theorem 1103:
Theorem (1103) [serial 2259] used for:
  Law of And-Simplification:  P and true is P [serial 2257]
 


Theorem (1105)                               [serial 2255] 
P [347] << ((heat_previous_period = heat_control^-1)) and (REGULATOR_OK() and RUN()) and 
((((heat_previous_period = O_n))) or (((heat_previous_period = Off)))) and 
(((current_temperature.t > LOWER_DESIRED_TEMP^0)) and ((current_temperature.t < UPPER_DESIRED_TEMP^0))) >>
S [387] ->
Q [348] << (((CURRENT_TEMP.t > LOWER_DESIRED_TEMP)) and ((CURRENT_TEMP.t < UPPER_DESIRED_TEMP))) and 
(REGULATOR_OK() and RUN()) and ((heat_previous_period = heat_control^-1)) and 
true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1104:
Theorem (1104) [serial 2257] used for:
    normalization of [serial 2255]
 


Theorem (1106)                               [serial 2254] 
P [347] << INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() and (((current_temperature.t > LOWER_DESIRED_TEMP^0)) and 
((current_temperature.t < UPPER_DESIRED_TEMP^0))) >>
S [387] ->
Q [348] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
true >>
by Substitution of Assertion Labels
and theorem 1105:
Theorem (1105) [serial 2255] used for:
  substituted Assertions' predicates for  labels  [serial 2254]
 


Theorem (1107)                               [serial 2262] 
P [347] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1108)                               [serial 2261] 
P [347] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < current_temperature.t and 
current_temperature.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period >>
by Replacing port names with Assertions
and theorem 1107:
Theorem (1107) [serial 2262] used for:
  Replacing port names with Assertions [serial 2261]
 


Theorem (1109)                               [serial 2260] 
P [347] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP^0 < current_temperature.t and 
current_temperature.t < UPPER_DESIRED_TEMP^0 and heat_control^-1 = heat_previous_period and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1108:
Theorem (1108) [serial 2261] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2260]
 


Theorem (1110)                               [serial 2259] 
P [347] << heat_control^-1 = heat_previous_period and (REGULATOR_OK() and RUN()) and 
(LOWER_DESIRED_TEMP^0 < current_temperature.t and current_temperature.t < UPPER_DESIRED_TEMP^0) and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << heat_control^-1 = heat_previous_period and (REGULATOR_OK() and RUN()) and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Associativity: (b.c).a = a.b.c
and theorem 1109:
Theorem (1109) [serial 2260] used for:
  Associativity: (b.c).a = a.b.c [serial 2259]
 


Theorem (1111)                               [serial 2257] 
P [347] << heat_control^-1 = heat_previous_period and (REGULATOR_OK() and RUN()) and 
(LOWER_DESIRED_TEMP^0 < current_temperature.t and current_temperature.t < UPPER_DESIRED_TEMP^0) and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << heat_control^-1 = heat_previous_period and true and (REGULATOR_OK() and 
RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Law of And-Simplification:  P and true is P
and theorem 1110:
Theorem (1110) [serial 2259] used for:
  Law of And-Simplification:  P and true is P [serial 2257]
 


Theorem (1112)                               [serial 2255] 
P [347] << ((heat_previous_period = heat_control^-1)) and (REGULATOR_OK() and RUN()) and 
((((heat_previous_period = O_n))) or (((heat_previous_period = Off)))) and 
(((current_temperature.t > LOWER_DESIRED_TEMP^0)) and ((current_temperature.t < UPPER_DESIRED_TEMP^0))) >>
S [387] ->
Q [348] << (((CURRENT_TEMP.t > LOWER_DESIRED_TEMP)) and ((CURRENT_TEMP.t < UPPER_DESIRED_TEMP))) and 
(REGULATOR_OK() and RUN()) and ((heat_previous_period = heat_control^-1)) and 
true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1111:
Theorem (1111) [serial 2257] used for:
    normalization of [serial 2255]
 


Theorem (1113)                               [serial 2254] 
P [347] << INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() and (((current_temperature.t > LOWER_DESIRED_TEMP^0)) and 
((current_temperature.t < UPPER_DESIRED_TEMP^0))) >>
S [387] ->
Q [348] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
true >>
by Substitution of Assertion Labels
and theorem 1112:
Theorem (1112) [serial 2255] used for:
  substituted Assertions' predicates for  labels  [serial 2254]
 


Theorem (1114)                               [serial 1060] 
P [347] << INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() and (((current_temperature.t > LOWER_DESIRED_TEMP^0)) and 
((current_temperature.t < UPPER_DESIRED_TEMP^0))) >>
S [387] ->
Q [348] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1113 1113:
Theorem (1113) [serial 2254] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1113) [serial 2254] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1115)                               [serial 2407] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [393] << heat_control^-1 = heat_previous_period >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1116)                               [serial 2385] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [393] << heat_control^-1 = O_n >>
by Guided Substitution of Equals
and theorem 1115:
Theorem (1115) [serial 2407] used for:
  Guided Substitution of Equals
 replacing "O_n" with its = "heat_previous_period" in its postcondition [serial 2385]
 


Theorem (1117)                               [serial 2386] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [129] << CURRENT_TEMPERATURE_STATUS = Valid >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1118)                               [serial 2387] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [128] << not INTERNAL_FAILURE >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1119)                               [serial 2388] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [128] << not REGULATOR_INTERFACE_FAILURE >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1120)                               [serial 2389] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [4] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1121)                               [serial 2390] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [4] << LOWER_DESIRED_TEMP < CURRENT_TEMP.t >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1122)                               [serial 2391] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [337] << CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1123)                               [serial 2379] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1116 1117 1118 1119 1120 1121 1122:
Theorem (1116) [serial 2385] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2379]
 
Theorem (1117) [serial 2386] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2379]
 
Theorem (1118) [serial 2387] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2379]
 
Theorem (1119) [serial 2388] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2379]
 
Theorem (1120) [serial 2389] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2379]
 
Theorem (1121) [serial 2390] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2379]
 
Theorem (1122) [serial 2391] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2379]
 


Theorem (1124)                               [serial 2375] 
P [348] << not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(O_n = heat_previous_period or Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and heat_control^-1 = O_n and 
CURRENT_TEMPERATURE_STATUS = Valid and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1123:
Theorem (1123) [serial 2379] used for:
    normalization of [serial 2375]
 


Theorem (1125)                               [serial 2371] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE) and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Associativity: (b.c).a = a.b.c
and theorem 1124:
Theorem (1124) [serial 2375] used for:
  Associativity: (b.c).a = a.b.c [serial 2371]
 


Theorem (1126)                               [serial 2367] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and (not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and (not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1125:
Theorem (1125) [serial 2371] used for:
    normalization of [serial 2367]
 


Theorem (1127)                               [serial 2365] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 1126:
Theorem (1126) [serial 2367] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2365]
 


Theorem (1128)                               [serial 2363] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << true and heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Law of And-Simplification:  P and true is P
and theorem 1127:
Theorem (1127) [serial 2365] used for:
  Law of And-Simplification:  P and true is P [serial 2363]
 


Theorem (1129)                               [serial 2358] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << heat_control^-1 = heat_control^-1 and heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Equality Law (idistr):  a=a <-> true
and theorem 1128:
Theorem (1128) [serial 2363] used for:
  Equality Law (idistr):  a=a <-> true [serial 2358]
 


Theorem (1130)                               [serial 2355] 
P [348] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
(O_n = heat_previous_period or Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
heat_control^-1 = heat_control^-1 and heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1129:
Theorem (1129) [serial 2358] used for:
    normalization of [serial 2355]
 


Theorem (1131)                               [serial 2353] 
P [348] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_control^-1 and 
heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 1130:
Theorem (1130) [serial 2355] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2353]
 


Theorem (1132)                               [serial 2349] 
P [348] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
and theorem 1131:
Theorem (1131) [serial 2353] used for:
  Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
 replacing "heat_previous_period"
 with its ="
 (heat_control^-1)" [serial 2349]
 


Theorem (1133)                               [serial 2345] 
P [348] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (O_n = heat_previous_period or Off = heat_previous_period) and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1132:
Theorem (1132) [serial 2349] used for:
    normalization of [serial 2345]
 


Theorem (1134)                               [serial 2341] 
P [348] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (CURRENT_TEMPERATURE_STATUS = Valid and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Associativity: (b.c).a = a.b.c
and theorem 1133:
Theorem (1133) [serial 2345] used for:
  Associativity: (b.c).a = a.b.c [serial 2341]
 


Theorem (1135)                               [serial 2337] 
P [348] << (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (O_n = heat_previous_period or Off = heat_previous_period) >>
S [348] ->
Q [392] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1134:
Theorem (1134) [serial 2341] used for:
    normalization of [serial 2337]
 


Theorem (1136)                               [serial 2335] 
P [348] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (O_n = heat_previous_period or Off = heat_previous_period) >>
S [348] ->
Q [392] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period >>
by Substitution of Assertion Labels
and theorem 1135:
Theorem (1135) [serial 2337] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2335]
 


Theorem (1137)                               [serial 2334] 
P [348] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (O_n = heat_previous_period or Off = heat_previous_period) >>
S [348] ->
Q [392] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period >>
by Associativity: (b.c).a = a.b.c
and theorem 1136:
Theorem (1136) [serial 2335] used for:
  Associativity: (b.c).a = a.b.c [serial 2334]
 


Theorem (1138)                               [serial 2333] 
P [348] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
(REGULATOR_OK() and RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [348] ->
Q [392] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
(#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Associativity: (b.c).a = a.b.c
and theorem 1137:
Theorem (1137) [serial 2334] used for:
  Associativity: (b.c).a = a.b.c [serial 2333]
 


Theorem (1139)                               [serial 2329] 
P [348] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
(REGULATOR_OK() and RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [348] ->
Q [392] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
true and (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Law of And-Simplification:  P and true is P
and theorem 1138:
Theorem (1138) [serial 2333] used for:
  Law of And-Simplification:  P and true is P [serial 2329]
 


Theorem (1140)                               [serial 2325] 
P [348] << O_n = heat_previous_period and ((((heat_previous_period = O_n))) or (((heat_previous_period = Off)))) and 
((heat_previous_period = heat_control^-1)) and (REGULATOR_OK() and RUN()) and 
(((CURRENT_TEMP.t > LOWER_DESIRED_TEMP)) and ((CURRENT_TEMP.t < UPPER_DESIRED_TEMP))) >>
S [348] ->
Q [392] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
true and ((not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) and (
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1139:
Theorem (1139) [serial 2329] used for:
    normalization of [serial 2325]
 


Theorem (1141)                               [serial 2306] 
P [348] << O_n = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [392] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
true and (REGULATOR_OK() and RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Substitution of Assertion Labels
and theorem 1140:
Theorem (1140) [serial 2325] used for:
  substituted Assertions' predicates for  labels  [serial 2306]
 


Theorem (1142)                               [serial 2301] 
P [348] << O_n = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [392] << O_n = heat_previous_period and ((heat_previous_period = heat_control^-1)) and 
(REGULATOR_OK() and RUN()) and (((CURRENT_TEMP.t > LOWER_DESIRED_TEMP)) and 
((CURRENT_TEMP.t < UPPER_DESIRED_TEMP))) and true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1141:
Theorem (1141) [serial 2306] used for:
    normalization of [serial 2301]
 


Theorem (1143)                               [serial 2292] 
P [348] << O_n = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [392] << O_n = heat_previous_period and INVMHS() and REGULATOR_MODE(x:Normal) and 
TEMP_IN_DESIRED_RANGE() and true >>
by Substitution of Assertion Labels
and theorem 1142:
Theorem (1142) [serial 2301] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2292]
 


Theorem (1144)                               [serial 2286] 
P [348] << O_n = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [392] << O_n = heat_previous_period and true and INVMHS() and REGULATOR_MODE(x:Normal) and 
TEMP_IN_DESIRED_RANGE() >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1143:
Theorem (1143) [serial 2292] used for:
    normalization of [serial 2286]
 


Theorem (1145)                               [serial 2407] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [393] << heat_control^-1 = heat_previous_period >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1146)                               [serial 2385] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [393] << heat_control^-1 = O_n >>
by Guided Substitution of Equals
and theorem 1145:
Theorem (1145) [serial 2407] used for:
  Guided Substitution of Equals
 replacing "O_n" with its = "heat_previous_period" in its postcondition [serial 2385]
 


Theorem (1147)                               [serial 2386] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [129] << CURRENT_TEMPERATURE_STATUS = Valid >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1148)                               [serial 2387] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [128] << not INTERNAL_FAILURE >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1149)                               [serial 2388] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [128] << not REGULATOR_INTERFACE_FAILURE >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1150)                               [serial 2389] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [4] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1151)                               [serial 2390] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [4] << LOWER_DESIRED_TEMP < CURRENT_TEMP.t >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1152)                               [serial 2391] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [337] << CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1153)                               [serial 2379] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1146 1147 1148 1149 1150 1151 1152:
Theorem (1146) [serial 2385] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2379]
 
Theorem (1147) [serial 2386] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2379]
 
Theorem (1148) [serial 2387] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2379]
 
Theorem (1149) [serial 2388] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2379]
 
Theorem (1150) [serial 2389] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2379]
 
Theorem (1151) [serial 2390] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2379]
 
Theorem (1152) [serial 2391] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2379]
 


Theorem (1154)                               [serial 2375] 
P [348] << not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(O_n = heat_previous_period or Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and heat_control^-1 = O_n and 
CURRENT_TEMPERATURE_STATUS = Valid and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1153:
Theorem (1153) [serial 2379] used for:
    normalization of [serial 2375]
 


Theorem (1155)                               [serial 2371] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE) and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Associativity: (b.c).a = a.b.c
and theorem 1154:
Theorem (1154) [serial 2375] used for:
  Associativity: (b.c).a = a.b.c [serial 2371]
 


Theorem (1156)                               [serial 2367] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and (not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and (not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1155:
Theorem (1155) [serial 2371] used for:
    normalization of [serial 2367]
 


Theorem (1157)                               [serial 2365] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 1156:
Theorem (1156) [serial 2367] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2365]
 


Theorem (1158)                               [serial 2363] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << true and heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Law of And-Simplification:  P and true is P
and theorem 1157:
Theorem (1157) [serial 2365] used for:
  Law of And-Simplification:  P and true is P [serial 2363]
 


Theorem (1159)                               [serial 2358] 
P [348] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << heat_control^-1 = heat_control^-1 and heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Equality Law (idistr):  a=a <-> true
and theorem 1158:
Theorem (1158) [serial 2363] used for:
  Equality Law (idistr):  a=a <-> true [serial 2358]
 


Theorem (1160)                               [serial 2355] 
P [348] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
(O_n = heat_previous_period or Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
heat_control^-1 = heat_control^-1 and heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1159:
Theorem (1159) [serial 2358] used for:
    normalization of [serial 2355]
 


Theorem (1161)                               [serial 2353] 
P [348] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_control^-1 and 
heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 1160:
Theorem (1160) [serial 2355] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2353]
 


Theorem (1162)                               [serial 2349] 
P [348] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
and theorem 1161:
Theorem (1161) [serial 2353] used for:
  Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
 replacing "heat_previous_period"
 with its ="
 (heat_control^-1)" [serial 2349]
 


Theorem (1163)                               [serial 2345] 
P [348] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (O_n = heat_previous_period or Off = heat_previous_period) and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1162:
Theorem (1162) [serial 2349] used for:
    normalization of [serial 2345]
 


Theorem (1164)                               [serial 2341] 
P [348] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (CURRENT_TEMPERATURE_STATUS = Valid and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [392] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Associativity: (b.c).a = a.b.c
and theorem 1163:
Theorem (1163) [serial 2345] used for:
  Associativity: (b.c).a = a.b.c [serial 2341]
 


Theorem (1165)                               [serial 2337] 
P [348] << (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (O_n = heat_previous_period or Off = heat_previous_period) >>
S [348] ->
Q [392] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1164:
Theorem (1164) [serial 2341] used for:
    normalization of [serial 2337]
 


Theorem (1166)                               [serial 2335] 
P [348] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (O_n = heat_previous_period or Off = heat_previous_period) >>
S [348] ->
Q [392] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period >>
by Substitution of Assertion Labels
and theorem 1165:
Theorem (1165) [serial 2337] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2335]
 


Theorem (1167)                               [serial 2334] 
P [348] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (O_n = heat_previous_period or Off = heat_previous_period) >>
S [348] ->
Q [392] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period >>
by Associativity: (b.c).a = a.b.c
and theorem 1166:
Theorem (1166) [serial 2335] used for:
  Associativity: (b.c).a = a.b.c [serial 2334]
 


Theorem (1168)                               [serial 2333] 
P [348] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
(REGULATOR_OK() and RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [348] ->
Q [392] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
(#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Associativity: (b.c).a = a.b.c
and theorem 1167:
Theorem (1167) [serial 2334] used for:
  Associativity: (b.c).a = a.b.c [serial 2333]
 


Theorem (1169)                               [serial 2329] 
P [348] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
(REGULATOR_OK() and RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [348] ->
Q [392] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
true and (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Law of And-Simplification:  P and true is P
and theorem 1168:
Theorem (1168) [serial 2333] used for:
  Law of And-Simplification:  P and true is P [serial 2329]
 


Theorem (1170)                               [serial 2325] 
P [348] << O_n = heat_previous_period and ((((heat_previous_period = O_n))) or (((heat_previous_period = Off)))) and 
((heat_previous_period = heat_control^-1)) and (REGULATOR_OK() and RUN()) and 
(((CURRENT_TEMP.t > LOWER_DESIRED_TEMP)) and ((CURRENT_TEMP.t < UPPER_DESIRED_TEMP))) >>
S [348] ->
Q [392] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
true and ((not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) and (
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1169:
Theorem (1169) [serial 2329] used for:
    normalization of [serial 2325]
 


Theorem (1171)                               [serial 2306] 
P [348] << O_n = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [392] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
true and (REGULATOR_OK() and RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Substitution of Assertion Labels
and theorem 1170:
Theorem (1170) [serial 2325] used for:
  substituted Assertions' predicates for  labels  [serial 2306]
 


Theorem (1172)                               [serial 2301] 
P [348] << O_n = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [392] << O_n = heat_previous_period and ((heat_previous_period = heat_control^-1)) and 
(REGULATOR_OK() and RUN()) and (((CURRENT_TEMP.t > LOWER_DESIRED_TEMP)) and 
((CURRENT_TEMP.t < UPPER_DESIRED_TEMP))) and true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1171:
Theorem (1171) [serial 2306] used for:
    normalization of [serial 2301]
 


Theorem (1173)                               [serial 2292] 
P [348] << O_n = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [392] << O_n = heat_previous_period and INVMHS() and REGULATOR_MODE(x:Normal) and 
TEMP_IN_DESIRED_RANGE() and true >>
by Substitution of Assertion Labels
and theorem 1172:
Theorem (1172) [serial 2301] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2292]
 


Theorem (1174)                               [serial 2286] 
P [348] << O_n = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [392] << O_n = heat_previous_period and true and INVMHS() and REGULATOR_MODE(x:Normal) and 
TEMP_IN_DESIRED_RANGE() >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1173:
Theorem (1173) [serial 2292] used for:
    normalization of [serial 2286]
 


Theorem (1175)                               [serial 2272] 
P [348] << O_n = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [392] << O_n = heat_previous_period and AXIOM_HC() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1174 1174:
Theorem (1174) [serial 2286] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1174) [serial 2286] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1176)                               [serial 2263] 
P [348] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT() and (((heat_previous_period = O_n))) >>
S [348] ->
Q [392] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and 
((heat_previous_period = O_n)) and INVMHS() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1175:
Theorem (1175) [serial 2272] used for:
    normalization of [serial 2263]
 


Theorem (1177)                               [serial 2322] 
P [397] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_previous_period^1 = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1178)                               [serial 2318] 
P [397] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control = heat_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 1177:
Theorem (1177) [serial 2322] used for:
    normalization of [serial 2318]
 


Theorem (1179)                               [serial 2316] 
P [397] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control^0 = heat_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1178:
Theorem (1178) [serial 2318] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2316]
 


Theorem (1180)                               [serial 2312] 
P [397] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^(-1+1) = heat_previous_period^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1179:
Theorem (1179) [serial 2316] used for:
    normalization of [serial 2312]
 


Theorem (1181)                               [serial 2308] 
P [397] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^-1 = heat_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1180:
Theorem (1180) [serial 2312] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2308]
 


Theorem (1182)                               [serial 2302] 
P [397] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (((heat_previous_period = heat_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1181:
Theorem (1181) [serial 2308] used for:
    normalization of [serial 2302]
 


Theorem (1183)                               [serial 2294] 
P [397] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Substitution of Assertion Labels
and theorem 1182:
Theorem (1182) [serial 2302] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2294]
 


Theorem (1184)                               [serial 2287] 
P [397] << heat_control = (heat_previous_period)^1 >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1183:
Theorem (1183) [serial 2294] used for:
    normalization of [serial 2287]
 


Theorem (1185)                               [serial 2274] 
P [397] << heat_control = heat_previous_period' >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1184:
Theorem (1184) [serial 2287] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2274]
 


Theorem (1186)                               [serial 2264] 
P [397] << (heat_previous_period' = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1185:
Theorem (1185) [serial 2274] used for:
    normalization of [serial 2264]
 


Theorem (1187)                               [serial 2408] 
P [392] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << heat_control^-1 = heat_previous_period or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1188)                               [serial 2402] 
P [392] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << heat_control^-1 = O_n or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t >>
by Guided Substitution of Equals
and theorem 1187:
Theorem (1187) [serial 2408] used for:
  Guided Substitution of Equals
 replacing "O_n" with its = "heat_previous_period" in its postcondition [serial 2402]
 


Theorem (1189)                               [serial 2392] 
P [392] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << (heat_control^-1 = O_n or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1188:
Theorem (1188) [serial 2402] used for:
    normalization of [serial 2392]
 


Theorem (1190)                               [serial 2404] 
P [392] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << not LOWER_DESIRED_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1191)                               [serial 2393] 
P [392] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << (not LOWER_DESIRED_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1190:
Theorem (1190) [serial 2404] used for:
    normalization of [serial 2393]
 


Theorem (1192)                               [serial 2384] 
P [392] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << (heat_control^-1 = O_n or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) and 
(not LOWER_DESIRED_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1189 1191:
Theorem (1189) [serial 2392] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2384]
 
Theorem (1191) [serial 2393] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2384]
 


Theorem (1193)                               [serial 2381] 
P [392] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << true and (heat_control^-1 = O_n or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) and 
(not LOWER_DESIRED_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Law of And-Simplification:  P and true is P
and theorem 1192:
Theorem (1192) [serial 2384] used for:
  Law of And-Simplification:  P and true is P [serial 2381]
 


Theorem (1194)                               [serial 2377] 
P [392] << not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and HEAT_CONTROL^-1 = heat_control^-1 and 
heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << (heat_control^-1 = O_n or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) and 
(true) and (CURRENT_TEMP.t < UPPER_DESIRED_TEMP or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1193:
Theorem (1193) [serial 2381] used for:
    normalization of [serial 2377]
 


Theorem (1195)                               [serial 2376] 
P [392] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << (heat_control^-1 = O_n or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) and 
(true) and (CURRENT_TEMP.t < UPPER_DESIRED_TEMP or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) >>
by Associativity: (b.c).a = a.b.c
and theorem 1194:
Theorem (1194) [serial 2377] used for:
  Associativity: (b.c).a = a.b.c [serial 2376]
 


Theorem (1196)                               [serial 2374] 
P [392] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << (heat_control^-1 = O_n or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) and 
(CURRENT_TEMP.t < UPPER_DESIRED_TEMP or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 1195:
Theorem (1195) [serial 2376] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2374]
 


Theorem (1197)                               [serial 2369] 
P [392] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << not LOWER_DESIRED_TEMP < CURRENT_TEMP.t or (heat_control^-1 = O_n and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 1196:
Theorem (1196) [serial 2374] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 2369]
 


Theorem (1198)                               [serial 2366] 
P [392] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and (not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << not LOWER_DESIRED_TEMP < CURRENT_TEMP.t or (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = O_n) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1197:
Theorem (1197) [serial 2369] used for:
    normalization of [serial 2366]
 


Theorem (1199)                               [serial 2364] 
P [392] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << not LOWER_DESIRED_TEMP < CURRENT_TEMP.t or (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = O_n) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 1198:
Theorem (1198) [serial 2366] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2364]
 


Theorem (1200)                               [serial 2360] 
P [392] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << not LOWER_DESIRED_TEMP < CURRENT_TEMP.t or (heat_control^-1 = O_n and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 1199:
Theorem (1199) [serial 2364] used for:
  Associativity: (b.c).a = a.b.c [serial 2360]
 


Theorem (1201)                               [serial 2356] 
P [392] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << (not (LOWER_DESIRED_TEMP < CURRENT_TEMP.t)) or (heat_control^-1 = O_n and 
(LOWER_DESIRED_TEMP < (CURRENT_TEMP.t) and (CURRENT_TEMP.t) < UPPER_DESIRED_TEMP)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1200:
Theorem (1200) [serial 2360] used for:
    normalization of [serial 2356]
 


Theorem (1202)                               [serial 2354] 
P [392] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << (not (LOWER_DESIRED_TEMP < CURRENT_TEMP.t)) or (heat_control^-1 = O_n and 
(CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Replace expression with range:  a<x and x<b  iff  x in a,,b
and theorem 1201:
Theorem (1201) [serial 2356] used for:
  Replace expression with range:  a<x and x<b  iff  x in a,,b [serial 2354]
 


Theorem (1203)                               [serial 2352] 
P [392] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and HEAT_CONTROL^-1 = heat_control^-1 and 
heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP or (heat_control^-1 = O_n and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 1202:
Theorem (1202) [serial 2354] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2352]
 


Theorem (1204)                               [serial 2347] 
P [392] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and HEAT_CONTROL^-1 = heat_control^-1 and 
heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP or (HEAT_CONTROL^-1 = O_n and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
and theorem 1203:
Theorem (1203) [serial 2352] used for:
  Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
 replacing "HEAT_CONTROL^-1"
 with its ="
 (heat_control^-1)" [serial 2347]
 


Theorem (1205)                               [serial 2344] 
P [392] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and HEAT_CONTROL^-1 = heat_control^-1 and 
heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP or (HEAT_CONTROL^-1 = O_n and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1204:
Theorem (1204) [serial 2347] used for:
    normalization of [serial 2344]
 


Theorem (1206)                               [serial 2339] 
P [392] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and HEAT_CONTROL^-1 = heat_control^-1 and 
heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP or (HEAT_CONTROL^-1 = O_n and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 1205:
Theorem (1205) [serial 2344] used for:
  Associativity: (b.c).a = a.b.c [serial 2339]
 


Theorem (1207)                               [serial 2336] 
P [392] << (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and HEAT_CONTROL^-1 = heat_control^-1 and 
heat_control^-1 = heat_previous_period and O_n = heat_previous_period >>
S [394] ->
Q [96] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP or (HEAT_CONTROL^-1 = O_n and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1206:
Theorem (1206) [serial 2339] used for:
    normalization of [serial 2336]
 


Theorem (1208)                               [serial 2332] 
P [392] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and HEAT_CONTROL^-1 = heat_control^-1 and 
heat_control^-1 = heat_previous_period and O_n = heat_previous_period >>
S [394] ->
Q [96] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP or (HEAT_CONTROL^-1 = O_n and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Substitution of Assertion Labels
and theorem 1207:
Theorem (1207) [serial 2336] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2332]
 


Theorem (1209)                               [serial 2327] 
P [392] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (REGULATOR_OK() and RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
S [394] ->
Q [96] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP or (HEAT_CONTROL^-1 = O_n and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 1208:
Theorem (1208) [serial 2332] used for:
  Associativity: (b.c).a = a.b.c [serial 2327]
 


Theorem (1210)                               [serial 2324] 
P [392] << O_n = heat_previous_period and ((HEAT_CONTROL^-1 = heat_control^-1)) and 
((heat_previous_period = heat_control^-1)) and (REGULATOR_OK() and RUN()) and 
(((CURRENT_TEMP.t > LOWER_DESIRED_TEMP)) and ((CURRENT_TEMP.t < UPPER_DESIRED_TEMP))) >>
S [394] ->
Q [96] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP or (HEAT_CONTROL^-1 = O_n and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1209:
Theorem (1209) [serial 2327] used for:
    normalization of [serial 2324]
 


Theorem (1211)                               [serial 2304] 
P [392] << O_n = heat_previous_period and AXIOM_HC() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [394] ->
Q [96] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP or (HEAT_CONTROL^-1 = O_n and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Substitution of Assertion Labels
and theorem 1210:
Theorem (1210) [serial 2324] used for:
  substituted Assertions' predicates for  labels  [serial 2304]
 


Theorem (1212)                               [serial 2300] 
P [392] << O_n = heat_previous_period and AXIOM_HC() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [394] ->
Q [96] << ((CURRENT_TEMP.t <= LOWER_DESIRED_TEMP)) or (HEAT_CONTROL^-1 = O_n and 
((CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1211:
Theorem (1211) [serial 2304] used for:
    normalization of [serial 2300]
 


Theorem (1213)                               [serial 2276] 
P [392] << O_n = heat_previous_period and AXIOM_HC() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [394] ->
Q [96] << REQMHS2() or (HEAT_CONTROL^-1 = O_n and REQMHS4()) >>
by Substitution of Assertion Labels
and theorem 1212:
Theorem (1212) [serial 2300] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2276]
 


Theorem (1214)                               [serial 2267] 
P [392] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and 
((heat_previous_period = O_n)) and INVMHS() >>
S [394] ->
Q [96] << (REQMHS2()) or ((REQMHS4() and ((HEAT_CONTROL^-1 = O_n)))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1213:
Theorem (1213) [serial 2276] used for:
    normalization of [serial 2267]
 


Theorem (1215)                               [serial 2296] 
P [394] << O_n = heat_control and O_n = heat_previous_period and AXIOM_HC() and 
INVMHS() and REGULATOR_MODE(x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [394] ->
Q [395] << O_n = heat_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1216)                               [serial 2289] 
P [394] << (O_n = heat_control) and O_n = heat_previous_period and AXIOM_HC() and 
INVMHS() and REGULATOR_MODE(x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [394] ->
Q [395] << O_n = heat_control >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1215:
Theorem (1215) [serial 2296] used for:
    normalization of [serial 2289]
 


Theorem (1217)                               [serial 2288] 
P [394] << (O_n^0 = heat_control^0) and O_n = heat_previous_period and AXIOM_HC() and 
INVMHS() and REGULATOR_MODE(x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [394] ->
Q [395] << O_n = heat_control >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1216:
Theorem (1216) [serial 2289] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2288]
 


Theorem (1218)                               [serial 2280] 
P [394] << (O_n = heat_control)^0 and O_n = heat_previous_period and AXIOM_HC() and 
INVMHS() and REGULATOR_MODE(x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [394] ->
Q [395] << O_n = heat_control >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1217:
Theorem (1217) [serial 2288] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2280]
 


Theorem (1219)                               [serial 2270] 
P [394] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and 
((heat_previous_period = O_n)) and INVMHS() and (heat_control = O_n)^0 >>
S [394] ->
Q [395] << (heat_control = O_n) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1218:
Theorem (1218) [serial 2280] used for:
    normalization of [serial 2270]
 


Theorem (1220)                               [serial 2268] 
P [394] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and 
((heat_previous_period = O_n)) and INVMHS()) and (heat_control = O_n)^0 >>
S [394] ->
Q [395] << (heat_control = O_n) >>
by Associativity: (b.c).a = a.b.c
and theorem 1219:
Theorem (1219) [serial 2270] used for:
  Associativity: (b.c).a = a.b.c [serial 2268]
 


Theorem (1221)                               [serial 2265] 
P [392] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and 
((heat_previous_period = O_n)) and INVMHS() >>
S [394] heat_control!(O_n)
Q [395] << (heat_control = O_n) >>
by Enumeration Type Port Output 
and theorems 1214 1220:
Theorem (1214) [serial 2267] used for:
  applied port output of enumeration type  heat_control!(O_n) [serial 2265]
 
Theorem (1220) [serial 2268] used for:
  applied port output <<pre and (heat_control=O_n)^0>> -> <<post>> [serial 2265]
 


Theorem (1222)                               [serial 2278] 
P [395] << O_n = heat_control >>
S [396] ->
Q [397] << O_n = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1223)                               [serial 2269] 
P [395] << (heat_control = O_n) >>
S [396] ->
Q [397] << (O_n = heat_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1222:
Theorem (1222) [serial 2278] used for:
    normalization of [serial 2269]
 


Theorem (1224)                               [serial 2266] 
P [395] << (heat_control = O_n) >>
S [396] heat_previous_period' := O_n
Q [397] << (heat_previous_period' = heat_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1223:
Theorem (1223) [serial 2269] used for:
  applied wp for assignment [serial 2266]
 


Theorem (1225)                               [serial 1061] 
P [348] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT() and (((heat_previous_period = O_n))) >>
S [392] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and ((heat_previous_period = O_n)) and INVMHS() >>
heat_control!(O_n)
;
<< (heat_control = O_n) >>
heat_previous_period' := O_n
<< (heat_previous_period' = heat_control) >>
Q [345] << (INVMHS())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1176 1186 1221 1224:
Theorem (1176) [serial 2263] used for:
  P -> P1 in sequential composition for [serial 1061]
 
Theorem (1186) [serial 2264] used for:
  Q1 -> Q in sequential composition for [serial 1061]
 
Theorem (1221) [serial 2265] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1061]
 
Theorem (1224) [serial 2266] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1061]
 


Theorem (1226)                               [serial 2428] 
P [348] << Off = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [401] << Off = heat_previous_period and INVMHS() and REGULATOR_MODE(x:Normal) and 
TEMP_IN_DESIRED_RANGE() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1227)                               [serial 2418] 
P [348] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT() and ((heat_previous_period = Off)) >>
S [348] ->
Q [401] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and ((heat_previous_period = Off)) and 
INVMHS() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1226:
Theorem (1226) [serial 2428] used for:
    normalization of [serial 2418]
 


Theorem (1228)                               [serial 2416] 
P [348] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT() and ((heat_previous_period = Off)) >>
S [348] ->
Q [401] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and true and ((heat_previous_period = Off)) and 
INVMHS() >>
by Law of And-Simplification:  P and true is P
and theorem 1227:
Theorem (1227) [serial 2418] used for:
  Law of And-Simplification:  P and true is P [serial 2416]
 


Theorem (1229)                               [serial 2428] 
P [348] << Off = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [401] << Off = heat_previous_period and INVMHS() and REGULATOR_MODE(x:Normal) and 
TEMP_IN_DESIRED_RANGE() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1230)                               [serial 2418] 
P [348] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT() and ((heat_previous_period = Off)) >>
S [348] ->
Q [401] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and ((heat_previous_period = Off)) and 
INVMHS() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1229:
Theorem (1229) [serial 2428] used for:
    normalization of [serial 2418]
 


Theorem (1231)                               [serial 2416] 
P [348] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT() and ((heat_previous_period = Off)) >>
S [348] ->
Q [401] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and true and ((heat_previous_period = Off)) and 
INVMHS() >>
by Law of And-Simplification:  P and true is P
and theorem 1230:
Theorem (1230) [serial 2418] used for:
  Law of And-Simplification:  P and true is P [serial 2416]
 


Theorem (1232)                               [serial 2409] 
P [348] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT() and ((heat_previous_period = Off)) >>
S [348] ->
Q [401] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and 
((heat_previous_period = Off)) and INVMHS() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1231 1231:
Theorem (1231) [serial 2416] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1231) [serial 2416] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1233)                               [serial 2460] 
P [406] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_previous_period^1 = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1234)                               [serial 2457] 
P [406] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control = heat_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 1233:
Theorem (1233) [serial 2460] used for:
    normalization of [serial 2457]
 


Theorem (1235)                               [serial 2455] 
P [406] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control^0 = heat_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1234:
Theorem (1234) [serial 2457] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2455]
 


Theorem (1236)                               [serial 2452] 
P [406] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^(-1+1) = heat_previous_period^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1235:
Theorem (1235) [serial 2455] used for:
    normalization of [serial 2452]
 


Theorem (1237)                               [serial 2449] 
P [406] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^-1 = heat_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1236:
Theorem (1236) [serial 2452] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2449]
 


Theorem (1238)                               [serial 2445] 
P [406] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (((heat_previous_period = heat_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1237:
Theorem (1237) [serial 2449] used for:
    normalization of [serial 2445]
 


Theorem (1239)                               [serial 2439] 
P [406] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Substitution of Assertion Labels
and theorem 1238:
Theorem (1238) [serial 2445] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2439]
 


Theorem (1240)                               [serial 2434] 
P [406] << heat_control = (heat_previous_period)^1 >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1239:
Theorem (1239) [serial 2439] used for:
    normalization of [serial 2434]
 


Theorem (1241)                               [serial 2420] 
P [406] << heat_control = heat_previous_period' >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1240:
Theorem (1240) [serial 2434] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2420]
 


Theorem (1242)                               [serial 2410] 
P [406] << (heat_previous_period' = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1241:
Theorem (1241) [serial 2420] used for:
    normalization of [serial 2410]
 


Theorem (1243)                               [serial 2483] 
P [401] << HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = heat_previous_period and 
heat_control^-1 = Off and heat_control^-1 = heat_previous_period and Off = heat_previous_period and 
REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or INI() or (HEAT_CONTROL^-1 = Off and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) or 
(RUN() and not REGULATOR_OK()) >>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (1244)                               [serial 2481] 
P [401] << HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = heat_previous_period and 
heat_control^-1 = Off and heat_control^-1 = heat_previous_period and Off = heat_previous_period and 
REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or INI() or (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and HEAT_CONTROL^-1 = Off) or (RUN() and 
not REGULATOR_OK()) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1243:
Theorem (1243) [serial 2483] used for:
    normalization of [serial 2481]
 


Theorem (1245)                               [serial 2480] 
P [401] << HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = heat_previous_period and 
heat_control^-1 = Off and heat_control^-1 = heat_previous_period and Off = heat_previous_period and 
REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or INI() or (HEAT_CONTROL^-1 = Off and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) or 
(RUN() and not REGULATOR_OK()) >>
by Associativity: (b.c).a = a.b.c
and theorem 1244:
Theorem (1244) [serial 2481] used for:
  Associativity: (b.c).a = a.b.c [serial 2480]
 


Theorem (1246)                               [serial 2479] 
P [401] << HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = heat_previous_period and 
heat_control^-1 = Off and heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
Off = heat_previous_period and REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or INI() or (HEAT_CONTROL^-1 = Off and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) or 
(RUN() and not REGULATOR_OK()) >>
by Law of And-Simplification:  P and P is P
and theorem 1245:
Theorem (1245) [serial 2480] used for:
  Law of And-Simplification:  P and P is P [serial 2479]
 


Theorem (1247)                               [serial 2478] 
P [401] << HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = heat_control^-1 and 
HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = heat_previous_period and 
heat_control^-1 = Off and heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and Off = heat_previous_period and 
Off = heat_previous_period and REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or INI() or (HEAT_CONTROL^-1 = Off and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) or 
(RUN() and not REGULATOR_OK()) >>
by Law of And-Simplification:  P and P is P
and theorem 1246:
Theorem (1246) [serial 2479] used for:
  Law of And-Simplification:  P and P is P [serial 2478]
 


Theorem (1248)                               [serial 2477] 
P [401] << HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = heat_control^-1 and 
HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and 
HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = heat_previous_period and 
HEAT_CONTROL^-1 = heat_previous_period and heat_control^-1 = Off and heat_control^-1 = Off and 
heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and Off = heat_previous_period and 
Off = heat_previous_period and Off = heat_previous_period and REGULATOR_OK() and 
RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or INI() or (HEAT_CONTROL^-1 = Off and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) or 
(RUN() and not REGULATOR_OK()) >>
by Law of And-Simplification:  P and P is P
and theorem 1247:
Theorem (1247) [serial 2478] used for:
  Law of And-Simplification:  P and P is P [serial 2477]
 


Theorem (1249)                               [serial 2476] 
P [401] << HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = heat_control^-1 and 
HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = heat_control^-1 and 
HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and 
HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and 
HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and 
HEAT_CONTROL^-1 = heat_previous_period and HEAT_CONTROL^-1 = heat_previous_period and 
HEAT_CONTROL^-1 = heat_previous_period and HEAT_CONTROL^-1 = heat_previous_period and 
true and heat_control^-1 = Off and heat_control^-1 = Off and heat_control^-1 = Off and 
heat_control^-1 = Off and heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and true and Off = heat_previous_period and 
Off = heat_previous_period and Off = heat_previous_period and Off = heat_previous_period and 
Off = heat_previous_period and true and true and REGULATOR_OK() and RUN() and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or INI() or (HEAT_CONTROL^-1 = Off and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) or 
(RUN() and not REGULATOR_OK()) >>
by Law of And-Simplification:  P and P is P
and theorem 1248:
Theorem (1248) [serial 2477] used for:
  Law of And-Simplification:  P and P is P [serial 2476]
 


Theorem (1250)                               [serial 2474] 
P [401] << HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = heat_control^-1 and 
HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = heat_control^-1 and 
HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and 
HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and 
HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and 
HEAT_CONTROL^-1 = heat_previous_period and HEAT_CONTROL^-1 = heat_previous_period and 
HEAT_CONTROL^-1 = heat_previous_period and HEAT_CONTROL^-1 = heat_previous_period and 
heat_control^-1 = heat_control^-1 and heat_control^-1 = Off and heat_control^-1 = Off and 
heat_control^-1 = Off and heat_control^-1 = Off and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
Off = Off and Off = heat_previous_period and Off = heat_previous_period and 
Off = heat_previous_period and Off = heat_previous_period and Off = heat_previous_period and 
heat_previous_period = heat_previous_period and heat_previous_period = heat_previous_period and 
REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or INI() or (HEAT_CONTROL^-1 = Off and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) or 
(RUN() and not REGULATOR_OK()) >>
by Equality Law (idistr):  a=a <-> true
and theorem 1249:
Theorem (1249) [serial 2476] used for:
  Equality Law (idistr):  a=a <-> true [serial 2474]
 


Theorem (1251)                               [serial 2472] 
P [401] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
Off = heat_previous_period and REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and HEAT_CONTROL^-1 = heat_previous_period and 
HEAT_CONTROL^-1 = heat_previous_period and Off = heat_control^-1 and heat_control^-1 = Off and 
HEAT_CONTROL^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and Off = HEAT_CONTROL^-1 and HEAT_CONTROL^-1 = Off and 
HEAT_CONTROL^-1 = heat_previous_period and Off = heat_control^-1 and HEAT_CONTROL^-1 = heat_control^-1 and 
HEAT_CONTROL^-1 = heat_control^-1 and Off = heat_previous_period and heat_previous_period = Off and 
heat_control^-1 = Off and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and 
heat_previous_period = heat_control^-1 and heat_control^-1 = heat_previous_period and 
heat_previous_period = heat_control^-1 and heat_control^-1 = HEAT_CONTROL^-1 and 
Off = HEAT_CONTROL^-1 and heat_previous_period = heat_previous_period and 
heat_previous_period = heat_control^-1 and heat_control^-1 = HEAT_CONTROL^-1 and 
Off = HEAT_CONTROL^-1 and heat_previous_period = heat_previous_period and 
HEAT_CONTROL^-1 = Off and Off = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_control^-1 and HEAT_CONTROL^-1 = Off and Off = heat_previous_period and 
heat_control^-1 = heat_previous_period and Off = Off >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or INI() or (HEAT_CONTROL^-1 = Off and 
(LOWER_DESIRED_TEMP < (CURRENT_TEMP.t) and (CURRENT_TEMP.t) < UPPER_DESIRED_TEMP)) or 
(RUN() and not REGULATOR_OK()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1250:
Theorem (1250) [serial 2474] used for:
    normalization of [serial 2472]
 


Theorem (1252)                               [serial 2471] 
P [401] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
Off = heat_previous_period and REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and HEAT_CONTROL^-1 = heat_previous_period and 
HEAT_CONTROL^-1 = heat_previous_period and Off = heat_control^-1 and heat_control^-1 = Off >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or INI() or (HEAT_CONTROL^-1 = Off and 
(LOWER_DESIRED_TEMP < (CURRENT_TEMP.t) and (CURRENT_TEMP.t) < UPPER_DESIRED_TEMP)) or 
(RUN() and not REGULATOR_OK()) >>
by Remove Equivalent Term: P(a) and P(b) and a=b is P(a) and a=b
and theorem 1251:
Theorem (1251) [serial 2472] used for:
  Remove Equivalent Term: P(a) and P(b) and a=b is P(a) and a=b [serial 2471]
 


Theorem (1253)                               [serial 2470] 
P [401] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
Off = heat_previous_period and REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or INI() or (HEAT_CONTROL^-1 = Off and 
(LOWER_DESIRED_TEMP < (CURRENT_TEMP.t) and (CURRENT_TEMP.t) < UPPER_DESIRED_TEMP)) or 
(RUN() and not REGULATOR_OK()) >>
by Remove Equivalent Term: P(a) and P(b) and a=b is P(a) and a=b
and theorem 1252:
Theorem (1252) [serial 2471] used for:
  Remove Equivalent Term: P(a) and P(b) and a=b is P(a) and a=b [serial 2470]
 


Theorem (1254)                               [serial 2468] 
P [401] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
Off = heat_previous_period and REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or INI() or (HEAT_CONTROL^-1 = Off and 
(CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) or (RUN() and 
not REGULATOR_OK()) >>
by Replace expression with range:  a<x and x<b  iff  x in a,,b
and theorem 1253:
Theorem (1253) [serial 2470] used for:
  Replace expression with range:  a<x and x<b  iff  x in a,,b [serial 2468]
 


Theorem (1255)                               [serial 2466] 
P [401] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and HEAT_CONTROL^-1 = heat_control^-1 and 
heat_control^-1 = heat_previous_period and Off = heat_previous_period >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or INI() or (HEAT_CONTROL^-1 = Off and 
(CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) or (RUN() and 
not REGULATOR_OK()) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1254:
Theorem (1254) [serial 2468] used for:
    normalization of [serial 2466]
 


Theorem (1256)                               [serial 2464] 
P [401] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
Off = heat_previous_period and (REGULATOR_OK() and RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or INI() or (HEAT_CONTROL^-1 = Off and 
(CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) or (RUN() and 
not REGULATOR_OK()) >>
by Associativity: (b.c).a = a.b.c
and theorem 1255:
Theorem (1255) [serial 2466] used for:
  Associativity: (b.c).a = a.b.c [serial 2464]
 


Theorem (1257)                               [serial 2462] 
P [401] << Off = heat_previous_period and ((HEAT_CONTROL^-1 = heat_control^-1)) and 
((heat_previous_period = heat_control^-1)) and (REGULATOR_OK() and RUN()) and 
(((CURRENT_TEMP.t > LOWER_DESIRED_TEMP)) and ((CURRENT_TEMP.t < UPPER_DESIRED_TEMP))) >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or (not REGULATOR_OK() and RUN()) or 
(INI()) or (HEAT_CONTROL^-1 = Off and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1256:
Theorem (1256) [serial 2464] used for:
    normalization of [serial 2462]
 


Theorem (1258)                               [serial 2447] 
P [401] << Off = heat_previous_period and AXIOM_HC() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or REGULATOR_MODE(x:Failed) or REGULATOR_MODE(
x:Init) or (HEAT_CONTROL^-1 = Off and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Substitution of Assertion Labels
and theorem 1257:
Theorem (1257) [serial 2462] used for:
  substituted Assertions' predicates for  labels  [serial 2447]
 


Theorem (1259)                               [serial 2444] 
P [401] << Off = heat_previous_period and AXIOM_HC() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [403] ->
Q [98] << (REGULATOR_MODE(x:Init)) or ((CURRENT_TEMP.t >= UPPER_DESIRED_TEMP)) or 
(REGULATOR_MODE(x:Failed)) or (HEAT_CONTROL^-1 = Off and ((CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP))) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1258:
Theorem (1258) [serial 2447] used for:
    normalization of [serial 2444]
 


Theorem (1260)                               [serial 2422] 
P [401] << Off = heat_previous_period and AXIOM_HC() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [403] ->
Q [98] << REQMHS1() or REQMHS3() or REQMHS5() or (HEAT_CONTROL^-1 = Off and REQMHS4()) >>
by Substitution of Assertion Labels
and theorem 1259:
Theorem (1259) [serial 2444] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2422]
 


Theorem (1261)                               [serial 2413] 
P [401] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and 
((heat_previous_period = Off)) and INVMHS() >>
S [403] ->
Q [98] << (REQMHS1()) or (REQMHS3()) or (REQMHS5()) or ((REQMHS4() and ((HEAT_CONTROL^-1 = Off)))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1260:
Theorem (1260) [serial 2422] used for:
    normalization of [serial 2413]
 


Theorem (1262)                               [serial 2441] 
P [403] << Off = heat_control and Off = heat_previous_period and AXIOM_HC() and 
INVMHS() and REGULATOR_MODE(x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [403] ->
Q [404] << Off = heat_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1263)                               [serial 2436] 
P [403] << (Off = heat_control) and Off = heat_previous_period and AXIOM_HC() and 
INVMHS() and REGULATOR_MODE(x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [403] ->
Q [404] << Off = heat_control >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1262:
Theorem (1262) [serial 2441] used for:
    normalization of [serial 2436]
 


Theorem (1264)                               [serial 2435] 
P [403] << (Off^0 = heat_control^0) and Off = heat_previous_period and AXIOM_HC() and 
INVMHS() and REGULATOR_MODE(x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [403] ->
Q [404] << Off = heat_control >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1263:
Theorem (1263) [serial 2436] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2435]
 


Theorem (1265)                               [serial 2426] 
P [403] << (Off = heat_control)^0 and Off = heat_previous_period and AXIOM_HC() and 
INVMHS() and REGULATOR_MODE(x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [403] ->
Q [404] << Off = heat_control >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1264:
Theorem (1264) [serial 2435] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2426]
 


Theorem (1266)                               [serial 2417] 
P [403] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and 
((heat_previous_period = Off)) and INVMHS() and (heat_control = Off)^0 >>
S [403] ->
Q [404] << (heat_control = Off) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1265:
Theorem (1265) [serial 2426] used for:
    normalization of [serial 2417]
 


Theorem (1267)                               [serial 2414] 
P [403] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and 
((heat_previous_period = Off)) and INVMHS()) and (heat_control = Off)^0 >>
S [403] ->
Q [404] << (heat_control = Off) >>
by Associativity: (b.c).a = a.b.c
and theorem 1266:
Theorem (1266) [serial 2417] used for:
  Associativity: (b.c).a = a.b.c [serial 2414]
 


Theorem (1268)                               [serial 2411] 
P [401] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and 
((heat_previous_period = Off)) and INVMHS() >>
S [403] heat_control!(Off)
Q [404] << (heat_control = Off) >>
by Enumeration Type Port Output 
and theorems 1261 1267:
Theorem (1261) [serial 2413] used for:
  applied port output of enumeration type  heat_control!(Off) [serial 2411]
 
Theorem (1267) [serial 2414] used for:
  applied port output <<pre and (heat_control=Off)^0>> -> <<post>> [serial 2411]
 


Theorem (1269)                               [serial 2424] 
P [404] << Off = heat_control >>
S [405] ->
Q [406] << Off = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1270)                               [serial 2415] 
P [404] << (heat_control = Off) >>
S [405] ->
Q [406] << (Off = heat_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1269:
Theorem (1269) [serial 2424] used for:
    normalization of [serial 2415]
 


Theorem (1271)                               [serial 2412] 
P [404] << (heat_control = Off) >>
S [405] heat_previous_period' := Off
Q [406] << (heat_previous_period' = heat_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1270:
Theorem (1270) [serial 2415] used for:
  applied wp for assignment [serial 2412]
 


Theorem (1272)                               [serial 1062] 
P [348] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT() and ((heat_previous_period = Off)) >>
S [401] << TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and ((heat_previous_period = Off)) and INVMHS() >>
heat_control!(Off)
;
<< (heat_control = Off) >>
heat_previous_period' := Off
<< (heat_previous_period' = heat_control) >>
Q [345] << (INVMHS())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1232 1242 1268 1271:
Theorem (1232) [serial 2409] used for:
  P -> P1 in sequential composition for [serial 1062]
 
Theorem (1242) [serial 2410] used for:
  Q1 -> Q in sequential composition for [serial 1062]
 
Theorem (1268) [serial 2411] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1062]
 
Theorem (1271) [serial 2412] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1062]
 


Theorem (1273)                               [serial 1063] 
P [408] << (INVMHS()) and stop@now and not (exists u~time
  in tops,,now 
  that true ) and not (exists u~time
  in tops,,now 
  that stop@u ) >>
S [408] ->
Q [349] << true >>
by True Conclusion Schema (tc): P->true


Theorem (1274)                               [serial 1047] 
P [335] <<   >>
S [340] ->
Q [335] << manage_heat_source.impl proof obligations >>
by Initial Thread Obligations
and theorems 925 933 934 937 952 953 954 982 1008 1024 1061 1099 1114 1225 1272 1273:
Theorem (925) [serial 1048] used for:
  <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
 
Theorem (933) [serial 1049] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_temp, <<M(check_temp)>> -> <<e1 or e2 or . . . en>>
 
Theorem (934) [serial 1050] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state poweron, <<M(poweron)>> -> <<e1 or e2 or . . . en>>
 
Theorem (937) [serial 1051] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_hyst, <<M(check_hyst)>> -> <<e1 or e2 or . . . en>>
 
Theorem (952) [serial 1052] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_mode, <<M(check_mode)>> -> <<e1 or e2 or . . . en>>
 
Theorem (953) [serial 1053] used for:
   <<M(poweron)>> -> <<M(run)>> for mhsPo:poweron-[ ]->run{};
 
Theorem (954) [serial 1054] used for:
   <<M(run) and x>> -> <<M(check_mode)>> for mhsRun:run-[x]->check_mode{};
 
Theorem (982) [serial 1055] used for:
   <<M(check_mode) and x>> A <<M(run)>> for mhsFailed:check_mode-[x]->run{A};
 
Theorem (1008) [serial 1056] used for:
   <<M(check_mode) and x>> A <<M(run)>> for mhsInit:check_mode-[x]->run{A};
 
Theorem (1024) [serial 1057] used for:
   <<M(check_mode) and x>> -> <<M(check_temp)>> for mhsNormal:check_mode-[x]->check_temp{};
 
Theorem (1061) [serial 1058] used for:
   <<M(check_temp) and x>> A <<M(run)>> for mhsBelow:check_temp-[x]->run{A};
 
Theorem (1099) [serial 1059] used for:
   <<M(check_temp) and x>> A <<M(run)>> for mhsAbove:check_temp-[x]->run{A};
 
Theorem (1114) [serial 1060] used for:
   <<M(check_temp) and x>> -> <<M(check_hyst)>> for mhsHys:check_temp-[x]->check_hyst{};
 
Theorem (1225) [serial 1061] used for:
   <<M(check_hyst) and x>> A <<M(run)>> for mhsHysOn:check_hyst-[x]->run{A};
 
Theorem (1272) [serial 1062] used for:
   <<M(check_hyst) and x>> A <<M(run)>> for mhsHysOff:check_hyst-[x]->run{A};
 
Theorem (1273) [serial 1063] used for:
   <<M(run) and x>> -> <<M(halt)>> for mhsStop:run-[x]->halt{};
 


Theorem (1275)                               [serial 1064] 
P [4] << REGULATOR_INTERFACE_FAILURE >>
S [2] ->
Q [5] << REGULATOR_INTERFACE_FAILURE >>
by Identity (id):  P->P is tautology


Theorem (1276)                               [serial 1065] 
P [4] << +=> REGULATOR_MODE(x:regulator_mode) >> 
S [2] ->
Q [5] << +=> REGULATOR_MODE(x:regulator_mode) >> 
by Identity (id):  P->P is tautology


Theorem (1277)                               [serial 1066] 
P [4] << +=> REGULATOR_MODE(x:regulator_mode) >> 
S [2] ->
Q [5] << +=> REGULATOR_MODE(x:regulator_mode) >> 
by Identity (id):  P->P is tautology


Theorem (1278)                               [serial 1067] 
P [4] << MONITOR_INTERFACE_FAILURE >>
S [2] ->
Q [5] << MONITOR_INTERFACE_FAILURE >>
by Identity (id):  P->P is tautology


Theorem (1279)                               [serial 1068] 
P [4] << +=> MONITOR_MODE(x:monitor_mode) >> 
S [2] ->
Q [5] << +=> MONITOR_MODE(x:monitor_mode) >> 
by Identity (id):  P->P is tautology


Theorem (1280)                               [serial 1069] 
P [4] << +=> MONITOR_MODE(x:monitor_mode) >> 
S [2] ->
Q [5] << +=> MONITOR_MODE(x:monitor_mode) >> 
by Identity (id):  P->P is tautology


Theorem (1281)                               [serial 1070] 
P [4] << INTERNAL_FAILURE >>
S [2] ->
Q [5] << INTERNAL_FAILURE >>
by Identity (id):  P->P is tautology


Theorem (1282)                               [serial 1071] 
P [4] << air_temperature_air = CURRENT_TEMP >>
S [2] ->
Q [5] << air_temperature_air = CURRENT_TEMP >>
by Identity (id):  P->P is tautology


Theorem (1283)                               [serial 1072] 
P [4] << air_temperature_air = CURRENT_TEMP >>
S [2] ->
Q [5] << air_temperature_air = CURRENT_TEMP >>
by Identity (id):  P->P is tautology


Theorem (1284)                               [serial 1073] 
P [4] << current_temperature = CURRENT_TEMP >>
S [2] ->
Q [5] << current_temperature = CURRENT_TEMP >>
by Identity (id):  P->P is tautology


Theorem (1285)                               [serial 1074] 
P [4] << current_temperature = CURRENT_TEMP >>
S [2] ->
Q [5] << current_temperature = CURRENT_TEMP >>
by Identity (id):  P->P is tautology


Theorem (1286)                               [serial 1075] 
P [4] << current_temperature = CURRENT_TEMP >>
S [2] ->
Q [5] << current_temperature = CURRENT_TEMP >>
by Identity (id):  P->P is tautology


Theorem (1287)                               [serial 1076] 
P [4] << current_temperature = CURRENT_TEMP >>
S [2] ->
Q [5] << current_temperature = CURRENT_TEMP >>
by Identity (id):  P->P is tautology


Theorem (1288)                               [serial 1077] 
P [4] << current_temperature = CURRENT_TEMP >>
S [2] ->
Q [5] << current_temperature = CURRENT_TEMP >>
by Identity (id):  P->P is tautology


Theorem (1289)                               [serial 1078] 
P [4] << current_temperature = CURRENT_TEMP >>
S [2] ->
Q [5] << current_temperature = CURRENT_TEMP >>
by Identity (id):  P->P is tautology


Theorem (1290)                               [serial 1079] 
P [4] << +=> REGULATOR_STATUS(x:regulator_status) >> 
S [2] ->
Q [5] << +=> REGULATOR_STATUS(x:regulator_status) >> 
by Identity (id):  P->P is tautology


Theorem (1291)                               [serial 1080] 
P [4] << displayed_temp_display_temperature = CURRENT_TEMP >>
S [2] ->
Q [5] << displayed_temp_display_temperature = CURRENT_TEMP >>
by Identity (id):  P->P is tautology


Theorem (1292)                               [serial 1081] 
P [4] << +=> HEAT_CONTROL_A(x:heat_control) >> 
S [2] ->
Q [5] << +=> HEAT_CONTROL_A(x:heat_control) >> 
by Identity (id):  P->P is tautology


Theorem (1293)                               [serial 1082] 
P [4] << +=> TEMP_OUT_OF_RANGE(x:alarm_control) >> 
S [2] ->
Q [5] << +=> TEMP_OUT_OF_RANGE(x:alarm_control) >> 
by Identity (id):  P->P is tautology


Theorem (1294)                               [serial 1083] 
P [4] << monitor_status = (MONITOR_STATUS()) >>
S [2] ->
Q [5] << monitor_status = (MONITOR_STATUS()) >>
by Identity (id):  P->P is tautology


Theorem (1295)                               [serial 1084] 
P [4] << lower_desired_temperature_lower_desired_temp = LOWER_DESIRED_TEMP >>
S [2] ->
Q [5] << lower_desired_temperature_lower_desired_temp = LOWER_DESIRED_TEMP >>
by Identity (id):  P->P is tautology


Theorem (1296)                               [serial 1085] 
P [4] << lower_desired_temperature = LOWER_DESIRED_TEMP >>
S [2] ->
Q [5] << lower_desired_temperature = LOWER_DESIRED_TEMP >>
by Identity (id):  P->P is tautology


Theorem (1297)                               [serial 1086] 
P [4] << upper_desired_temperature_upper_desired_temp = UPPER_DESIRED_TEMP >>
S [2] ->
Q [5] << upper_desired_temperature_upper_desired_temp = UPPER_DESIRED_TEMP >>
by Identity (id):  P->P is tautology


Theorem (1298)                               [serial 1087] 
P [4] << upper_desired_temperature = UPPER_DESIRED_TEMP >>
S [2] ->
Q [5] << upper_desired_temperature = UPPER_DESIRED_TEMP >>
by Identity (id):  P->P is tautology


Theorem (1299)                               [serial 1088] 
P [4] << lower_alarm_temperature = LOWER_ALARM_TEMP >>
S [2] ->
Q [5] << lower_alarm_temperature = LOWER_ALARM_TEMP >>
by Identity (id):  P->P is tautology


Theorem (1300)                               [serial 1089] 
P [4] << upper_alarm_temperature = UPPER_ALARM_TEMP >>
S [2] ->
Q [5] << upper_alarm_temperature = UPPER_ALARM_TEMP >>
by Identity (id):  P->P is tautology


Theorem (1301)                               [serial 1001] 
P     
S     
Q     
by Initial Thread Obligations
and theorems 249 644 922 1274 1275 1276 1277 1278 1279 1280 1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 1297 1298 1299 1300:
Theorem (249) [serial 1002] used for:
  Initial proof obligations for manage_monitor_mode.impl
 
Theorem (644) [serial 1016] used for:
  Initial proof obligations for manage_alarm.impl
 
Theorem (922) [serial 1033] used for:
  Initial proof obligations for manage_regulator_mode.impl
 
Theorem (1274) [serial 1047] used for:
  Initial proof obligations for manage_heat_source.impl
 
Theorem (1275) [serial 1064] used for:
  Composition of Subcomponents via Directional Connection manage_regulator_interface.interface_failure -> manage_regulator_mode.interface_failure:
 interface_failure -> interface_failure
 
Theorem (1276) [serial 1065] used for:
  Composition of Subcomponents via Directional Connection manage_regulator_mode.regulator_mode -> manage_heat_source.regulator_mode:
 regulator_mode -> regulator_mode
 
Theorem (1277) [serial 1066] used for:
  Composition of Subcomponents via Directional Connection manage_regulator_mode.regulator_mode -> manage_regulator_interface.regulator_mode:
 regulator_mode -> regulator_mode
 
Theorem (1278) [serial 1067] used for:
  Composition of Subcomponents via Directional Connection manage_monitor_interface.interface_failure -> manage_monitor_mode.interface_failure:
 interface_failure -> interface_failure
 
Theorem (1279) [serial 1068] used for:
  Composition of Subcomponents via Directional Connection manage_monitor_mode.monitor_mode -> manage_monitor_interface.monitor_mode:
 monitor_mode -> monitor_mode
 
Theorem (1280) [serial 1069] used for:
  Composition of Subcomponents via Directional Connection manage_monitor_mode.monitor_mode -> manage_alarm.monitor_mode:
 monitor_mode -> monitor_mode
 
Theorem (1281) [serial 1070] used for:
  Composition of Subcomponents via Directional Connection detect_regulator_fail.internal_failure -> monitor_temperature.manage_monitor_mode.internal_failure:
 internal_failure -> internal_failure
 
Theorem (1282) [serial 1071] used for:
  Composition of Subcomponents via Directional Connection air_temperature -> control_sensor.air:
 air_temperature -> air
 
Theorem (1283) [serial 1072] used for:
  Composition of Subcomponents via Directional Connection air_temperature -> monitor_sensor.air:
 air_temperature -> air
 
Theorem (1284) [serial 1073] used for:
  Composition of Subcomponents via Directional Connection control_sensor.current_temperature -> thermostat.regulate_temperature.manage_regulator_interface.current_temperature:
 current_temperature -> current_temperature
 
Theorem (1285) [serial 1074] used for:
  Composition of Subcomponents via Directional Connection control_sensor.current_temperature -> thermostat.regulate_temperature.manage_heat_source.current_temperature:
 current_temperature -> current_temperature
 
Theorem (1286) [serial 1075] used for:
  Composition of Subcomponents via Directional Connection control_sensor.current_temperature -> thermostat.regulate_temperature.manage_regulator_mode.current_temperature:
 current_temperature -> current_temperature
 
Theorem (1287) [serial 1076] used for:
  Composition of Subcomponents via Directional Connection monitor_sensor.current_temperature -> thermostat.monitor_temperature.manage_monitor_interface.current_temperature:
 current_temperature -> current_temperature
 
Theorem (1288) [serial 1077] used for:
  Composition of Subcomponents via Directional Connection monitor_sensor.current_temperature -> thermostat.monitor_temperature.manage_alarm.current_temperature:
 current_temperature -> current_temperature
 
Theorem (1289) [serial 1078] used for:
  Composition of Subcomponents via Directional Connection monitor_sensor.current_temperature -> thermostat.monitor_temperature.manage_monitor_mode.current_temperature:
 current_temperature -> current_temperature
 
Theorem (1290) [serial 1079] used for:
  Composition of Subcomponents via Directional Connection thermostat.regulate_temperature.manage_regulator_interface.regulator_status -> operator_interface.regulator_status:
 regulator_status -> regulator_status
 
Theorem (1291) [serial 1080] used for:
  Composition of Subcomponents via Directional Connection thermostat.regulate_temperature.manage_regulator_interface.displayed_temp -> operator_interface.display_temperature:
 displayed_temp -> display_temperature
 
Theorem (1292) [serial 1081] used for:
  Composition of Subcomponents via Directional Connection thermostat.regulate_temperature.manage_heat_source.heat_control -> heat_source.heat_control:
 heat_control -> heat_control
 
Theorem (1293) [serial 1082] used for:
  Composition of Subcomponents via Directional Connection thermostat.monitor_temperature.manage_alarm.alarm_control -> operator_interface.alarm:
 alarm_control -> alarm
 
Theorem (1294) [serial 1083] used for:
  Composition of Subcomponents via Directional Connection thermostat.monitor_temperature.manage_monitor_interface.monitor_status -> operator_interface.monitor_status:
 monitor_status -> monitor_status
 
Theorem (1295) [serial 1084] used for:
  Composition of Subcomponents via Directional Connection operator_interface.lower_desired_temperature -> thermostat.regulate_temperature.manage_regulator_interface.lower_desired_temp:
 lower_desired_temperature -> lower_desired_temp
 
Theorem (1296) [serial 1085] used for:
  Composition of Subcomponents via Directional Connection operator_interface.lower_desired_temperature -> thermostat.regulate_temperature.manage_heat_source.lower_desired_temperature:
 lower_desired_temperature -> lower_desired_temperature
 
Theorem (1297) [serial 1086] used for:
  Composition of Subcomponents via Directional Connection operator_interface.upper_desired_temperature -> thermostat.regulate_temperature.manage_regulator_interface.upper_desired_temp:
 upper_desired_temperature -> upper_desired_temp
 
Theorem (1298) [serial 1087] used for:
  Composition of Subcomponents via Directional Connection operator_interface.upper_desired_temperature -> thermostat.regulate_temperature.manage_heat_source.upper_desired_temperature:
 upper_desired_temperature -> upper_desired_temperature
 
Theorem (1299) [serial 1088] used for:
  Composition of Subcomponents via Directional Connection operator_interface.lower_alarm_temperature -> thermostat.monitor_temperature.manage_alarm.lower_alarm_temperature:
 lower_alarm_temperature -> lower_alarm_temperature
 
Theorem (1300) [serial 1089] used for:
  Composition of Subcomponents via Directional Connection operator_interface.upper_alarm_temperature -> thermostat.monitor_temperature.manage_alarm.upper_alarm_temperature:
 upper_alarm_temperature -> upper_alarm_temperature
 


closing proof.txt file 