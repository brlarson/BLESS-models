This file, proof.txt, was produced the BLESS Proof Assistant v3.1
  at Sat Mar 06 12:14:54 CST 2021 by brianlarson

Theorem (1)                               [serial 1003] 
P [165] << true >>
S [156] ->
Q [156] << true >>
by True Conclusion Schema (tc): P->true


Theorem (2)                               [serial 1004] 
P [170] << RUN() >>
S [156] ->
Q [156] << true >>
by True Conclusion Schema (tc): P->true


Theorem (3)                               [serial 1121] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << true >>
by True Conclusion Schema (tc): P->true


Theorem (4)                               [serial 1119] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 3:
Theorem (3) [serial 1121] used for:
    normalization of [serial 1119]
 


Theorem (5)                               [serial 1118] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 4:
Theorem (4) [serial 1119] used for:
  Law of And-Simplification:  P and P is P [serial 1118]
 


Theorem (6)                               [serial 1116] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not INTERNAL_FAILURE^0 or 
not Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 5:
Theorem (5) [serial 1118] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1116]
 


Theorem (7)                               [serial 1114] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (not INTERNAL_FAILURE^0 or INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
(not MONITOR_INTERFACE_FAILURE^0 or INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 6:
Theorem (6) [serial 1116] used for:
    normalization of [serial 1114]
 


Theorem (8)                               [serial 1111] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 7:
Theorem (7) [serial 1114] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 1111]
 


Theorem (9)                               [serial 1109] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << ((INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 8:
Theorem (8) [serial 1111] used for:
    normalization of [serial 1109]
 


Theorem (10)                               [serial 1107] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << true and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and true is P
and theorem 9:
Theorem (9) [serial 1109] used for:
  Law of And-Simplification:  P and true is P [serial 1107]
 


Theorem (11)                               [serial 1105] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (true) and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 10:
Theorem (10) [serial 1107] used for:
    normalization of [serial 1105]
 


Theorem (12)                               [serial 1104] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (true) and (true) and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and P is P
and theorem 11:
Theorem (11) [serial 1105] used for:
  Law of And-Simplification:  P and P is P [serial 1104]
 


Theorem (13)                               [serial 1103] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (true) and (true) and (true) and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and P is P
and theorem 12:
Theorem (12) [serial 1104] used for:
  Law of And-Simplification:  P and P is P [serial 1103]
 


Theorem (14)                               [serial 1102] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (true) and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
(true) and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 13:
Theorem (13) [serial 1103] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1102]
 


Theorem (15)                               [serial 1101] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (true) and (Valid = current_temperature_status or (INTERNAL_FAILURE^0 or 
MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (true) and 
((not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or 
MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Associativity: (b.c).a = a.b.c
and theorem 14:
Theorem (14) [serial 1102] used for:
  Associativity: (b.c).a = a.b.c [serial 1101]
 


Theorem (16)                               [serial 1100] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (true) and (true) and (Valid = current_temperature_status or (INTERNAL_FAILURE^0 or 
MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (true) and 
((not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or 
MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and P is P
and theorem 15:
Theorem (15) [serial 1101] used for:
  Law of And-Simplification:  P and P is P [serial 1100]
 


Theorem (17)                               [serial 1099] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (true) and (true) and (true) and (Valid = current_temperature_status or 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (true) and 
((not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or 
MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and P is P
and theorem 16:
Theorem (16) [serial 1100] used for:
  Law of And-Simplification:  P and P is P [serial 1099]
 


Theorem (18)                               [serial 1098] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (Valid = current_temperature_status or not (now - start_time) < #Iso_Properties::Initialization_Timeout or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (not (now - start_time) < #Iso_Properties::Initialization_Timeout or 
not (now - start_time) < #Iso_Properties::Initialization_Timeout or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
((not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) or not (now - start_time) < #Iso_Properties::Initialization_Timeout or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (Valid = current_temperature_status or 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (not (now - start_time) < #Iso_Properties::Initialization_Timeout or 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and ((not INTERNAL_FAILURE^0 and 
not MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 17:
Theorem (17) [serial 1099] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1098]
 


Theorem (19)                               [serial 1096] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (Valid = current_temperature_status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0)) or (not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 18:
Theorem (18) [serial 1098] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 1096]
 


Theorem (20)                               [serial 1094] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << ((not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
Valid = current_temperature_status and (not (INTERNAL_FAILURE^0) and not (MONITOR_INTERFACE_FAILURE^0))) or 
((not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 19:
Theorem (19) [serial 1096] used for:
    normalization of [serial 1094]
 


Theorem (21)                               [serial 1093] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << ((not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
Valid = current_temperature_status and not (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0)) or 
((not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 20:
Theorem (20) [serial 1094] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1093]
 


Theorem (22)                               [serial 1091] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [167] << (#Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
not (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0)) or (#Iso_Properties::Initialization_Timeout <= (now - start_time) and 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 21:
Theorem (21) [serial 1093] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1091]
 


Theorem (23)                               [serial 1005] 
P [167] << ((current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS()) >>
S [167] ->
Q [167] << (((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
(((MONITOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0) or (not ((current_temperature_status = Valid))))) or 
((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and not (
((MONITOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0)) and ((current_temperature_status = Valid))) or 
(((now - start_time) < #Iso_Properties::Initialization_Timeout))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 22:
Theorem (22) [serial 1091] used for:
    normalization of [serial 1005]
 


Theorem (24)                               [serial 1006] 
P [164] << true >>
S [164] ->
Q [164] << true >>
by True Conclusion Schema (tc): P->true


Theorem (25)                               [serial 1143] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << true >>
by True Conclusion Schema (tc): P->true


Theorem (26)                               [serial 1141] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 25:
Theorem (25) [serial 1143] used for:
    normalization of [serial 1141]
 


Theorem (27)                               [serial 1140] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << (true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 26:
Theorem (26) [serial 1141] used for:
  Law of And-Simplification:  P and P is P [serial 1140]
 


Theorem (28)                               [serial 1139] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << (not INTERNAL_FAILURE^0 or INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) and (not MONITOR_INTERFACE_FAILURE^0 or 
INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 27:
Theorem (27) [serial 1140] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1139]
 


Theorem (29)                               [serial 1136] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 28:
Theorem (28) [serial 1139] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 1136]
 


Theorem (30)                               [serial 1134] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << ((INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 29:
Theorem (29) [serial 1136] used for:
    normalization of [serial 1134]
 


Theorem (31)                               [serial 1132] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << true and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0)) >>
by Law of And-Simplification:  P and true is P
and theorem 30:
Theorem (30) [serial 1134] used for:
  Law of And-Simplification:  P and true is P [serial 1132]
 


Theorem (32)                               [serial 1130] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << (true) and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 31:
Theorem (31) [serial 1132] used for:
    normalization of [serial 1130]
 


Theorem (33)                               [serial 1129] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
Valid = current_temperature_status) and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0)) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 32:
Theorem (32) [serial 1130] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1129]
 


Theorem (34)                               [serial 1128] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << (Valid = current_temperature_status or (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status)) and ((not INTERNAL_FAILURE^0 and 
not MONITOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status)) >>
by Associativity: (b.c).a = a.b.c
and theorem 33:
Theorem (33) [serial 1129] used for:
  Associativity: (b.c).a = a.b.c [serial 1128]
 


Theorem (35)                               [serial 1125] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() >>
S [171] ->
Q [171] << (Valid = current_temperature_status and (not INTERNAL_FAILURE^0 and not MONITOR_INTERFACE_FAILURE^0)) or 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 34:
Theorem (34) [serial 1128] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 1125]
 


Theorem (36)                               [serial 1123] 
P [171] << ((current_temperature_status = temperature.status) and RUN() and AXIOM_CTS() and 
AXIOM_ST()) >>
S [171] ->
Q [171] << (((not (((MONITOR_INTERFACE_FAILURE)^0)) and not (((INTERNAL_FAILURE)^0))) and 
((current_temperature_status = Valid))) or ((((MONITOR_INTERFACE_FAILURE)^0) or 
((INTERNAL_FAILURE)^0) or (not ((current_temperature_status = Valid)))))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 35:
Theorem (35) [serial 1125] used for:
    normalization of [serial 1123]
 


Theorem (37)                               [serial 1007] 
P [171] << ((current_temperature_status = temperature.status) and RUN() and AXIOM_CTS() and 
AXIOM_ST()) >>
S [171] ->
Q [171] << ((not (((MONITOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0)) and 
((current_temperature_status = Valid))) or ((((MONITOR_INTERFACE_FAILURE)^0) or 
((INTERNAL_FAILURE)^0) or (not ((current_temperature_status = Valid)))))) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 36:
Theorem (36) [serial 1123] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1007]
 


Theorem (38)                               [serial 1167] 
P [164] << true >>
S [178] ->
Q [179] << true >>
by True Conclusion Schema (tc): P->true


Theorem (39)                               [serial 1156] 
P [164] << true >>
S [178] ->
Q [179] << true and true >>
by Law of And-Simplification:  P and true is P
and theorem 38:
Theorem (38) [serial 1167] used for:
  Law of And-Simplification:  P and true is P [serial 1156]
 


Theorem (40)                               [serial 1167] 
P [164] << true >>
S [178] ->
Q [179] << true >>
by True Conclusion Schema (tc): P->true


Theorem (41)                               [serial 1156] 
P [164] << true >>
S [178] ->
Q [179] << true and true >>
by Law of And-Simplification:  P and true is P
and theorem 40:
Theorem (40) [serial 1167] used for:
  Law of And-Simplification:  P and true is P [serial 1156]
 


Theorem (42)                               [serial 1155] 
P [164] << true >>
S [178] ->
Q [179] << AXIOM_ST() and AXIOM_TOGT0() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 41 41:
Theorem (41) [serial 1156] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (41) [serial 1156] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (43)                               [serial 1153] 
P [164] << true >>
S [178] ->
Q [179] << true and AXIOM_ST() and AXIOM_TOGT0() >>
by Law of And-Simplification:  P and true is P
and theorem 42:
Theorem (42) [serial 1155] used for:
  Law of And-Simplification:  P and true is P [serial 1153]
 


Theorem (44)                               [serial 1150] 
P [164] << true >>
S [178] ->
Q [179] << now = now and AXIOM_ST() and AXIOM_TOGT0() >>
by Equality Law (idistr):  a=a <-> true
and theorem 43:
Theorem (43) [serial 1153] used for:
  Equality Law (idistr):  a=a <-> true [serial 1150]
 


Theorem (45)                               [serial 1148] 
P [164] << true >>
S [178] start_time := now
Q [179] << start_time = now and AXIOM_ST() and AXIOM_TOGT0() >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 44:
Theorem (44) [serial 1150] used for:
  applied wp for assignment [serial 1148]
 


Theorem (46)                               [serial 1172] 
P [179] << START_TIME = start_time and start_time = now and 0 < #Iso_Properties::Initialization_Timeout >>
S [181] ->
Q [78] << 0 < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (47)                               [serial 1169] 
P [179] << START_TIME = start_time and start_time = now and 0 < #Iso_Properties::Initialization_Timeout >>
S [181] ->
Q [78] << (now - now) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Subtraction of Same:  a-a is 0
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 46:
Theorem (46) [serial 1172] used for:
    normalization of [serial 1169]
 


Theorem (48)                               [serial 1168] 
P [179] << START_TIME = start_time and start_time = now and 0 < #Iso_Properties::Initialization_Timeout >>
S [181] ->
Q [78] << (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Guided Substitution of Equals
and theorem 47:
Theorem (47) [serial 1169] used for:
  Guided Substitution of Equals
 replacing "start_time" with its = "now" in its postcondition [serial 1168]
 


Theorem (49)                               [serial 1165] 
P [179] << START_TIME = start_time and start_time = now and 0 < #Iso_Properties::Initialization_Timeout >>
S [181] ->
Q [78] << (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Guided Substitution of Equals
and theorem 48:
Theorem (48) [serial 1168] used for:
  Guided Substitution of Equals
 replacing "START_TIME" with its = "start_time" in its postcondition [serial 1165]
 


Theorem (50)                               [serial 1162] 
P [179] << start_time = now and ((start_time = START_TIME)) and ((0 < #Iso_Properties::Initialization_Timeout)) >>
S [181] ->
Q [78] << (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 49:
Theorem (49) [serial 1165] used for:
    normalization of [serial 1162]
 


Theorem (51)                               [serial 1151] 
P [179] << start_time = now and AXIOM_ST() and AXIOM_TOGT0() >>
S [181] ->
Q [78] << INI() >>
by Substitution of Assertion Labels
and theorem 50:
Theorem (50) [serial 1162] used for:
  substituted Assertions' predicates for  labels  [serial 1151]
 


Theorem (52)                               [serial 1159] 
P [181] << (Init = monitor_mode)^0 and start_time = now and AXIOM_ST() and AXIOM_TOGT0() >>
S [181] ->
Q [165] << true >>
by True Conclusion Schema (tc): P->true


Theorem (53)                               [serial 1154] 
P [181] << start_time = now and AXIOM_ST() and AXIOM_TOGT0() and (monitor_mode = Init)^0 >>
S [181] ->
Q [165] << true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 52:
Theorem (52) [serial 1159] used for:
    normalization of [serial 1154]
 


Theorem (54)                               [serial 1152] 
P [181] << (start_time = now and AXIOM_ST() and AXIOM_TOGT0()) and (monitor_mode = Init)^0 >>
S [181] ->
Q [165] << true >>
by Associativity: (b.c).a = a.b.c
and theorem 53:
Theorem (53) [serial 1154] used for:
  Associativity: (b.c).a = a.b.c [serial 1152]
 


Theorem (55)                               [serial 1149] 
P [179] << start_time = now and AXIOM_ST() and AXIOM_TOGT0() >>
S [181] monitor_mode!(Init)
Q [165] << true >>
by Enumeration Type Port Output 
and theorems 51 54:
Theorem (51) [serial 1151] used for:
  applied port output of enumeration type  monitor_mode!(Init) [serial 1149]
 
Theorem (54) [serial 1152] used for:
  applied port output <<pre and (monitor_mode=Init)^0>> -> <<post>> [serial 1149]
 


Theorem (56)                               [serial 1146] 
P [164] << true >>
S [178] start_time := now
<< start_time = now and AXIOM_ST() and AXIOM_TOGT0() >>
;
monitor_mode!(Init)
Q [165] << true >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 45 55:
Theorem (45) [serial 1148] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1146]
 
Theorem (55) [serial 1149] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1146]
 


Theorem (57)                               [serial 1008] 
P [164] << true >>
S [178] start_time := now
<< (((start_time = now)) and AXIOM_TOGT0() and AXIOM_ST()) >>
;
monitor_mode!(Init)
Q [165] << (true)^1 >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Constants are always the same
and theorem 56:
Theorem (56) [serial 1146] used for:
    normalization of [serial 1008]
 


Theorem (58)                               [serial 1192] 
P [189] << current_temperature_status = temperature.status >>
S [167] ->
Q [305] << current_temperature_status = temperature.status >>
by Identity (id):  P->P is tautology


Theorem (59)                               [serial 1190] 
P [189] << current_temperature_status = temperature.status >>
S [167] ->
Q [305] << (current_temperature_status = temperature.status) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 58:
Theorem (58) [serial 1192] used for:
    normalization of [serial 1190]
 


Theorem (60)                               [serial 1189] 
P [189] << current_temperature_status = temperature.status >>
S [167] ->
Q [305] << current_temperature_status = temperature.status and true and true >>
by Law of And-Simplification:  P and true is P
and theorem 59:
Theorem (59) [serial 1190] used for:
  Law of And-Simplification:  P and true is P [serial 1189]
 


Theorem (61)                               [serial 1192] 
P [189] << current_temperature_status = temperature.status >>
S [167] ->
Q [305] << current_temperature_status = temperature.status >>
by Identity (id):  P->P is tautology


Theorem (62)                               [serial 1190] 
P [189] << current_temperature_status = temperature.status >>
S [167] ->
Q [305] << (current_temperature_status = temperature.status) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 61:
Theorem (61) [serial 1192] used for:
    normalization of [serial 1190]
 


Theorem (63)                               [serial 1189] 
P [189] << current_temperature_status = temperature.status >>
S [167] ->
Q [305] << current_temperature_status = temperature.status and true and true >>
by Law of And-Simplification:  P and true is P
and theorem 62:
Theorem (62) [serial 1190] used for:
  Law of And-Simplification:  P and true is P [serial 1189]
 


Theorem (64)                               [serial 1180] 
P [189] << current_temperature_status = temperature.status >>
S [167] ->
Q [305] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 63 63:
Theorem (63) [serial 1189] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (63) [serial 1189] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (65)                               [serial 1174] 
P [189] << (current_temperature_status = temperature.status) >>
S [167] ->
Q [305] << ((current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 64:
Theorem (64) [serial 1180] used for:
    normalization of [serial 1174]
 


Theorem (66)                               [serial 1182] 
P [186] << CURRENT_TEMP = temperature and true >>
S [186] ->
Q [186] << true >>
by True Conclusion Schema (tc): P->true


Theorem (67)                               [serial 1177] 
P [186] << (true) and temperature = CURRENT_TEMP >>
S [186] ->
Q [186] << true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 66:
Theorem (66) [serial 1182] used for:
    normalization of [serial 1177]
 


Theorem (68)                               [serial 1175] 
P [165] << true >>
S [186] current_temperature?(temperature)
Q [186] << true >>
by Port Data Input: when <<A and v=M(p)>> -> <<B>> then <<A>> p?(v) <<B>> (bl.pi)
and theorem 67:
Theorem (67) [serial 1177] used for:
  applied port input of value <<pre and temperature=M(current_temperature)>> -> <<post>> [serial 1175]
 


Theorem (69)                               [serial 1188] 
P [186] << true >>
S [188] ->
Q [189] << true >>
by True Conclusion Schema (tc): P->true


Theorem (70)                               [serial 1184] 
P [186] << true >>
S [188] ->
Q [189] << temperature.status = temperature.status >>
by Equality Law (idistr):  a=a <-> true
and theorem 69:
Theorem (69) [serial 1188] used for:
  Equality Law (idistr):  a=a <-> true [serial 1184]
 


Theorem (71)                               [serial 1178] 
P [186] << true >>
S [188] ->
Q [189] << ((temperature.status) = temperature.status) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 70:
Theorem (70) [serial 1184] used for:
    normalization of [serial 1178]
 


Theorem (72)                               [serial 1176] 
P [186] << true >>
S [188] current_temperature_status := temperature.status
Q [189] << (current_temperature_status = temperature.status) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 71:
Theorem (71) [serial 1178] used for:
  applied wp for assignment [serial 1176]
 


Theorem (73)                               [serial 1009] 
P [165] << true >>
S [186] current_temperature?(temperature)
;
current_temperature_status := temperature.status
<< (current_temperature_status = temperature.status) >>
Q [167] << ((current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS()) >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 65 68 72:
Theorem (65) [serial 1174] used for:
  Q1 -> Q in sequential composition for [serial 1009]
 
Theorem (68) [serial 1175] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1009]
 
Theorem (72) [serial 1176] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1009]
 


Theorem (74)                               [serial 1238] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [167] ->
Q [198] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (75)                               [serial 1234] 
P [167] << (not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [167] ->
Q [198] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 74:
Theorem (74) [serial 1238] used for:
    normalization of [serial 1234]
 


Theorem (76)                               [serial 1226] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [198] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 75:
Theorem (75) [serial 1234] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1226]
 


Theorem (77)                               [serial 1232] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [196] << INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (78)                               [serial 1227] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [196] << (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 77:
Theorem (77) [serial 1232] used for:
    normalization of [serial 1227]
 


Theorem (79)                               [serial 1221] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [305] << not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 76 78:
Theorem (76) [serial 1226] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1221]
 
Theorem (78) [serial 1227] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1221]
 


Theorem (80)                               [serial 1217] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [305] << (not (not INTERNAL_FAILURE) or not (not MONITOR_INTERFACE_FAILURE) or 
not (Valid = current_temperature_status)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 79:
Theorem (79) [serial 1221] used for:
    normalization of [serial 1217]
 


Theorem (81)                               [serial 1215] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [305] << not (not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE and Valid = current_temperature_status) and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 80:
Theorem (80) [serial 1217] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 1215]
 


Theorem (82)                               [serial 1211] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [305] << not (Valid = current_temperature_status and (not INTERNAL_FAILURE and 
not MONITOR_INTERFACE_FAILURE)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 81:
Theorem (81) [serial 1215] used for:
  Associativity: (b.c).a = a.b.c [serial 1211]
 


Theorem (83)                               [serial 1207] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) and 
current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [305] << ((not ((Valid = current_temperature_status and (not (INTERNAL_FAILURE) and 
not (MONITOR_INTERFACE_FAILURE)))) and not ((now - start_time) < #Iso_Properties::Initialization_Timeout))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 82:
Theorem (82) [serial 1211] used for:
    normalization of [serial 1207]
 


Theorem (84)                               [serial 1205] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) and 
current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [305] << (not ((Valid = current_temperature_status and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 83:
Theorem (83) [serial 1207] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1205]
 


Theorem (85)                               [serial 1204] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
(#Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status)) >>
S [167] ->
Q [305] << (not ((Valid = current_temperature_status and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Associativity: (b.c).a = a.b.c
and theorem 84:
Theorem (84) [serial 1205] used for:
  Associativity: (b.c).a = a.b.c [serial 1204]
 


Theorem (86)                               [serial 1199] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
(#Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status)) >>
S [167] ->
Q [305] << not ((Valid = current_temperature_status and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
true and true >>
by Law of And-Simplification:  P and true is P
and theorem 85:
Theorem (85) [serial 1204] used for:
  Law of And-Simplification:  P and true is P [serial 1199]
 


Theorem (87)                               [serial 1198] 
P [167] << ((current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
(((MONITOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0) or (not ((current_temperature_status = Valid)))))) >>
S [167] ->
Q [305] << (not ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((current_temperature_status = Valid))) or 
(((now - start_time) < #Iso_Properties::Initialization_Timeout))) and true and 
true) >>
by Assume Present:  P = P@now = P^0 
and theorem 86:
Theorem (86) [serial 1199] used for:
  Assume Present:  P = P@now = P^0  [serial 1198]
 


Theorem (88)                               [serial 1238] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [167] ->
Q [198] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (89)                               [serial 1234] 
P [167] << (not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [167] ->
Q [198] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 88:
Theorem (88) [serial 1238] used for:
    normalization of [serial 1234]
 


Theorem (90)                               [serial 1226] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [198] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 89:
Theorem (89) [serial 1234] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1226]
 


Theorem (91)                               [serial 1232] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [196] << INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (92)                               [serial 1227] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [196] << (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 91:
Theorem (91) [serial 1232] used for:
    normalization of [serial 1227]
 


Theorem (93)                               [serial 1221] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [305] << not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 90 92:
Theorem (90) [serial 1226] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1221]
 
Theorem (92) [serial 1227] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1221]
 


Theorem (94)                               [serial 1217] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [305] << (not (not INTERNAL_FAILURE) or not (not MONITOR_INTERFACE_FAILURE) or 
not (Valid = current_temperature_status)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 93:
Theorem (93) [serial 1221] used for:
    normalization of [serial 1217]
 


Theorem (95)                               [serial 1215] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [305] << not (not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE and Valid = current_temperature_status) and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 94:
Theorem (94) [serial 1217] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 1215]
 


Theorem (96)                               [serial 1211] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [167] ->
Q [305] << not (Valid = current_temperature_status and (not INTERNAL_FAILURE and 
not MONITOR_INTERFACE_FAILURE)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 95:
Theorem (95) [serial 1215] used for:
  Associativity: (b.c).a = a.b.c [serial 1211]
 


Theorem (97)                               [serial 1207] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) and 
current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [305] << ((not ((Valid = current_temperature_status and (not (INTERNAL_FAILURE) and 
not (MONITOR_INTERFACE_FAILURE)))) and not ((now - start_time) < #Iso_Properties::Initialization_Timeout))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 96:
Theorem (96) [serial 1211] used for:
    normalization of [serial 1207]
 


Theorem (98)                               [serial 1205] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) and 
current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [305] << (not ((Valid = current_temperature_status and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 97:
Theorem (97) [serial 1207] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1205]
 


Theorem (99)                               [serial 1204] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
(#Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status)) >>
S [167] ->
Q [305] << (not ((Valid = current_temperature_status and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Associativity: (b.c).a = a.b.c
and theorem 98:
Theorem (98) [serial 1205] used for:
  Associativity: (b.c).a = a.b.c [serial 1204]
 


Theorem (100)                               [serial 1199] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
(#Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status)) >>
S [167] ->
Q [305] << not ((Valid = current_temperature_status and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
true and true >>
by Law of And-Simplification:  P and true is P
and theorem 99:
Theorem (99) [serial 1204] used for:
  Law of And-Simplification:  P and true is P [serial 1199]
 


Theorem (101)                               [serial 1198] 
P [167] << ((current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
(((MONITOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0) or (not ((current_temperature_status = Valid)))))) >>
S [167] ->
Q [305] << (not ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((current_temperature_status = Valid))) or 
(((now - start_time) < #Iso_Properties::Initialization_Timeout))) and true and 
true) >>
by Assume Present:  P = P@now = P^0 
and theorem 100:
Theorem (100) [serial 1199] used for:
  Assume Present:  P = P@now = P^0  [serial 1198]
 


Theorem (102)                               [serial 1194] 
P [167] << ((current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
(((MONITOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0) or (not ((current_temperature_status = Valid)))))) >>
S [167] ->
Q [305] << (not ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((current_temperature_status = Valid))) or 
(((now - start_time) < #Iso_Properties::Initialization_Timeout))) and AXIOM_ST() and 
AXIOM_CTS()) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 101 101:
Theorem (101) [serial 1198] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (101) [serial 1198] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (103)                               [serial 1252] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (104)                               [serial 1249] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << (not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 103:
Theorem (103) [serial 1252] used for:
    normalization of [serial 1249]
 


Theorem (105)                               [serial 1248] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << #Iso_Properties::Initialization_Timeout <= (now - start_time) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 104:
Theorem (104) [serial 1249] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1248]
 


Theorem (106)                               [serial 1243] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Guided Substitution of Equals
and theorem 105:
Theorem (105) [serial 1248] used for:
  Guided Substitution of Equals
 replacing "START_TIME" with its = "start_time" in its postcondition [serial 1243]
 


Theorem (107)                               [serial 1240] 
P [305] << ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and ((start_time = START_TIME)) and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 106:
Theorem (106) [serial 1243] used for:
    normalization of [serial 1240]
 


Theorem (108)                               [serial 1224] 
P [305] << AXIOM_CTS() and AXIOM_ST() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << RUN() >>
by Substitution of Assertion Labels
and theorem 107:
Theorem (107) [serial 1240] used for:
  substituted Assertions' predicates for  labels  [serial 1224]
 


Theorem (109)                               [serial 1265] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (110)                               [serial 1263] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not current_temperature_status = Valid >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 109:
Theorem (109) [serial 1265] used for:
    normalization of [serial 1263]
 


Theorem (111)                               [serial 1262] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid >>
by Guided Substitution of Equals
and theorem 110:
Theorem (110) [serial 1263] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 1262]
 


Theorem (112)                               [serial 1260] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << not CURRENT_TEMPERATURE_STATUS = Valid or (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
by Associativity: (b.c).a = a.b.c
and theorem 111:
Theorem (111) [serial 1262] used for:
  Associativity: (b.c).a = a.b.c [serial 1260]
 


Theorem (113)                               [serial 1258] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << not CURRENT_TEMPERATURE_STATUS = Valid or (not (not INTERNAL_FAILURE) or 
not (not MONITOR_INTERFACE_FAILURE)) >>
by Normalization
  Normalization Axiom:
    Complement
and theorem 112:
Theorem (112) [serial 1260] used for:
    normalization of [serial 1258]
 


Theorem (114)                               [serial 1256] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << not CURRENT_TEMPERATURE_STATUS = Valid or not (not INTERNAL_FAILURE and 
not MONITOR_INTERFACE_FAILURE) >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 113:
Theorem (113) [serial 1258] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 1256]
 


Theorem (115)                               [serial 1254] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << (not (CURRENT_TEMPERATURE_STATUS = Valid) or not ((not (INTERNAL_FAILURE) and 
not (MONITOR_INTERFACE_FAILURE)))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 114:
Theorem (114) [serial 1256] used for:
    normalization of [serial 1254]
 


Theorem (116)                               [serial 1245] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 115:
Theorem (115) [serial 1254] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1245]
 


Theorem (117)                               [serial 1241] 
P [305] << ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and ((start_time = START_TIME)) and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << not (not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 116:
Theorem (116) [serial 1245] used for:
    normalization of [serial 1241]
 


Theorem (118)                               [serial 1225] 
P [305] << AXIOM_CTS() and AXIOM_ST() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << not MONITOR_OK() >>
by Substitution of Assertion Labels
and theorem 117:
Theorem (117) [serial 1241] used for:
  substituted Assertions' predicates for  labels  [serial 1225]
 


Theorem (119)                               [serial 1219] 
P [305] << AXIOM_CTS() and AXIOM_ST() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [200] ->
Q [80] << RUN() and not MONITOR_OK() >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 108 118:
Theorem (108) [serial 1224] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1219]
 
Theorem (118) [serial 1225] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1219]
 


Theorem (120)                               [serial 1216] 
P [305] << (not (not INTERNAL_FAILURE) or not (not MONITOR_INTERFACE_FAILURE) or 
not (Valid = current_temperature_status)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
AXIOM_CTS() and AXIOM_ST() >>
S [200] ->
Q [80] << RUN() and not MONITOR_OK() >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 119:
Theorem (119) [serial 1219] used for:
    normalization of [serial 1216]
 


Theorem (121)                               [serial 1214] 
P [305] << not (not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE and Valid = current_temperature_status) and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and AXIOM_CTS() and 
AXIOM_ST() >>
S [200] ->
Q [80] << RUN() and not MONITOR_OK() >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 120:
Theorem (120) [serial 1216] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 1214]
 


Theorem (122)                               [serial 1209] 
P [305] << AXIOM_CTS() and AXIOM_ST() and (not (Valid = current_temperature_status and 
(not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [200] ->
Q [80] << RUN() and not MONITOR_OK() >>
by Associativity: (b.c).a = a.b.c
and theorem 121:
Theorem (121) [serial 1214] used for:
  Associativity: (b.c).a = a.b.c [serial 1209]
 


Theorem (123)                               [serial 1206] 
P [305] << AXIOM_CTS() and AXIOM_ST() and (not ((Valid = current_temperature_status and 
(not (INTERNAL_FAILURE) and not (MONITOR_INTERFACE_FAILURE)))) and not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
S [200] ->
Q [80] << RUN() and not MONITOR_OK() >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 122:
Theorem (122) [serial 1209] used for:
    normalization of [serial 1206]
 


Theorem (124)                               [serial 1201] 
P [305] << AXIOM_CTS() and AXIOM_ST() and not ((Valid = current_temperature_status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [200] ->
Q [80] << RUN() and not MONITOR_OK() >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 123:
Theorem (123) [serial 1206] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1201]
 


Theorem (125)                               [serial 1196] 
P [305] << (not ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((current_temperature_status = Valid))) or 
(((now - start_time) < #Iso_Properties::Initialization_Timeout))) and AXIOM_ST() and 
AXIOM_CTS()) >>
S [200] ->
Q [80] << not MONITOR_OK() and RUN() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 124:
Theorem (124) [serial 1201] used for:
    normalization of [serial 1196]
 


Theorem (126)                               [serial 1197] 
P [200] << ((not ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((current_temperature_status = Valid))) or 
(((now - start_time) < #Iso_Properties::Initialization_Timeout))) and AXIOM_ST() and 
AXIOM_CTS())) and (monitor_mode = Failed)^0 >>
S [200] ->
Q [173] << true >>
by True Conclusion Schema (tc): P->true


Theorem (127)                               [serial 1195] 
P [305] << (not ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((current_temperature_status = Valid))) or 
(((now - start_time) < #Iso_Properties::Initialization_Timeout))) and AXIOM_ST() and 
AXIOM_CTS()) >>
S [200] monitor_mode!(Failed)
Q [173] << true >>
by Enumeration Type Port Output 
and theorems 125 126:
Theorem (125) [serial 1196] used for:
  applied port output of enumeration type  monitor_mode!(Failed) [serial 1195]
 
Theorem (126) [serial 1197] used for:
  applied port output <<pre and (monitor_mode=Failed)^0>> -> <<post>> [serial 1195]
 


Theorem (128)                               [serial 1010] 
P [167] << ((current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
(((MONITOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0) or (not ((current_temperature_status = Valid)))))) >>
S [196] << (not ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((current_temperature_status = Valid))) or (((now - start_time) < #Iso_Properties::Initialization_Timeout))) and AXIOM_ST() and AXIOM_CTS()) >>
monitor_mode!(Failed)
Q [173] << true >>
by Introduction of Existential Quantification (bl.aapre)
and theorems 102 127:
Theorem (102) [serial 1194] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1010]
 
Theorem (127) [serial 1195] used for:
  as <<pre>> S <<Q>> in <<P>> { <<pre>> S  } <<Q>> [serial 1010]
 


Theorem (129)                               [serial 1316] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [167] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (130)                               [serial 1314] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [167] ->
Q [305] << current_temperature_status = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - start_time) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 129:
Theorem (129) [serial 1316] used for:
    normalization of [serial 1314]
 


Theorem (131)                               [serial 1313] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [167] ->
Q [305] << current_temperature_status = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Guided Substitution of Equals
and theorem 130:
Theorem (130) [serial 1314] used for:
  Guided Substitution of Equals
 replacing "START_TIME" with its = "start_time" in its postcondition [serial 1313]
 


Theorem (132)                               [serial 1312] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [167] ->
Q [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Guided Substitution of Equals
and theorem 131:
Theorem (131) [serial 1313] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 1312]
 


Theorem (133)                               [serial 1306] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [167] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) >>
by Associativity: (b.c).a = a.b.c
and theorem 132:
Theorem (132) [serial 1312] used for:
  Associativity: (b.c).a = a.b.c [serial 1306]
 


Theorem (134)                               [serial 1303] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [167] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 133:
Theorem (133) [serial 1306] used for:
    normalization of [serial 1303]
 


Theorem (135)                               [serial 1295] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [167] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) >>
by Substitution of Assertion Labels
and theorem 134:
Theorem (134) [serial 1303] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1295]
 


Theorem (136)                               [serial 1291] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [167] ->
Q [305] << (not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 135:
Theorem (135) [serial 1295] used for:
    normalization of [serial 1291]
 


Theorem (137)                               [serial 1283] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [167] ->
Q [305] << MONITOR_OK() and RUN() >>
by Substitution of Assertion Labels
and theorem 136:
Theorem (136) [serial 1291] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1283]
 


Theorem (138)                               [serial 1275] 
P [167] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() >>
S [167] ->
Q [305] << MONITOR_OK() and RUN() >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 137:
Theorem (137) [serial 1283] used for:
    normalization of [serial 1275]
 


Theorem (139)                               [serial 1273] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
(#Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) >>
S [167] ->
Q [305] << MONITOR_OK() and RUN() >>
by Associativity: (b.c).a = a.b.c
and theorem 138:
Theorem (138) [serial 1275] used for:
  Associativity: (b.c).a = a.b.c [serial 1273]
 


Theorem (140)                               [serial 1267] 
P [167] << ((current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
not (((MONITOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0)) and ((current_temperature_status = Valid)))) >>
S [167] ->
Q [305] << (MONITOR_OK() and RUN()) >>
by Assume Present:  P = P@now = P^0 
and theorem 139:
Theorem (139) [serial 1273] used for:
  Assume Present:  P = P@now = P^0  [serial 1267]
 


Theorem (141)                               [serial 1311] 
P [305] << (now - START_TIME) <= (now - START_TIME)^1 and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
S [170] ->
Q [170] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (142)                               [serial 1308] 
P [305] << (now - START_TIME) <= (now - START_TIME)^1 and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [170] ->
Q [170] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
by Transitivity: x<y and y<z -> x<z
and theorem 141:
Theorem (141) [serial 1311] used for:
  Transitivity: x<y and y<z -> x<z [serial 1308]
 


Theorem (143)                               [serial 1304] 
P [305] << (((now - START_TIME) <= (now - START_TIME)^1)) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [170] ->
Q [170] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 142:
Theorem (142) [serial 1308] used for:
    normalization of [serial 1304]
 


Theorem (144)                               [serial 1301] 
P [305] << AXIOM_PAST_INIT() and RUN() >>
S [170] ->
Q [170] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
by Substitution of Assertion Labels
and theorem 143:
Theorem (143) [serial 1304] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1301]
 


Theorem (145)                               [serial 1298] 
P [305] << AXIOM_PAST_INIT() and RUN() >>
S [170] ->
Q [170] << ((#Iso_Properties::Initialization_Timeout)^1 <= (now - START_TIME)^1) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 144:
Theorem (144) [serial 1301] used for:
    normalization of [serial 1298]
 


Theorem (146)                               [serial 1293] 
P [305] << AXIOM_PAST_INIT() and RUN() >>
S [170] ->
Q [170] << (#Iso_Properties::Initialization_Timeout <= (now - START_TIME))^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 145:
Theorem (145) [serial 1298] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1293]
 


Theorem (147)                               [serial 1290] 
P [305] << AXIOM_PAST_INIT() and RUN() >>
S [170] ->
Q [170] << ((((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)))^1 >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 146:
Theorem (146) [serial 1293] used for:
    normalization of [serial 1290]
 


Theorem (148)                               [serial 1279] 
P [305] << AXIOM_PAST_INIT() and RUN() >>
S [170] ->
Q [170] << (RUN())^1 >>
by Substitution of Assertion Labels
and theorem 147:
Theorem (147) [serial 1290] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1279]
 


Theorem (149)                               [serial 1268] 
P [305] << (RUN() and AXIOM_PAST_INIT()) >>
S [170] ->
Q [170] << (RUN())^1 >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 148:
Theorem (148) [serial 1279] used for:
    normalization of [serial 1268]
 


Theorem (150)                               [serial 1281] 
P [305] << MONITOR_OK() and RUN() >>
S [208] ->
Q [79] << MONITOR_OK() and RUN() >>
by Identity (id):  P->P is tautology


Theorem (151)                               [serial 1270] 
P [305] << (MONITOR_OK() and RUN()) >>
S [208] ->
Q [79] << MONITOR_OK() and RUN() >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 150:
Theorem (150) [serial 1281] used for:
    normalization of [serial 1270]
 


Theorem (152)                               [serial 1285] 
P [208] << Normal = monitor_mode and MONITOR_OK() and RUN() >>
S [208] ->
Q [305] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (153)                               [serial 1277] 
P [208] << MONITOR_OK() and RUN() and Normal = monitor_mode >>
S [208] ->
Q [305] << (RUN()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 152:
Theorem (152) [serial 1285] used for:
    normalization of [serial 1277]
 


Theorem (154)                               [serial 1276] 
P [208] << Normal = monitor_mode and (MONITOR_OK() and RUN()) >>
S [208] ->
Q [305] << (RUN()) >>
by Associativity: (b.c).a = a.b.c
and theorem 153:
Theorem (153) [serial 1277] used for:
  Associativity: (b.c).a = a.b.c [serial 1276]
 


Theorem (155)                               [serial 1274] 
P [208] << Normal = monitor_mode and (MONITOR_OK() and RUN()) >>
S [208] ->
Q [305] << RUN() and true >>
by Law of And-Simplification:  P and true is P
and theorem 154:
Theorem (154) [serial 1276] used for:
  Law of And-Simplification:  P and true is P [serial 1274]
 


Theorem (156)                               [serial 1272] 
P [208] << ((MONITOR_OK() and RUN())) and (monitor_mode = Normal)^0 >>
S [208] ->
Q [305] << (RUN() and true) >>
by Assume Present:  P = P@now = P^0 
and theorem 155:
Theorem (155) [serial 1274] used for:
  Assume Present:  P = P@now = P^0  [serial 1272]
 


Theorem (157)                               [serial 1285] 
P [208] << Normal = monitor_mode and MONITOR_OK() and RUN() >>
S [208] ->
Q [305] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (158)                               [serial 1277] 
P [208] << MONITOR_OK() and RUN() and Normal = monitor_mode >>
S [208] ->
Q [305] << (RUN()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 157:
Theorem (157) [serial 1285] used for:
    normalization of [serial 1277]
 


Theorem (159)                               [serial 1276] 
P [208] << Normal = monitor_mode and (MONITOR_OK() and RUN()) >>
S [208] ->
Q [305] << (RUN()) >>
by Associativity: (b.c).a = a.b.c
and theorem 158:
Theorem (158) [serial 1277] used for:
  Associativity: (b.c).a = a.b.c [serial 1276]
 


Theorem (160)                               [serial 1274] 
P [208] << Normal = monitor_mode and (MONITOR_OK() and RUN()) >>
S [208] ->
Q [305] << RUN() and true >>
by Law of And-Simplification:  P and true is P
and theorem 159:
Theorem (159) [serial 1276] used for:
  Law of And-Simplification:  P and true is P [serial 1274]
 


Theorem (161)                               [serial 1272] 
P [208] << ((MONITOR_OK() and RUN())) and (monitor_mode = Normal)^0 >>
S [208] ->
Q [305] << (RUN() and true) >>
by Assume Present:  P = P@now = P^0 
and theorem 160:
Theorem (160) [serial 1274] used for:
  Assume Present:  P = P@now = P^0  [serial 1272]
 


Theorem (162)                               [serial 1271] 
P [208] << ((MONITOR_OK() and RUN())) and (monitor_mode = Normal)^0 >>
S [208] ->
Q [305] << (RUN() and AXIOM_PAST_INIT()) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 161 161:
Theorem (161) [serial 1272] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (161) [serial 1272] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (163)                               [serial 1269] 
P [305] << (MONITOR_OK() and RUN()) >>
S [208] monitor_mode!(Normal)
Q [305] << (RUN() and AXIOM_PAST_INIT()) >>
by Enumeration Type Port Output 
and theorems 151 162:
Theorem (151) [serial 1270] used for:
  applied port output of enumeration type  monitor_mode!(Normal) [serial 1269]
 
Theorem (162) [serial 1271] used for:
  applied port output <<pre and (monitor_mode=Normal)^0>> -> <<post>> [serial 1269]
 


Theorem (164)                               [serial 1011] 
P [167] << ((current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
not (((MONITOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0)) and ((current_temperature_status = Valid)))) >>
S [207] << (MONITOR_OK() and RUN()) >>
monitor_mode!(Normal)
<< (RUN() and AXIOM_PAST_INIT()) >>
Q [170] << (RUN())^1 >>
by Introduction of Existential Quantification (bl.aab)
and theorems 140 149 163:
Theorem (140) [serial 1267] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1011]
 
Theorem (149) [serial 1268] used for:
  as <<post>> -> <<Q>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1011]
 
Theorem (163) [serial 1269] used for:
  as <<pre>> S <<post>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1011]
 


Theorem (165)                               [serial 1319] 
P [167] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
(now - start_time) < #Iso_Properties::Initialization_Timeout >>
S [211] ->
Q [165] << true >>
by True Conclusion Schema (tc): P->true


Theorem (166)                               [serial 1012] 
P [167] << ((current_temperature_status = temperature.status) and AXIOM_ST() and 
AXIOM_CTS() and (((now - start_time) < #Iso_Properties::Initialization_Timeout))) >>
S [211] ->
Q [165] << (true)^1 >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Constants are always the same
and theorem 165:
Theorem (165) [serial 1319] used for:
    normalization of [serial 1012]
 


Theorem (167)                               [serial 1321] 
P [170] << RUN() >>
S [170] ->
Q [217] << RUN() >>
by Identity (id):  P->P is tautology


Theorem (168)                               [serial 1326] 
P [305] << ((current_temperature_status = temperature.status) and RUN()) >>
S [171] ->
Q [305] << ((current_temperature_status = temperature.status) and RUN()) >>
by Identity (id):  P->P is tautology


Theorem (169)                               [serial 1325] 
P [305] << ((current_temperature_status = temperature.status) and RUN()) >>
S [171] ->
Q [305] << ((current_temperature_status = temperature.status) and RUN() and true and 
true) >>
by Law of And-Simplification:  P and true is P
and theorem 168:
Theorem (168) [serial 1326] used for:
  Law of And-Simplification:  P and true is P [serial 1325]
 


Theorem (170)                               [serial 1326] 
P [305] << ((current_temperature_status = temperature.status) and RUN()) >>
S [171] ->
Q [305] << ((current_temperature_status = temperature.status) and RUN()) >>
by Identity (id):  P->P is tautology


Theorem (171)                               [serial 1325] 
P [305] << ((current_temperature_status = temperature.status) and RUN()) >>
S [171] ->
Q [305] << ((current_temperature_status = temperature.status) and RUN() and true and 
true) >>
by Law of And-Simplification:  P and true is P
and theorem 170:
Theorem (170) [serial 1326] used for:
  Law of And-Simplification:  P and true is P [serial 1325]
 


Theorem (172)                               [serial 1322] 
P [305] << ((current_temperature_status = temperature.status) and RUN()) >>
S [171] ->
Q [305] << ((current_temperature_status = temperature.status) and RUN() and AXIOM_CTS() and 
AXIOM_ST()) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 171 171:
Theorem (171) [serial 1325] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (171) [serial 1325] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (173)                               [serial 1330] 
P [218] << CURRENT_TEMP = temperature and RUN() >>
S [218] ->
Q [305] << CURRENT_TEMP = temperature and RUN() >>
by Identity (id):  P->P is tautology


Theorem (174)                               [serial 1327] 
P [218] << (RUN()) and temperature = CURRENT_TEMP >>
S [218] ->
Q [305] << ((temperature = CURRENT_TEMP) and RUN()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 173:
Theorem (173) [serial 1330] used for:
    normalization of [serial 1327]
 


Theorem (175)                               [serial 1323] 
P [217] << RUN() >>
S [218] current_temperature?(temperature)
Q [305] << ((temperature = CURRENT_TEMP) and RUN()) >>
by Port Data Input: when <<A and v=M(p)>> -> <<B>> then <<A>> p?(v) <<B>> (bl.pi)
and theorem 174:
Theorem (174) [serial 1327] used for:
  applied port input of value <<pre and temperature=M(current_temperature)>> -> <<post>> [serial 1323]
 


Theorem (176)                               [serial 1339] 
P [305] << CURRENT_TEMP = temperature and RUN() >>
S [220] ->
Q [305] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (177)                               [serial 1336] 
P [305] << CURRENT_TEMP = temperature and RUN() >>
S [220] ->
Q [305] << (RUN()) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 176:
Theorem (176) [serial 1339] used for:
    normalization of [serial 1336]
 


Theorem (178)                               [serial 1335] 
P [305] << CURRENT_TEMP = temperature and RUN() >>
S [220] ->
Q [305] << true and RUN() >>
by Law of And-Simplification:  P and true is P
and theorem 177:
Theorem (177) [serial 1336] used for:
  Law of And-Simplification:  P and true is P [serial 1335]
 


Theorem (179)                               [serial 1332] 
P [305] << CURRENT_TEMP = temperature and RUN() >>
S [220] ->
Q [305] << temperature.status = temperature.status and RUN() >>
by Equality Law (idistr):  a=a <-> true
and theorem 178:
Theorem (178) [serial 1335] used for:
  Equality Law (idistr):  a=a <-> true [serial 1332]
 


Theorem (180)                               [serial 1328] 
P [305] << ((temperature = CURRENT_TEMP) and RUN()) >>
S [220] ->
Q [305] << (((temperature.status) = temperature.status) and RUN()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 179:
Theorem (179) [serial 1332] used for:
    normalization of [serial 1328]
 


Theorem (181)                               [serial 1324] 
P [305] << ((temperature = CURRENT_TEMP) and RUN()) >>
S [220] current_temperature_status := temperature.status
Q [305] << ((current_temperature_status = temperature.status) and RUN()) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 180:
Theorem (180) [serial 1328] used for:
  applied wp for assignment [serial 1324]
 


Theorem (182)                               [serial 1013] 
P [170] << RUN() >>
S [217] << RUN() >>
current_temperature?(temperature)
;
<< ((temperature = CURRENT_TEMP) and RUN()) >>
current_temperature_status := temperature.status
<< ((current_temperature_status = temperature.status) and RUN()) >>
Q [171] << ((current_temperature_status = temperature.status) and RUN() and AXIOM_CTS() and 
AXIOM_ST()) >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 167 172 175 181:
Theorem (167) [serial 1321] used for:
  P -> P1 in sequential composition for [serial 1013]
 
Theorem (172) [serial 1322] used for:
  Q1 -> Q in sequential composition for [serial 1013]
 
Theorem (175) [serial 1323] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1013]
 
Theorem (181) [serial 1324] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1013]
 


Theorem (183)                               [serial 1380] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
S [171] ->
Q [227] << Valid = current_temperature_status and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (184)                               [serial 1378] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0) >>
S [171] ->
Q [227] << current_temperature_status = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
by Assume Present:  P = P@now = P^0 
and theorem 183:
Theorem (183) [serial 1380] used for:
  Assume Present:  P = P@now = P^0  [serial 1378]
 


Theorem (185)                               [serial 1374] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0) >>
S [171] ->
Q [227] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
by Guided Substitution of Equals
and theorem 184:
Theorem (184) [serial 1378] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 1374]
 


Theorem (186)                               [serial 1368] 
P [171] << Valid = current_temperature_status and current_temperature_status = temperature.status and 
((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and ((start_time = START_TIME)) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and not (
INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0) >>
S [171] ->
Q [227] << (not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 185:
Theorem (185) [serial 1374] used for:
    normalization of [serial 1368]
 


Theorem (187)                               [serial 1365] 
P [171] << Valid = current_temperature_status and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and RUN() and not (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0) >>
S [171] ->
Q [227] << (not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) >>
by Substitution of Assertion Labels
and theorem 186:
Theorem (186) [serial 1368] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1365]
 


Theorem (188)                               [serial 1361] 
P [171] << Valid = current_temperature_status and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and RUN() and not (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0) >>
S [171] ->
Q [227] << MONITOR_OK() >>
by Substitution of Assertion Labels
and theorem 187:
Theorem (187) [serial 1365] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1361]
 


Theorem (189)                               [serial 1362] 
P [171] << Valid = current_temperature_status and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and RUN() and not (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0) >>
S [171] ->
Q [227] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (190)                               [serial 1354] 
P [171] << Valid = current_temperature_status and current_temperature_status = temperature.status and 
AXIOM_CTS() and AXIOM_ST() and RUN() and not (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0) >>
S [171] ->
Q [305] << MONITOR_OK() and RUN() >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 188 189:
Theorem (188) [serial 1361] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1354]
 
Theorem (189) [serial 1362] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1354]
 


Theorem (191)                               [serial 1347] 
P [171] << (not (((MONITOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0)) and 
((current_temperature_status = Valid)) and (current_temperature_status = temperature.status) and 
RUN() and AXIOM_CTS() and AXIOM_ST()) >>
S [171] ->
Q [305] << (MONITOR_OK() and RUN()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 190:
Theorem (190) [serial 1354] used for:
    normalization of [serial 1347]
 


Theorem (192)                               [serial 1341] 
P [171] << ((current_temperature_status = temperature.status) and RUN() and AXIOM_CTS() and 
AXIOM_ST() and (not (((MONITOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0)) and 
((current_temperature_status = Valid)))) >>
S [171] ->
Q [305] << (MONITOR_OK() and RUN()) >>
by Associativity: (b.c).a = a.b.c
and theorem 191:
Theorem (191) [serial 1347] used for:
  Associativity: (b.c).a = a.b.c [serial 1341]
 


Theorem (193)                               [serial 1391] 
P [305] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
#Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) >>
S [170] ->
Q [170] << #Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (194)                               [serial 1389] 
P [305] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [170] ->
Q [170] << #Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) >>
by Transitivity: x<y and y<z -> x<z
and theorem 193:
Theorem (193) [serial 1391] used for:
  Transitivity: x<y and y<z -> x<z [serial 1389]
 


Theorem (195)                               [serial 1386] 
P [305] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [170] ->
Q [170] << #Iso_Properties::Initialization_Timeout <= ((now)^1 - (START_TIME)^1) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 194:
Theorem (194) [serial 1389] used for:
    normalization of [serial 1386]
 


Theorem (196)                               [serial 1384] 
P [305] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [170] ->
Q [170] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 195:
Theorem (195) [serial 1386] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1384]
 


Theorem (197)                               [serial 1381] 
P [305] << (now - START_TIME) <= ((now)^1 - (START_TIME)^1) and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [170] ->
Q [170] << ((#Iso_Properties::Initialization_Timeout)^1 <= (now - START_TIME)^1) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 196:
Theorem (196) [serial 1384] used for:
    normalization of [serial 1381]
 


Theorem (198)                               [serial 1370] 
P [305] << (now - START_TIME) <= (now - START_TIME)^1 and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [170] ->
Q [170] << (#Iso_Properties::Initialization_Timeout <= (now - START_TIME))^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 197:
Theorem (197) [serial 1381] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1370]
 


Theorem (199)                               [serial 1366] 
P [305] << (((now - START_TIME) <= (now - START_TIME)^1)) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [170] ->
Q [170] << ((((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)))^1 >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 198:
Theorem (198) [serial 1370] used for:
    normalization of [serial 1366]
 


Theorem (200)                               [serial 1363] 
P [305] << AXIOM_PAST_INIT() and RUN() >>
S [170] ->
Q [170] << ((((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)))^1 >>
by Substitution of Assertion Labels
and theorem 199:
Theorem (199) [serial 1366] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1363]
 


Theorem (201)                               [serial 1350] 
P [305] << AXIOM_PAST_INIT() and RUN() >>
S [170] ->
Q [170] << (RUN())^1 >>
by Substitution of Assertion Labels
and theorem 200:
Theorem (200) [serial 1363] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1350]
 


Theorem (202)                               [serial 1342] 
P [305] << (RUN() and AXIOM_PAST_INIT()) >>
S [170] ->
Q [170] << (RUN())^1 >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 201:
Theorem (201) [serial 1350] used for:
    normalization of [serial 1342]
 


Theorem (203)                               [serial 1352] 
P [305] << MONITOR_OK() and RUN() >>
S [228] ->
Q [79] << MONITOR_OK() and RUN() >>
by Identity (id):  P->P is tautology


Theorem (204)                               [serial 1344] 
P [305] << (MONITOR_OK() and RUN()) >>
S [228] ->
Q [79] << MONITOR_OK() and RUN() >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 203:
Theorem (203) [serial 1352] used for:
    normalization of [serial 1344]
 


Theorem (205)                               [serial 1393] 
P [228] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and Normal = monitor_mode >>
S [228] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (206)                               [serial 1392] 
P [228] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and Normal = monitor_mode >>
S [228] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Associativity: (b.c).a = a.b.c
and theorem 205:
Theorem (205) [serial 1393] used for:
  Associativity: (b.c).a = a.b.c [serial 1392]
 


Theorem (207)                               [serial 1379] 
P [228] << Normal = monitor_mode and (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) >>
S [228] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Associativity: (b.c).a = a.b.c
and theorem 206:
Theorem (206) [serial 1392] used for:
  Associativity: (b.c).a = a.b.c [serial 1379]
 


Theorem (208)                               [serial 1372] 
P [228] << (Normal = monitor_mode)^0 and (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) >>
S [228] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Assume Present:  P = P@now = P^0 
and theorem 207:
Theorem (207) [serial 1379] used for:
  Assume Present:  P = P@now = P^0  [serial 1372]
 


Theorem (209)                               [serial 1367] 
P [228] << (Normal = monitor_mode)^0 and ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and 
((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) >>
S [228] ->
Q [305] << (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 208:
Theorem (208) [serial 1372] used for:
    normalization of [serial 1367]
 


Theorem (210)                               [serial 1364] 
P [228] << (Normal = monitor_mode)^0 and (MONITOR_OK() and RUN()) >>
S [228] ->
Q [305] << (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Substitution of Assertion Labels
and theorem 209:
Theorem (209) [serial 1367] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1364]
 


Theorem (211)                               [serial 1356] 
P [228] << (Normal = monitor_mode)^0 and (MONITOR_OK() and RUN()) >>
S [228] ->
Q [305] << RUN() >>
by Substitution of Assertion Labels
and theorem 210:
Theorem (210) [serial 1364] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1356]
 


Theorem (212)                               [serial 1348] 
P [228] << ((MONITOR_OK() and RUN())) and (monitor_mode = Normal)^0 >>
S [228] ->
Q [305] << ((RUN())) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 211:
Theorem (211) [serial 1356] used for:
    normalization of [serial 1348]
 


Theorem (213)                               [serial 1346] 
P [228] << ((MONITOR_OK() and RUN())) and (monitor_mode = Normal)^0 >>
S [228] ->
Q [305] << (RUN() and true) >>
by Law of And-Simplification:  P and true is P
and theorem 212:
Theorem (212) [serial 1348] used for:
  Law of And-Simplification:  P and true is P [serial 1346]
 


Theorem (214)                               [serial 1393] 
P [228] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and Normal = monitor_mode >>
S [228] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (215)                               [serial 1392] 
P [228] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and Normal = monitor_mode >>
S [228] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Associativity: (b.c).a = a.b.c
and theorem 214:
Theorem (214) [serial 1393] used for:
  Associativity: (b.c).a = a.b.c [serial 1392]
 


Theorem (216)                               [serial 1379] 
P [228] << Normal = monitor_mode and (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) >>
S [228] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Associativity: (b.c).a = a.b.c
and theorem 215:
Theorem (215) [serial 1392] used for:
  Associativity: (b.c).a = a.b.c [serial 1379]
 


Theorem (217)                               [serial 1372] 
P [228] << (Normal = monitor_mode)^0 and (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) >>
S [228] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Assume Present:  P = P@now = P^0 
and theorem 216:
Theorem (216) [serial 1379] used for:
  Assume Present:  P = P@now = P^0  [serial 1372]
 


Theorem (218)                               [serial 1367] 
P [228] << (Normal = monitor_mode)^0 and ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and 
((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) >>
S [228] ->
Q [305] << (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 217:
Theorem (217) [serial 1372] used for:
    normalization of [serial 1367]
 


Theorem (219)                               [serial 1364] 
P [228] << (Normal = monitor_mode)^0 and (MONITOR_OK() and RUN()) >>
S [228] ->
Q [305] << (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Substitution of Assertion Labels
and theorem 218:
Theorem (218) [serial 1367] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1364]
 


Theorem (220)                               [serial 1356] 
P [228] << (Normal = monitor_mode)^0 and (MONITOR_OK() and RUN()) >>
S [228] ->
Q [305] << RUN() >>
by Substitution of Assertion Labels
and theorem 219:
Theorem (219) [serial 1364] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1356]
 


Theorem (221)                               [serial 1348] 
P [228] << ((MONITOR_OK() and RUN())) and (monitor_mode = Normal)^0 >>
S [228] ->
Q [305] << ((RUN())) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 220:
Theorem (220) [serial 1356] used for:
    normalization of [serial 1348]
 


Theorem (222)                               [serial 1346] 
P [228] << ((MONITOR_OK() and RUN())) and (monitor_mode = Normal)^0 >>
S [228] ->
Q [305] << (RUN() and true) >>
by Law of And-Simplification:  P and true is P
and theorem 221:
Theorem (221) [serial 1348] used for:
  Law of And-Simplification:  P and true is P [serial 1346]
 


Theorem (223)                               [serial 1345] 
P [228] << ((MONITOR_OK() and RUN())) and (monitor_mode = Normal)^0 >>
S [228] ->
Q [305] << (RUN() and AXIOM_PAST_INIT()) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 222 222:
Theorem (222) [serial 1346] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (222) [serial 1346] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (224)                               [serial 1343] 
P [305] << (MONITOR_OK() and RUN()) >>
S [228] monitor_mode!(Normal)
Q [305] << (RUN() and AXIOM_PAST_INIT()) >>
by Enumeration Type Port Output 
and theorems 204 223:
Theorem (204) [serial 1344] used for:
  applied port output of enumeration type  monitor_mode!(Normal) [serial 1343]
 
Theorem (223) [serial 1345] used for:
  applied port output <<pre and (monitor_mode=Normal)^0>> -> <<post>> [serial 1343]
 


Theorem (225)                               [serial 1014] 
P [171] << ((current_temperature_status = temperature.status) and RUN() and AXIOM_CTS() and 
AXIOM_ST() and (not (((MONITOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0)) and 
((current_temperature_status = Valid)))) >>
S [227] << (MONITOR_OK() and RUN()) >>
monitor_mode!(Normal)
<< (RUN() and AXIOM_PAST_INIT()) >>
Q [170] << (RUN())^1 >>
by Introduction of Existential Quantification (bl.aab)
and theorems 192 202 224:
Theorem (192) [serial 1341] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1014]
 
Theorem (202) [serial 1342] used for:
  as <<post>> -> <<Q>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1014]
 
Theorem (224) [serial 1343] used for:
  as <<pre>> S <<post>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1014]
 


Theorem (226)                               [serial 1410] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << AXIOM_ST() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (227)                               [serial 1432] 
P [171] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (228)                               [serial 1430] 
P [171] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Guided Substitution of Equals
and theorem 227:
Theorem (227) [serial 1432] used for:
  Guided Substitution of Equals
 replacing "start_time" with its = "START_TIME" in its postcondition [serial 1430]
 


Theorem (229)                               [serial 1431] 
P [171] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [69] << (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (230)                               [serial 1428] 
P [171] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 228 229:
Theorem (228) [serial 1430] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1428]
 
Theorem (229) [serial 1431] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1428]
 


Theorem (231)                               [serial 1426] 
P [171] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not current_temperature_status = Valid) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 230:
Theorem (230) [serial 1428] used for:
    normalization of [serial 1426]
 


Theorem (232)                               [serial 1425] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not current_temperature_status = Valid) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 231:
Theorem (231) [serial 1426] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1425]
 


Theorem (233)                               [serial 1424] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid) >>
by Guided Substitution of Equals
and theorem 232:
Theorem (232) [serial 1425] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 1424]
 


Theorem (234)                               [serial 1422] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(not CURRENT_TEMPERATURE_STATUS = Valid or (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) >>
by Associativity: (b.c).a = a.b.c
and theorem 233:
Theorem (233) [serial 1424] used for:
  Associativity: (b.c).a = a.b.c [serial 1422]
 


Theorem (235)                               [serial 1420] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(not CURRENT_TEMPERATURE_STATUS = Valid or (not (not INTERNAL_FAILURE) or 
not (not MONITOR_INTERFACE_FAILURE))) >>
by Normalization
  Normalization Axiom:
    Complement
and theorem 234:
Theorem (234) [serial 1422] used for:
    normalization of [serial 1420]
 


Theorem (236)                               [serial 1418] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(not CURRENT_TEMPERATURE_STATUS = Valid or not (not INTERNAL_FAILURE and 
not MONITOR_INTERFACE_FAILURE)) >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 235:
Theorem (235) [serial 1420] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 1418]
 


Theorem (237)                               [serial 1416] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << (not (CURRENT_TEMPERATURE_STATUS = Valid) or not ((not (INTERNAL_FAILURE) and 
not (MONITOR_INTERFACE_FAILURE)))) and not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 236:
Theorem (236) [serial 1418] used for:
    normalization of [serial 1416]
 


Theorem (238)                               [serial 1415] 
P [171] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 237:
Theorem (237) [serial 1416] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1415]
 


Theorem (239)                               [serial 1414] 
P [171] << current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
(INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << (not (not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Assume Present:  P = P@now = P^0 
and theorem 238:
Theorem (238) [serial 1415] used for:
  Assume Present:  P = P@now = P^0  [serial 1414]
 


Theorem (240)                               [serial 1411] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [171] ->
Q [235] << (not MONITOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Substitution of Assertion Labels
and theorem 239:
Theorem (239) [serial 1414] used for:
  substituted Assertions' predicates for  labels  [serial 1411]
 


Theorem (241)                               [serial 1402] 
P [171] << current_temperature_status = temperature.status and AXIOM_CTS() and AXIOM_ST() and 
RUN() and (INTERNAL_FAILURE^0 or MONITOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [171] ->
Q [305] << AXIOM_ST() and (not MONITOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 226 240:
Theorem (226) [serial 1410] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1402]
 
Theorem (240) [serial 1411] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1402]
 


Theorem (242)                               [serial 1398] 
P [171] << ((current_temperature_status = temperature.status) and RUN() and AXIOM_CTS() and 
AXIOM_ST() and ((((MONITOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0) or 
(not ((current_temperature_status = Valid)))))) >>
S [171] ->
Q [305] << ((not ((MONITOR_OK())) and not ((((now - start_time) < #Iso_Properties::Initialization_Timeout)))) and 
AXIOM_ST()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 241:
Theorem (241) [serial 1402] used for:
    normalization of [serial 1398]
 


Theorem (243)                               [serial 1394] 
P [171] << ((current_temperature_status = temperature.status) and RUN() and AXIOM_CTS() and 
AXIOM_ST() and ((((MONITOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0) or 
(not ((current_temperature_status = Valid)))))) >>
S [171] ->
Q [305] << (not ((MONITOR_OK()) or (((now - start_time) < #Iso_Properties::Initialization_Timeout))) and 
AXIOM_ST()) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 242:
Theorem (242) [serial 1398] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1394]
 


Theorem (244)                               [serial 1442] 
P [305] << not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
START_TIME = start_time >>
S [236] ->
Q [80] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (245)                               [serial 1441] 
P [305] << START_TIME = start_time and (not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [236] ->
Q [80] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 244:
Theorem (244) [serial 1442] used for:
  Associativity: (b.c).a = a.b.c [serial 1441]
 


Theorem (246)                               [serial 1439] 
P [305] << START_TIME = start_time and (not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [236] ->
Q [80] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Guided Substitution of Equals
and theorem 245:
Theorem (245) [serial 1441] used for:
  Guided Substitution of Equals
 replacing "START_TIME" with its = "start_time" in its postcondition [serial 1439]
 


Theorem (247)                               [serial 1437] 
P [305] << START_TIME = start_time and (not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [236] ->
Q [80] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 246:
Theorem (246) [serial 1439] used for:
    normalization of [serial 1437]
 


Theorem (248)                               [serial 1435] 
P [305] << START_TIME = start_time and (not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [236] ->
Q [80] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 247:
Theorem (247) [serial 1437] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1435]
 


Theorem (249)                               [serial 1433] 
P [305] << ((start_time = START_TIME)) and (not (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [236] ->
Q [80] << (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 248:
Theorem (248) [serial 1435] used for:
    normalization of [serial 1433]
 


Theorem (250)                               [serial 1412] 
P [305] << AXIOM_ST() and (not MONITOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [236] ->
Q [80] << RUN() >>
by Substitution of Assertion Labels
and theorem 249:
Theorem (249) [serial 1433] used for:
  substituted Assertions' predicates for  labels  [serial 1412]
 


Theorem (251)                               [serial 1443] 
P [305] << not MONITOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
AXIOM_ST() >>
S [236] ->
Q [80] << not MONITOR_OK() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (252)                               [serial 1413] 
P [305] << AXIOM_ST() and (not MONITOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [236] ->
Q [80] << not MONITOR_OK() >>
by Associativity: (b.c).a = a.b.c
and theorem 251:
Theorem (251) [serial 1443] used for:
  Associativity: (b.c).a = a.b.c [serial 1413]
 


Theorem (253)                               [serial 1404] 
P [305] << AXIOM_ST() and (not MONITOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [236] ->
Q [80] << RUN() and not MONITOR_OK() >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 250 252:
Theorem (250) [serial 1412] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1404]
 
Theorem (252) [serial 1413] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1404]
 


Theorem (254)                               [serial 1399] 
P [305] << ((not ((MONITOR_OK())) and not ((((now - start_time) < #Iso_Properties::Initialization_Timeout)))) and 
AXIOM_ST()) >>
S [236] ->
Q [80] << not MONITOR_OK() and RUN() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 253:
Theorem (253) [serial 1404] used for:
    normalization of [serial 1399]
 


Theorem (255)                               [serial 1396] 
P [305] << (not ((MONITOR_OK()) or (((now - start_time) < #Iso_Properties::Initialization_Timeout))) and 
AXIOM_ST()) >>
S [236] ->
Q [80] << not MONITOR_OK() and RUN() >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 254:
Theorem (254) [serial 1399] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1396]
 


Theorem (256)                               [serial 1406] 
P [236] << (Failed = monitor_mode)^0 and (AXIOM_ST() and (not MONITOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
S [236] ->
Q [173] << true >>
by True Conclusion Schema (tc): P->true


Theorem (257)                               [serial 1400] 
P [236] << (((not ((MONITOR_OK())) and not ((((now - start_time) < #Iso_Properties::Initialization_Timeout)))) and 
AXIOM_ST())) and (monitor_mode = Failed)^0 >>
S [236] ->
Q [173] << true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 256:
Theorem (256) [serial 1406] used for:
    normalization of [serial 1400]
 


Theorem (258)                               [serial 1397] 
P [236] << ((not ((MONITOR_OK()) or (((now - start_time) < #Iso_Properties::Initialization_Timeout))) and 
AXIOM_ST())) and (monitor_mode = Failed)^0 >>
S [236] ->
Q [173] << true >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 257:
Theorem (257) [serial 1400] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1397]
 


Theorem (259)                               [serial 1395] 
P [305] << (not ((MONITOR_OK()) or (((now - start_time) < #Iso_Properties::Initialization_Timeout))) and 
AXIOM_ST()) >>
S [236] monitor_mode!(Failed)
Q [173] << true >>
by Enumeration Type Port Output 
and theorems 255 258:
Theorem (255) [serial 1396] used for:
  applied port output of enumeration type  monitor_mode!(Failed) [serial 1395]
 
Theorem (258) [serial 1397] used for:
  applied port output <<pre and (monitor_mode=Failed)^0>> -> <<post>> [serial 1395]
 


Theorem (260)                               [serial 1015] 
P [171] << ((current_temperature_status = temperature.status) and RUN() and AXIOM_CTS() and 
AXIOM_ST() and ((((MONITOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0) or 
(not ((current_temperature_status = Valid)))))) >>
S [235] << (not ((MONITOR_OK()) or (((now - start_time) < #Iso_Properties::Initialization_Timeout))) and AXIOM_ST()) >>
monitor_mode!(Failed)
Q [173] << true >>
by Introduction of Existential Quantification (bl.aapre)
and theorems 243 259:
Theorem (243) [serial 1394] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1015]
 
Theorem (259) [serial 1395] used for:
  as <<pre>> S <<Q>> in <<P>> { <<pre>> S  } <<Q>> [serial 1015]
 


Theorem (261)                               [serial 1002] 
P [156] <<   >>
S [156] ->
Q [156] << manage_monitor_mode.impl proof obligations >>
by Initial Thread Obligations
and theorems 1 2 23 24 37 57 73 128 164 166 182 225 260:
Theorem (1) [serial 1003] used for:
  <<M(init)>> -> <<I>> from invariant I when complete state init has Assertion <<M(init)>> in its definition.
 
Theorem (2) [serial 1004] used for:
  <<M(normal)>> -> <<I>> from invariant I when complete state normal has Assertion <<M(normal)>> in its definition.
 
Theorem (23) [serial 1005] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_init, <<M(check_init)>> -> <<e1 or e2 or . . . en>>
 
Theorem (24) [serial 1006] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (37) [serial 1007] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_normal, <<M(check_normal)>> -> <<e1 or e2 or . . . en>>
 
Theorem (57) [serial 1008] used for:
   <<M(start)>> A <<M(init)>> for mmm1:start-[ ]->init{A};
 
Theorem (73) [serial 1009] used for:
   <<M(init) and x>> A <<M(check_init)>> for wait_init:init-[x]->check_init{A};
 
Theorem (128) [serial 1010] used for:
   <<M(check_init) and x>> A <<M(failed)>> for mmm:check_init-[x]->failed{A};
 
Theorem (164) [serial 1011] used for:
   <<M(check_init) and x>> A <<M(normal)>> for mmm2:check_init-[x]->normal{A};
 
Theorem (166) [serial 1012] used for:
   <<M(check_init) and x>> -> <<M(init)>> for mmm2x:check_init-[x]->init{};
 
Theorem (182) [serial 1013] used for:
   <<M(normal) and x>> A <<M(check_normal)>> for wait_normal:normal-[x]->check_normal{A};
 
Theorem (225) [serial 1014] used for:
   <<M(check_normal) and x>> A <<M(normal)>> for mmm3:check_normal-[x]->normal{A};
 
Theorem (260) [serial 1015] used for:
   <<M(check_normal) and x>> A <<M(failed)>> for mmm3x:check_normal-[x]->failed{A};
 


Theorem (262)                               [serial 1446] 
P [302] << alarm_control^-1 = alarm_previous_period >>
S [295] ->
Q [295] << alarm_control^-1 = alarm_previous_period >>
by Identity (id):  P->P is tautology


Theorem (263)                               [serial 1444] 
P [302] << ((alarm_previous_period = alarm_control^-1)) >>
S [295] ->
Q [295] << (alarm_previous_period = alarm_control^-1) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 262:
Theorem (262) [serial 1446] used for:
    normalization of [serial 1444]
 


Theorem (264)                               [serial 1017] 
P [302] << INVMA() >>
S [295] ->
Q [295] << (alarm_previous_period = alarm_control^-1) >>
by Substitution of Assertion Labels
and theorem 263:
Theorem (263) [serial 1444] used for:
  substituted Assertions' predicates for  labels  [serial 1017]
 


Theorem (265)                               [serial 1471] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << true >>
by True Conclusion Schema (tc): P->true


Theorem (266)                               [serial 1470] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << not CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
(UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP or 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 265:
Theorem (265) [serial 1471] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1470]
 


Theorem (267)                               [serial 1468] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << not CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or 
(UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0 or 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP^0) >>
by Assume Present:  P = P@now = P^0 
and theorem 266:
Theorem (266) [serial 1470] used for:
  Assume Present:  P = P@now = P^0  [serial 1468]
 


Theorem (268)                               [serial 1466] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << ((not CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or 
(UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0 or 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP^0))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 267:
Theorem (267) [serial 1468] used for:
    normalization of [serial 1466]
 


Theorem (269)                               [serial 1464] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << true and (not CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or 
(UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0 or 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP^0)) >>
by Law of And-Simplification:  P and true is P
and theorem 268:
Theorem (268) [serial 1466] used for:
  Law of And-Simplification:  P and true is P [serial 1464]
 


Theorem (270)                               [serial 1462] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << (true) and ((UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or not CURRENT_TEMP.t < (
0.5 + LOWER_ALARM_TEMP) or CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP^0) or 
UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 269:
Theorem (269) [serial 1464] used for:
    normalization of [serial 1462]
 


Theorem (271)                               [serial 1461] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << (true) and (true) and ((UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or 
not CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP) or CURRENT_TEMP.t < (0.5 + 
LOWER_ALARM_TEMP^0) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) >>
by Law of And-Simplification:  P and P is P
and theorem 270:
Theorem (270) [serial 1462] used for:
  Law of And-Simplification:  P and P is P [serial 1461]
 


Theorem (272)                               [serial 1460] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << (true) and (true) and (true) and (true) and ((UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or 
not CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP) or CURRENT_TEMP.t < (0.5 + 
LOWER_ALARM_TEMP^0) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) >>
by Law of And-Simplification:  P and P is P
and theorem 271:
Theorem (271) [serial 1461] used for:
  Law of And-Simplification:  P and P is P [serial 1460]
 


Theorem (273)                               [serial 1459] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << (true) and (true) and (true) and (true) and (true) and (true) and (true) and 
((UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or not CURRENT_TEMP.t < (0.5 + 
LOWER_ALARM_TEMP) or CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP^0) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) >>
by Law of And-Simplification:  P and P is P
and theorem 272:
Theorem (272) [serial 1460] used for:
  Law of And-Simplification:  P and P is P [serial 1459]
 


Theorem (274)                               [serial 1458] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << (not UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or not (UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or 
not CURRENT_TEMP.t < LOWER_ALARM_TEMP^0 or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) and ((UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or 
not (UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or not CURRENT_TEMP.t < LOWER_ALARM_TEMP^0 or 
UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) and 
(not UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or not CURRENT_TEMP.t < (0.5 + 
LOWER_ALARM_TEMP) or not CURRENT_TEMP.t < LOWER_ALARM_TEMP^0 or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) and ((UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or 
not CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP) or not CURRENT_TEMP.t < LOWER_ALARM_TEMP^0 or 
UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) and 
(not UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or not (UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP^0) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) and ((UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or 
not (UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or CURRENT_TEMP.t < (0.5 + 
LOWER_ALARM_TEMP^0) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) and 
(not UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or not CURRENT_TEMP.t < (0.5 + 
LOWER_ALARM_TEMP) or CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP^0) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) and ((UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t or 
not CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP) or CURRENT_TEMP.t < (0.5 + 
LOWER_ALARM_TEMP^0) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP^0) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 273:
Theorem (273) [serial 1459] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1458]
 


Theorem (275)                               [serial 1456] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << (not UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t and (UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t) or 
(not (UPPER_ALARM_TEMP^0 - 0.5) < CURRENT_TEMP.t and not CURRENT_TEMP.t < (
0.5 + LOWER_ALARM_TEMP)) or (not CURRENT_TEMP.t < LOWER_ALARM_TEMP^0 and 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP^0)) or UPPER_ALARM_TEMP^0 < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP^0 >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 274:
Theorem (274) [serial 1458] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 1456]
 


Theorem (276)                               [serial 1454] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << (not UPPER_ALARM_TEMP^0 < current_temperature.t and (UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t) or 
(not (UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t and not current_temperature.t < (
0.5 + lower_alarm_temperature)) or (not current_temperature.t < LOWER_ALARM_TEMP^0 and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or UPPER_ALARM_TEMP^0 < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP^0 >>
by Replacing port names with Assertions
and theorem 275:
Theorem (275) [serial 1456] used for:
  Replacing port names with Assertions [serial 1454]
 


Theorem (277)                               [serial 1452] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << ((not (current_temperature.t < LOWER_ALARM_TEMP^0)) and current_temperature.t < (
0.5 + LOWER_ALARM_TEMP^0)) or ((not (UPPER_ALARM_TEMP^0 < current_temperature.t)) and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t) or UPPER_ALARM_TEMP^0 < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP^0 or ((not (current_temperature.t < (
0.5 + lower_alarm_temperature))) and (not ((UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 276:
Theorem (276) [serial 1454] used for:
    normalization of [serial 1452]
 


Theorem (278)                               [serial 1451] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << ((not (current_temperature.t < (0.5 + lower_alarm_temperature))) and 
(not ((UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t))) or (((not (current_temperature.t < LOWER_ALARM_TEMP^0)) and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or ((not (UPPER_ALARM_TEMP^0 < current_temperature.t)) and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) or (UPPER_ALARM_TEMP^0 < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP^0) >>
by Associativity: (b.c).a = a.b.c
and theorem 277:
Theorem (277) [serial 1452] used for:
  Associativity: (b.c).a = a.b.c [serial 1451]
 


Theorem (279)                               [serial 1449] 
P [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [304] << ((0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP^0 - 0.5)) or 
((LOWER_ALARM_TEMP^0 <= current_temperature.t and current_temperature.t < (
0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) or (UPPER_ALARM_TEMP^0 < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP^0) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 278:
Theorem (278) [serial 1451] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1449]
 


Theorem (280)                               [serial 1018] 
P [304] << (INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON()) >>
S [304] ->
Q [304] << (((((current_temperature.t < (LOWER_ALARM_TEMP)^0))) or (((current_temperature.t > (UPPER_ALARM_TEMP)^0)))) or 
(((current_temperature.t >= (lower_alarm_temperature + 0.5))) and ((current_temperature.t <= ((UPPER_ALARM_TEMP)^0 - 0.5)))) or 
(((((current_temperature.t >= (LOWER_ALARM_TEMP)^0)) and ((current_temperature.t < (
(LOWER_ALARM_TEMP)^0 + 0.5))))) or ((((current_temperature.t > ((UPPER_ALARM_TEMP)^0 - 0.5))) and 
((current_temperature.t <= (UPPER_ALARM_TEMP)^0)))))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 279:
Theorem (279) [serial 1449] used for:
    normalization of [serial 1018]
 


Theorem (281)                               [serial 1019] 
P [301] << ((alarm_previous_period = Off) and (INVMA())^1) >>
S [301] ->
Q [301] << true >>
by True Conclusion Schema (tc): P->true


Theorem (282)                               [serial 1474] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [305] << O_n = alarm_previous_period or Off = alarm_previous_period >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (283)                               [serial 1472] 
P [305] << (((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (LOWER_ALARM_TEMP + 0.5)))) or 
(((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
(not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and ((alarm_previous_period = alarm_control^-1)) and 
((((alarm_previous_period = O_n))) or (((alarm_previous_period = Off))))) >>
S [305] ->
Q [305] << (((alarm_previous_period = O_n)) or ((alarm_previous_period = Off))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 282:
Theorem (282) [serial 1474] used for:
    normalization of [serial 1472]
 


Theorem (284)                               [serial 1020] 
P [305] << (EDGE_TEMP() and MONITOR_OK() and RUN() and INVMA() and AXIOM_OFFON()) >>
S [305] ->
Q [305] << (((alarm_previous_period = O_n)) or ((alarm_previous_period = Off))) >>
by Substitution of Assertion Labels
and theorem 283:
Theorem (283) [serial 1472] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1020]
 


Theorem (285)                               [serial 1507] 
P [303] << INVMA() >>
S [303] ->
Q [303] << true >>
by True Conclusion Schema (tc): P->true


Theorem (286)                               [serial 1505] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 285:
Theorem (285) [serial 1507] used for:
    normalization of [serial 1505]
 


Theorem (287)                               [serial 1504] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 286:
Theorem (286) [serial 1505] used for:
  Law of And-Simplification:  P and P is P [serial 1504]
 


Theorem (288)                               [serial 1503] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (not CURRENT_TEMPERATURE_STATUS = Valid or not (not INTERNAL_FAILURE and 
not MONITOR_INTERFACE_FAILURE) or CURRENT_TEMPERATURE_STATUS = Valid or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) and (not CURRENT_TEMPERATURE_STATUS = Valid or 
not (not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE) or (not INTERNAL_FAILURE and 
not MONITOR_INTERFACE_FAILURE) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 287:
Theorem (287) [serial 1504] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1503]
 


Theorem (289)                               [serial 1501] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (CURRENT_TEMPERATURE_STATUS = Valid or (not CURRENT_TEMPERATURE_STATUS = Valid or 
not (not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
((not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE) or (not CURRENT_TEMPERATURE_STATUS = Valid or 
not (not INTERNAL_FAILURE and not MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
by Associativity: (b.c).a = a.b.c
and theorem 288:
Theorem (288) [serial 1503] used for:
  Associativity: (b.c).a = a.b.c [serial 1501]
 


Theorem (290)                               [serial 1499] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (CURRENT_TEMPERATURE_STATUS = Valid or (not (CURRENT_TEMPERATURE_STATUS = Valid) or 
not ((not (INTERNAL_FAILURE) and not (MONITOR_INTERFACE_FAILURE)))) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
((not (CURRENT_TEMPERATURE_STATUS = Valid) or not ((not (INTERNAL_FAILURE) and 
not (MONITOR_INTERFACE_FAILURE)))) or (not (INTERNAL_FAILURE) and not (MONITOR_INTERFACE_FAILURE)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 289:
Theorem (289) [serial 1501] used for:
    normalization of [serial 1499]
 


Theorem (291)                               [serial 1498] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (CURRENT_TEMPERATURE_STATUS = Valid or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 290:
Theorem (290) [serial 1499] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1498]
 


Theorem (292)                               [serial 1496] 
P [303] << INVMA() >>
S [303] ->
Q [303] << true and (CURRENT_TEMPERATURE_STATUS = Valid or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and true is P
and theorem 291:
Theorem (291) [serial 1498] used for:
  Law of And-Simplification:  P and true is P [serial 1496]
 


Theorem (293)                               [serial 1494] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (CURRENT_TEMPERATURE_STATUS = Valid or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(true) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 292:
Theorem (292) [serial 1496] used for:
    normalization of [serial 1494]
 


Theorem (294)                               [serial 1493] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (CURRENT_TEMPERATURE_STATUS = Valid or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 293:
Theorem (293) [serial 1494] used for:
  Law of And-Simplification:  P and P is P [serial 1493]
 


Theorem (295)                               [serial 1492] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (CURRENT_TEMPERATURE_STATUS = Valid or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(true) and (true) and (true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 294:
Theorem (294) [serial 1493] used for:
  Law of And-Simplification:  P and P is P [serial 1492]
 


Theorem (296)                               [serial 1491] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (CURRENT_TEMPERATURE_STATUS = Valid or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(not (now - START_TIME) < #Iso_Properties::Initialization_Timeout or not (
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) and (CURRENT_TEMPERATURE_STATUS = Valid or 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) and 
(not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) or not (now - START_TIME) < #Iso_Properties::Initialization_Timeout or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) and (not (now - START_TIME) < #Iso_Properties::Initialization_Timeout or 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout or (now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 295:
Theorem (295) [serial 1492] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1491]
 


Theorem (297)                               [serial 1489] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout) or (not (
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 296:
Theorem (296) [serial 1491] used for:
  Distributing Postcondition Or-Over-And [serial 1489]
 


Theorem (298)                               [serial 1487] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout) or 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axiom:
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 297:
Theorem (297) [serial 1489] used for:
    normalization of [serial 1487]
 


Theorem (299)                               [serial 1485] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout) or 
(not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 298:
Theorem (298) [serial 1487] used for:
  Associativity: (b.c).a = a.b.c [serial 1485]
 


Theorem (300)                               [serial 1483] 
P [303] << INVMA() >>
S [303] ->
Q [303] << ((not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) or 
((not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 299:
Theorem (299) [serial 1485] used for:
    normalization of [serial 1483]
 


Theorem (301)                               [serial 1481] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and not (
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) or 
(#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE))) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 300:
Theorem (300) [serial 1483] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1481]
 


Theorem (302)                               [serial 1479] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) or (
(not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) or ((((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
not (not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid)))) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 301:
Theorem (301) [serial 1481] used for:
    normalization of [serial 1479]
 


Theorem (303)                               [serial 1477] 
P [303] << INVMA() >>
S [303] ->
Q [303] << INI() or (MONITOR_OK() and RUN()) or (RUN() and not MONITOR_OK()) >>
by Substitution of Assertion Labels
and theorem 302:
Theorem (302) [serial 1479] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1477]
 


Theorem (304)                               [serial 1021] 
P [303] << INVMA() >>
S [303] ->
Q [303] << (((not MONITOR_OK() and RUN())) or ((INI())) or ((MONITOR_OK() and RUN()))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 303:
Theorem (303) [serial 1477] used for:
    normalization of [serial 1021]
 


Theorem (305)                               [serial 1022] 
P [301] << ((alarm_previous_period = Off) and (INVMA())^1) >>
S [308] ->
Q [302] << (INVMA())^1 >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (306)                               [serial 1023] 
P [302] << INVMA() >>
S [309] ->
Q [303] << INVMA() >>
by Identity (id):  P->P is tautology


Theorem (307)                               [serial 1545] 
P [305] << INVMA() and RUN() and not MONITOR_OK() >>
S [303] ->
Q [312] << RUN() and not MONITOR_OK() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (308)                               [serial 1542] 
P [305] << RUN() and not MONITOR_OK() and INVMA() >>
S [303] ->
Q [312] << RUN() and not MONITOR_OK() >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 307:
Theorem (307) [serial 1545] used for:
    normalization of [serial 1542]
 


Theorem (309)                               [serial 1537] 
P [305] << INVMA() and (RUN() and not MONITOR_OK()) >>
S [303] ->
Q [312] << RUN() and not MONITOR_OK() >>
by Associativity: (b.c).a = a.b.c
and theorem 308:
Theorem (308) [serial 1542] used for:
  Associativity: (b.c).a = a.b.c [serial 1537]
 


Theorem (310)                               [serial 1534] 
P [305] << INVMA() and (RUN() and not MONITOR_OK()) >>
S [303] ->
Q [312] << (not MONITOR_OK() and RUN()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 309:
Theorem (309) [serial 1537] used for:
    normalization of [serial 1534]
 


Theorem (311)                               [serial 1520] 
P [305] << INVMA() and (RUN() and not MONITOR_OK()) >>
S [303] ->
Q [312] << REQMA5() >>
by Substitution of Assertion Labels
and theorem 310:
Theorem (310) [serial 1534] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1520]
 


Theorem (312)                               [serial 1509] 
P [305] << ((INVMA()) and ((not MONITOR_OK() and RUN()))) >>
S [303] ->
Q [312] << REQMA5() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 311:
Theorem (311) [serial 1520] used for:
    normalization of [serial 1509]
 


Theorem (313)                               [serial 1550] 
P [316] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_previous_period^1 = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (314)                               [serial 1547] 
P [316] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control^0 = alarm_previous_period^1 >>
by Assume Present:  P = P@now = P^0 
and theorem 313:
Theorem (313) [serial 1550] used for:
  Assume Present:  P = P@now = P^0  [serial 1547]
 


Theorem (315)                               [serial 1543] 
P [316] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (alarm_control^(-1+1) = (alarm_previous_period)^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 314:
Theorem (314) [serial 1547] used for:
    normalization of [serial 1543]
 


Theorem (316)                               [serial 1539] 
P [316] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (alarm_control^-1 = alarm_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 315:
Theorem (315) [serial 1543] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1539]
 


Theorem (317)                               [serial 1535] 
P [316] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (((alarm_previous_period = alarm_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 316:
Theorem (316) [serial 1539] used for:
    normalization of [serial 1535]
 


Theorem (318)                               [serial 1526] 
P [316] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Substitution of Assertion Labels
and theorem 317:
Theorem (317) [serial 1535] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1526]
 


Theorem (319)                               [serial 1516] 
P [316] << ((alarm_previous_period)^1 = alarm_control) >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 318:
Theorem (318) [serial 1526] used for:
    normalization of [serial 1516]
 


Theorem (320)                               [serial 1510] 
P [316] << (alarm_previous_period' = alarm_control) >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 319:
Theorem (319) [serial 1516] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1510]
 


Theorem (321)                               [serial 1522] 
P [312] << REQMA5() >>
S [313] ->
Q [36] << REQMA2() or REQMA5() or (ALARM_CONTROL^-1 = O_n and REQMA3()) >>
by Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (322)                               [serial 1513] 
P [312] << REQMA5() >>
S [313] ->
Q [36] << (REQMA2()) or (REQMA5()) or ((REQMA3() and ((ALARM_CONTROL^-1 = O_n)))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 321:
Theorem (321) [serial 1522] used for:
    normalization of [serial 1513]
 


Theorem (323)                               [serial 1528] 
P [313] << O_n = alarm_control and REQMA5() >>
S [313] ->
Q [314] << O_n = alarm_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (324)                               [serial 1518] 
P [313] << (REQMA5()) and ((alarm_control) = (O_n)) >>
S [313] ->
Q [314] << (alarm_control = O_n) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 323:
Theorem (323) [serial 1528] used for:
    normalization of [serial 1518]
 


Theorem (325)                               [serial 1517] 
P [313] << (REQMA5()) and ((alarm_control)^0 = (O_n)^0) >>
S [313] ->
Q [314] << (alarm_control = O_n) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 324:
Theorem (324) [serial 1518] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1517]
 


Theorem (326)                               [serial 1514] 
P [313] << (REQMA5()) and (alarm_control = O_n)^0 >>
S [313] ->
Q [314] << (alarm_control = O_n) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 325:
Theorem (325) [serial 1517] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1514]
 


Theorem (327)                               [serial 1511] 
P [312] << REQMA5() >>
S [313] alarm_control!(O_n)
Q [314] << (alarm_control = O_n) >>
by Enumeration Type Port Output 
and theorems 322 326:
Theorem (322) [serial 1513] used for:
  applied port output of enumeration type  alarm_control!(O_n) [serial 1511]
 
Theorem (326) [serial 1514] used for:
  applied port output <<pre and (alarm_control=O_n)^0>> -> <<post>> [serial 1511]
 


Theorem (328)                               [serial 1524] 
P [314] << O_n = alarm_control >>
S [315] ->
Q [316] << O_n = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (329)                               [serial 1515] 
P [314] << (alarm_control = O_n) >>
S [315] ->
Q [316] << (O_n = alarm_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 328:
Theorem (328) [serial 1524] used for:
    normalization of [serial 1515]
 


Theorem (330)                               [serial 1512] 
P [314] << (alarm_control = O_n) >>
S [315] alarm_previous_period' := O_n
Q [316] << (alarm_previous_period' = alarm_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 329:
Theorem (329) [serial 1515] used for:
  applied wp for assignment [serial 1512]
 


Theorem (331)                               [serial 1024] 
P [303] << ((INVMA()) and ((not MONITOR_OK() and RUN()))) >>
S [312] << REQMA5() >>
alarm_control!(O_n)
;
<< (alarm_control = O_n) >>
alarm_previous_period' := O_n
<< (alarm_previous_period' = alarm_control) >>
Q [302] << (INVMA())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 312 320 327 330:
Theorem (312) [serial 1509] used for:
  P -> P1 in sequential composition for [serial 1024]
 
Theorem (320) [serial 1510] used for:
  Q1 -> Q in sequential composition for [serial 1024]
 
Theorem (327) [serial 1511] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1024]
 
Theorem (330) [serial 1512] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1024]
 


Theorem (332)                               [serial 1596] 
P [305] << alarm_control^-1 = alarm_previous_period and (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
S [303] ->
Q [320] << (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (333)                               [serial 1594] 
P [305] << (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
((alarm_previous_period = alarm_control^-1)) >>
S [303] ->
Q [320] << (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 332:
Theorem (332) [serial 1596] used for:
    normalization of [serial 1594]
 


Theorem (334)                               [serial 1577] 
P [305] << INI() and INVMA() >>
S [303] ->
Q [320] << (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Substitution of Assertion Labels
and theorem 333:
Theorem (333) [serial 1594] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1577]
 


Theorem (335)                               [serial 1574] 
P [305] << INI() and INVMA() >>
S [303] ->
Q [320] << (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 334:
Theorem (334) [serial 1577] used for:
    normalization of [serial 1574]
 


Theorem (336)                               [serial 1559] 
P [305] << INI() and INVMA() >>
S [303] ->
Q [320] << REQMA1() >>
by Substitution of Assertion Labels
and theorem 335:
Theorem (335) [serial 1574] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1559]
 


Theorem (337)                               [serial 1551] 
P [305] << ((INVMA()) and ((INI()))) >>
S [303] ->
Q [320] << REQMA1() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 336:
Theorem (336) [serial 1559] used for:
    normalization of [serial 1551]
 


Theorem (338)                               [serial 1590] 
P [324] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_previous_period^1 = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (339)                               [serial 1587] 
P [324] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control = alarm_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 338:
Theorem (338) [serial 1590] used for:
    normalization of [serial 1587]
 


Theorem (340)                               [serial 1585] 
P [324] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control^0 = alarm_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 339:
Theorem (339) [serial 1587] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1585]
 


Theorem (341)                               [serial 1582] 
P [324] << alarm_control = (alarm_previous_period)^1 >>
S [302] ->
Q [305] << (alarm_control^(-1+1) = (alarm_previous_period)^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 340:
Theorem (340) [serial 1585] used for:
    normalization of [serial 1582]
 


Theorem (342)                               [serial 1579] 
P [324] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (alarm_control^-1 = alarm_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 341:
Theorem (341) [serial 1582] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1579]
 


Theorem (343)                               [serial 1575] 
P [324] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (((alarm_previous_period = alarm_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 342:
Theorem (342) [serial 1579] used for:
    normalization of [serial 1575]
 


Theorem (344)                               [serial 1561] 
P [324] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Substitution of Assertion Labels
and theorem 343:
Theorem (343) [serial 1575] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1561]
 


Theorem (345)                               [serial 1552] 
P [324] << (alarm_previous_period' = alarm_control) >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 344:
Theorem (344) [serial 1561] used for:
    normalization of [serial 1552]
 


Theorem (346)                               [serial 1563] 
P [320] << REQMA1() >>
S [321] ->
Q [39] << REQMA1() or REQMA4() or (ALARM_CONTROL^-1 = Off and REQMA3()) >>
by Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (347)                               [serial 1555] 
P [320] << REQMA1() >>
S [321] ->
Q [39] << (REQMA1()) or (REQMA4()) or ((REQMA3() and ((ALARM_CONTROL^-1 = Off)))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 346:
Theorem (346) [serial 1563] used for:
    normalization of [serial 1555]
 


Theorem (348)                               [serial 1573] 
P [321] << Off = alarm_control and REQMA1() >>
S [321] ->
Q [322] << Off = alarm_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (349)                               [serial 1565] 
P [321] << (Off = alarm_control)^0 and REQMA1() >>
S [321] ->
Q [322] << Off = alarm_control >>
by Assume Present:  P = P@now = P^0 
and theorem 348:
Theorem (348) [serial 1573] used for:
  Assume Present:  P = P@now = P^0  [serial 1565]
 


Theorem (350)                               [serial 1556] 
P [321] << (REQMA1()) and (alarm_control = Off)^0 >>
S [321] ->
Q [322] << (alarm_control = Off) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 349:
Theorem (349) [serial 1565] used for:
    normalization of [serial 1556]
 


Theorem (351)                               [serial 1553] 
P [320] << REQMA1() >>
S [321] alarm_control!(Off)
Q [322] << (alarm_control = Off) >>
by Enumeration Type Port Output 
and theorems 347 350:
Theorem (347) [serial 1555] used for:
  applied port output of enumeration type  alarm_control!(Off) [serial 1553]
 
Theorem (350) [serial 1556] used for:
  applied port output <<pre and (alarm_control=Off)^0>> -> <<post>> [serial 1553]
 


Theorem (352)                               [serial 1567] 
P [322] << Off = alarm_control >>
S [323] ->
Q [324] << Off = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (353)                               [serial 1557] 
P [322] << (alarm_control = Off) >>
S [323] ->
Q [324] << (Off = alarm_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 352:
Theorem (352) [serial 1567] used for:
    normalization of [serial 1557]
 


Theorem (354)                               [serial 1554] 
P [322] << (alarm_control = Off) >>
S [323] alarm_previous_period' := Off
Q [324] << (alarm_previous_period' = alarm_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 353:
Theorem (353) [serial 1557] used for:
  applied wp for assignment [serial 1554]
 


Theorem (355)                               [serial 1025] 
P [303] << ((INVMA()) and ((INI()))) >>
S [320] << REQMA1() >>
alarm_control!(Off)
;
<< (alarm_control = Off) >>
alarm_previous_period' := Off
<< (alarm_previous_period' = alarm_control) >>
Q [302] << (INVMA())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 337 345 351 354:
Theorem (337) [serial 1551] used for:
  P -> P1 in sequential composition for [serial 1025]
 
Theorem (345) [serial 1552] used for:
  Q1 -> Q in sequential composition for [serial 1025]
 
Theorem (351) [serial 1553] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1025]
 
Theorem (354) [serial 1554] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1025]
 


Theorem (356)                               [serial 1604] 
P [303] << MONITOR_OK() and RUN() and INVMA() >>
S [326] ->
Q [304] << INVMA() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (357)                               [serial 1605] 
P [303] << MONITOR_OK() and RUN() and INVMA() >>
S [326] ->
Q [304] << MONITOR_OK() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (358)                               [serial 1606] 
P [303] << MONITOR_OK() and RUN() and INVMA() >>
S [326] ->
Q [304] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (359)                               [serial 1603] 
P [303] << MONITOR_OK() and RUN() and INVMA() >>
S [326] ->
Q [304] << INVMA() and MONITOR_OK() and RUN() >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 356 357 358:
Theorem (356) [serial 1604] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1603]
 
Theorem (357) [serial 1605] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1603]
 
Theorem (358) [serial 1606] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1603]
 


Theorem (360)                               [serial 1602] 
P [303] << INVMA() and (MONITOR_OK() and RUN()) >>
S [326] ->
Q [304] << INVMA() and MONITOR_OK() and RUN() >>
by Associativity: (b.c).a = a.b.c
and theorem 359:
Theorem (359) [serial 1603] used for:
  Associativity: (b.c).a = a.b.c [serial 1602]
 


Theorem (361)                               [serial 1601] 
P [303] << INVMA() and (MONITOR_OK() and RUN()) >>
S [326] ->
Q [304] << true and INVMA() and MONITOR_OK() and RUN() >>
by Law of And-Simplification:  P and true is P
and theorem 360:
Theorem (360) [serial 1602] used for:
  Law of And-Simplification:  P and true is P [serial 1601]
 


Theorem (362)                               [serial 1604] 
P [303] << MONITOR_OK() and RUN() and INVMA() >>
S [326] ->
Q [304] << INVMA() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (363)                               [serial 1605] 
P [303] << MONITOR_OK() and RUN() and INVMA() >>
S [326] ->
Q [304] << MONITOR_OK() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (364)                               [serial 1606] 
P [303] << MONITOR_OK() and RUN() and INVMA() >>
S [326] ->
Q [304] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (365)                               [serial 1603] 
P [303] << MONITOR_OK() and RUN() and INVMA() >>
S [326] ->
Q [304] << INVMA() and MONITOR_OK() and RUN() >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 362 363 364:
Theorem (362) [serial 1604] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1603]
 
Theorem (363) [serial 1605] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1603]
 
Theorem (364) [serial 1606] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1603]
 


Theorem (366)                               [serial 1602] 
P [303] << INVMA() and (MONITOR_OK() and RUN()) >>
S [326] ->
Q [304] << INVMA() and MONITOR_OK() and RUN() >>
by Associativity: (b.c).a = a.b.c
and theorem 365:
Theorem (365) [serial 1603] used for:
  Associativity: (b.c).a = a.b.c [serial 1602]
 


Theorem (367)                               [serial 1601] 
P [303] << INVMA() and (MONITOR_OK() and RUN()) >>
S [326] ->
Q [304] << true and INVMA() and MONITOR_OK() and RUN() >>
by Law of And-Simplification:  P and true is P
and theorem 366:
Theorem (366) [serial 1602] used for:
  Law of And-Simplification:  P and true is P [serial 1601]
 


Theorem (368)                               [serial 1599] 
P [303] << INVMA() and (MONITOR_OK() and RUN()) >>
S [326] ->
Q [304] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 367 367:
Theorem (367) [serial 1601] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (367) [serial 1601] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (369)                               [serial 1026] 
P [303] << ((INVMA()) and ((MONITOR_OK() and RUN()))) >>
S [326] ->
Q [304] << (INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 368:
Theorem (368) [serial 1599] used for:
    normalization of [serial 1026]
 


Theorem (370)                               [serial 1673] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [48] << MONITOR_OK() and RUN() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (371)                               [serial 1670] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [48] << (MONITOR_OK() and RUN()) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 370:
Theorem (370) [serial 1673] used for:
    normalization of [serial 1670]
 


Theorem (372)                               [serial 1667] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [48] << MONITOR_MODE(x:Normal) >>
by Substitution of Assertion Labels
and theorem 371:
Theorem (371) [serial 1670] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1667]
 


Theorem (373)                               [serial 1664] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [48] << MONITOR_MODE(x:Normal) >>
by Replacing port names with Assertions
and theorem 372:
Theorem (372) [serial 1667] used for:
  Replacing port names with Assertions [serial 1664]
 


Theorem (374)                               [serial 1681] 
P [305] << alarm_control^-1 = alarm_previous_period and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [331] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (375)                               [serial 1679] 
P [305] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
alarm_control^-1 = alarm_previous_period and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [331] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 374:
Theorem (374) [serial 1681] used for:
    normalization of [serial 1679]
 


Theorem (376)                               [serial 1677] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [331] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 375:
Theorem (375) [serial 1679] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1677]
 


Theorem (377)                               [serial 1675] 
P [305] << ((((alarm_previous_period = O_n))) or (((alarm_previous_period = Off)))) and 
((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
(UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [331] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 376:
Theorem (376) [serial 1677] used for:
    normalization of [serial 1675]
 


Theorem (378)                               [serial 1668] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [331] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Substitution of Assertion Labels
and theorem 377:
Theorem (377) [serial 1675] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1668]
 


Theorem (379)                               [serial 1665] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [331] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Replacing port names with Assertions
and theorem 378:
Theorem (378) [serial 1668] used for:
  Replacing port names with Assertions [serial 1665]
 


Theorem (380)                               [serial 1669] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [49] << (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (381)                               [serial 1666] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [49] << (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
by Replacing port names with Assertions
and theorem 380:
Theorem (380) [serial 1669] used for:
  Replacing port names with Assertions [serial 1666]
 


Theorem (382)                               [serial 1649] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP) >>
S [304] ->
Q [305] << MONITOR_MODE(x:Normal) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 373 379 381:
Theorem (373) [serial 1664] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1649]
 
Theorem (379) [serial 1665] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1649]
 
Theorem (381) [serial 1666] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1649]
 


Theorem (383)                               [serial 1644] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP^0 < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP^0) >>
S [304] ->
Q [305] << MONITOR_MODE(x:Normal) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 382:
Theorem (382) [serial 1649] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1644]
 


Theorem (384)                               [serial 1639] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP^0 < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP^0) >>
S [304] ->
Q [305] << MONITOR_MODE(x:Normal) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 383:
Theorem (383) [serial 1644] used for:
    normalization of [serial 1639]
 


Theorem (385)                               [serial 1633] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP^0 < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP^0) >>
S [304] ->
Q [305] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(MONITOR_MODE(x:Normal) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 384:
Theorem (384) [serial 1639] used for:
  Associativity: (b.c).a = a.b.c [serial 1633]
 


Theorem (386)                               [serial 1629] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP^0 < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP^0) >>
S [304] ->
Q [305] << (MONITOR_MODE(x:Normal) and (((CURRENT_TEMP.t < LOWER_ALARM_TEMP)) or 
((CURRENT_TEMP.t > UPPER_ALARM_TEMP)))) and not (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 385:
Theorem (385) [serial 1633] used for:
    normalization of [serial 1629]
 


Theorem (387)                               [serial 1615] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and (UPPER_ALARM_TEMP^0 < current_temperature.t or 
current_temperature.t < LOWER_ALARM_TEMP^0) >>
S [304] ->
Q [305] << REQMA2() and not REQMA1() >>
by Substitution of Assertion Labels
and theorem 386:
Theorem (386) [serial 1629] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1615]
 


Theorem (388)                               [serial 1607] 
P [305] << (INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON() and ((((current_temperature.t < (LOWER_ALARM_TEMP)^0))) or 
(((current_temperature.t > (UPPER_ALARM_TEMP)^0))))) >>
S [304] ->
Q [305] << (REQMA2() and not REQMA1()) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 387:
Theorem (387) [serial 1615] used for:
    normalization of [serial 1607]
 


Theorem (389)                               [serial 1661] 
P [335] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_previous_period^1 = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (390)                               [serial 1657] 
P [335] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control = alarm_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 389:
Theorem (389) [serial 1661] used for:
    normalization of [serial 1657]
 


Theorem (391)                               [serial 1651] 
P [335] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control^0 = alarm_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 390:
Theorem (390) [serial 1657] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1651]
 


Theorem (392)                               [serial 1647] 
P [335] << alarm_control = (alarm_previous_period)^1 >>
S [302] ->
Q [305] << (alarm_control^(-1+1) = (alarm_previous_period)^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 391:
Theorem (391) [serial 1651] used for:
    normalization of [serial 1647]
 


Theorem (393)                               [serial 1635] 
P [335] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (alarm_control^-1 = alarm_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 392:
Theorem (392) [serial 1647] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1635]
 


Theorem (394)                               [serial 1630] 
P [335] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (((alarm_previous_period = alarm_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 393:
Theorem (393) [serial 1635] used for:
    normalization of [serial 1630]
 


Theorem (395)                               [serial 1617] 
P [335] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Substitution of Assertion Labels
and theorem 394:
Theorem (394) [serial 1630] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1617]
 


Theorem (396)                               [serial 1608] 
P [335] << (alarm_previous_period' = alarm_control) >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 395:
Theorem (395) [serial 1617] used for:
    normalization of [serial 1608]
 


Theorem (397)                               [serial 1619] 
P [305] << REQMA2() and not REQMA1() >>
S [332] ->
Q [36] << REQMA2() or REQMA5() or (ALARM_CONTROL^-1 = O_n and REQMA3()) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (398)                               [serial 1611] 
P [305] << (REQMA2() and not REQMA1()) >>
S [332] ->
Q [36] << (REQMA2()) or (REQMA5()) or ((REQMA3() and ((ALARM_CONTROL^-1 = O_n)))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 397:
Theorem (397) [serial 1619] used for:
    normalization of [serial 1611]
 


Theorem (399)                               [serial 1658] 
P [332] << O_n = alarm_control and REQMA2() and not REQMA1() >>
S [332] ->
Q [333] << O_n = alarm_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (400)                               [serial 1653] 
P [332] << O_n^0 = alarm_control^0 and REQMA2() and not REQMA1() >>
S [332] ->
Q [333] << O_n = alarm_control >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 399:
Theorem (399) [serial 1658] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1653]
 


Theorem (401)                               [serial 1648] 
P [332] << ((O_n)^0 = (alarm_control)^0) and REQMA2() and not REQMA1() >>
S [332] ->
Q [333] << O_n = alarm_control >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 400:
Theorem (400) [serial 1653] used for:
    normalization of [serial 1648]
 


Theorem (402)                               [serial 1642] 
P [332] << (O_n = alarm_control)^0 and REQMA2() and not REQMA1() >>
S [332] ->
Q [333] << O_n = alarm_control >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 401:
Theorem (401) [serial 1648] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1642]
 


Theorem (403)                               [serial 1638] 
P [332] << REQMA2() and not REQMA1() and (O_n = alarm_control)^0 >>
S [332] ->
Q [333] << O_n = alarm_control >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 402:
Theorem (402) [serial 1642] used for:
    normalization of [serial 1638]
 


Theorem (404)                               [serial 1621] 
P [332] << (O_n = alarm_control)^0 and (REQMA2() and not REQMA1()) >>
S [332] ->
Q [333] << O_n = alarm_control >>
by Associativity: (b.c).a = a.b.c
and theorem 403:
Theorem (403) [serial 1638] used for:
  Associativity: (b.c).a = a.b.c [serial 1621]
 


Theorem (405)                               [serial 1612] 
P [332] << ((REQMA2() and not REQMA1())) and (alarm_control = O_n)^0 >>
S [332] ->
Q [333] << (alarm_control = O_n) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 404:
Theorem (404) [serial 1621] used for:
    normalization of [serial 1612]
 


Theorem (406)                               [serial 1609] 
P [305] << (REQMA2() and not REQMA1()) >>
S [332] alarm_control!(O_n)
Q [333] << (alarm_control = O_n) >>
by Enumeration Type Port Output 
and theorems 398 405:
Theorem (398) [serial 1611] used for:
  applied port output of enumeration type  alarm_control!(O_n) [serial 1609]
 
Theorem (405) [serial 1612] used for:
  applied port output <<pre and (alarm_control=O_n)^0>> -> <<post>> [serial 1609]
 


Theorem (407)                               [serial 1623] 
P [333] << O_n = alarm_control >>
S [334] ->
Q [335] << O_n = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (408)                               [serial 1613] 
P [333] << (alarm_control = O_n) >>
S [334] ->
Q [335] << (O_n = alarm_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 407:
Theorem (407) [serial 1623] used for:
    normalization of [serial 1613]
 


Theorem (409)                               [serial 1610] 
P [333] << (alarm_control = O_n) >>
S [334] alarm_previous_period' := O_n
Q [335] << (alarm_previous_period' = alarm_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 408:
Theorem (408) [serial 1613] used for:
  applied wp for assignment [serial 1610]
 


Theorem (410)                               [serial 1027] 
P [304] << (INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON() and ((((current_temperature.t < (LOWER_ALARM_TEMP)^0))) or 
(((current_temperature.t > (UPPER_ALARM_TEMP)^0))))) >>
S [331] << (REQMA2() and not REQMA1()) >>
alarm_control!(O_n)
;
<< (alarm_control = O_n) >>
alarm_previous_period' := O_n
<< (alarm_previous_period' = alarm_control) >>
Q [302] << (INVMA())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 388 396 406 409:
Theorem (388) [serial 1607] used for:
  P -> P1 in sequential composition for [serial 1027]
 
Theorem (396) [serial 1608] used for:
  Q1 -> Q in sequential composition for [serial 1027]
 
Theorem (406) [serial 1609] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1027]
 
Theorem (409) [serial 1610] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1027]
 


Theorem (411)                               [serial 1748] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [62] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (412)                               [serial 1746] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [62] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) >>
by Associativity: (b.c).a = a.b.c
and theorem 411:
Theorem (411) [serial 1748] used for:
  Associativity: (b.c).a = a.b.c [serial 1746]
 


Theorem (413)                               [serial 1744] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [62] << ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 412:
Theorem (412) [serial 1746] used for:
    normalization of [serial 1744]
 


Theorem (414)                               [serial 1743] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [62] << (MONITOR_OK() and RUN()) >>
by Substitution of Assertion Labels
and theorem 413:
Theorem (413) [serial 1744] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1743]
 


Theorem (415)                               [serial 1735] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [62] << MONITOR_MODE(x:Normal) >>
by Substitution of Assertion Labels
and theorem 414:
Theorem (414) [serial 1743] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1735]
 


Theorem (416)                               [serial 1751] 
P [305] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and not (UPPER_ALARM_TEMP - 0.5) < current_temperature.t and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and not current_temperature.t < (
0.5 + lower_alarm_temperature) and (O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [340] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (417)                               [serial 1749] 
P [305] << (not (current_temperature.t < (0.5 + lower_alarm_temperature))) and (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(not ((UPPER_ALARM_TEMP - 0.5) < current_temperature.t)) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [340] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 416:
Theorem (416) [serial 1751] used for:
    normalization of [serial 1749]
 


Theorem (418)                               [serial 1736] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [340] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 417:
Theorem (417) [serial 1749] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1736]
 


Theorem (419)                               [serial 1756] 
P [305] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [63] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (420)                               [serial 1754] 
P [305] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [63] << (0.5 + LOWER_ALARM_TEMP) <= (CURRENT_TEMP.t) and (CURRENT_TEMP.t) <= (UPPER_ALARM_TEMP - 0.5) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 419:
Theorem (419) [serial 1756] used for:
    normalization of [serial 1754]
 


Theorem (421)                               [serial 1753] 
P [305] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [63] << CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5 >>
by Replace expression with range:   a<=x and x<=b  iff  x in a..b
and theorem 420:
Theorem (420) [serial 1754] used for:
  Replace expression with range:   a<=x and x<=b  iff  x in a..b [serial 1753]
 


Theorem (422)                               [serial 1741] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [63] << CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5 >>
by Replacing port names with Assertions
and theorem 421:
Theorem (421) [serial 1753] used for:
  Replacing port names with Assertions [serial 1741]
 


Theorem (423)                               [serial 1737] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [63] << (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 422:
Theorem (422) [serial 1741] used for:
    normalization of [serial 1737]
 


Theorem (424)                               [serial 1733] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [305] << MONITOR_MODE(x:Normal) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 415 418 423:
Theorem (415) [serial 1735] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1733]
 
Theorem (418) [serial 1736] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1733]
 
Theorem (423) [serial 1737] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1733]
 


Theorem (425)                               [serial 1731] 
P [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [305] << MONITOR_MODE(x:Normal) and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 424:
Theorem (424) [serial 1733] used for:
    normalization of [serial 1731]
 


Theorem (426)                               [serial 1729] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [305] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(MONITOR_MODE(x:Normal) and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Associativity: (b.c).a = a.b.c
and theorem 425:
Theorem (425) [serial 1731] used for:
  Associativity: (b.c).a = a.b.c [serial 1729]
 


Theorem (427)                               [serial 1727] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
((((alarm_previous_period = O_n))) or (((alarm_previous_period = Off)))) and 
((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [304] ->
Q [305] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(MONITOR_MODE(x:Normal) and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 426:
Theorem (426) [serial 1729] used for:
    normalization of [serial 1727]
 


Theorem (428)                               [serial 1718] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [305] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(MONITOR_MODE(x:Normal) and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Substitution of Assertion Labels
and theorem 427:
Theorem (427) [serial 1727] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1718]
 


Theorem (429)                               [serial 1714] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [305] << (MONITOR_MODE(x:Normal) and ((CURRENT_TEMP.t in (LOWER_ALARM_TEMP + 0.5) .. (UPPER_ALARM_TEMP - 0.5)))) and 
not (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 428:
Theorem (428) [serial 1718] used for:
    normalization of [serial 1714]
 


Theorem (430)                               [serial 1711] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [305] << REQMA4() and not REQMA1() >>
by Substitution of Assertion Labels
and theorem 429:
Theorem (429) [serial 1714] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1711]
 


Theorem (431)                               [serial 1709] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and ((0.5 + lower_alarm_temperature) <= current_temperature.t and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5)) >>
S [304] ->
Q [305] << REQMA4() and not REQMA1() >>
by Associativity: (b.c).a = a.b.c
and theorem 430:
Theorem (430) [serial 1711] used for:
  Associativity: (b.c).a = a.b.c [serial 1709]
 


Theorem (432)                               [serial 1707] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and ((0.5 + lower_alarm_temperature) <= current_temperature.t and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5)) >>
S [304] ->
Q [305] << REQMA4() and not REQMA1() and true >>
by Law of And-Simplification:  P and true is P
and theorem 431:
Theorem (431) [serial 1709] used for:
  Law of And-Simplification:  P and true is P [serial 1707]
 


Theorem (433)                               [serial 1705] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and ((0.5 + lower_alarm_temperature) <= current_temperature.t and 
current_temperature.t <= (UPPER_ALARM_TEMP^0 - 0.5)) >>
S [304] ->
Q [305] << true and REQMA4() and not REQMA1() >>
by Assume Present:  P = P@now = P^0 
and theorem 432:
Theorem (432) [serial 1707] used for:
  Assume Present:  P = P@now = P^0  [serial 1705]
 


Theorem (434)                               [serial 1748] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [62] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (435)                               [serial 1746] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [62] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) >>
by Associativity: (b.c).a = a.b.c
and theorem 434:
Theorem (434) [serial 1748] used for:
  Associativity: (b.c).a = a.b.c [serial 1746]
 


Theorem (436)                               [serial 1744] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [62] << ((not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 435:
Theorem (435) [serial 1746] used for:
    normalization of [serial 1744]
 


Theorem (437)                               [serial 1743] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [62] << (MONITOR_OK() and RUN()) >>
by Substitution of Assertion Labels
and theorem 436:
Theorem (436) [serial 1744] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1743]
 


Theorem (438)                               [serial 1735] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [62] << MONITOR_MODE(x:Normal) >>
by Substitution of Assertion Labels
and theorem 437:
Theorem (437) [serial 1743] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1735]
 


Theorem (439)                               [serial 1751] 
P [305] << alarm_control^-1 = alarm_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and not (UPPER_ALARM_TEMP - 0.5) < current_temperature.t and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and not current_temperature.t < (
0.5 + lower_alarm_temperature) and (O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [340] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (440)                               [serial 1749] 
P [305] << (not (current_temperature.t < (0.5 + lower_alarm_temperature))) and (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(not ((UPPER_ALARM_TEMP - 0.5) < current_temperature.t)) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [340] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 439:
Theorem (439) [serial 1751] used for:
    normalization of [serial 1749]
 


Theorem (441)                               [serial 1736] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [340] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 440:
Theorem (440) [serial 1749] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1736]
 


Theorem (442)                               [serial 1756] 
P [305] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [63] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (443)                               [serial 1754] 
P [305] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [63] << (0.5 + LOWER_ALARM_TEMP) <= (CURRENT_TEMP.t) and (CURRENT_TEMP.t) <= (UPPER_ALARM_TEMP - 0.5) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 442:
Theorem (442) [serial 1756] used for:
    normalization of [serial 1754]
 


Theorem (444)                               [serial 1753] 
P [305] << (0.5 + LOWER_ALARM_TEMP) <= CURRENT_TEMP.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
CURRENT_TEMP.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [63] << CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5 >>
by Replace expression with range:   a<=x and x<=b  iff  x in a..b
and theorem 443:
Theorem (443) [serial 1754] used for:
  Replace expression with range:   a<=x and x<=b  iff  x in a..b [serial 1753]
 


Theorem (445)                               [serial 1741] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [63] << CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5 >>
by Replacing port names with Assertions
and theorem 444:
Theorem (444) [serial 1753] used for:
  Replacing port names with Assertions [serial 1741]
 


Theorem (446)                               [serial 1737] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [63] << (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 445:
Theorem (445) [serial 1741] used for:
    normalization of [serial 1737]
 


Theorem (447)                               [serial 1733] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [305] << MONITOR_MODE(x:Normal) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 438 441 446:
Theorem (438) [serial 1735] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1733]
 
Theorem (441) [serial 1736] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1733]
 
Theorem (446) [serial 1737] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1733]
 


Theorem (448)                               [serial 1731] 
P [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [305] << MONITOR_MODE(x:Normal) and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 447:
Theorem (447) [serial 1733] used for:
    normalization of [serial 1731]
 


Theorem (449)                               [serial 1729] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) >>
S [304] ->
Q [305] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(MONITOR_MODE(x:Normal) and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Associativity: (b.c).a = a.b.c
and theorem 448:
Theorem (448) [serial 1731] used for:
  Associativity: (b.c).a = a.b.c [serial 1729]
 


Theorem (450)                               [serial 1727] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
((((alarm_previous_period = O_n))) or (((alarm_previous_period = Off)))) and 
((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [304] ->
Q [305] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(MONITOR_MODE(x:Normal) and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 449:
Theorem (449) [serial 1729] used for:
    normalization of [serial 1727]
 


Theorem (451)                               [serial 1718] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [305] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(MONITOR_MODE(x:Normal) and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) >>
by Substitution of Assertion Labels
and theorem 450:
Theorem (450) [serial 1727] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1718]
 


Theorem (452)                               [serial 1714] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [305] << (MONITOR_MODE(x:Normal) and ((CURRENT_TEMP.t in (LOWER_ALARM_TEMP + 0.5) .. (UPPER_ALARM_TEMP - 0.5)))) and 
not (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 451:
Theorem (451) [serial 1718] used for:
    normalization of [serial 1714]
 


Theorem (453)                               [serial 1711] 
P [305] << (0.5 + lower_alarm_temperature) <= current_temperature.t and current_temperature.t <= (UPPER_ALARM_TEMP - 0.5) and 
AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() >>
S [304] ->
Q [305] << REQMA4() and not REQMA1() >>
by Substitution of Assertion Labels
and theorem 452:
Theorem (452) [serial 1714] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1711]
 


Theorem (454)                               [serial 1709] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and ((0.5 + lower_alarm_temperature) <= current_temperature.t and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5)) >>
S [304] ->
Q [305] << REQMA4() and not REQMA1() >>
by Associativity: (b.c).a = a.b.c
and theorem 453:
Theorem (453) [serial 1711] used for:
  Associativity: (b.c).a = a.b.c [serial 1709]
 


Theorem (455)                               [serial 1707] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and ((0.5 + lower_alarm_temperature) <= current_temperature.t and 
current_temperature.t <= (UPPER_ALARM_TEMP - 0.5)) >>
S [304] ->
Q [305] << REQMA4() and not REQMA1() and true >>
by Law of And-Simplification:  P and true is P
and theorem 454:
Theorem (454) [serial 1709] used for:
  Law of And-Simplification:  P and true is P [serial 1707]
 


Theorem (456)                               [serial 1705] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and ((0.5 + lower_alarm_temperature) <= current_temperature.t and 
current_temperature.t <= (UPPER_ALARM_TEMP^0 - 0.5)) >>
S [304] ->
Q [305] << true and REQMA4() and not REQMA1() >>
by Assume Present:  P = P@now = P^0 
and theorem 455:
Theorem (455) [serial 1707] used for:
  Assume Present:  P = P@now = P^0  [serial 1705]
 


Theorem (457)                               [serial 1691] 
P [305] << AXIOM_OFFON() and INVMA() and MONITOR_OK() and RUN() and ((0.5 + lower_alarm_temperature) <= current_temperature.t and 
current_temperature.t <= (UPPER_ALARM_TEMP^0 - 0.5)) >>
S [304] ->
Q [305] << AXIOM_AR() and REQMA4() and not REQMA1() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 456 456:
Theorem (456) [serial 1705] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (456) [serial 1705] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (458)                               [serial 1683] 
P [305] << (INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON() and (((current_temperature.t >= (
lower_alarm_temperature + 0.5))) and ((current_temperature.t <= ((UPPER_ALARM_TEMP)^0 - 0.5))))) >>
S [304] ->
Q [305] << (REQMA4() and not REQMA1() and AXIOM_AR()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 457:
Theorem (457) [serial 1691] used for:
    normalization of [serial 1683]
 


Theorem (459)                               [serial 1726] 
P [344] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_previous_period^1 = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (460)                               [serial 1724] 
P [344] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control^0 = alarm_previous_period^1 >>
by Assume Present:  P = P@now = P^0 
and theorem 459:
Theorem (459) [serial 1726] used for:
  Assume Present:  P = P@now = P^0  [serial 1724]
 


Theorem (461)                               [serial 1721] 
P [344] << alarm_control = (alarm_previous_period)^1 >>
S [302] ->
Q [305] << (alarm_control^(-1+1) = (alarm_previous_period)^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 460:
Theorem (460) [serial 1724] used for:
    normalization of [serial 1721]
 


Theorem (462)                               [serial 1716] 
P [344] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (alarm_control^-1 = alarm_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 461:
Theorem (461) [serial 1721] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1716]
 


Theorem (463)                               [serial 1713] 
P [344] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (((alarm_previous_period = alarm_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 462:
Theorem (462) [serial 1716] used for:
    normalization of [serial 1713]
 


Theorem (464)                               [serial 1693] 
P [344] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Substitution of Assertion Labels
and theorem 463:
Theorem (463) [serial 1713] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1693]
 


Theorem (465)                               [serial 1684] 
P [344] << (alarm_previous_period' = alarm_control) >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 464:
Theorem (464) [serial 1693] used for:
    normalization of [serial 1684]
 


Theorem (466)                               [serial 1695] 
P [305] << AXIOM_AR() and REQMA4() and not REQMA1() >>
S [341] ->
Q [39] << REQMA1() or REQMA4() or (ALARM_CONTROL^-1 = Off and REQMA3()) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (467)                               [serial 1687] 
P [305] << (REQMA4() and not REQMA1() and AXIOM_AR()) >>
S [341] ->
Q [39] << (REQMA1()) or (REQMA4()) or ((REQMA3() and ((ALARM_CONTROL^-1 = Off)))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 466:
Theorem (466) [serial 1695] used for:
    normalization of [serial 1687]
 


Theorem (468)                               [serial 1712] 
P [341] << AXIOM_AR() and REQMA4() and not REQMA1() and Off = alarm_control >>
S [341] ->
Q [305] << Off = alarm_control and REQMA4() and not REQMA1() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (469)                               [serial 1710] 
P [341] << Off = alarm_control and (AXIOM_AR() and REQMA4() and not REQMA1()) >>
S [341] ->
Q [305] << Off = alarm_control and REQMA4() and not REQMA1() >>
by Associativity: (b.c).a = a.b.c
and theorem 468:
Theorem (468) [serial 1712] used for:
  Associativity: (b.c).a = a.b.c [serial 1710]
 


Theorem (470)                               [serial 1708] 
P [341] << Off = alarm_control and (AXIOM_AR() and REQMA4() and not REQMA1()) >>
S [341] ->
Q [305] << Off = alarm_control and REQMA4() and not REQMA1() and true >>
by Law of And-Simplification:  P and true is P
and theorem 469:
Theorem (469) [serial 1710] used for:
  Law of And-Simplification:  P and true is P [serial 1708]
 


Theorem (471)                               [serial 1706] 
P [341] << (Off = alarm_control)^0 and (AXIOM_AR() and REQMA4() and not REQMA1()) >>
S [341] ->
Q [305] << Off = alarm_control and true and REQMA4() and not REQMA1() >>
by Assume Present:  P = P@now = P^0 
and theorem 470:
Theorem (470) [serial 1708] used for:
  Assume Present:  P = P@now = P^0  [serial 1706]
 


Theorem (472)                               [serial 1712] 
P [341] << AXIOM_AR() and REQMA4() and not REQMA1() and Off = alarm_control >>
S [341] ->
Q [305] << Off = alarm_control and REQMA4() and not REQMA1() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (473)                               [serial 1710] 
P [341] << Off = alarm_control and (AXIOM_AR() and REQMA4() and not REQMA1()) >>
S [341] ->
Q [305] << Off = alarm_control and REQMA4() and not REQMA1() >>
by Associativity: (b.c).a = a.b.c
and theorem 472:
Theorem (472) [serial 1712] used for:
  Associativity: (b.c).a = a.b.c [serial 1710]
 


Theorem (474)                               [serial 1708] 
P [341] << Off = alarm_control and (AXIOM_AR() and REQMA4() and not REQMA1()) >>
S [341] ->
Q [305] << Off = alarm_control and REQMA4() and not REQMA1() and true >>
by Law of And-Simplification:  P and true is P
and theorem 473:
Theorem (473) [serial 1710] used for:
  Law of And-Simplification:  P and true is P [serial 1708]
 


Theorem (475)                               [serial 1706] 
P [341] << (Off = alarm_control)^0 and (AXIOM_AR() and REQMA4() and not REQMA1()) >>
S [341] ->
Q [305] << Off = alarm_control and true and REQMA4() and not REQMA1() >>
by Assume Present:  P = P@now = P^0 
and theorem 474:
Theorem (474) [serial 1708] used for:
  Assume Present:  P = P@now = P^0  [serial 1706]
 


Theorem (476)                               [serial 1697] 
P [341] << (Off = alarm_control)^0 and (AXIOM_AR() and REQMA4() and not REQMA1()) >>
S [341] ->
Q [305] << Off = alarm_control and AXIOM_AR() and REQMA4() and not REQMA1() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 475 475:
Theorem (475) [serial 1706] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (475) [serial 1706] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (477)                               [serial 1688] 
P [341] << ((REQMA4() and not REQMA1() and AXIOM_AR())) and (alarm_control = Off)^0 >>
S [341] ->
Q [305] << (REQMA4() and not REQMA1() and AXIOM_AR() and ((alarm_control = Off))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 476:
Theorem (476) [serial 1697] used for:
    normalization of [serial 1688]
 


Theorem (478)                               [serial 1685] 
P [305] << (REQMA4() and not REQMA1() and AXIOM_AR()) >>
S [341] alarm_control!(Off)
Q [305] << (REQMA4() and not REQMA1() and AXIOM_AR() and ((alarm_control = Off))) >>
by Enumeration Type Port Output 
and theorems 467 477:
Theorem (467) [serial 1687] used for:
  applied port output of enumeration type  alarm_control!(Off) [serial 1685]
 
Theorem (477) [serial 1688] used for:
  applied port output <<pre and (alarm_control=Off)^0>> -> <<post>> [serial 1685]
 


Theorem (479)                               [serial 1699] 
P [305] << Off = alarm_control and AXIOM_AR() and REQMA4() and not REQMA1() >>
S [343] ->
Q [344] << Off = alarm_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (480)                               [serial 1689] 
P [305] << (REQMA4() and not REQMA1() and AXIOM_AR() and ((alarm_control = Off))) >>
S [343] ->
Q [344] << (Off = alarm_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 479:
Theorem (479) [serial 1699] used for:
    normalization of [serial 1689]
 


Theorem (481)                               [serial 1686] 
P [305] << (REQMA4() and not REQMA1() and AXIOM_AR() and ((alarm_control = Off))) >>
S [343] alarm_previous_period' := Off
Q [344] << (alarm_previous_period' = alarm_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 480:
Theorem (480) [serial 1689] used for:
  applied wp for assignment [serial 1686]
 


Theorem (482)                               [serial 1028] 
P [304] << (INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON() and (((current_temperature.t >= (
lower_alarm_temperature + 0.5))) and ((current_temperature.t <= ((UPPER_ALARM_TEMP)^0 - 0.5))))) >>
S [340] << (REQMA4() and not REQMA1() and AXIOM_AR()) >>
alarm_control!(Off)
;
<< (REQMA4() and not REQMA1() and AXIOM_AR() and ((alarm_control = Off))) >>
alarm_previous_period' := Off
<< (alarm_previous_period' = alarm_control) >>
Q [302] << (INVMA())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 458 465 478 481:
Theorem (458) [serial 1683] used for:
  P -> P1 in sequential composition for [serial 1028]
 
Theorem (465) [serial 1684] used for:
  Q1 -> Q in sequential composition for [serial 1028]
 
Theorem (478) [serial 1685] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1028]
 
Theorem (481) [serial 1686] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1028]
 


Theorem (483)                               [serial 1772] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or (CURRENT_TEMP.t <= UPPER_ALARM_TEMP and 
(UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (484)                               [serial 1770] 
P [304] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or (CURRENT_TEMP.t <= UPPER_ALARM_TEMP and 
(UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
S [346] ->
Q [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 483:
Theorem (483) [serial 1772] used for:
    normalization of [serial 1770]
 


Theorem (485)                               [serial 1769] 
P [304] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP)) or (current_temperature.t <= UPPER_ALARM_TEMP and 
(UPPER_ALARM_TEMP - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Replacing port names with Assertions
and theorem 484:
Theorem (484) [serial 1770] used for:
  Replacing port names with Assertions [serial 1769]
 


Theorem (486)                               [serial 1768] 
P [304] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 485:
Theorem (485) [serial 1769] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1768]
 


Theorem (487)                               [serial 1767] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Associativity: (b.c).a = a.b.c
and theorem 486:
Theorem (486) [serial 1768] used for:
  Associativity: (b.c).a = a.b.c [serial 1767]
 


Theorem (488)                               [serial 1765] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
true and (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and ((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or (CURRENT_TEMP.t <= UPPER_ALARM_TEMP and 
(UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Law of And-Simplification:  P and true is P
and theorem 487:
Theorem (487) [serial 1767] used for:
  Law of And-Simplification:  P and true is P [serial 1765]
 


Theorem (489)                               [serial 1763] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
true and (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and (((UPPER_ALARM_TEMP - 0.5) < (CURRENT_TEMP.t) and 
(CURRENT_TEMP.t) <= UPPER_ALARM_TEMP) or (LOWER_ALARM_TEMP <= (CURRENT_TEMP.t) and 
(CURRENT_TEMP.t) < (0.5 + LOWER_ALARM_TEMP))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 488:
Theorem (488) [serial 1765] used for:
    normalization of [serial 1763]
 


Theorem (490)                               [serial 1761] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
true and (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Replace expression with range:  a<=x and x<b  iff  x in a.,b
and theorem 489:
Theorem (489) [serial 1763] used for:
  Replace expression with range:  a<=x and x<b  iff  x in a.,b [serial 1761]
 


Theorem (491)                               [serial 1759] 
P [304] << (((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
((((alarm_previous_period = O_n))) or (((alarm_previous_period = Off)))) and 
(((((current_temperature.t >= (LOWER_ALARM_TEMP)^0)) and ((current_temperature.t < (
(LOWER_ALARM_TEMP)^0 + 0.5))))) or ((((current_temperature.t > ((UPPER_ALARM_TEMP)^0 - 0.5))) and 
((current_temperature.t <= (UPPER_ALARM_TEMP)^0)))))) >>
S [346] ->
Q [305] << (((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (LOWER_ALARM_TEMP + 0.5)))) or 
(((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
(not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and ((alarm_previous_period = alarm_control^-1)) and 
true) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 490:
Theorem (490) [serial 1761] used for:
    normalization of [serial 1759]
 


Theorem (492)                               [serial 1758] 
P [304] << (INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON() and (((((current_temperature.t >= (LOWER_ALARM_TEMP)^0)) and 
((current_temperature.t < ((LOWER_ALARM_TEMP)^0 + 0.5))))) or ((((current_temperature.t > ((UPPER_ALARM_TEMP)^0 - 0.5))) and 
((current_temperature.t <= (UPPER_ALARM_TEMP)^0)))))) >>
S [346] ->
Q [305] << (EDGE_TEMP() and MONITOR_OK() and RUN() and INVMA() and true) >>
by Substitution of Assertion Labels
and theorem 491:
Theorem (491) [serial 1759] used for:
  substituted Assertions' predicates for  labels  [serial 1758]
 


Theorem (493)                               [serial 1772] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or (CURRENT_TEMP.t <= UPPER_ALARM_TEMP and 
(UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (494)                               [serial 1770] 
P [304] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or (CURRENT_TEMP.t <= UPPER_ALARM_TEMP and 
(UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
S [346] ->
Q [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 493:
Theorem (493) [serial 1772] used for:
    normalization of [serial 1770]
 


Theorem (495)                               [serial 1769] 
P [304] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP)) or (current_temperature.t <= UPPER_ALARM_TEMP and 
(UPPER_ALARM_TEMP - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Replacing port names with Assertions
and theorem 494:
Theorem (494) [serial 1770] used for:
  Replacing port names with Assertions [serial 1769]
 


Theorem (496)                               [serial 1768] 
P [304] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 495:
Theorem (495) [serial 1769] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1768]
 


Theorem (497)                               [serial 1767] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or 
(CURRENT_TEMP.t <= UPPER_ALARM_TEMP and (UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Associativity: (b.c).a = a.b.c
and theorem 496:
Theorem (496) [serial 1768] used for:
  Associativity: (b.c).a = a.b.c [serial 1767]
 


Theorem (498)                               [serial 1765] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
true and (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and ((LOWER_ALARM_TEMP <= CURRENT_TEMP.t and 
CURRENT_TEMP.t < (0.5 + LOWER_ALARM_TEMP)) or (CURRENT_TEMP.t <= UPPER_ALARM_TEMP and 
(UPPER_ALARM_TEMP - 0.5) < CURRENT_TEMP.t)) >>
by Law of And-Simplification:  P and true is P
and theorem 497:
Theorem (497) [serial 1767] used for:
  Law of And-Simplification:  P and true is P [serial 1765]
 


Theorem (499)                               [serial 1763] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
true and (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and (((UPPER_ALARM_TEMP - 0.5) < (CURRENT_TEMP.t) and 
(CURRENT_TEMP.t) <= UPPER_ALARM_TEMP) or (LOWER_ALARM_TEMP <= (CURRENT_TEMP.t) and 
(CURRENT_TEMP.t) < (0.5 + LOWER_ALARM_TEMP))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 498:
Theorem (498) [serial 1765] used for:
    normalization of [serial 1763]
 


Theorem (500)                               [serial 1761] 
P [304] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and 
(O_n = alarm_previous_period or Off = alarm_previous_period) and ((LOWER_ALARM_TEMP^0 <= current_temperature.t and 
current_temperature.t < (0.5 + LOWER_ALARM_TEMP^0)) or (current_temperature.t <= UPPER_ALARM_TEMP^0 and 
(UPPER_ALARM_TEMP^0 - 0.5) < current_temperature.t)) >>
S [346] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
true and (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
MONITOR_INTERFACE_FAILURE)) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Replace expression with range:  a<=x and x<b  iff  x in a.,b
and theorem 499:
Theorem (499) [serial 1763] used for:
  Replace expression with range:  a<=x and x<b  iff  x in a.,b [serial 1761]
 


Theorem (501)                               [serial 1759] 
P [304] << (((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
((((alarm_previous_period = O_n))) or (((alarm_previous_period = Off)))) and 
(((((current_temperature.t >= (LOWER_ALARM_TEMP)^0)) and ((current_temperature.t < (
(LOWER_ALARM_TEMP)^0 + 0.5))))) or ((((current_temperature.t > ((UPPER_ALARM_TEMP)^0 - 0.5))) and 
((current_temperature.t <= (UPPER_ALARM_TEMP)^0)))))) >>
S [346] ->
Q [305] << (((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (LOWER_ALARM_TEMP + 0.5)))) or 
(((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
(not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and ((alarm_previous_period = alarm_control^-1)) and 
true) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 500:
Theorem (500) [serial 1761] used for:
    normalization of [serial 1759]
 


Theorem (502)                               [serial 1758] 
P [304] << (INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON() and (((((current_temperature.t >= (LOWER_ALARM_TEMP)^0)) and 
((current_temperature.t < ((LOWER_ALARM_TEMP)^0 + 0.5))))) or ((((current_temperature.t > ((UPPER_ALARM_TEMP)^0 - 0.5))) and 
((current_temperature.t <= (UPPER_ALARM_TEMP)^0)))))) >>
S [346] ->
Q [305] << (EDGE_TEMP() and MONITOR_OK() and RUN() and INVMA() and true) >>
by Substitution of Assertion Labels
and theorem 501:
Theorem (501) [serial 1759] used for:
  substituted Assertions' predicates for  labels  [serial 1758]
 


Theorem (503)                               [serial 1029] 
P [304] << (INVMA() and MONITOR_OK() and RUN() and AXIOM_OFFON() and (((((current_temperature.t >= (LOWER_ALARM_TEMP)^0)) and 
((current_temperature.t < ((LOWER_ALARM_TEMP)^0 + 0.5))))) or ((((current_temperature.t > ((UPPER_ALARM_TEMP)^0 - 0.5))) and 
((current_temperature.t <= (UPPER_ALARM_TEMP)^0)))))) >>
S [346] ->
Q [305] << (EDGE_TEMP() and MONITOR_OK() and RUN() and INVMA() and AXIOM_OFFON()) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 502 502:
Theorem (502) [serial 1758] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (502) [serial 1758] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (504)                               [serial 1932] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [295] << alarm_control^-1 = alarm_previous_period >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (505)                               [serial 1933] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [354] << O_n = alarm_previous_period >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (506)                               [serial 1947] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [79] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (507)                               [serial 1944] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [79] << (not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 506:
Theorem (506) [serial 1947] used for:
    normalization of [serial 1944]
 


Theorem (508)                               [serial 1934] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [79] << MONITOR_OK() >>
by Substitution of Assertion Labels
and theorem 507:
Theorem (507) [serial 1944] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1934]
 


Theorem (509)                               [serial 1949] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [79] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (510)                               [serial 1945] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [79] << (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 509:
Theorem (509) [serial 1949] used for:
    normalization of [serial 1945]
 


Theorem (511)                               [serial 1935] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [79] << RUN() >>
by Substitution of Assertion Labels
and theorem 510:
Theorem (510) [serial 1945] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1935]
 


Theorem (512)                               [serial 1942] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [293] << (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (513)                               [serial 1936] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [293] << ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 512:
Theorem (512) [serial 1942] used for:
    normalization of [serial 1936]
 


Theorem (514)                               [serial 1930] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [305] << alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 504 505 508 511 513:
Theorem (504) [serial 1932] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1930]
 
Theorem (505) [serial 1933] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1930]
 
Theorem (508) [serial 1934] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1930]
 
Theorem (511) [serial 1935] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1930]
 
Theorem (513) [serial 1936] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1930]
 


Theorem (515)                               [serial 1928] 
P [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (O_n = alarm_previous_period or Off = alarm_previous_period) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [305] << MONITOR_OK() and RUN() and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 514:
Theorem (514) [serial 1930] used for:
    normalization of [serial 1928]
 


Theorem (516)                               [serial 1927] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [305] << alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
(MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 515:
Theorem (515) [serial 1928] used for:
  Associativity: (b.c).a = a.b.c [serial 1927]
 


Theorem (517)                               [serial 1925] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [305] << alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
true and (MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Law of And-Simplification:  P and true is P
and theorem 516:
Theorem (516) [serial 1927] used for:
  Law of And-Simplification:  P and true is P [serial 1925]
 


Theorem (518)                               [serial 1923] 
P [305] << O_n = alarm_previous_period and ((((alarm_previous_period = O_n))) or 
(((alarm_previous_period = Off)))) and ((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (
LOWER_ALARM_TEMP + 0.5)))) or (((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [305] ->
Q [305] << alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
true and (MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 517:
Theorem (517) [serial 1925] used for:
    normalization of [serial 1923]
 


Theorem (519)                               [serial 1816] 
P [305] << O_n = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [305] << alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
true and (MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Substitution of Assertion Labels
and theorem 518:
Theorem (518) [serial 1923] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1816]
 


Theorem (520)                               [serial 1810] 
P [305] << O_n = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [305] << O_n = alarm_previous_period and true and ((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (
LOWER_ALARM_TEMP + 0.5)))) or (((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
((alarm_previous_period = alarm_control^-1)) and (MONITOR_OK() and RUN()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 519:
Theorem (519) [serial 1816] used for:
    normalization of [serial 1810]
 


Theorem (521)                               [serial 1807] 
P [305] << O_n = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [305] << O_n = alarm_previous_period and true and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
by Substitution of Assertion Labels
and theorem 520:
Theorem (520) [serial 1810] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1807]
 


Theorem (522)                               [serial 1932] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [295] << alarm_control^-1 = alarm_previous_period >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (523)                               [serial 1933] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [354] << O_n = alarm_previous_period >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (524)                               [serial 1947] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [79] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (525)                               [serial 1944] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [79] << (not (MONITOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 524:
Theorem (524) [serial 1947] used for:
    normalization of [serial 1944]
 


Theorem (526)                               [serial 1934] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [79] << MONITOR_OK() >>
by Substitution of Assertion Labels
and theorem 525:
Theorem (525) [serial 1944] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1934]
 


Theorem (527)                               [serial 1949] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [79] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (528)                               [serial 1945] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [79] << (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 527:
Theorem (527) [serial 1949] used for:
    normalization of [serial 1945]
 


Theorem (529)                               [serial 1935] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [79] << RUN() >>
by Substitution of Assertion Labels
and theorem 528:
Theorem (528) [serial 1945] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1935]
 


Theorem (530)                               [serial 1942] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [293] << (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (531)                               [serial 1936] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [293] << ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 530:
Theorem (530) [serial 1942] used for:
    normalization of [serial 1936]
 


Theorem (532)                               [serial 1930] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = alarm_previous_period and not (
INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [305] << alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 522 523 526 529 531:
Theorem (522) [serial 1932] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1930]
 
Theorem (523) [serial 1933] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1930]
 
Theorem (526) [serial 1934] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1930]
 
Theorem (529) [serial 1935] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1930]
 
Theorem (531) [serial 1936] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1930]
 


Theorem (533)                               [serial 1928] 
P [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (O_n = alarm_previous_period or Off = alarm_previous_period) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [305] << MONITOR_OK() and RUN() and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 532:
Theorem (532) [serial 1930] used for:
    normalization of [serial 1928]
 


Theorem (534)                               [serial 1927] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [305] << alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
(MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 533:
Theorem (533) [serial 1928] used for:
  Associativity: (b.c).a = a.b.c [serial 1927]
 


Theorem (535)                               [serial 1925] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or MONITOR_INTERFACE_FAILURE)) and (O_n = alarm_previous_period or 
Off = alarm_previous_period) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [305] ->
Q [305] << alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
true and (MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Law of And-Simplification:  P and true is P
and theorem 534:
Theorem (534) [serial 1927] used for:
  Law of And-Simplification:  P and true is P [serial 1925]
 


Theorem (536)                               [serial 1923] 
P [305] << O_n = alarm_previous_period and ((((alarm_previous_period = O_n))) or 
(((alarm_previous_period = Off)))) and ((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (
LOWER_ALARM_TEMP + 0.5)))) or (((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
((alarm_previous_period = alarm_control^-1)) and (not (MONITOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [305] ->
Q [305] << alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
true and (MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 535:
Theorem (535) [serial 1925] used for:
    normalization of [serial 1923]
 


Theorem (537)                               [serial 1816] 
P [305] << O_n = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [305] << alarm_control^-1 = alarm_previous_period and O_n = alarm_previous_period and 
true and (MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Substitution of Assertion Labels
and theorem 536:
Theorem (536) [serial 1923] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1816]
 


Theorem (538)                               [serial 1810] 
P [305] << O_n = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [305] << O_n = alarm_previous_period and true and ((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (
LOWER_ALARM_TEMP + 0.5)))) or (((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
((alarm_previous_period = alarm_control^-1)) and (MONITOR_OK() and RUN()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 537:
Theorem (537) [serial 1816] used for:
    normalization of [serial 1810]
 


Theorem (539)                               [serial 1807] 
P [305] << O_n = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [305] << O_n = alarm_previous_period and true and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
by Substitution of Assertion Labels
and theorem 538:
Theorem (538) [serial 1810] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1807]
 


Theorem (540)                               [serial 1782] 
P [305] << O_n = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 539 539:
Theorem (539) [serial 1807] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (539) [serial 1807] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (541)                               [serial 1774] 
P [305] << (EDGE_TEMP() and MONITOR_OK() and RUN() and INVMA() and AXIOM_OFFON() and 
((alarm_previous_period = O_n))) >>
S [305] ->
Q [305] << (EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = O_n)) and 
INVMA()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 540:
Theorem (540) [serial 1782] used for:
    normalization of [serial 1774]
 


Theorem (542)                               [serial 1830] 
P [358] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_previous_period^1 = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (543)                               [serial 1826] 
P [358] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control = alarm_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 542:
Theorem (542) [serial 1830] used for:
    normalization of [serial 1826]
 


Theorem (544)                               [serial 1824] 
P [358] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control^0 = alarm_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 543:
Theorem (543) [serial 1826] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1824]
 


Theorem (545)                               [serial 1820] 
P [358] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (alarm_control^(-1+1) = (alarm_previous_period)^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 544:
Theorem (544) [serial 1824] used for:
    normalization of [serial 1820]
 


Theorem (546)                               [serial 1814] 
P [358] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (alarm_control^-1 = alarm_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 545:
Theorem (545) [serial 1820] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1814]
 


Theorem (547)                               [serial 1809] 
P [358] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (((alarm_previous_period = alarm_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 546:
Theorem (546) [serial 1814] used for:
    normalization of [serial 1809]
 


Theorem (548)                               [serial 1802] 
P [358] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Substitution of Assertion Labels
and theorem 547:
Theorem (547) [serial 1809] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1802]
 


Theorem (549)                               [serial 1796] 
P [358] << alarm_control = (alarm_previous_period)^1 >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 548:
Theorem (548) [serial 1802] used for:
    normalization of [serial 1796]
 


Theorem (550)                               [serial 1784] 
P [358] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 549:
Theorem (549) [serial 1796] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1784]
 


Theorem (551)                               [serial 1775] 
P [358] << (alarm_previous_period' = alarm_control) >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 550:
Theorem (550) [serial 1784] used for:
    normalization of [serial 1775]
 


Theorem (552)                               [serial 1858] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << ALARM_CONTROL^-1 = O_n or MONITOR_MODE(x:Normal) or RUN() >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (553)                               [serial 1845] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (ALARM_CONTROL^-1 = O_n or MONITOR_MODE(x:Normal) or RUN()) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 552:
Theorem (552) [serial 1858] used for:
    normalization of [serial 1845]
 


Theorem (554)                               [serial 1860] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << ALARM_CONTROL^-1 = O_n or MONITOR_MODE(x:Normal) or not MONITOR_OK() >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (555)                               [serial 1846] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (ALARM_CONTROL^-1 = O_n or MONITOR_MODE(x:Normal) or not MONITOR_OK()) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 554:
Theorem (554) [serial 1860] used for:
    normalization of [serial 1846]
 


Theorem (556)                               [serial 1899] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << ALARM_CONTROL^-1 = O_n or RUN() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (557)                               [serial 1897] 
P [305] << MONITOR_OK() and RUN() and ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << ALARM_CONTROL^-1 = O_n or RUN() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 556:
Theorem (556) [serial 1899] used for:
    normalization of [serial 1897]
 


Theorem (558)                               [serial 1895] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << ALARM_CONTROL^-1 = O_n or RUN() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by Associativity: (b.c).a = a.b.c
and theorem 557:
Theorem (557) [serial 1897] used for:
  Associativity: (b.c).a = a.b.c [serial 1895]
 


Theorem (559)                               [serial 1893] 
P [305] << O_n = alarm_previous_period and ((ALARM_CONTROL^-1 = alarm_control^-1)) and 
((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (LOWER_ALARM_TEMP + 0.5)))) or 
(((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
((alarm_previous_period = alarm_control^-1)) and (MONITOR_OK() and RUN()) >>
S [355] ->
Q [36] << ALARM_CONTROL^-1 = O_n or RUN() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 558:
Theorem (558) [serial 1895] used for:
    normalization of [serial 1893]
 


Theorem (560)                               [serial 1862] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << ALARM_CONTROL^-1 = O_n or RUN() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by Substitution of Assertion Labels
and theorem 559:
Theorem (559) [serial 1893] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1862]
 


Theorem (561)                               [serial 1847] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (ALARM_CONTROL^-1 = O_n or RUN() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 560:
Theorem (560) [serial 1862] used for:
    normalization of [serial 1847]
 


Theorem (562)                               [serial 1912] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) and ALARM_CONTROL^-1 = alarm_previous_period and 
ALARM_CONTROL^-1 = alarm_previous_period and O_n = alarm_control^-1 and 
alarm_control^-1 = O_n >>
S [355] ->
Q [36] << ALARM_CONTROL^-1 = alarm_previous_period or not MONITOR_OK() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (563)                               [serial 1911] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << ALARM_CONTROL^-1 = alarm_previous_period or not MONITOR_OK() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by Remove Equivalent Term: P(a) and P(b) and a=b is P(a) and a=b
and theorem 562:
Theorem (562) [serial 1912] used for:
  Remove Equivalent Term: P(a) and P(b) and a=b is P(a) and a=b [serial 1911]
 


Theorem (564)                               [serial 1910] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << ALARM_CONTROL^-1 = O_n or not MONITOR_OK() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by Guided Substitution of Equals
and theorem 563:
Theorem (563) [serial 1911] used for:
  Guided Substitution of Equals
 replacing "O_n" with its = "alarm_previous_period" in its postcondition [serial 1910]
 


Theorem (565)                               [serial 1909] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << ALARM_CONTROL^-1 = alarm_previous_period or not MONITOR_OK() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by Guided Substitution of Equals
and theorem 564:
Theorem (564) [serial 1910] used for:
  Guided Substitution of Equals
 replacing "alarm_previous_period" with its = "O_n" in its postcondition [serial 1909]
 


Theorem (566)                               [serial 1907] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << ALARM_CONTROL^-1 = O_n or not MONITOR_OK() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by Guided Substitution of Equals
and theorem 565:
Theorem (565) [serial 1909] used for:
  Guided Substitution of Equals
 replacing "O_n" with its = "alarm_previous_period" in its postcondition [serial 1907]
 


Theorem (567)                               [serial 1905] 
P [305] << MONITOR_OK() and RUN() and ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << ALARM_CONTROL^-1 = O_n or not MONITOR_OK() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 566:
Theorem (566) [serial 1907] used for:
    normalization of [serial 1905]
 


Theorem (568)                               [serial 1903] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << ALARM_CONTROL^-1 = O_n or not MONITOR_OK() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by Associativity: (b.c).a = a.b.c
and theorem 567:
Theorem (567) [serial 1905] used for:
  Associativity: (b.c).a = a.b.c [serial 1903]
 


Theorem (569)                               [serial 1901] 
P [305] << O_n = alarm_previous_period and ((ALARM_CONTROL^-1 = alarm_control^-1)) and 
((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (LOWER_ALARM_TEMP + 0.5)))) or 
(((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
((alarm_previous_period = alarm_control^-1)) and (MONITOR_OK() and RUN()) >>
S [355] ->
Q [36] << ALARM_CONTROL^-1 = O_n or not MONITOR_OK() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 568:
Theorem (568) [serial 1903] used for:
    normalization of [serial 1901]
 


Theorem (570)                               [serial 1864] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << ALARM_CONTROL^-1 = O_n or not MONITOR_OK() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by Substitution of Assertion Labels
and theorem 569:
Theorem (569) [serial 1901] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1864]
 


Theorem (571)                               [serial 1848] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (ALARM_CONTROL^-1 = O_n or not MONITOR_OK() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 570:
Theorem (570) [serial 1864] used for:
    normalization of [serial 1848]
 


Theorem (572)                               [serial 1866] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << MONITOR_MODE(x:Normal) or RUN() >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (573)                               [serial 1849] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (MONITOR_MODE(x:Normal) or RUN()) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 572:
Theorem (572) [serial 1866] used for:
    normalization of [serial 1849]
 


Theorem (574)                               [serial 1868] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << MONITOR_MODE(x:Normal) or RUN() or (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (575)                               [serial 1850] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (MONITOR_MODE(x:Normal) or RUN() or (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 574:
Theorem (574) [serial 1868] used for:
    normalization of [serial 1850]
 


Theorem (576)                               [serial 1870] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << MONITOR_MODE(x:Normal) or RUN() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (577)                               [serial 1851] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (MONITOR_MODE(x:Normal) or RUN() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 576:
Theorem (576) [serial 1870] used for:
    normalization of [serial 1851]
 


Theorem (578)                               [serial 1872] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << MONITOR_MODE(x:Normal) or not MONITOR_OK() >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (579)                               [serial 1852] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (MONITOR_MODE(x:Normal) or not MONITOR_OK()) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 578:
Theorem (578) [serial 1872] used for:
    normalization of [serial 1852]
 


Theorem (580)                               [serial 1874] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << MONITOR_MODE(x:Normal) or not MONITOR_OK() or (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (581)                               [serial 1853] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (MONITOR_MODE(x:Normal) or not MONITOR_OK() or (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 580:
Theorem (580) [serial 1874] used for:
    normalization of [serial 1853]
 


Theorem (582)                               [serial 1876] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << MONITOR_MODE(x:Normal) or not MONITOR_OK() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (583)                               [serial 1854] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (MONITOR_MODE(x:Normal) or not MONITOR_OK() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 582:
Theorem (582) [serial 1876] used for:
    normalization of [serial 1854]
 


Theorem (584)                               [serial 1917] 
P [305] << MONITOR_OK() and RUN() and ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << RUN() or (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (585)                               [serial 1915] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << RUN() or (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by Associativity: (b.c).a = a.b.c
and theorem 584:
Theorem (584) [serial 1917] used for:
  Associativity: (b.c).a = a.b.c [serial 1915]
 


Theorem (586)                               [serial 1913] 
P [305] << O_n = alarm_previous_period and ((ALARM_CONTROL^-1 = alarm_control^-1)) and 
((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (LOWER_ALARM_TEMP + 0.5)))) or 
(((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
((alarm_previous_period = alarm_control^-1)) and (MONITOR_OK() and RUN()) >>
S [355] ->
Q [36] << RUN() or (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 585:
Theorem (585) [serial 1915] used for:
    normalization of [serial 1913]
 


Theorem (587)                               [serial 1878] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << RUN() or (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by Substitution of Assertion Labels
and theorem 586:
Theorem (586) [serial 1913] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1878]
 


Theorem (588)                               [serial 1855] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (RUN() or (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 587:
Theorem (587) [serial 1878] used for:
    normalization of [serial 1855]
 


Theorem (589)                               [serial 1922] 
P [305] << MONITOR_OK() and RUN() and ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << not MONITOR_OK() or (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (590)                               [serial 1920] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
O_n = alarm_previous_period and (MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [355] ->
Q [36] << not MONITOR_OK() or (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by Associativity: (b.c).a = a.b.c
and theorem 589:
Theorem (589) [serial 1922] used for:
  Associativity: (b.c).a = a.b.c [serial 1920]
 


Theorem (591)                               [serial 1918] 
P [305] << O_n = alarm_previous_period and ((ALARM_CONTROL^-1 = alarm_control^-1)) and 
((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (LOWER_ALARM_TEMP + 0.5)))) or 
(((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
((alarm_previous_period = alarm_control^-1)) and (MONITOR_OK() and RUN()) >>
S [355] ->
Q [36] << not MONITOR_OK() or (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 590:
Theorem (590) [serial 1920] used for:
    normalization of [serial 1918]
 


Theorem (592)                               [serial 1880] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << not MONITOR_OK() or (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP >>
by Substitution of Assertion Labels
and theorem 591:
Theorem (591) [serial 1918] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1880]
 


Theorem (593)                               [serial 1856] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (not MONITOR_OK() or (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 592:
Theorem (592) [serial 1880] used for:
    normalization of [serial 1856]
 


Theorem (594)                               [serial 1843] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (ALARM_CONTROL^-1 = O_n or MONITOR_MODE(x:Normal) or RUN()) and (ALARM_CONTROL^-1 = O_n or 
MONITOR_MODE(x:Normal) or not MONITOR_OK()) and (ALARM_CONTROL^-1 = O_n or 
RUN() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP) and 
(ALARM_CONTROL^-1 = O_n or not MONITOR_OK() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) and (MONITOR_MODE(x:Normal) or RUN()) and 
(MONITOR_MODE(x:Normal) or RUN() or (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) and (MONITOR_MODE(
x:Normal) or RUN() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP) and 
(MONITOR_MODE(x:Normal) or not MONITOR_OK()) and (MONITOR_MODE(x:Normal) or 
not MONITOR_OK() or (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) and (MONITOR_MODE(
x:Normal) or not MONITOR_OK() or UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP) and 
(RUN() or (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) and (not MONITOR_OK() or (CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 553 555 561 571 573 575 577 579 581 583 588 593:
Theorem (553) [serial 1845] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1843]
 
Theorem (555) [serial 1846] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1843]
 
Theorem (561) [serial 1847] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1843]
 
Theorem (571) [serial 1848] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1843]
 
Theorem (573) [serial 1849] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1843]
 
Theorem (575) [serial 1850] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1843]
 
Theorem (577) [serial 1851] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1843]
 
Theorem (579) [serial 1852] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1843]
 
Theorem (581) [serial 1853] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1843]
 
Theorem (583) [serial 1854] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1843]
 
Theorem (588) [serial 1855] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1843]
 
Theorem (593) [serial 1856] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1843]
 


Theorem (595)                               [serial 1841] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (ALARM_CONTROL^-1 = O_n or MONITOR_MODE(x:Normal) or RUN()) and (ALARM_CONTROL^-1 = O_n or 
MONITOR_MODE(x:Normal) or not MONITOR_OK()) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP or ALARM_CONTROL^-1 = O_n or RUN()) and 
(UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP or 
ALARM_CONTROL^-1 = O_n or not MONITOR_OK()) and (MONITOR_MODE(x:Normal) or 
RUN()) and (MONITOR_MODE(x:Normal) or not MONITOR_OK()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP) or MONITOR_MODE(
x:Normal) or RUN()) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP or 
MONITOR_MODE(x:Normal) or RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP) or MONITOR_MODE(
x:Normal) or not MONITOR_OK()) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP or MONITOR_MODE(x:Normal) or not MONITOR_OK()) and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP or 
RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP) or UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP or not MONITOR_OK()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 594:
Theorem (594) [serial 1843] used for:
    normalization of [serial 1841]
 


Theorem (596)                               [serial 1840] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (ALARM_CONTROL^-1 = O_n or MONITOR_MODE(x:Normal) or RUN()) and (ALARM_CONTROL^-1 = O_n or 
MONITOR_MODE(x:Normal) or not MONITOR_OK()) and (ALARM_CONTROL^-1 = O_n or 
RUN() or (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) and 
(ALARM_CONTROL^-1 = O_n or not MONITOR_OK() or (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP)) and (MONITOR_MODE(x:Normal) or RUN()) and 
(MONITOR_MODE(x:Normal) or not MONITOR_OK()) and (MONITOR_MODE(x:Normal) or 
RUN() or ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) and (MONITOR_MODE(
x:Normal) or RUN() or (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) and 
(MONITOR_MODE(x:Normal) or not MONITOR_OK() or ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) and (MONITOR_MODE(
x:Normal) or not MONITOR_OK() or (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) and 
(RUN() or ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) or (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP)) and (not MONITOR_OK() or ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) or (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 595:
Theorem (595) [serial 1841] used for:
  Associativity: (b.c).a = a.b.c [serial 1840]
 


Theorem (597)                               [serial 1838] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (ALARM_CONTROL^-1 = O_n or MONITOR_MODE(x:Normal) or RUN()) and (ALARM_CONTROL^-1 = O_n or 
MONITOR_MODE(x:Normal) or not MONITOR_OK()) and (ALARM_CONTROL^-1 = O_n or 
RUN() or (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) and 
(ALARM_CONTROL^-1 = O_n or not MONITOR_OK() or (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP)) and (MONITOR_MODE(x:Normal) or MONITOR_MODE(
x:Normal) or RUN()) and (MONITOR_MODE(x:Normal) or MONITOR_MODE(x:Normal) or 
not MONITOR_OK()) and (MONITOR_MODE(x:Normal) or RUN() or ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) and (MONITOR_MODE(
x:Normal) or RUN() or (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) and 
(MONITOR_MODE(x:Normal) or not MONITOR_OK() or ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) and (MONITOR_MODE(
x:Normal) or not MONITOR_OK() or (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) and 
(RUN() or ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) or (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP)) and (not MONITOR_OK() or ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) or (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP)) >>
by Law of Or-Simplification: P or P is P
and theorem 596:
Theorem (596) [serial 1840] used for:
  Law of Or-Simplification: P or P is P [serial 1838]
 


Theorem (598)                               [serial 1836] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (ALARM_CONTROL^-1 = O_n or MONITOR_MODE(x:Normal) or RUN()) and (MONITOR_MODE(
x:Normal) or MONITOR_MODE(x:Normal) or RUN()) and (((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) or MONITOR_MODE(
x:Normal) or RUN()) and (ALARM_CONTROL^-1 = O_n or (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) or RUN()) and (MONITOR_MODE(x:Normal) or 
(UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP) or 
RUN()) and (((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) or (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) or RUN()) and (ALARM_CONTROL^-1 = O_n or 
MONITOR_MODE(x:Normal) or not MONITOR_OK()) and (MONITOR_MODE(x:Normal) or 
MONITOR_MODE(x:Normal) or not MONITOR_OK()) and (((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) or MONITOR_MODE(
x:Normal) or not MONITOR_OK()) and (ALARM_CONTROL^-1 = O_n or (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) or not MONITOR_OK()) and (MONITOR_MODE(
x:Normal) or (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP) or 
not MONITOR_OK()) and (((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) or (UPPER_ALARM_TEMP < CURRENT_TEMP.t or 
CURRENT_TEMP.t < LOWER_ALARM_TEMP) or not MONITOR_OK()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 597:
Theorem (597) [serial 1838] used for:
    normalization of [serial 1836]
 


Theorem (599)                               [serial 1834] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (ALARM_CONTROL^-1 = O_n and MONITOR_MODE(x:Normal) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_MODE(
x:Normal) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) or 
(RUN() and not MONITOR_OK()) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 598:
Theorem (598) [serial 1836] used for:
  Distributing Postcondition Or-Over-And [serial 1834]
 


Theorem (600)                               [serial 1832] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (MONITOR_MODE(x:Normal) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) and ALARM_CONTROL^-1 = O_n) or 
(MONITOR_MODE(x:Normal) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) or 
(RUN() and not MONITOR_OK()) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 599:
Theorem (599) [serial 1834] used for:
    normalization of [serial 1832]
 


Theorem (601)                               [serial 1812] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (ALARM_CONTROL^-1 = O_n and (MONITOR_MODE(x:Normal) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)))) or (MONITOR_MODE(
x:Normal) and (UPPER_ALARM_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < LOWER_ALARM_TEMP)) or 
(RUN() and not MONITOR_OK()) >>
by Associativity: (b.c).a = a.b.c
and theorem 600:
Theorem (600) [serial 1832] used for:
  Associativity: (b.c).a = a.b.c [serial 1812]
 


Theorem (602)                               [serial 1808] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << (MONITOR_MODE(x:Normal) and (((CURRENT_TEMP.t < LOWER_ALARM_TEMP)) or 
((CURRENT_TEMP.t > UPPER_ALARM_TEMP)))) or (not MONITOR_OK() and RUN()) or 
(ALARM_CONTROL^-1 = O_n and (MONITOR_MODE(x:Normal) and (((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (
LOWER_ALARM_TEMP + 0.5))) or ((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP))))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 601:
Theorem (601) [serial 1812] used for:
    normalization of [serial 1808]
 


Theorem (603)                               [serial 1786] 
P [305] << O_n = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [355] ->
Q [36] << REQMA2() or REQMA5() or (ALARM_CONTROL^-1 = O_n and REQMA3()) >>
by Substitution of Assertion Labels
and theorem 602:
Theorem (602) [serial 1808] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1786]
 


Theorem (604)                               [serial 1778] 
P [305] << (EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = O_n)) and 
INVMA()) >>
S [355] ->
Q [36] << (REQMA2()) or (REQMA5()) or ((REQMA3() and ((ALARM_CONTROL^-1 = O_n)))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 603:
Theorem (603) [serial 1786] used for:
    normalization of [serial 1778]
 


Theorem (605)                               [serial 1804] 
P [355] << O_n = alarm_control and (O_n = alarm_previous_period and AXIOM_AC() and 
EDGE_TEMP() and INVMA() and MONITOR_MODE(x:Normal)) >>
S [355] ->
Q [356] << O_n = alarm_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (606)                               [serial 1798] 
P [355] << ((O_n) = (alarm_control)) and (O_n = alarm_previous_period and AXIOM_AC() and 
EDGE_TEMP() and INVMA() and MONITOR_MODE(x:Normal)) >>
S [355] ->
Q [356] << O_n = alarm_control >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 605:
Theorem (605) [serial 1804] used for:
    normalization of [serial 1798]
 


Theorem (607)                               [serial 1797] 
P [355] << ((O_n)^0 = (alarm_control)^0) and (O_n = alarm_previous_period and AXIOM_AC() and 
EDGE_TEMP() and INVMA() and MONITOR_MODE(x:Normal)) >>
S [355] ->
Q [356] << O_n = alarm_control >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 606:
Theorem (606) [serial 1798] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1797]
 


Theorem (608)                               [serial 1788] 
P [355] << (O_n = alarm_control)^0 and (O_n = alarm_previous_period and AXIOM_AC() and 
EDGE_TEMP() and INVMA() and MONITOR_MODE(x:Normal)) >>
S [355] ->
Q [356] << O_n = alarm_control >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 607:
Theorem (607) [serial 1797] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1788]
 


Theorem (609)                               [serial 1779] 
P [355] << ((EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = O_n)) and 
INVMA())) and (alarm_control = O_n)^0 >>
S [355] ->
Q [356] << (alarm_control = O_n) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 608:
Theorem (608) [serial 1788] used for:
    normalization of [serial 1779]
 


Theorem (610)                               [serial 1776] 
P [305] << (EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = O_n)) and 
INVMA()) >>
S [355] alarm_control!(O_n)
Q [356] << (alarm_control = O_n) >>
by Enumeration Type Port Output 
and theorems 604 609:
Theorem (604) [serial 1778] used for:
  applied port output of enumeration type  alarm_control!(O_n) [serial 1776]
 
Theorem (609) [serial 1779] used for:
  applied port output <<pre and (alarm_control=O_n)^0>> -> <<post>> [serial 1776]
 


Theorem (611)                               [serial 1790] 
P [356] << O_n = alarm_control >>
S [357] ->
Q [358] << O_n = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (612)                               [serial 1780] 
P [356] << (alarm_control = O_n) >>
S [357] ->
Q [358] << (O_n = alarm_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 611:
Theorem (611) [serial 1790] used for:
    normalization of [serial 1780]
 


Theorem (613)                               [serial 1777] 
P [356] << (alarm_control = O_n) >>
S [357] alarm_previous_period' := O_n
Q [358] << (alarm_previous_period' = alarm_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 612:
Theorem (612) [serial 1780] used for:
  applied wp for assignment [serial 1777]
 


Theorem (614)                               [serial 1030] 
P [305] << (EDGE_TEMP() and MONITOR_OK() and RUN() and INVMA() and AXIOM_OFFON() and 
((alarm_previous_period = O_n))) >>
S [353] << (EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = O_n)) and INVMA()) >>
alarm_control!(O_n)
;
<< (alarm_control = O_n) >>
alarm_previous_period' := O_n
<< (alarm_previous_period' = alarm_control) >>
Q [302] << (INVMA())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 541 551 610 613:
Theorem (541) [serial 1774] used for:
  P -> P1 in sequential composition for [serial 1030]
 
Theorem (551) [serial 1775] used for:
  Q1 -> Q in sequential composition for [serial 1030]
 
Theorem (610) [serial 1776] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1030]
 
Theorem (613) [serial 1777] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1030]
 


Theorem (615)                               [serial 1978] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [363] << Off = alarm_previous_period >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (616)                               [serial 1979] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << EDGE_TEMP() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (617)                               [serial 1980] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [363] << INVMA() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (618)                               [serial 2028] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << MONITOR_OK() and RUN() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (619)                               [serial 2026] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << (MONITOR_OK() and RUN()) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 618:
Theorem (618) [serial 2028] used for:
    normalization of [serial 2026]
 


Theorem (620)                               [serial 1981] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << MONITOR_MODE(x:Normal) >>
by Substitution of Assertion Labels
and theorem 619:
Theorem (619) [serial 2026] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1981]
 


Theorem (621)                               [serial 1976] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [305] << Off = alarm_previous_period and EDGE_TEMP() and INVMA() and MONITOR_MODE(
x:Normal) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 615 616 617 620:
Theorem (615) [serial 1978] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1976]
 
Theorem (616) [serial 1979] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1976]
 
Theorem (617) [serial 1980] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1976]
 
Theorem (620) [serial 1981] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1976]
 


Theorem (622)                               [serial 1974] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [305] << Off = alarm_previous_period and true and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
by Law of And-Simplification:  P and true is P
and theorem 621:
Theorem (621) [serial 1976] used for:
  Law of And-Simplification:  P and true is P [serial 1974]
 


Theorem (623)                               [serial 1978] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [363] << Off = alarm_previous_period >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (624)                               [serial 1979] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << EDGE_TEMP() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (625)                               [serial 1980] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [363] << INVMA() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (626)                               [serial 2028] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << MONITOR_OK() and RUN() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (627)                               [serial 2026] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << (MONITOR_OK() and RUN()) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 626:
Theorem (626) [serial 2028] used for:
    normalization of [serial 2026]
 


Theorem (628)                               [serial 1981] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [362] << MONITOR_MODE(x:Normal) >>
by Substitution of Assertion Labels
and theorem 627:
Theorem (627) [serial 2026] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1981]
 


Theorem (629)                               [serial 1976] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [305] << Off = alarm_previous_period and EDGE_TEMP() and INVMA() and MONITOR_MODE(
x:Normal) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 623 624 625 628:
Theorem (623) [serial 1978] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1976]
 
Theorem (624) [serial 1979] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1976]
 
Theorem (625) [serial 1980] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1976]
 
Theorem (628) [serial 1981] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1976]
 


Theorem (630)                               [serial 1974] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [305] << Off = alarm_previous_period and true and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
by Law of And-Simplification:  P and true is P
and theorem 629:
Theorem (629) [serial 1976] used for:
  Law of And-Simplification:  P and true is P [serial 1974]
 


Theorem (631)                               [serial 1960] 
P [305] << Off = alarm_previous_period and AXIOM_OFFON() and EDGE_TEMP() and INVMA() and 
MONITOR_OK() and RUN() >>
S [305] ->
Q [305] << Off = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 630 630:
Theorem (630) [serial 1974] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (630) [serial 1974] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (632)                               [serial 1952] 
P [305] << (EDGE_TEMP() and MONITOR_OK() and RUN() and INVMA() and AXIOM_OFFON() and 
((alarm_previous_period = Off))) >>
S [305] ->
Q [305] << (EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = Off)) and 
INVMA()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 631:
Theorem (631) [serial 1960] used for:
    normalization of [serial 1952]
 


Theorem (633)                               [serial 1993] 
P [367] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_previous_period^1 = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (634)                               [serial 1991] 
P [367] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control = alarm_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 633:
Theorem (633) [serial 1993] used for:
    normalization of [serial 1991]
 


Theorem (635)                               [serial 1989] 
P [367] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << alarm_control^0 = alarm_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 634:
Theorem (634) [serial 1991] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1989]
 


Theorem (636)                               [serial 1987] 
P [367] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (alarm_control^(-1+1) = (alarm_previous_period)^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 635:
Theorem (635) [serial 1989] used for:
    normalization of [serial 1987]
 


Theorem (637)                               [serial 1985] 
P [367] << alarm_previous_period^1 = alarm_control >>
S [302] ->
Q [305] << (alarm_control^-1 = alarm_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 636:
Theorem (636) [serial 1987] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1985]
 


Theorem (638)                               [serial 1983] 
P [367] << alarm_control = (alarm_previous_period)^1 >>
S [302] ->
Q [305] << (((alarm_previous_period = alarm_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 637:
Theorem (637) [serial 1985] used for:
    normalization of [serial 1983]
 


Theorem (639)                               [serial 1982] 
P [367] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (((alarm_previous_period = alarm_control^-1)))^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 638:
Theorem (638) [serial 1983] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1982]
 


Theorem (640)                               [serial 1962] 
P [367] << alarm_control = alarm_previous_period' >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Substitution of Assertion Labels
and theorem 639:
Theorem (639) [serial 1982] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1962]
 


Theorem (641)                               [serial 1953] 
P [367] << (alarm_previous_period' = alarm_control) >>
S [302] ->
Q [305] << (INVMA())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 640:
Theorem (640) [serial 1962] used for:
    normalization of [serial 1953]
 


Theorem (642)                               [serial 2025] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and ALARM_CONTROL^-1 = Off and ALARM_CONTROL^-1 = alarm_previous_period and 
alarm_control^-1 = Off and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (643)                               [serial 2024] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and ALARM_CONTROL^-1 = Off and ALARM_CONTROL^-1 = alarm_previous_period and 
alarm_control^-1 = Off and alarm_control^-1 = alarm_previous_period and 
alarm_control^-1 = alarm_previous_period and Off = alarm_previous_period and 
MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Law of And-Simplification:  P and P is P
and theorem 642:
Theorem (642) [serial 2025] used for:
  Law of And-Simplification:  P and P is P [serial 2024]
 


Theorem (644)                               [serial 2023] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and ALARM_CONTROL^-1 = alarm_control^-1 and 
ALARM_CONTROL^-1 = Off and ALARM_CONTROL^-1 = Off and ALARM_CONTROL^-1 = alarm_previous_period and 
ALARM_CONTROL^-1 = alarm_previous_period and alarm_control^-1 = Off and 
alarm_control^-1 = Off and alarm_control^-1 = alarm_previous_period and 
alarm_control^-1 = alarm_previous_period and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and Off = alarm_previous_period and MONITOR_OK() and 
RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Law of And-Simplification:  P and P is P
and theorem 643:
Theorem (643) [serial 2024] used for:
  Law of And-Simplification:  P and P is P [serial 2023]
 


Theorem (645)                               [serial 2021] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and ALARM_CONTROL^-1 = alarm_control^-1 and 
ALARM_CONTROL^-1 = alarm_control^-1 and ALARM_CONTROL^-1 = Off and ALARM_CONTROL^-1 = Off and 
ALARM_CONTROL^-1 = Off and ALARM_CONTROL^-1 = Off and ALARM_CONTROL^-1 = alarm_previous_period and 
ALARM_CONTROL^-1 = alarm_previous_period and ALARM_CONTROL^-1 = alarm_previous_period and 
alarm_control^-1 = Off and alarm_control^-1 = Off and alarm_control^-1 = Off and 
alarm_control^-1 = alarm_previous_period and alarm_control^-1 = alarm_previous_period and 
alarm_control^-1 = alarm_previous_period and alarm_control^-1 = alarm_previous_period and 
alarm_control^-1 = alarm_previous_period and Off = alarm_previous_period and 
Off = alarm_previous_period and Off = alarm_previous_period and MONITOR_OK() and 
RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Law of And-Simplification:  P and P is P
and theorem 644:
Theorem (644) [serial 2023] used for:
  Law of And-Simplification:  P and P is P [serial 2021]
 


Theorem (646)                               [serial 2019] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and ALARM_CONTROL^-1 = alarm_previous_period and 
alarm_control^-1 = Off and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) and alarm_control^-1 = alarm_previous_period and 
ALARM_CONTROL^-1 = Off and ALARM_CONTROL^-1 = alarm_previous_period and 
alarm_previous_period = alarm_control^-1 and alarm_control^-1 = ALARM_CONTROL^-1 and 
Off = ALARM_CONTROL^-1 and ALARM_CONTROL^-1 = Off and Off = alarm_previous_period and 
alarm_control^-1 = alarm_previous_period and ALARM_CONTROL^-1 = alarm_previous_period and 
ALARM_CONTROL^-1 = alarm_control^-1 and alarm_previous_period = Off and 
Off = alarm_control^-1 and ALARM_CONTROL^-1 = Off and alarm_control^-1 = alarm_previous_period and 
alarm_control^-1 = Off >>
S [364] ->
Q [39] << (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 645:
Theorem (645) [serial 2021] used for:
    normalization of [serial 2019]
 


Theorem (647)                               [serial 2018] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and ALARM_CONTROL^-1 = alarm_previous_period and 
alarm_control^-1 = Off and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Remove Equivalent Term: P(a) and P(b) and a=b is P(a) and a=b
and theorem 646:
Theorem (646) [serial 2019] used for:
  Remove Equivalent Term: P(a) and P(b) and a=b is P(a) and a=b [serial 2018]
 


Theorem (648)                               [serial 2016] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and ALARM_CONTROL^-1 = alarm_previous_period and 
ALARM_CONTROL^-1 = alarm_previous_period and alarm_control^-1 = Off and 
alarm_control^-1 = Off and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Law of And-Simplification:  P and P is P
and theorem 647:
Theorem (647) [serial 2018] used for:
  Law of And-Simplification:  P and P is P [serial 2016]
 


Theorem (649)                               [serial 2014] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) and ALARM_CONTROL^-1 = alarm_previous_period and 
ALARM_CONTROL^-1 = alarm_previous_period and Off = alarm_control^-1 and 
alarm_control^-1 = Off >>
S [364] ->
Q [39] << (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 648:
Theorem (648) [serial 2016] used for:
    normalization of [serial 2014]
 


Theorem (650)                               [serial 2013] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Remove Equivalent Term: P(a) and P(b) and a=b is P(a) and a=b
and theorem 649:
Theorem (649) [serial 2014] used for:
  Remove Equivalent Term: P(a) and P(b) and a=b is P(a) and a=b [serial 2013]
 


Theorem (651)                               [serial 2012] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << (ALARM_CONTROL^-1 = alarm_previous_period and MONITOR_OK() and RUN() and 
((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or (CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 
0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and RUN() and (CURRENT_TEMP.t in 
0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Guided Substitution of Equals
and theorem 650:
Theorem (650) [serial 2013] used for:
  Guided Substitution of Equals
 replacing "alarm_previous_period" with its = "Off" in its postcondition [serial 2012]
 


Theorem (652)                               [serial 2010] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << (ALARM_CONTROL^-1 = Off and MONITOR_OK() and RUN() and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Guided Substitution of Equals
and theorem 651:
Theorem (651) [serial 2012] used for:
  Guided Substitution of Equals
 replacing "Off" with its = "alarm_previous_period" in its postcondition [serial 2010]
 


Theorem (653)                               [serial 2008] 
P [305] << MONITOR_OK() and RUN() and ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << (MONITOR_OK() and RUN() and ALARM_CONTROL^-1 = Off and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_OK() and 
RUN() and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 652:
Theorem (652) [serial 2010] used for:
    normalization of [serial 2008]
 


Theorem (654)                               [serial 2006] 
P [305] << ALARM_CONTROL^-1 = alarm_control^-1 and alarm_control^-1 = alarm_previous_period and 
Off = alarm_previous_period and (MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) >>
S [364] ->
Q [39] << (ALARM_CONTROL^-1 = Off and (MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or ((MONITOR_OK() and 
RUN()) and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 653:
Theorem (653) [serial 2008] used for:
  Associativity: (b.c).a = a.b.c [serial 2006]
 


Theorem (655)                               [serial 2004] 
P [305] << Off = alarm_previous_period and ((ALARM_CONTROL^-1 = alarm_control^-1)) and 
((((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (LOWER_ALARM_TEMP + 0.5)))) or 
(((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP)))) and 
((alarm_previous_period = alarm_control^-1)) and (MONITOR_OK() and RUN()) >>
S [364] ->
Q [39] << (ALARM_CONTROL^-1 = Off and (MONITOR_OK() and RUN()) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or ((MONITOR_OK() and 
RUN()) and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 654:
Theorem (654) [serial 2006] used for:
    normalization of [serial 2004]
 


Theorem (656)                               [serial 2002] 
P [305] << Off = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [364] ->
Q [39] << (ALARM_CONTROL^-1 = Off and MONITOR_MODE(x:Normal) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP))) or (MONITOR_MODE(
x:Normal) and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Substitution of Assertion Labels
and theorem 655:
Theorem (655) [serial 2004] used for:
  substituted Assertions' predicates for  labels  [serial 2002]
 


Theorem (657)                               [serial 2000] 
P [305] << Off = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [364] ->
Q [39] << (MONITOR_MODE(x:Normal) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)) and ALARM_CONTROL^-1 = Off) or 
(MONITOR_MODE(x:Normal) and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 656:
Theorem (656) [serial 2002] used for:
    normalization of [serial 2000]
 


Theorem (658)                               [serial 1998] 
P [305] << Off = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [364] ->
Q [39] << (ALARM_CONTROL^-1 = Off and (MONITOR_MODE(x:Normal) and ((CURRENT_TEMP.t in UPPER_ALARM_TEMP - 0.5 ,. UPPER_ALARM_TEMP) or 
(CURRENT_TEMP.t in LOWER_ALARM_TEMP ., 0.5 + LOWER_ALARM_TEMP)))) or (MONITOR_MODE(
x:Normal) and (CURRENT_TEMP.t in 0.5 + LOWER_ALARM_TEMP .. UPPER_ALARM_TEMP - 0.5)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 657:
Theorem (657) [serial 2000] used for:
  Associativity: (b.c).a = a.b.c [serial 1998]
 


Theorem (659)                               [serial 1996] 
P [305] << Off = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [364] ->
Q [39] << (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) or (
MONITOR_MODE(x:Normal) and ((CURRENT_TEMP.t in (LOWER_ALARM_TEMP + 0.5) .. (UPPER_ALARM_TEMP - 0.5)))) or 
(ALARM_CONTROL^-1 = Off and (MONITOR_MODE(x:Normal) and (((CURRENT_TEMP.t in LOWER_ALARM_TEMP ., (
LOWER_ALARM_TEMP + 0.5))) or ((CURRENT_TEMP.t in (UPPER_ALARM_TEMP - 0.5) ,. UPPER_ALARM_TEMP))))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 658:
Theorem (658) [serial 1998] used for:
    normalization of [serial 1996]
 


Theorem (660)                               [serial 1964] 
P [305] << Off = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) >>
S [364] ->
Q [39] << REQMA1() or REQMA4() or (ALARM_CONTROL^-1 = Off and REQMA3()) >>
by Substitution of Assertion Labels
and theorem 659:
Theorem (659) [serial 1996] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1964]
 


Theorem (661)                               [serial 1956] 
P [305] << (EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = Off)) and 
INVMA()) >>
S [364] ->
Q [39] << (REQMA1()) or (REQMA4()) or ((REQMA3() and ((ALARM_CONTROL^-1 = Off)))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 660:
Theorem (660) [serial 1964] used for:
    normalization of [serial 1956]
 


Theorem (662)                               [serial 1977] 
P [364] << Off = alarm_previous_period and AXIOM_AC() and EDGE_TEMP() and INVMA() and 
MONITOR_MODE(x:Normal) and Off = alarm_control >>
S [364] ->
Q [365] << Off = alarm_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (663)                               [serial 1975] 
P [364] << Off = alarm_control and (Off = alarm_previous_period and AXIOM_AC() and 
EDGE_TEMP() and INVMA() and MONITOR_MODE(x:Normal)) >>
S [364] ->
Q [365] << Off = alarm_control >>
by Associativity: (b.c).a = a.b.c
and theorem 662:
Theorem (662) [serial 1977] used for:
  Associativity: (b.c).a = a.b.c [serial 1975]
 


Theorem (664)                               [serial 1966] 
P [364] << (Off = alarm_control)^0 and (Off = alarm_previous_period and AXIOM_AC() and 
EDGE_TEMP() and INVMA() and MONITOR_MODE(x:Normal)) >>
S [364] ->
Q [365] << Off = alarm_control >>
by Assume Present:  P = P@now = P^0 
and theorem 663:
Theorem (663) [serial 1975] used for:
  Assume Present:  P = P@now = P^0  [serial 1966]
 


Theorem (665)                               [serial 1957] 
P [364] << ((EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = Off)) and 
INVMA())) and (alarm_control = Off)^0 >>
S [364] ->
Q [365] << (alarm_control = Off) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 664:
Theorem (664) [serial 1966] used for:
    normalization of [serial 1957]
 


Theorem (666)                               [serial 1954] 
P [305] << (EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = Off)) and 
INVMA()) >>
S [364] alarm_control!(Off)
Q [365] << (alarm_control = Off) >>
by Enumeration Type Port Output 
and theorems 661 665:
Theorem (661) [serial 1956] used for:
  applied port output of enumeration type  alarm_control!(Off) [serial 1954]
 
Theorem (665) [serial 1957] used for:
  applied port output <<pre and (alarm_control=Off)^0>> -> <<post>> [serial 1954]
 


Theorem (667)                               [serial 1968] 
P [365] << Off = alarm_control >>
S [366] ->
Q [367] << Off = alarm_control >>
by Identity (id):  P->P is tautology


Theorem (668)                               [serial 1958] 
P [365] << (alarm_control = Off) >>
S [366] ->
Q [367] << (Off = alarm_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 667:
Theorem (667) [serial 1968] used for:
    normalization of [serial 1958]
 


Theorem (669)                               [serial 1955] 
P [365] << (alarm_control = Off) >>
S [366] alarm_previous_period' := Off
Q [367] << (alarm_previous_period' = alarm_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 668:
Theorem (668) [serial 1958] used for:
  applied wp for assignment [serial 1955]
 


Theorem (670)                               [serial 1031] 
P [305] << (EDGE_TEMP() and MONITOR_OK() and RUN() and INVMA() and AXIOM_OFFON() and 
((alarm_previous_period = Off))) >>
S [362] << (EDGE_TEMP() and MONITOR_MODE(x:Normal) and AXIOM_AC() and ((alarm_previous_period = Off)) and INVMA()) >>
alarm_control!(Off)
;
<< (alarm_control = Off) >>
alarm_previous_period' := Off
<< (alarm_previous_period' = alarm_control) >>
Q [302] << (INVMA())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 632 641 666 669:
Theorem (632) [serial 1952] used for:
  P -> P1 in sequential composition for [serial 1031]
 
Theorem (641) [serial 1953] used for:
  Q1 -> Q in sequential composition for [serial 1031]
 
Theorem (666) [serial 1954] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1031]
 
Theorem (669) [serial 1955] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1031]
 


Theorem (671)                               [serial 1032] 
P [369] << ((INVMA()) and stop@now and not (exists u~time
  in tops,,now 
  that true ) and not (exists u~time
  in tops,,now 
  that stop@u )) >>
S [369] ->
Q [306] << true >>
by True Conclusion Schema (tc): P->true


Theorem (672)                               [serial 1016] 
P [288] <<   >>
S [295] ->
Q [288] << manage_alarm.impl proof obligations >>
by Initial Thread Obligations
and theorems 264 280 281 284 304 305 306 331 355 369 410 482 503 614 670 671:
Theorem (264) [serial 1017] used for:
  <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
 
Theorem (280) [serial 1018] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_temp, <<M(check_temp)>> -> <<e1 or e2 or . . . en>>
 
Theorem (281) [serial 1019] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state poweron, <<M(poweron)>> -> <<e1 or e2 or . . . en>>
 
Theorem (284) [serial 1020] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_hyst, <<M(check_hyst)>> -> <<e1 or e2 or . . . en>>
 
Theorem (304) [serial 1021] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_mode, <<M(check_mode)>> -> <<e1 or e2 or . . . en>>
 
Theorem (305) [serial 1022] used for:
   <<M(poweron)>> -> <<M(run)>> for maPo:poweron-[ ]->run{};
 
Theorem (306) [serial 1023] used for:
   <<M(run) and x>> -> <<M(check_mode)>> for maRun:run-[x]->check_mode{};
 
Theorem (331) [serial 1024] used for:
   <<M(check_mode) and x>> A <<M(run)>> for maFailed:check_mode-[x]->run{A};
 
Theorem (355) [serial 1025] used for:
   <<M(check_mode) and x>> A <<M(run)>> for maInit:check_mode-[x]->run{A};
 
Theorem (369) [serial 1026] used for:
   <<M(check_mode) and x>> -> <<M(check_temp)>> for maNormal:check_mode-[x]->check_temp{};
 
Theorem (410) [serial 1027] used for:
   <<M(check_temp) and x>> A <<M(run)>> for maOor:check_temp-[x]->run{A};
 
Theorem (482) [serial 1028] used for:
   <<M(check_temp) and x>> A <<M(run)>> for maIr:check_temp-[x]->run{A};
 
Theorem (503) [serial 1029] used for:
   <<M(check_temp) and x>> -> <<M(check_hyst)>> for maHys:check_temp-[x]->check_hyst{};
 
Theorem (614) [serial 1030] used for:
   <<M(check_hyst) and x>> A <<M(run)>> for maHysOn:check_hyst-[x]->run{A};
 
Theorem (670) [serial 1031] used for:
   <<M(check_hyst) and x>> A <<M(run)>> for maHysOff:check_hyst-[x]->run{A};
 
Theorem (671) [serial 1032] used for:
   <<M(run) and x>> -> <<M(halt)>> for maStop:run-[x]->halt{};
 


Theorem (673)                               [serial 1034] 
P [216] << true >>
S [207] ->
Q [207] << true >>
by True Conclusion Schema (tc): P->true


Theorem (674)                               [serial 1035] 
P [220] << RUN() >>
S [207] ->
Q [207] << true >>
by True Conclusion Schema (tc): P->true


Theorem (675)                               [serial 2589] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << true >>
by True Conclusion Schema (tc): P->true


Theorem (676)                               [serial 2587] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 675:
Theorem (675) [serial 2589] used for:
    normalization of [serial 2587]
 


Theorem (677)                               [serial 2586] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 676:
Theorem (676) [serial 2587] used for:
  Law of And-Simplification:  P and P is P [serial 2586]
 


Theorem (678)                               [serial 2584] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not INTERNAL_FAILURE^0 or 
not Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 677:
Theorem (677) [serial 2586] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2584]
 


Theorem (679)                               [serial 2582] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (not INTERNAL_FAILURE^0 or INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
(not REGULATOR_INTERFACE_FAILURE^0 or INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 678:
Theorem (678) [serial 2584] used for:
    normalization of [serial 2582]
 


Theorem (680)                               [serial 2579] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 679:
Theorem (679) [serial 2582] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 2579]
 


Theorem (681)                               [serial 2577] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << ((INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 680:
Theorem (680) [serial 2579] used for:
    normalization of [serial 2577]
 


Theorem (682)                               [serial 2575] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << true and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and true is P
and theorem 681:
Theorem (681) [serial 2577] used for:
  Law of And-Simplification:  P and true is P [serial 2575]
 


Theorem (683)                               [serial 2573] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (true) and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 682:
Theorem (682) [serial 2575] used for:
    normalization of [serial 2573]
 


Theorem (684)                               [serial 2572] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (true) and (true) and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and P is P
and theorem 683:
Theorem (683) [serial 2573] used for:
  Law of And-Simplification:  P and P is P [serial 2572]
 


Theorem (685)                               [serial 2571] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (true) and (true) and (true) and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and P is P
and theorem 684:
Theorem (684) [serial 2572] used for:
  Law of And-Simplification:  P and P is P [serial 2571]
 


Theorem (686)                               [serial 2570] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (true) and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
Valid = current_temperature_status or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
(true) and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 685:
Theorem (685) [serial 2571] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2570]
 


Theorem (687)                               [serial 2569] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (true) and (Valid = current_temperature_status or (INTERNAL_FAILURE^0 or 
REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (true) and 
((not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or 
REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Associativity: (b.c).a = a.b.c
and theorem 686:
Theorem (686) [serial 2570] used for:
  Associativity: (b.c).a = a.b.c [serial 2569]
 


Theorem (688)                               [serial 2568] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (true) and (true) and (Valid = current_temperature_status or (INTERNAL_FAILURE^0 or 
REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (true) and 
((not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or 
REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and P is P
and theorem 687:
Theorem (687) [serial 2569] used for:
  Law of And-Simplification:  P and P is P [serial 2568]
 


Theorem (689)                               [serial 2567] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (true) and (true) and (true) and (Valid = current_temperature_status or 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (true) and 
((not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or 
REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of And-Simplification:  P and P is P
and theorem 688:
Theorem (688) [serial 2568] used for:
  Law of And-Simplification:  P and P is P [serial 2567]
 


Theorem (690)                               [serial 2566] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (Valid = current_temperature_status or not (now - start_time) < #Iso_Properties::Initialization_Timeout or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (not (now - start_time) < #Iso_Properties::Initialization_Timeout or 
not (now - start_time) < #Iso_Properties::Initialization_Timeout or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
((not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) or not (now - start_time) < #Iso_Properties::Initialization_Timeout or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (Valid = current_temperature_status or 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and (not (now - start_time) < #Iso_Properties::Initialization_Timeout or 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout) and ((not INTERNAL_FAILURE^0 and 
not REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 689:
Theorem (689) [serial 2567] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2566]
 


Theorem (691)                               [serial 2564] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (Valid = current_temperature_status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0)) or (not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 690:
Theorem (690) [serial 2566] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 2564]
 


Theorem (692)                               [serial 2562] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << ((not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
Valid = current_temperature_status and (not (INTERNAL_FAILURE^0) and not (REGULATOR_INTERFACE_FAILURE^0))) or 
((not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 691:
Theorem (691) [serial 2564] used for:
    normalization of [serial 2562]
 


Theorem (693)                               [serial 2561] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << ((not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
Valid = current_temperature_status and not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0)) or 
((not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 692:
Theorem (692) [serial 2562] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2561]
 


Theorem (694)                               [serial 2559] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() >>
S [218] ->
Q [218] << (#Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0)) or (#Iso_Properties::Initialization_Timeout <= (now - start_time) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) or 
(now - start_time) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 693:
Theorem (693) [serial 2561] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2559]
 


Theorem (695)                               [serial 1036] 
P [218] << ((current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR()) >>
S [218] ->
Q [218] << (((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
(((REGULATOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0) or (not ((current_temperature_status = Valid))))) or 
((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and not (
((REGULATOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0)) and ((current_temperature_status = Valid))) or 
(((now - start_time) < #Iso_Properties::Initialization_Timeout))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 694:
Theorem (694) [serial 2559] used for:
    normalization of [serial 1036]
 


Theorem (696)                               [serial 1037] 
P [215] << true >>
S [215] ->
Q [215] << true >>
by True Conclusion Schema (tc): P->true


Theorem (697)                               [serial 2611] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << true >>
by True Conclusion Schema (tc): P->true


Theorem (698)                               [serial 2609] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 697:
Theorem (697) [serial 2611] used for:
    normalization of [serial 2609]
 


Theorem (699)                               [serial 2608] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << (true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 698:
Theorem (698) [serial 2609] used for:
  Law of And-Simplification:  P and P is P [serial 2608]
 


Theorem (700)                               [serial 2607] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << (not INTERNAL_FAILURE^0 or INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) and (not REGULATOR_INTERFACE_FAILURE^0 or 
INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 699:
Theorem (699) [serial 2608] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2607]
 


Theorem (701)                               [serial 2604] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 700:
Theorem (700) [serial 2607] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 2604]
 


Theorem (702)                               [serial 2602] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << ((INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 701:
Theorem (701) [serial 2604] used for:
    normalization of [serial 2602]
 


Theorem (703)                               [serial 2600] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << true and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0)) >>
by Law of And-Simplification:  P and true is P
and theorem 702:
Theorem (702) [serial 2602] used for:
  Law of And-Simplification:  P and true is P [serial 2600]
 


Theorem (704)                               [serial 2598] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << (true) and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
(not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 703:
Theorem (703) [serial 2600] used for:
    normalization of [serial 2598]
 


Theorem (705)                               [serial 2597] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status or 
Valid = current_temperature_status) and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status or (not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0)) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 704:
Theorem (704) [serial 2598] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2597]
 


Theorem (706)                               [serial 2596] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << (Valid = current_temperature_status or (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status)) and ((not INTERNAL_FAILURE^0 and 
not REGULATOR_INTERFACE_FAILURE^0) or (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status)) >>
by Associativity: (b.c).a = a.b.c
and theorem 705:
Theorem (705) [serial 2597] used for:
  Associativity: (b.c).a = a.b.c [serial 2596]
 


Theorem (707)                               [serial 2593] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() >>
S [222] ->
Q [222] << (Valid = current_temperature_status and (not INTERNAL_FAILURE^0 and not REGULATOR_INTERFACE_FAILURE^0)) or 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 706:
Theorem (706) [serial 2596] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 2593]
 


Theorem (708)                               [serial 2591] 
P [222] << ((current_temperature_status = temperature.status) and RUN() and AXIOM_CTSR() and 
AXIOM_STR()) >>
S [222] ->
Q [222] << (((not (((REGULATOR_INTERFACE_FAILURE)^0)) and not (((INTERNAL_FAILURE)^0))) and 
((current_temperature_status = Valid))) or ((((REGULATOR_INTERFACE_FAILURE)^0) or 
((INTERNAL_FAILURE)^0) or (not ((current_temperature_status = Valid)))))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 707:
Theorem (707) [serial 2593] used for:
    normalization of [serial 2591]
 


Theorem (709)                               [serial 1038] 
P [222] << ((current_temperature_status = temperature.status) and RUN() and AXIOM_CTSR() and 
AXIOM_STR()) >>
S [222] ->
Q [222] << ((not (((REGULATOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0)) and 
((current_temperature_status = Valid))) or ((((REGULATOR_INTERFACE_FAILURE)^0) or 
((INTERNAL_FAILURE)^0) or (not ((current_temperature_status = Valid)))))) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 708:
Theorem (708) [serial 2591] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 1038]
 


Theorem (710)                               [serial 2626] 
P [215] << true >>
S [229] ->
Q [305] << true >>
by True Conclusion Schema (tc): P->true


Theorem (711)                               [serial 2620] 
P [215] << true >>
S [229] ->
Q [305] << ((((true)))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 710:
Theorem (710) [serial 2626] used for:
    normalization of [serial 2620]
 


Theorem (712)                               [serial 2619] 
P [215] << true >>
S [229] ->
Q [305] << (((true)) and true and true) >>
by Law of And-Simplification:  P and true is P
and theorem 711:
Theorem (711) [serial 2620] used for:
  Law of And-Simplification:  P and true is P [serial 2619]
 


Theorem (713)                               [serial 2618] 
P [215] << true >>
S [229] ->
Q [305] << (((now = now)) and true and true) >>
by Equality Law (idistr):  a=a <-> true
and theorem 712:
Theorem (712) [serial 2619] used for:
  Equality Law (idistr):  a=a <-> true [serial 2618]
 


Theorem (714)                               [serial 2626] 
P [215] << true >>
S [229] ->
Q [305] << true >>
by True Conclusion Schema (tc): P->true


Theorem (715)                               [serial 2620] 
P [215] << true >>
S [229] ->
Q [305] << ((((true)))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 714:
Theorem (714) [serial 2626] used for:
    normalization of [serial 2620]
 


Theorem (716)                               [serial 2619] 
P [215] << true >>
S [229] ->
Q [305] << (((true)) and true and true) >>
by Law of And-Simplification:  P and true is P
and theorem 715:
Theorem (715) [serial 2620] used for:
  Law of And-Simplification:  P and true is P [serial 2619]
 


Theorem (717)                               [serial 2618] 
P [215] << true >>
S [229] ->
Q [305] << (((now = now)) and true and true) >>
by Equality Law (idistr):  a=a <-> true
and theorem 716:
Theorem (716) [serial 2619] used for:
  Equality Law (idistr):  a=a <-> true [serial 2618]
 


Theorem (718)                               [serial 2615] 
P [215] << true >>
S [229] ->
Q [305] << (((now = now)) and AXIOM_TOGT0() and AXIOM_STR()) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 717 717:
Theorem (717) [serial 2618] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (717) [serial 2618] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (719)                               [serial 2613] 
P [215] << true >>
S [229] start_time := now
Q [305] << (((start_time = now)) and AXIOM_TOGT0() and AXIOM_STR()) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 718:
Theorem (718) [serial 2615] used for:
  applied wp for assignment [serial 2613]
 


Theorem (720)                               [serial 2637] 
P [305] << START_TIME = start_time and start_time = now and 0 < #Iso_Properties::Initialization_Timeout >>
S [233] ->
Q [133] << 0 < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (721)                               [serial 2635] 
P [305] << START_TIME = start_time and start_time = now and 0 < #Iso_Properties::Initialization_Timeout >>
S [233] ->
Q [133] << (start_time - start_time) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Subtraction of Same:  a-a is 0
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 720:
Theorem (720) [serial 2637] used for:
    normalization of [serial 2635]
 


Theorem (722)                               [serial 2634] 
P [305] << START_TIME = start_time and start_time = now and 0 < #Iso_Properties::Initialization_Timeout >>
S [233] ->
Q [133] << (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Guided Substitution of Equals
and theorem 721:
Theorem (721) [serial 2635] used for:
  Guided Substitution of Equals
 replacing "now" with its = "start_time" in its postcondition [serial 2634]
 


Theorem (723)                               [serial 2632] 
P [305] << START_TIME = start_time and start_time = now and 0 < #Iso_Properties::Initialization_Timeout >>
S [233] ->
Q [133] << (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Guided Substitution of Equals
and theorem 722:
Theorem (722) [serial 2634] used for:
  Guided Substitution of Equals
 replacing "START_TIME" with its = "start_time" in its postcondition [serial 2632]
 


Theorem (724)                               [serial 2630] 
P [305] << start_time = now and ((start_time = START_TIME)) and ((0 < #Iso_Properties::Initialization_Timeout)) >>
S [233] ->
Q [133] << (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 723:
Theorem (723) [serial 2632] used for:
    normalization of [serial 2630]
 


Theorem (725)                               [serial 2622] 
P [305] << start_time = now and AXIOM_STR() and AXIOM_TOGT0() >>
S [233] ->
Q [133] << INI() >>
by Substitution of Assertion Labels
and theorem 724:
Theorem (724) [serial 2630] used for:
  substituted Assertions' predicates for  labels  [serial 2622]
 


Theorem (726)                               [serial 2616] 
P [305] << (((start_time = now)) and AXIOM_TOGT0() and AXIOM_STR()) >>
S [233] ->
Q [133] << INI() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 725:
Theorem (725) [serial 2622] used for:
    normalization of [serial 2616]
 


Theorem (727)                               [serial 2624] 
P [233] << (Init = regulator_mode)^0 and (start_time = now and AXIOM_STR() and AXIOM_TOGT0()) >>
S [233] ->
Q [305] << true >>
by True Conclusion Schema (tc): P->true


Theorem (728)                               [serial 2617] 
P [233] << ((((start_time = now)) and AXIOM_TOGT0() and AXIOM_STR())) and (regulator_mode = Init)^0 >>
S [233] ->
Q [305] << (true)^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Constants are always the same
and theorem 727:
Theorem (727) [serial 2624] used for:
    normalization of [serial 2617]
 


Theorem (729)                               [serial 2614] 
P [305] << (((start_time = now)) and AXIOM_TOGT0() and AXIOM_STR()) >>
S [233] regulator_mode!(Init)
Q [305] << (true)^1 >>
by Enumeration Type Port Output 
and theorems 726 728:
Theorem (726) [serial 2616] used for:
  applied port output of enumeration type  regulator_mode!(Init) [serial 2614]
 
Theorem (728) [serial 2617] used for:
  applied port output <<pre and (regulator_mode=Init)^0>> -> <<post>> [serial 2614]
 


Theorem (730)                               [serial 1039] 
P [215] << true >>
S [229] start_time := now
<< (((start_time = now)) and AXIOM_TOGT0() and AXIOM_STR()) >>
;
regulator_mode!(Init)
Q [216] << (true)^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 719 729:
Theorem (719) [serial 2613] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1039]
 
Theorem (729) [serial 2614] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1039]
 


Theorem (731)                               [serial 2645] 
P [238] << CURRENT_TEMP = temperature and true >>
S [238] ->
Q [238] << true >>
by True Conclusion Schema (tc): P->true


Theorem (732)                               [serial 2641] 
P [238] << (true) and temperature = CURRENT_TEMP >>
S [238] ->
Q [238] << true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 731:
Theorem (731) [serial 2645] used for:
    normalization of [serial 2641]
 


Theorem (733)                               [serial 2639] 
P [216] << true >>
S [238] current_temperature?(temperature)
Q [238] << true >>
by Port Data Input: when <<A and v=M(p)>> -> <<B>> then <<A>> p?(v) <<B>> (bl.pi)
and theorem 732:
Theorem (732) [serial 2641] used for:
  applied port input of value <<pre and temperature=M(current_temperature)>> -> <<post>> [serial 2639]
 


Theorem (734)                               [serial 2651] 
P [238] << true >>
S [240] ->
Q [305] << true >>
by True Conclusion Schema (tc): P->true


Theorem (735)                               [serial 2650] 
P [238] << true >>
S [240] ->
Q [305] << true and true and true >>
by Law of And-Simplification:  P and true is P
and theorem 734:
Theorem (734) [serial 2651] used for:
  Law of And-Simplification:  P and true is P [serial 2650]
 


Theorem (736)                               [serial 2651] 
P [238] << true >>
S [240] ->
Q [305] << true >>
by True Conclusion Schema (tc): P->true


Theorem (737)                               [serial 2650] 
P [238] << true >>
S [240] ->
Q [305] << true and true and true >>
by Law of And-Simplification:  P and true is P
and theorem 736:
Theorem (736) [serial 2651] used for:
  Law of And-Simplification:  P and true is P [serial 2650]
 


Theorem (738)                               [serial 2647] 
P [238] << true >>
S [240] ->
Q [305] << AXIOM_CTSR() and AXIOM_STR() and true >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 737 737:
Theorem (737) [serial 2650] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (737) [serial 2650] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (739)                               [serial 2643] 
P [238] << true >>
S [240] ->
Q [305] << ((true) and AXIOM_CTSR() and AXIOM_STR()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 738:
Theorem (738) [serial 2647] used for:
    normalization of [serial 2643]
 


Theorem (740)                               [serial 2642] 
P [238] << true >>
S [240] ->
Q [305] << (((temperature.status) = temperature.status) and AXIOM_CTSR() and AXIOM_STR()) >>
by Equality Law (idistr):  a=a <-> true
and theorem 739:
Theorem (739) [serial 2643] used for:
  Equality Law (idistr):  a=a <-> true [serial 2642]
 


Theorem (741)                               [serial 2640] 
P [238] << true >>
S [240] current_temperature_status := temperature.status
Q [305] << ((current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR()) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 740:
Theorem (740) [serial 2642] used for:
  applied wp for assignment [serial 2640]
 


Theorem (742)                               [serial 1040] 
P [216] << true >>
S [238] current_temperature?(temperature)
;
current_temperature_status := temperature.status
Q [218] << ((current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR()) >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 733 741:
Theorem (733) [serial 2639] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1040]
 
Theorem (741) [serial 2640] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1040]
 


Theorem (743)                               [serial 2714] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (744)                               [serial 2711] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not current_temperature_status = Valid >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 743:
Theorem (743) [serial 2714] used for:
    normalization of [serial 2711]
 


Theorem (745)                               [serial 2710] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid >>
by Guided Substitution of Equals
and theorem 744:
Theorem (744) [serial 2711] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 2710]
 


Theorem (746)                               [serial 2708] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid >>
by Assume Present:  P = P@now = P^0 
and theorem 745:
Theorem (745) [serial 2710] used for:
  Assume Present:  P = P@now = P^0  [serial 2708]
 


Theorem (747)                               [serial 2703] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not CURRENT_TEMPERATURE_STATUS = Valid or (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
by Associativity: (b.c).a = a.b.c
and theorem 746:
Theorem (746) [serial 2708] used for:
  Associativity: (b.c).a = a.b.c [serial 2703]
 


Theorem (748)                               [serial 2700] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not CURRENT_TEMPERATURE_STATUS = Valid or (not (not INTERNAL_FAILURE) or 
not (not REGULATOR_INTERFACE_FAILURE)) >>
by Normalization
  Normalization Axiom:
    Complement
and theorem 747:
Theorem (747) [serial 2703] used for:
    normalization of [serial 2700]
 


Theorem (749)                               [serial 2695] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not CURRENT_TEMPERATURE_STATUS = Valid or not (not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE) >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 748:
Theorem (748) [serial 2700] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 2695]
 


Theorem (750)                               [serial 2692] 
P [218] << current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << (not ((not (REGULATOR_INTERFACE_FAILURE) and not (INTERNAL_FAILURE))) or 
not (((CURRENT_TEMPERATURE_STATUS = Valid)))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 749:
Theorem (749) [serial 2695] used for:
    normalization of [serial 2692]
 


Theorem (751)                               [serial 2690] 
P [218] << current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 750:
Theorem (750) [serial 2692] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2690]
 


Theorem (752)                               [serial 2686] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not REGULATOR_OK() >>
by Substitution of Assertion Labels
and theorem 751:
Theorem (751) [serial 2690] used for:
  substituted Assertions' predicates for  labels  [serial 2686]
 


Theorem (753)                               [serial 2687] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (754)                               [serial 2682] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [305] << not REGULATOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 752 753:
Theorem (752) [serial 2686] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2682]
 
Theorem (753) [serial 2687] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2682]
 


Theorem (755)                               [serial 2678] 
P [218] << (not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
current_temperature_status = temperature.status and AXIOM_CTSR() and AXIOM_STR() and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [305] << (not (REGULATOR_OK()) and not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 754:
Theorem (754) [serial 2682] used for:
    normalization of [serial 2678]
 


Theorem (756)                               [serial 2677] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTSR() and AXIOM_STR() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [218] ->
Q [305] << (not (REGULATOR_OK()) and not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 755:
Theorem (755) [serial 2678] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2677]
 


Theorem (757)                               [serial 2673] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTSR() and AXIOM_STR() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [218] ->
Q [305] << not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 756:
Theorem (756) [serial 2677] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2673]
 


Theorem (758)                               [serial 2668] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE^0 or 
REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) and 
current_temperature_status = temperature.status and AXIOM_CTSR() and AXIOM_STR() >>
S [218] ->
Q [305] << (not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 757:
Theorem (757) [serial 2673] used for:
    normalization of [serial 2668]
 


Theorem (759)                               [serial 2667] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and (#Iso_Properties::Initialization_Timeout <= (now - start_time) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) >>
S [218] ->
Q [305] << (not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Associativity: (b.c).a = a.b.c
and theorem 758:
Theorem (758) [serial 2668] used for:
  Associativity: (b.c).a = a.b.c [serial 2667]
 


Theorem (760)                               [serial 2662] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and (#Iso_Properties::Initialization_Timeout <= (now - start_time) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) >>
S [218] ->
Q [305] << not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
true and true >>
by Law of And-Simplification:  P and true is P
and theorem 759:
Theorem (759) [serial 2667] used for:
  Law of And-Simplification:  P and true is P [serial 2662]
 


Theorem (761)                               [serial 2656] 
P [218] << ((current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
(((REGULATOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0) or (not ((current_temperature_status = Valid)))))) >>
S [218] ->
Q [305] << (not ((REGULATOR_OK()) or ((((now - start_time) < #Iso_Properties::Initialization_Timeout)))) and 
true and true) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 760:
Theorem (760) [serial 2662] used for:
    normalization of [serial 2656]
 


Theorem (762)                               [serial 2714] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (763)                               [serial 2711] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not current_temperature_status = Valid >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 762:
Theorem (762) [serial 2714] used for:
    normalization of [serial 2711]
 


Theorem (764)                               [serial 2710] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid >>
by Guided Substitution of Equals
and theorem 763:
Theorem (763) [serial 2711] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 2710]
 


Theorem (765)                               [serial 2708] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid >>
by Assume Present:  P = P@now = P^0 
and theorem 764:
Theorem (764) [serial 2710] used for:
  Assume Present:  P = P@now = P^0  [serial 2708]
 


Theorem (766)                               [serial 2703] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not CURRENT_TEMPERATURE_STATUS = Valid or (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
by Associativity: (b.c).a = a.b.c
and theorem 765:
Theorem (765) [serial 2708] used for:
  Associativity: (b.c).a = a.b.c [serial 2703]
 


Theorem (767)                               [serial 2700] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not CURRENT_TEMPERATURE_STATUS = Valid or (not (not INTERNAL_FAILURE) or 
not (not REGULATOR_INTERFACE_FAILURE)) >>
by Normalization
  Normalization Axiom:
    Complement
and theorem 766:
Theorem (766) [serial 2703] used for:
    normalization of [serial 2700]
 


Theorem (768)                               [serial 2695] 
P [218] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
current_temperature_status = temperature.status and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not CURRENT_TEMPERATURE_STATUS = Valid or not (not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE) >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 767:
Theorem (767) [serial 2700] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 2695]
 


Theorem (769)                               [serial 2692] 
P [218] << current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << (not ((not (REGULATOR_INTERFACE_FAILURE) and not (INTERNAL_FAILURE))) or 
not (((CURRENT_TEMPERATURE_STATUS = Valid)))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 768:
Theorem (768) [serial 2695] used for:
    normalization of [serial 2692]
 


Theorem (770)                               [serial 2690] 
P [218] << current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 769:
Theorem (769) [serial 2692] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2690]
 


Theorem (771)                               [serial 2686] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not REGULATOR_OK() >>
by Substitution of Assertion Labels
and theorem 770:
Theorem (770) [serial 2690] used for:
  substituted Assertions' predicates for  labels  [serial 2686]
 


Theorem (772)                               [serial 2687] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [247] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (773)                               [serial 2682] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [305] << not REGULATOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 771 772:
Theorem (771) [serial 2686] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2682]
 
Theorem (772) [serial 2687] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2682]
 


Theorem (774)                               [serial 2678] 
P [218] << (not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) and 
current_temperature_status = temperature.status and AXIOM_CTSR() and AXIOM_STR() and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [218] ->
Q [305] << (not (REGULATOR_OK()) and not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 773:
Theorem (773) [serial 2682] used for:
    normalization of [serial 2678]
 


Theorem (775)                               [serial 2677] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTSR() and AXIOM_STR() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [218] ->
Q [305] << (not (REGULATOR_OK()) and not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 774:
Theorem (774) [serial 2678] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2677]
 


Theorem (776)                               [serial 2673] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and current_temperature_status = temperature.status and 
AXIOM_CTSR() and AXIOM_STR() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [218] ->
Q [305] << not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 775:
Theorem (775) [serial 2677] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2673]
 


Theorem (777)                               [serial 2668] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and (INTERNAL_FAILURE^0 or 
REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) and 
current_temperature_status = temperature.status and AXIOM_CTSR() and AXIOM_STR() >>
S [218] ->
Q [305] << (not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 776:
Theorem (776) [serial 2673] used for:
    normalization of [serial 2668]
 


Theorem (778)                               [serial 2667] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and (#Iso_Properties::Initialization_Timeout <= (now - start_time) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) >>
S [218] ->
Q [305] << (not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Associativity: (b.c).a = a.b.c
and theorem 777:
Theorem (777) [serial 2668] used for:
  Associativity: (b.c).a = a.b.c [serial 2667]
 


Theorem (779)                               [serial 2662] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and (#Iso_Properties::Initialization_Timeout <= (now - start_time) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status)) >>
S [218] ->
Q [305] << not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
true and true >>
by Law of And-Simplification:  P and true is P
and theorem 778:
Theorem (778) [serial 2667] used for:
  Law of And-Simplification:  P and true is P [serial 2662]
 


Theorem (780)                               [serial 2656] 
P [218] << ((current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
(((REGULATOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0) or (not ((current_temperature_status = Valid)))))) >>
S [218] ->
Q [305] << (not ((REGULATOR_OK()) or ((((now - start_time) < #Iso_Properties::Initialization_Timeout)))) and 
true and true) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 779:
Theorem (779) [serial 2662] used for:
    normalization of [serial 2656]
 


Theorem (781)                               [serial 2652] 
P [218] << ((current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
(((REGULATOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0) or (not ((current_temperature_status = Valid)))))) >>
S [218] ->
Q [305] << (not ((REGULATOR_OK()) or ((((now - start_time) < #Iso_Properties::Initialization_Timeout)))) and 
AXIOM_STR() and AXIOM_CTSR()) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 780 780:
Theorem (780) [serial 2656] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (780) [serial 2656] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (782)                               [serial 2719] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid) >>
S [249] ->
Q [135] << not (now - start_time) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (783)                               [serial 2717] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid) >>
S [249] ->
Q [135] << (not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 782:
Theorem (782) [serial 2719] used for:
    normalization of [serial 2717]
 


Theorem (784)                               [serial 2716] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid) >>
S [249] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - start_time) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 783:
Theorem (783) [serial 2717] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2716]
 


Theorem (785)                               [serial 2709] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (INTERNAL_FAILURE or 
REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid) >>
S [249] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Guided Substitution of Equals
and theorem 784:
Theorem (784) [serial 2716] used for:
  Guided Substitution of Equals
 replacing "START_TIME" with its = "start_time" in its postcondition [serial 2709]
 


Theorem (786)                               [serial 2705] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (not CURRENT_TEMPERATURE_STATUS = Valid or 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) >>
S [249] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Associativity: (b.c).a = a.b.c
and theorem 785:
Theorem (785) [serial 2709] used for:
  Associativity: (b.c).a = a.b.c [serial 2705]
 


Theorem (787)                               [serial 2701] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (not CURRENT_TEMPERATURE_STATUS = Valid or 
(not (not INTERNAL_FAILURE) or not (not REGULATOR_INTERFACE_FAILURE))) >>
S [249] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Normalization
  Normalization Axiom:
    Complement
and theorem 786:
Theorem (786) [serial 2705] used for:
    normalization of [serial 2701]
 


Theorem (788)                               [serial 2697] 
P [305] << CURRENT_TEMPERATURE_STATUS = current_temperature_status and START_TIME = start_time and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and (not CURRENT_TEMPERATURE_STATUS = Valid or 
not (not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE)) >>
S [249] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 787:
Theorem (787) [serial 2701] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 2697]
 


Theorem (789)                               [serial 2693] 
P [305] << (not ((not (REGULATOR_INTERFACE_FAILURE) and not (INTERNAL_FAILURE))) or 
not (((CURRENT_TEMPERATURE_STATUS = Valid)))) and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and ((start_time = START_TIME)) >>
S [249] ->
Q [135] << (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 788:
Theorem (788) [serial 2697] used for:
    normalization of [serial 2693]
 


Theorem (790)                               [serial 2691] 
P [305] << not (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
not (now - start_time) < #Iso_Properties::Initialization_Timeout and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) >>
S [249] ->
Q [135] << (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 789:
Theorem (789) [serial 2693] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2691]
 


Theorem (791)                               [serial 2688] 
P [305] << not REGULATOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
AXIOM_CTSR() and AXIOM_STR() >>
S [249] ->
Q [135] << RUN() >>
by Substitution of Assertion Labels
and theorem 790:
Theorem (790) [serial 2691] used for:
  substituted Assertions' predicates for  labels  [serial 2688]
 


Theorem (792)                               [serial 2689] 
P [305] << not REGULATOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
AXIOM_CTSR() and AXIOM_STR() >>
S [249] ->
Q [135] << not REGULATOR_OK() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (793)                               [serial 2685] 
P [305] << not REGULATOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout and 
AXIOM_CTSR() and AXIOM_STR() >>
S [249] ->
Q [135] << RUN() and not REGULATOR_OK() >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 791 792:
Theorem (791) [serial 2688] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2685]
 
Theorem (792) [serial 2689] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2685]
 


Theorem (794)                               [serial 2680] 
P [305] << AXIOM_CTSR() and AXIOM_STR() and (not REGULATOR_OK() and not (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [249] ->
Q [135] << RUN() and not REGULATOR_OK() >>
by Associativity: (b.c).a = a.b.c
and theorem 793:
Theorem (793) [serial 2685] used for:
  Associativity: (b.c).a = a.b.c [serial 2680]
 


Theorem (795)                               [serial 2676] 
P [305] << AXIOM_CTSR() and AXIOM_STR() and (not (REGULATOR_OK()) and not ((now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
S [249] ->
Q [135] << RUN() and not REGULATOR_OK() >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 794:
Theorem (794) [serial 2680] used for:
    normalization of [serial 2676]
 


Theorem (796)                               [serial 2658] 
P [305] << AXIOM_CTSR() and AXIOM_STR() and not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [249] ->
Q [135] << RUN() and not REGULATOR_OK() >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 795:
Theorem (795) [serial 2676] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2658]
 


Theorem (797)                               [serial 2654] 
P [305] << (not ((REGULATOR_OK()) or ((((now - start_time) < #Iso_Properties::Initialization_Timeout)))) and 
AXIOM_STR() and AXIOM_CTSR()) >>
S [249] ->
Q [135] << not REGULATOR_OK() and RUN() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 796:
Theorem (796) [serial 2658] used for:
    normalization of [serial 2654]
 


Theorem (798)                               [serial 2671] 
P [249] << (Failed = regulator_mode)^0 and AXIOM_CTSR() and AXIOM_STR() and not (
REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout) >>
S [249] ->
Q [223] << true >>
by True Conclusion Schema (tc): P->true


Theorem (799)                               [serial 2666] 
P [249] << AXIOM_CTSR() and AXIOM_STR() and not (REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout) and 
(Failed = regulator_mode)^0 >>
S [249] ->
Q [223] << true >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 798:
Theorem (798) [serial 2671] used for:
    normalization of [serial 2666]
 


Theorem (800)                               [serial 2660] 
P [249] << (Failed = regulator_mode)^0 and (AXIOM_CTSR() and AXIOM_STR() and not (
REGULATOR_OK() or (now - start_time) < #Iso_Properties::Initialization_Timeout)) >>
S [249] ->
Q [223] << true >>
by Associativity: (b.c).a = a.b.c
and theorem 799:
Theorem (799) [serial 2666] used for:
  Associativity: (b.c).a = a.b.c [serial 2660]
 


Theorem (801)                               [serial 2655] 
P [249] << ((not ((REGULATOR_OK()) or ((((now - start_time) < #Iso_Properties::Initialization_Timeout)))) and 
AXIOM_STR() and AXIOM_CTSR())) and (regulator_mode = Failed)^0 >>
S [249] ->
Q [223] << true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 800:
Theorem (800) [serial 2660] used for:
    normalization of [serial 2655]
 


Theorem (802)                               [serial 2653] 
P [305] << (not ((REGULATOR_OK()) or ((((now - start_time) < #Iso_Properties::Initialization_Timeout)))) and 
AXIOM_STR() and AXIOM_CTSR()) >>
S [249] regulator_mode!(Failed)
Q [223] << true >>
by Enumeration Type Port Output 
and theorems 797 801:
Theorem (797) [serial 2654] used for:
  applied port output of enumeration type  regulator_mode!(Failed) [serial 2653]
 
Theorem (801) [serial 2655] used for:
  applied port output <<pre and (regulator_mode=Failed)^0>> -> <<post>> [serial 2653]
 


Theorem (803)                               [serial 1041] 
P [218] << ((current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
(((REGULATOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0) or (not ((current_temperature_status = Valid)))))) >>
S [247] << (not ((REGULATOR_OK()) or ((((now - start_time) < #Iso_Properties::Initialization_Timeout)))) and AXIOM_STR() and AXIOM_CTSR()) >>
regulator_mode!(Failed)
Q [223] << true >>
by Introduction of Existential Quantification (bl.aapre)
and theorems 781 802:
Theorem (781) [serial 2652] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1041]
 
Theorem (802) [serial 2653] used for:
  as <<pre>> S <<Q>> in <<P>> { <<pre>> S  } <<Q>> [serial 1041]
 


Theorem (804)                               [serial 2766] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
S [218] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (805)                               [serial 2764] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
S [218] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and Valid = current_temperature_status and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
by Guided Substitution of Equals
and theorem 804:
Theorem (804) [serial 2766] used for:
  Guided Substitution of Equals
 replacing "START_TIME" with its = "start_time" in its postcondition [serial 2764]
 


Theorem (806)                               [serial 2759] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [218] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and Valid = current_temperature_status and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
by Assume Present:  P = P@now = P^0 
and theorem 805:
Theorem (805) [serial 2764] used for:
  Assume Present:  P = P@now = P^0  [serial 2759]
 


Theorem (807)                               [serial 2755] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [218] ->
Q [305] << current_temperature_status = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 806:
Theorem (806) [serial 2759] used for:
    normalization of [serial 2755]
 


Theorem (808)                               [serial 2753] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [218] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (current_temperature_status = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) >>
by Associativity: (b.c).a = a.b.c
and theorem 807:
Theorem (807) [serial 2755] used for:
  Associativity: (b.c).a = a.b.c [serial 2753]
 


Theorem (809)                               [serial 2747] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [218] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) >>
by Guided Substitution of Equals
and theorem 808:
Theorem (808) [serial 2753] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 2747]
 


Theorem (810)                               [serial 2742] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [218] ->
Q [305] << (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 809:
Theorem (809) [serial 2747] used for:
    normalization of [serial 2742]
 


Theorem (811)                               [serial 2734] 
P [218] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and Valid = current_temperature_status and 
current_temperature_status = temperature.status and AXIOM_CTSR() and AXIOM_STR() and 
not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [218] ->
Q [305] << REGULATOR_OK() and RUN() >>
by Substitution of Assertion Labels
and theorem 810:
Theorem (810) [serial 2742] used for:
  substituted Assertions' predicates for  labels  [serial 2734]
 


Theorem (812)                               [serial 2727] 
P [218] << ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
not (((REGULATOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0)) and ((current_temperature_status = Valid)) and 
(current_temperature_status = temperature.status) and AXIOM_CTSR() and AXIOM_STR()) >>
S [218] ->
Q [305] << (REGULATOR_OK() and RUN()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 811:
Theorem (811) [serial 2734] used for:
    normalization of [serial 2727]
 


Theorem (813)                               [serial 2721] 
P [218] << ((current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
not (((REGULATOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0)) and ((current_temperature_status = Valid)))) >>
S [218] ->
Q [305] << (REGULATOR_OK() and RUN()) >>
by Associativity: (b.c).a = a.b.c
and theorem 812:
Theorem (812) [serial 2727] used for:
  Associativity: (b.c).a = a.b.c [serial 2721]
 


Theorem (814)                               [serial 2774] 
P [305] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [220] ->
Q [220] << #Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (815)                               [serial 2772] 
P [305] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [220] ->
Q [220] << #Iso_Properties::Initialization_Timeout <= ((now)^1 - (START_TIME)^1) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 814:
Theorem (814) [serial 2774] used for:
    normalization of [serial 2772]
 


Theorem (816)                               [serial 2770] 
P [305] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [220] ->
Q [220] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 815:
Theorem (815) [serial 2772] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2770]
 


Theorem (817)                               [serial 2768] 
P [305] << (now - START_TIME) <= ((now)^1 - (START_TIME)^1) and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
#Iso_Properties::Initialization_Timeout <= ((now)^1 - (START_TIME)^1) >>
S [220] ->
Q [220] << ((#Iso_Properties::Initialization_Timeout)^1 <= (now - START_TIME)^1) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Constants are always the same
and theorem 816:
Theorem (816) [serial 2770] used for:
    normalization of [serial 2768]
 


Theorem (818)                               [serial 2767] 
P [305] << (now - START_TIME) <= (now - START_TIME)^1 and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
S [220] ->
Q [220] << (#Iso_Properties::Initialization_Timeout <= (now - START_TIME))^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 817:
Theorem (817) [serial 2768] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2767]
 


Theorem (819)                               [serial 2745] 
P [305] << (now - START_TIME) <= (now - START_TIME)^1 and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [220] ->
Q [220] << (#Iso_Properties::Initialization_Timeout <= (now - START_TIME))^1 >>
by Transitivity: x<y and y<z -> x<z
and theorem 818:
Theorem (818) [serial 2767] used for:
  Transitivity: x<y and y<z -> x<z [serial 2745]
 


Theorem (820)                               [serial 2741] 
P [305] << (((now - START_TIME) <= (now - START_TIME)^1)) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [220] ->
Q [220] << ((((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)))^1 >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 819:
Theorem (819) [serial 2745] used for:
    normalization of [serial 2741]
 


Theorem (821)                               [serial 2730] 
P [305] << AXIOM_PAST_INIT() and RUN() >>
S [220] ->
Q [220] << (RUN())^1 >>
by Substitution of Assertion Labels
and theorem 820:
Theorem (820) [serial 2741] used for:
  substituted Assertions' predicates for  labels  [serial 2730]
 


Theorem (822)                               [serial 2722] 
P [305] << (RUN() and AXIOM_PAST_INIT()) >>
S [220] ->
Q [220] << (RUN())^1 >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 821:
Theorem (821) [serial 2730] used for:
    normalization of [serial 2722]
 


Theorem (823)                               [serial 2732] 
P [305] << REGULATOR_OK() and RUN() >>
S [257] ->
Q [134] << REGULATOR_OK() and RUN() >>
by Identity (id):  P->P is tautology


Theorem (824)                               [serial 2724] 
P [305] << (REGULATOR_OK() and RUN()) >>
S [257] ->
Q [134] << REGULATOR_OK() and RUN() >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 823:
Theorem (823) [serial 2732] used for:
    normalization of [serial 2724]
 


Theorem (825)                               [serial 2765] 
P [257] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = Valid and 
Normal = regulator_mode and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
S [257] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (826)                               [serial 2761] 
P [257] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (Normal = regulator_mode)^0 and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
S [257] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Assume Present:  P = P@now = P^0 
and theorem 825:
Theorem (825) [serial 2765] used for:
  Assume Present:  P = P@now = P^0  [serial 2761]
 


Theorem (827)                               [serial 2756] 
P [257] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (Normal = regulator_mode)^0 >>
S [257] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 826:
Theorem (826) [serial 2761] used for:
    normalization of [serial 2756]
 


Theorem (828)                               [serial 2754] 
P [257] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) and (Normal = regulator_mode)^0 >>
S [257] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Associativity: (b.c).a = a.b.c
and theorem 827:
Theorem (827) [serial 2756] used for:
  Associativity: (b.c).a = a.b.c [serial 2754]
 


Theorem (829)                               [serial 2749] 
P [257] << (Normal = regulator_mode)^0 and (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) >>
S [257] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Associativity: (b.c).a = a.b.c
and theorem 828:
Theorem (828) [serial 2754] used for:
  Associativity: (b.c).a = a.b.c [serial 2749]
 


Theorem (830)                               [serial 2743] 
P [257] << (Normal = regulator_mode)^0 and ((not (REGULATOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) >>
S [257] ->
Q [305] << (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 829:
Theorem (829) [serial 2749] used for:
    normalization of [serial 2743]
 


Theorem (831)                               [serial 2736] 
P [257] << (Normal = regulator_mode)^0 and (REGULATOR_OK() and RUN()) >>
S [257] ->
Q [305] << RUN() >>
by Substitution of Assertion Labels
and theorem 830:
Theorem (830) [serial 2743] used for:
  substituted Assertions' predicates for  labels  [serial 2736]
 


Theorem (832)                               [serial 2728] 
P [257] << ((REGULATOR_OK() and RUN())) and (regulator_mode = Normal)^0 >>
S [257] ->
Q [305] << ((RUN())) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 831:
Theorem (831) [serial 2736] used for:
    normalization of [serial 2728]
 


Theorem (833)                               [serial 2726] 
P [257] << ((REGULATOR_OK() and RUN())) and (regulator_mode = Normal)^0 >>
S [257] ->
Q [305] << (RUN() and true) >>
by Law of And-Simplification:  P and true is P
and theorem 832:
Theorem (832) [serial 2728] used for:
  Law of And-Simplification:  P and true is P [serial 2726]
 


Theorem (834)                               [serial 2765] 
P [257] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = Valid and 
Normal = regulator_mode and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
S [257] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (835)                               [serial 2761] 
P [257] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (Normal = regulator_mode)^0 and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
S [257] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Assume Present:  P = P@now = P^0 
and theorem 834:
Theorem (834) [serial 2765] used for:
  Assume Present:  P = P@now = P^0  [serial 2761]
 


Theorem (836)                               [serial 2756] 
P [257] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (Normal = regulator_mode)^0 >>
S [257] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 835:
Theorem (835) [serial 2761] used for:
    normalization of [serial 2756]
 


Theorem (837)                               [serial 2754] 
P [257] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) and (Normal = regulator_mode)^0 >>
S [257] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Associativity: (b.c).a = a.b.c
and theorem 836:
Theorem (836) [serial 2756] used for:
  Associativity: (b.c).a = a.b.c [serial 2754]
 


Theorem (838)                               [serial 2749] 
P [257] << (Normal = regulator_mode)^0 and (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) >>
S [257] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Associativity: (b.c).a = a.b.c
and theorem 837:
Theorem (837) [serial 2754] used for:
  Associativity: (b.c).a = a.b.c [serial 2749]
 


Theorem (839)                               [serial 2743] 
P [257] << (Normal = regulator_mode)^0 and ((not (REGULATOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) >>
S [257] ->
Q [305] << (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 838:
Theorem (838) [serial 2749] used for:
    normalization of [serial 2743]
 


Theorem (840)                               [serial 2736] 
P [257] << (Normal = regulator_mode)^0 and (REGULATOR_OK() and RUN()) >>
S [257] ->
Q [305] << RUN() >>
by Substitution of Assertion Labels
and theorem 839:
Theorem (839) [serial 2743] used for:
  substituted Assertions' predicates for  labels  [serial 2736]
 


Theorem (841)                               [serial 2728] 
P [257] << ((REGULATOR_OK() and RUN())) and (regulator_mode = Normal)^0 >>
S [257] ->
Q [305] << ((RUN())) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 840:
Theorem (840) [serial 2736] used for:
    normalization of [serial 2728]
 


Theorem (842)                               [serial 2726] 
P [257] << ((REGULATOR_OK() and RUN())) and (regulator_mode = Normal)^0 >>
S [257] ->
Q [305] << (RUN() and true) >>
by Law of And-Simplification:  P and true is P
and theorem 841:
Theorem (841) [serial 2728] used for:
  Law of And-Simplification:  P and true is P [serial 2726]
 


Theorem (843)                               [serial 2725] 
P [257] << ((REGULATOR_OK() and RUN())) and (regulator_mode = Normal)^0 >>
S [257] ->
Q [305] << (RUN() and AXIOM_PAST_INIT()) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 842 842:
Theorem (842) [serial 2726] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (842) [serial 2726] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (844)                               [serial 2723] 
P [305] << (REGULATOR_OK() and RUN()) >>
S [257] regulator_mode!(Normal)
Q [305] << (RUN() and AXIOM_PAST_INIT()) >>
by Enumeration Type Port Output 
and theorems 824 843:
Theorem (824) [serial 2724] used for:
  applied port output of enumeration type  regulator_mode!(Normal) [serial 2723]
 
Theorem (843) [serial 2725] used for:
  applied port output <<pre and (regulator_mode=Normal)^0>> -> <<post>> [serial 2723]
 


Theorem (845)                               [serial 1042] 
P [218] << ((current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR() and ((((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and 
not (((REGULATOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0)) and ((current_temperature_status = Valid)))) >>
S [256] << (REGULATOR_OK() and RUN()) >>
regulator_mode!(Normal)
<< (RUN() and AXIOM_PAST_INIT()) >>
Q [220] << (RUN())^1 >>
by Introduction of Existential Quantification (bl.aab)
and theorems 813 822 844:
Theorem (813) [serial 2721] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1042]
 
Theorem (822) [serial 2722] used for:
  as <<post>> -> <<Q>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1042]
 
Theorem (844) [serial 2723] used for:
  as <<pre>> S <<post>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1042]
 


Theorem (846)                               [serial 2778] 
P [218] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and (now - start_time) < #Iso_Properties::Initialization_Timeout >>
S [260] ->
Q [216] << true >>
by True Conclusion Schema (tc): P->true


Theorem (847)                               [serial 1043] 
P [218] << ((current_temperature_status = temperature.status) and AXIOM_CTSR() and 
AXIOM_STR() and (((now - start_time) < #Iso_Properties::Initialization_Timeout))) >>
S [260] ->
Q [216] << (true)^1 >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 846:
Theorem (846) [serial 2778] used for:
    normalization of [serial 1043]
 


Theorem (848)                               [serial 2780] 
P [220] << RUN() >>
S [220] ->
Q [265] << RUN() >>
by Identity (id):  P->P is tautology


Theorem (849)                               [serial 2798] 
P [305] << CURRENT_TEMP = temperature and current_temperature_status = temperature.status and 
RUN() >>
S [222] ->
Q [305] << current_temperature_status = temperature.status and RUN() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (850)                               [serial 2793] 
P [305] << CURRENT_TEMP = temperature and current_temperature_status = temperature.status and 
RUN() >>
S [222] ->
Q [305] << current_temperature_status = temperature.status and RUN() and true and 
true >>
by Law of And-Simplification:  P and true is P
and theorem 849:
Theorem (849) [serial 2798] used for:
  Law of And-Simplification:  P and true is P [serial 2793]
 


Theorem (851)                               [serial 2786] 
P [305] << (((current_temperature_status = temperature.status)) and ((temperature = CURRENT_TEMP)) and 
RUN()) >>
S [222] ->
Q [305] << ((current_temperature_status = temperature.status) and RUN() and true and 
true) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 850:
Theorem (850) [serial 2793] used for:
    normalization of [serial 2786]
 


Theorem (852)                               [serial 2798] 
P [305] << CURRENT_TEMP = temperature and current_temperature_status = temperature.status and 
RUN() >>
S [222] ->
Q [305] << current_temperature_status = temperature.status and RUN() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (853)                               [serial 2793] 
P [305] << CURRENT_TEMP = temperature and current_temperature_status = temperature.status and 
RUN() >>
S [222] ->
Q [305] << current_temperature_status = temperature.status and RUN() and true and 
true >>
by Law of And-Simplification:  P and true is P
and theorem 852:
Theorem (852) [serial 2798] used for:
  Law of And-Simplification:  P and true is P [serial 2793]
 


Theorem (854)                               [serial 2786] 
P [305] << (((current_temperature_status = temperature.status)) and ((temperature = CURRENT_TEMP)) and 
RUN()) >>
S [222] ->
Q [305] << ((current_temperature_status = temperature.status) and RUN() and true and 
true) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 853:
Theorem (853) [serial 2793] used for:
    normalization of [serial 2786]
 


Theorem (855)                               [serial 2781] 
P [305] << (((current_temperature_status = temperature.status)) and ((temperature = CURRENT_TEMP)) and 
RUN()) >>
S [222] ->
Q [305] << ((current_temperature_status = temperature.status) and RUN() and AXIOM_CTSR() and 
AXIOM_STR()) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 854 854:
Theorem (854) [serial 2786] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (854) [serial 2786] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (856)                               [serial 2789] 
P [266] << CURRENT_TEMP = temperature and RUN() >>
S [266] ->
Q [305] << CURRENT_TEMP = temperature and RUN() >>
by Identity (id):  P->P is tautology


Theorem (857)                               [serial 2784] 
P [266] << (RUN()) and temperature = CURRENT_TEMP >>
S [266] ->
Q [305] << ((temperature = CURRENT_TEMP) and RUN()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 856:
Theorem (856) [serial 2789] used for:
    normalization of [serial 2784]
 


Theorem (858)                               [serial 2782] 
P [265] << RUN() >>
S [266] current_temperature?(temperature)
Q [305] << ((temperature = CURRENT_TEMP) and RUN()) >>
by Port Data Input: when <<A and v=M(p)>> -> <<B>> then <<A>> p?(v) <<B>> (bl.pi)
and theorem 857:
Theorem (857) [serial 2784] used for:
  applied port input of value <<pre and temperature=M(current_temperature)>> -> <<post>> [serial 2782]
 


Theorem (859)                               [serial 2799] 
P [305] << CURRENT_TEMP = temperature and RUN() >>
S [268] ->
Q [305] << CURRENT_TEMP = temperature and RUN() >>
by Identity (id):  P->P is tautology


Theorem (860)                               [serial 2797] 
P [305] << CURRENT_TEMP = temperature and RUN() >>
S [268] ->
Q [305] << CURRENT_TEMP = temperature and true and RUN() >>
by Law of And-Simplification:  P and true is P
and theorem 859:
Theorem (859) [serial 2799] used for:
  Law of And-Simplification:  P and true is P [serial 2797]
 


Theorem (861)                               [serial 2791] 
P [305] << CURRENT_TEMP = temperature and RUN() >>
S [268] ->
Q [305] << CURRENT_TEMP = temperature and temperature.status = temperature.status and 
RUN() >>
by Equality Law (idistr):  a=a <-> true
and theorem 860:
Theorem (860) [serial 2797] used for:
  Equality Law (idistr):  a=a <-> true [serial 2791]
 


Theorem (862)                               [serial 2785] 
P [305] << ((temperature = CURRENT_TEMP) and RUN()) >>
S [268] ->
Q [305] << ((((temperature.status) = temperature.status)) and ((temperature = CURRENT_TEMP)) and 
RUN()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 861:
Theorem (861) [serial 2791] used for:
    normalization of [serial 2785]
 


Theorem (863)                               [serial 2783] 
P [305] << ((temperature = CURRENT_TEMP) and RUN()) >>
S [268] current_temperature_status := temperature.status
Q [305] << (((current_temperature_status = temperature.status)) and ((temperature = CURRENT_TEMP)) and 
RUN()) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 862:
Theorem (862) [serial 2785] used for:
  applied wp for assignment [serial 2783]
 


Theorem (864)                               [serial 1044] 
P [220] << RUN() >>
S [265] << RUN() >>
current_temperature?(temperature)
;
<< ((temperature = CURRENT_TEMP) and RUN()) >>
current_temperature_status := temperature.status
<< (((current_temperature_status = temperature.status)) and ((temperature = CURRENT_TEMP)) and RUN()) >>
Q [222] << ((current_temperature_status = temperature.status) and RUN() and AXIOM_CTSR() and 
AXIOM_STR()) >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 848 855 858 863:
Theorem (848) [serial 2780] used for:
  P -> P1 in sequential composition for [serial 1044]
 
Theorem (855) [serial 2781] used for:
  Q1 -> Q in sequential composition for [serial 1044]
 
Theorem (858) [serial 2782] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1044]
 
Theorem (863) [serial 2783] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1044]
 


Theorem (865)                               [serial 2840] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
S [222] ->
Q [276] << Valid = current_temperature_status and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (866)                               [serial 2839] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [222] ->
Q [276] << current_temperature_status = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
by Assume Present:  P = P@now = P^0 
and theorem 865:
Theorem (865) [serial 2840] used for:
  Assume Present:  P = P@now = P^0  [serial 2839]
 


Theorem (867)                               [serial 2836] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and Valid = current_temperature_status and current_temperature_status = temperature.status and 
not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [222] ->
Q [276] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
by Guided Substitution of Equals
and theorem 866:
Theorem (866) [serial 2839] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 2836]
 


Theorem (868)                               [serial 2832] 
P [222] << Valid = current_temperature_status and current_temperature_status = temperature.status and 
((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and ((start_time = START_TIME)) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and not (
INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [222] ->
Q [276] << (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 867:
Theorem (867) [serial 2836] used for:
    normalization of [serial 2832]
 


Theorem (869)                               [serial 2829] 
P [222] << Valid = current_temperature_status and current_temperature_status = temperature.status and 
AXIOM_CTSR() and AXIOM_STR() and RUN() and not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [222] ->
Q [276] << REGULATOR_OK() >>
by Substitution of Assertion Labels
and theorem 868:
Theorem (868) [serial 2832] used for:
  substituted Assertions' predicates for  labels  [serial 2829]
 


Theorem (870)                               [serial 2830] 
P [222] << Valid = current_temperature_status and current_temperature_status = temperature.status and 
AXIOM_CTSR() and AXIOM_STR() and RUN() and not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [222] ->
Q [276] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (871)                               [serial 2824] 
P [222] << Valid = current_temperature_status and current_temperature_status = temperature.status and 
AXIOM_CTSR() and AXIOM_STR() and RUN() and not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) >>
S [222] ->
Q [305] << REGULATOR_OK() and RUN() >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 869 870:
Theorem (869) [serial 2829] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2824]
 
Theorem (870) [serial 2830] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2824]
 


Theorem (872)                               [serial 2818] 
P [222] << Valid = current_temperature_status and not (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0) and 
current_temperature_status = temperature.status and AXIOM_CTSR() and AXIOM_STR() and 
RUN() >>
S [222] ->
Q [305] << REGULATOR_OK() and RUN() >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 871:
Theorem (871) [serial 2824] used for:
    normalization of [serial 2818]
 


Theorem (873)                               [serial 2807] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() and (Valid = current_temperature_status and not (INTERNAL_FAILURE^0 or 
REGULATOR_INTERFACE_FAILURE^0)) >>
S [222] ->
Q [305] << REGULATOR_OK() and RUN() >>
by Associativity: (b.c).a = a.b.c
and theorem 872:
Theorem (872) [serial 2818] used for:
  Associativity: (b.c).a = a.b.c [serial 2807]
 


Theorem (874)                               [serial 2800] 
P [222] << ((current_temperature_status = temperature.status) and RUN() and AXIOM_CTSR() and 
AXIOM_STR() and (not (((REGULATOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0)) and 
((current_temperature_status = Valid)))) >>
S [222] ->
Q [305] << (REGULATOR_OK() and RUN()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 873:
Theorem (873) [serial 2807] used for:
    normalization of [serial 2800]
 


Theorem (875)                               [serial 2848] 
P [305] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [220] ->
Q [220] << #Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (876)                               [serial 2846] 
P [305] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [220] ->
Q [220] << #Iso_Properties::Initialization_Timeout <= ((now)^1 - (START_TIME)^1) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 875:
Theorem (875) [serial 2848] used for:
    normalization of [serial 2846]
 


Theorem (877)                               [serial 2844] 
P [305] << (now - START_TIME) <= (now^1 - START_TIME^1) and #Iso_Properties::Initialization_Timeout <= (now^1 - START_TIME^1) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [220] ->
Q [220] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 876:
Theorem (876) [serial 2846] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2844]
 


Theorem (878)                               [serial 2842] 
P [305] << (now - START_TIME) <= ((now)^1 - (START_TIME)^1) and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
#Iso_Properties::Initialization_Timeout <= ((now)^1 - (START_TIME)^1) >>
S [220] ->
Q [220] << ((#Iso_Properties::Initialization_Timeout)^1 <= (now - START_TIME)^1) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Constants are always the same
and theorem 877:
Theorem (877) [serial 2844] used for:
    normalization of [serial 2842]
 


Theorem (879)                               [serial 2841] 
P [305] << (now - START_TIME) <= (now - START_TIME)^1 and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME)^1 >>
S [220] ->
Q [220] << (#Iso_Properties::Initialization_Timeout <= (now - START_TIME))^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 878:
Theorem (878) [serial 2842] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2841]
 


Theorem (880)                               [serial 2834] 
P [305] << (now - START_TIME) <= (now - START_TIME)^1 and #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
S [220] ->
Q [220] << (#Iso_Properties::Initialization_Timeout <= (now - START_TIME))^1 >>
by Transitivity: x<y and y<z -> x<z
and theorem 879:
Theorem (879) [serial 2841] used for:
  Transitivity: x<y and y<z -> x<z [serial 2834]
 


Theorem (881)                               [serial 2831] 
P [305] << (((now - START_TIME) <= (now - START_TIME)^1)) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
S [220] ->
Q [220] << ((((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)))^1 >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 880:
Theorem (880) [serial 2834] used for:
    normalization of [serial 2831]
 


Theorem (882)                               [serial 2809] 
P [305] << AXIOM_PAST_INIT() and RUN() >>
S [220] ->
Q [220] << (RUN())^1 >>
by Substitution of Assertion Labels
and theorem 881:
Theorem (881) [serial 2831] used for:
  substituted Assertions' predicates for  labels  [serial 2809]
 


Theorem (883)                               [serial 2801] 
P [305] << (RUN() and AXIOM_PAST_INIT()) >>
S [220] ->
Q [220] << (RUN())^1 >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 882:
Theorem (882) [serial 2809] used for:
    normalization of [serial 2801]
 


Theorem (884)                               [serial 2811] 
P [305] << REGULATOR_OK() and RUN() >>
S [277] ->
Q [134] << REGULATOR_OK() and RUN() >>
by Identity (id):  P->P is tautology


Theorem (885)                               [serial 2803] 
P [305] << (REGULATOR_OK() and RUN()) >>
S [277] ->
Q [134] << REGULATOR_OK() and RUN() >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 884:
Theorem (884) [serial 2811] used for:
    normalization of [serial 2803]
 


Theorem (886)                               [serial 2826] 
P [277] << (Normal = regulator_mode)^0 and REGULATOR_OK() and RUN() >>
S [277] ->
Q [305] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (887)                               [serial 2820] 
P [277] << REGULATOR_OK() and RUN() and (Normal = regulator_mode)^0 >>
S [277] ->
Q [305] << (RUN()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 886:
Theorem (886) [serial 2826] used for:
    normalization of [serial 2820]
 


Theorem (888)                               [serial 2819] 
P [277] << (Normal = regulator_mode)^0 and (REGULATOR_OK() and RUN()) >>
S [277] ->
Q [305] << (RUN()) >>
by Associativity: (b.c).a = a.b.c
and theorem 887:
Theorem (887) [serial 2820] used for:
  Associativity: (b.c).a = a.b.c [serial 2819]
 


Theorem (889)                               [serial 2813] 
P [277] << (Normal = regulator_mode)^0 and (REGULATOR_OK() and RUN()) >>
S [277] ->
Q [305] << RUN() and true >>
by Law of And-Simplification:  P and true is P
and theorem 888:
Theorem (888) [serial 2819] used for:
  Law of And-Simplification:  P and true is P [serial 2813]
 


Theorem (890)                               [serial 2805] 
P [277] << ((REGULATOR_OK() and RUN())) and (regulator_mode = Normal)^0 >>
S [277] ->
Q [305] << (RUN() and true) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 889:
Theorem (889) [serial 2813] used for:
    normalization of [serial 2805]
 


Theorem (891)                               [serial 2826] 
P [277] << (Normal = regulator_mode)^0 and REGULATOR_OK() and RUN() >>
S [277] ->
Q [305] << RUN() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (892)                               [serial 2820] 
P [277] << REGULATOR_OK() and RUN() and (Normal = regulator_mode)^0 >>
S [277] ->
Q [305] << (RUN()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 891:
Theorem (891) [serial 2826] used for:
    normalization of [serial 2820]
 


Theorem (893)                               [serial 2819] 
P [277] << (Normal = regulator_mode)^0 and (REGULATOR_OK() and RUN()) >>
S [277] ->
Q [305] << (RUN()) >>
by Associativity: (b.c).a = a.b.c
and theorem 892:
Theorem (892) [serial 2820] used for:
  Associativity: (b.c).a = a.b.c [serial 2819]
 


Theorem (894)                               [serial 2813] 
P [277] << (Normal = regulator_mode)^0 and (REGULATOR_OK() and RUN()) >>
S [277] ->
Q [305] << RUN() and true >>
by Law of And-Simplification:  P and true is P
and theorem 893:
Theorem (893) [serial 2819] used for:
  Law of And-Simplification:  P and true is P [serial 2813]
 


Theorem (895)                               [serial 2805] 
P [277] << ((REGULATOR_OK() and RUN())) and (regulator_mode = Normal)^0 >>
S [277] ->
Q [305] << (RUN() and true) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 894:
Theorem (894) [serial 2813] used for:
    normalization of [serial 2805]
 


Theorem (896)                               [serial 2804] 
P [277] << ((REGULATOR_OK() and RUN())) and (regulator_mode = Normal)^0 >>
S [277] ->
Q [305] << (RUN() and AXIOM_PAST_INIT()) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 895 895:
Theorem (895) [serial 2805] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (895) [serial 2805] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (897)                               [serial 2802] 
P [305] << (REGULATOR_OK() and RUN()) >>
S [277] regulator_mode!(Normal)
Q [305] << (RUN() and AXIOM_PAST_INIT()) >>
by Enumeration Type Port Output 
and theorems 885 896:
Theorem (885) [serial 2803] used for:
  applied port output of enumeration type  regulator_mode!(Normal) [serial 2802]
 
Theorem (896) [serial 2804] used for:
  applied port output <<pre and (regulator_mode=Normal)^0>> -> <<post>> [serial 2802]
 


Theorem (898)                               [serial 1045] 
P [222] << ((current_temperature_status = temperature.status) and RUN() and AXIOM_CTSR() and 
AXIOM_STR() and (not (((REGULATOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0)) and 
((current_temperature_status = Valid)))) >>
S [276] << (REGULATOR_OK() and RUN()) >>
regulator_mode!(Normal)
<< (RUN() and AXIOM_PAST_INIT()) >>
Q [220] << (RUN())^1 >>
by Introduction of Existential Quantification (bl.aab)
and theorems 874 883 897:
Theorem (874) [serial 2800] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1045]
 
Theorem (883) [serial 2801] used for:
  as <<post>> -> <<Q>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1045]
 
Theorem (897) [serial 2802] used for:
  as <<pre>> S <<post>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1045]
 


Theorem (899)                               [serial 2963] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [222] ->
Q [4] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (900)                               [serial 2959] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [222] ->
Q [4] << #Iso_Properties::Initialization_Timeout <= (now - start_time) >>
by Guided Substitution of Equals
and theorem 899:
Theorem (899) [serial 2963] used for:
  Guided Substitution of Equals
 replacing "start_time" with its = "START_TIME" in its postcondition [serial 2959]
 


Theorem (901)                               [serial 2891] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [4] << #Iso_Properties::Initialization_Timeout <= (now - start_time) >>
by Assume Present:  P = P@now = P^0 
and theorem 900:
Theorem (900) [serial 2959] used for:
  Assume Present:  P = P@now = P^0  [serial 2891]
 


Theorem (902)                               [serial 2884] 
P [222] << current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [4] << #Iso_Properties::Initialization_Timeout <= (now - start_time) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 901:
Theorem (901) [serial 2891] used for:
    normalization of [serial 2884]
 


Theorem (903)                               [serial 2870] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [222] ->
Q [4] << #Iso_Properties::Initialization_Timeout <= (now - start_time) >>
by Substitution of Assertion Labels
and theorem 902:
Theorem (902) [serial 2884] used for:
  substituted Assertions' predicates for  labels  [serial 2870]
 


Theorem (904)                               [serial 2961] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [222] ->
Q [286] << true >>
by True Conclusion Schema (tc): P->true


Theorem (905)                               [serial 2957] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [286] << true >>
by Assume Present:  P = P@now = P^0 
and theorem 904:
Theorem (904) [serial 2961] used for:
  Assume Present:  P = P@now = P^0  [serial 2957]
 


Theorem (906)                               [serial 2944] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [286] << current_temperature_status = current_temperature_status >>
by Equality Law (idistr):  a=a <-> true
and theorem 905:
Theorem (905) [serial 2957] used for:
  Equality Law (idistr):  a=a <-> true [serial 2944]
 


Theorem (907)                               [serial 2893] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [286] << CURRENT_TEMPERATURE_STATUS = current_temperature_status >>
by Guided Substitution of Equals
and theorem 906:
Theorem (906) [serial 2944] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 2893]
 


Theorem (908)                               [serial 2885] 
P [222] << current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [286] << ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 907:
Theorem (907) [serial 2893] used for:
    normalization of [serial 2885]
 


Theorem (909)                               [serial 2871] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [222] ->
Q [286] << AXIOM_CTSR() >>
by Substitution of Assertion Labels
and theorem 908:
Theorem (908) [serial 2885] used for:
  substituted Assertions' predicates for  labels  [serial 2871]
 


Theorem (910)                               [serial 2960] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [222] ->
Q [286] << START_TIME = start_time >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (911)                               [serial 2895] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [286] << START_TIME = start_time >>
by Assume Present:  P = P@now = P^0 
and theorem 910:
Theorem (910) [serial 2960] used for:
  Assume Present:  P = P@now = P^0  [serial 2895]
 


Theorem (912)                               [serial 2886] 
P [222] << current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [286] << ((start_time = START_TIME)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 911:
Theorem (911) [serial 2895] used for:
    normalization of [serial 2886]
 


Theorem (913)                               [serial 2872] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [222] ->
Q [286] << AXIOM_STR() >>
by Substitution of Assertion Labels
and theorem 912:
Theorem (912) [serial 2886] used for:
  substituted Assertions' predicates for  labels  [serial 2872]
 


Theorem (914)                               [serial 2962] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (915)                               [serial 2958] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by Assume Present:  P = P@now = P^0 
and theorem 914:
Theorem (914) [serial 2962] used for:
  Assume Present:  P = P@now = P^0  [serial 2958]
 


Theorem (916)                               [serial 2954] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status or 
not Valid = current_temperature_status >>
by Law of Or-Simplification: P or P is P
and theorem 915:
Theorem (915) [serial 2958] used for:
  Law of Or-Simplification: P or P is P [serial 2954]
 


Theorem (917)                               [serial 2946] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not current_temperature_status = Valid or 
not Valid = current_temperature_status >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 916:
Theorem (916) [serial 2954] used for:
    normalization of [serial 2946]
 


Theorem (918)                               [serial 2943] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid or 
not Valid = current_temperature_status >>
by Guided Substitution of Equals
and theorem 917:
Theorem (917) [serial 2946] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 2943]
 


Theorem (919)                               [serial 2940] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << not CURRENT_TEMPERATURE_STATUS = Valid or (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) or 
not Valid = current_temperature_status >>
by Associativity: (b.c).a = a.b.c
and theorem 918:
Theorem (918) [serial 2943] used for:
  Associativity: (b.c).a = a.b.c [serial 2940]
 


Theorem (920)                               [serial 2934] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << not Valid = current_temperature_status or (not CURRENT_TEMPERATURE_STATUS = Valid or 
(INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) >>
by Associativity: (b.c).a = a.b.c
and theorem 919:
Theorem (919) [serial 2940] used for:
  Associativity: (b.c).a = a.b.c [serial 2934]
 


Theorem (921)                               [serial 2925] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << not Valid = current_temperature_status or (not CURRENT_TEMPERATURE_STATUS = Valid or 
(not (not INTERNAL_FAILURE) or not (not REGULATOR_INTERFACE_FAILURE))) >>
by Normalization
  Normalization Axiom:
    Complement
and theorem 920:
Theorem (920) [serial 2934] used for:
    normalization of [serial 2925]
 


Theorem (922)                               [serial 2919] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << not Valid = current_temperature_status or (not CURRENT_TEMPERATURE_STATUS = Valid or 
not (not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE)) >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 921:
Theorem (921) [serial 2925] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 2919]
 


Theorem (923)                               [serial 2910] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << not Valid = current_temperature_status or (not (CURRENT_TEMPERATURE_STATUS = Valid) or 
not ((not (INTERNAL_FAILURE) and not (REGULATOR_INTERFACE_FAILURE)))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 922:
Theorem (922) [serial 2919] used for:
    normalization of [serial 2910]
 


Theorem (924)                               [serial 2901] 
P [222] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and current_temperature_status = temperature.status and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << not Valid = current_temperature_status or not (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 923:
Theorem (923) [serial 2910] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2901]
 


Theorem (925)                               [serial 2889] 
P [222] << current_temperature_status = temperature.status and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and 
(INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or not Valid = current_temperature_status) >>
S [222] ->
Q [284] << not Valid = current_temperature_status or not (not (REGULATOR_INTERFACE_FAILURE or 
INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 924:
Theorem (924) [serial 2901] used for:
    normalization of [serial 2889]
 


Theorem (926)                               [serial 2880] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [222] ->
Q [284] << not Valid = current_temperature_status or not REGULATOR_OK() >>
by Substitution of Assertion Labels
and theorem 925:
Theorem (925) [serial 2889] used for:
  substituted Assertions' predicates for  labels  [serial 2880]
 


Theorem (927)                               [serial 2873] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [222] ->
Q [284] << (not Valid = current_temperature_status or not REGULATOR_OK()) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 926:
Theorem (926) [serial 2880] used for:
    normalization of [serial 2873]
 


Theorem (928)                               [serial 2856] 
P [222] << current_temperature_status = temperature.status and AXIOM_CTSR() and 
AXIOM_STR() and RUN() and (INTERNAL_FAILURE^0 or REGULATOR_INTERFACE_FAILURE^0 or 
not Valid = current_temperature_status) >>
S [222] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and AXIOM_CTSR() and 
AXIOM_STR() and (not Valid = current_temperature_status or not REGULATOR_OK()) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 903 909 913 927:
Theorem (903) [serial 2870] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2856]
 
Theorem (909) [serial 2871] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2856]
 
Theorem (913) [serial 2872] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2856]
 
Theorem (927) [serial 2873] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2856]
 


Theorem (929)                               [serial 2851] 
P [222] << ((current_temperature_status = temperature.status) and RUN() and AXIOM_CTSR() and 
AXIOM_STR() and ((((REGULATOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0) or 
(not ((current_temperature_status = Valid)))))) >>
S [222] ->
Q [305] << (((not REGULATOR_OK()) or (not ((current_temperature_status = Valid)))) and 
(((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and AXIOM_STR() and 
AXIOM_CTSR()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 928:
Theorem (928) [serial 2856] used for:
    normalization of [serial 2851]
 


Theorem (930)                               [serial 2964] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or 
not CURRENT_TEMPERATURE_STATUS = Valid or not Valid = current_temperature_status) >>
S [287] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - start_time) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (931)                               [serial 2941] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or 
not CURRENT_TEMPERATURE_STATUS = Valid or not Valid = current_temperature_status) >>
S [287] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Guided Substitution of Equals
and theorem 930:
Theorem (930) [serial 2964] used for:
  Guided Substitution of Equals
 replacing "START_TIME" with its = "start_time" in its postcondition [serial 2941]
 


Theorem (932)                               [serial 2938] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not CURRENT_TEMPERATURE_STATUS = Valid or (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) or not Valid = current_temperature_status) >>
S [287] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Associativity: (b.c).a = a.b.c
and theorem 931:
Theorem (931) [serial 2941] used for:
  Associativity: (b.c).a = a.b.c [serial 2938]
 


Theorem (933)                               [serial 2930] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or (
not CURRENT_TEMPERATURE_STATUS = Valid or (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) >>
S [287] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Associativity: (b.c).a = a.b.c
and theorem 932:
Theorem (932) [serial 2938] used for:
  Associativity: (b.c).a = a.b.c [serial 2930]
 


Theorem (934)                               [serial 2923] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or (
not CURRENT_TEMPERATURE_STATUS = Valid or (not (not INTERNAL_FAILURE) or 
not (not REGULATOR_INTERFACE_FAILURE)))) >>
S [287] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Normalization
  Normalization Axiom:
    Complement
and theorem 933:
Theorem (933) [serial 2930] used for:
    normalization of [serial 2923]
 


Theorem (935)                               [serial 2915] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or (
not CURRENT_TEMPERATURE_STATUS = Valid or not (not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE))) >>
S [287] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 934:
Theorem (934) [serial 2923] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 2915]
 


Theorem (936)                               [serial 2908] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or (
not (CURRENT_TEMPERATURE_STATUS = Valid) or not ((not (INTERNAL_FAILURE) and 
not (REGULATOR_INTERFACE_FAILURE))))) >>
S [287] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 935:
Theorem (935) [serial 2915] used for:
    normalization of [serial 2908]
 


Theorem (937)                               [serial 2897] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or not (
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) >>
S [287] ->
Q [135] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 936:
Theorem (936) [serial 2908] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2897]
 


Theorem (938)                               [serial 2887] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and (not Valid = current_temperature_status or 
not (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid)))) >>
S [287] ->
Q [135] << (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 937:
Theorem (937) [serial 2897] used for:
    normalization of [serial 2887]
 


Theorem (939)                               [serial 2874] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and AXIOM_CTSR() and 
AXIOM_STR() and (not Valid = current_temperature_status or not REGULATOR_OK()) >>
S [287] ->
Q [135] << RUN() >>
by Substitution of Assertion Labels
and theorem 938:
Theorem (938) [serial 2887] used for:
  substituted Assertions' predicates for  labels  [serial 2874]
 


Theorem (940)                               [serial 2969] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status) >>
S [287] ->
Q [135] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (941)                               [serial 2967] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or 
not Valid = current_temperature_status or not Valid = current_temperature_status) >>
S [287] ->
Q [135] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by Law of Or-Simplification: P or P is P
and theorem 940:
Theorem (940) [serial 2969] used for:
  Law of Or-Simplification: P or P is P [serial 2967]
 


Theorem (942)                               [serial 2965] 
P [305] << (CURRENT_TEMPERATURE_STATUS = current_temperature_status) and (START_TIME = start_time) and 
(#Iso_Properties::Initialization_Timeout <= (now - start_time)) and (INTERNAL_FAILURE or 
REGULATOR_INTERFACE_FAILURE or not current_temperature_status = Valid or 
not Valid = current_temperature_status) >>
S [287] ->
Q [135] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 941:
Theorem (941) [serial 2967] used for:
    normalization of [serial 2965]
 


Theorem (943)                               [serial 2952] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or 
not CURRENT_TEMPERATURE_STATUS = Valid or not Valid = current_temperature_status) >>
S [287] ->
Q [135] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not Valid = current_temperature_status >>
by Substituting Equals Within Conjunction
and theorem 942:
Theorem (942) [serial 2965] used for:
  Substituting Equals Within Conjunction [serial 2952]
 


Theorem (944)                               [serial 2945] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or 
not CURRENT_TEMPERATURE_STATUS = Valid or not Valid = current_temperature_status) >>
S [287] ->
Q [135] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not current_temperature_status = Valid >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 943:
Theorem (943) [serial 2952] used for:
    normalization of [serial 2945]
 


Theorem (945)                               [serial 2942] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or 
not CURRENT_TEMPERATURE_STATUS = Valid or not Valid = current_temperature_status) >>
S [287] ->
Q [135] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid >>
by Guided Substitution of Equals
and theorem 944:
Theorem (944) [serial 2945] used for:
  Guided Substitution of Equals
 replacing "CURRENT_TEMPERATURE_STATUS" with its = "current_temperature_status" in its postcondition [serial 2942]
 


Theorem (946)                               [serial 2939] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not CURRENT_TEMPERATURE_STATUS = Valid or (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) or not Valid = current_temperature_status) >>
S [287] ->
Q [135] << INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE or not CURRENT_TEMPERATURE_STATUS = Valid >>
by Associativity: (b.c).a = a.b.c
and theorem 945:
Theorem (945) [serial 2942] used for:
  Associativity: (b.c).a = a.b.c [serial 2939]
 


Theorem (947)                               [serial 2932] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or (
not CURRENT_TEMPERATURE_STATUS = Valid or (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) >>
S [287] ->
Q [135] << not CURRENT_TEMPERATURE_STATUS = Valid or (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) >>
by Associativity: (b.c).a = a.b.c
and theorem 946:
Theorem (946) [serial 2939] used for:
  Associativity: (b.c).a = a.b.c [serial 2932]
 


Theorem (948)                               [serial 2924] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or (
not CURRENT_TEMPERATURE_STATUS = Valid or (not (not INTERNAL_FAILURE) or 
not (not REGULATOR_INTERFACE_FAILURE)))) >>
S [287] ->
Q [135] << not CURRENT_TEMPERATURE_STATUS = Valid or (not (not INTERNAL_FAILURE) or 
not (not REGULATOR_INTERFACE_FAILURE)) >>
by Normalization
  Normalization Axiom:
    Complement
and theorem 947:
Theorem (947) [serial 2932] used for:
    normalization of [serial 2924]
 


Theorem (949)                               [serial 2917] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or (
not CURRENT_TEMPERATURE_STATUS = Valid or not (not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE))) >>
S [287] ->
Q [135] << not CURRENT_TEMPERATURE_STATUS = Valid or not (not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE) >>
by DeMorgan's Law: not (A and B) = (not A) or (not B)
and theorem 948:
Theorem (948) [serial 2924] used for:
  DeMorgan's Law: not (A and B) = (not A) or (not B) [serial 2917]
 


Theorem (950)                               [serial 2909] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or (
not (CURRENT_TEMPERATURE_STATUS = Valid) or not ((not (INTERNAL_FAILURE) and 
not (REGULATOR_INTERFACE_FAILURE))))) >>
S [287] ->
Q [135] << (not (CURRENT_TEMPERATURE_STATUS = Valid) or not ((not (INTERNAL_FAILURE) and 
not (REGULATOR_INTERFACE_FAILURE)))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 949:
Theorem (949) [serial 2917] used for:
    normalization of [serial 2909]
 


Theorem (951)                               [serial 2899] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and CURRENT_TEMPERATURE_STATUS = current_temperature_status and 
START_TIME = start_time and (not Valid = current_temperature_status or not (
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) >>
S [287] ->
Q [135] << not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
REGULATOR_INTERFACE_FAILURE)) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 950:
Theorem (950) [serial 2909] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2899]
 


Theorem (952)                               [serial 2888] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and ((current_temperature_status = CURRENT_TEMPERATURE_STATUS)) and 
((start_time = START_TIME)) and (not Valid = current_temperature_status or 
not (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid)))) >>
S [287] ->
Q [135] << not (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 951:
Theorem (951) [serial 2899] used for:
    normalization of [serial 2888]
 


Theorem (953)                               [serial 2875] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and AXIOM_CTSR() and 
AXIOM_STR() and (not Valid = current_temperature_status or not REGULATOR_OK()) >>
S [287] ->
Q [135] << not REGULATOR_OK() >>
by Substitution of Assertion Labels
and theorem 952:
Theorem (952) [serial 2888] used for:
  substituted Assertions' predicates for  labels  [serial 2875]
 


Theorem (954)                               [serial 2858] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and AXIOM_CTSR() and 
AXIOM_STR() and (not Valid = current_temperature_status or not REGULATOR_OK()) >>
S [287] ->
Q [135] << RUN() and not REGULATOR_OK() >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 939 953:
Theorem (939) [serial 2874] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2858]
 
Theorem (953) [serial 2875] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2858]
 


Theorem (955)                               [serial 2853] 
P [305] << (((not REGULATOR_OK()) or (not ((current_temperature_status = Valid)))) and 
(((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and AXIOM_STR() and 
AXIOM_CTSR()) >>
S [287] ->
Q [135] << not REGULATOR_OK() and RUN() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 954:
Theorem (954) [serial 2858] used for:
    normalization of [serial 2853]
 


Theorem (956)                               [serial 2868] 
P [287] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and (Failed = regulator_mode)^0 and 
AXIOM_CTSR() and AXIOM_STR() and (not Valid = current_temperature_status or 
not REGULATOR_OK()) >>
S [287] ->
Q [223] << true >>
by True Conclusion Schema (tc): P->true


Theorem (957)                               [serial 2864] 
P [287] << #Iso_Properties::Initialization_Timeout <= (now - start_time) and AXIOM_CTSR() and 
AXIOM_STR() and (not Valid = current_temperature_status or not REGULATOR_OK()) and 
(Failed = regulator_mode)^0 >>
S [287] ->
Q [223] << true >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 956:
Theorem (956) [serial 2868] used for:
    normalization of [serial 2864]
 


Theorem (958)                               [serial 2860] 
P [287] << (Failed = regulator_mode)^0 and (#Iso_Properties::Initialization_Timeout <= (now - start_time) and 
AXIOM_CTSR() and AXIOM_STR() and (not Valid = current_temperature_status or 
not REGULATOR_OK())) >>
S [287] ->
Q [223] << true >>
by Associativity: (b.c).a = a.b.c
and theorem 957:
Theorem (957) [serial 2864] used for:
  Associativity: (b.c).a = a.b.c [serial 2860]
 


Theorem (959)                               [serial 2854] 
P [287] << ((((not REGULATOR_OK()) or (not ((current_temperature_status = Valid)))) and 
(((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and AXIOM_STR() and 
AXIOM_CTSR())) and (regulator_mode = Failed)^0 >>
S [287] ->
Q [223] << true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 958:
Theorem (958) [serial 2860] used for:
    normalization of [serial 2854]
 


Theorem (960)                               [serial 2852] 
P [305] << (((not REGULATOR_OK()) or (not ((current_temperature_status = Valid)))) and 
(((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and AXIOM_STR() and 
AXIOM_CTSR()) >>
S [287] regulator_mode!(Failed)
Q [223] << true >>
by Enumeration Type Port Output 
and theorems 955 959:
Theorem (955) [serial 2853] used for:
  applied port output of enumeration type  regulator_mode!(Failed) [serial 2852]
 
Theorem (959) [serial 2854] used for:
  applied port output <<pre and (regulator_mode=Failed)^0>> -> <<post>> [serial 2852]
 


Theorem (961)                               [serial 1046] 
P [222] << ((current_temperature_status = temperature.status) and RUN() and AXIOM_CTSR() and 
AXIOM_STR() and ((((REGULATOR_INTERFACE_FAILURE)^0) or ((INTERNAL_FAILURE)^0) or 
(not ((current_temperature_status = Valid)))))) >>
S [284] << (((not REGULATOR_OK()) or (not ((current_temperature_status = Valid)))) and (((now - start_time) >= #Iso_Properties::Initialization_Timeout)) and AXIOM_STR() and AXIOM_CTSR()) >>
regulator_mode!(Failed)
Q [223] << true >>
by Introduction of Existential Quantification (bl.aapre)
and theorems 929 960:
Theorem (929) [serial 2851] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1046]
 
Theorem (960) [serial 2852] used for:
  as <<pre>> S <<Q>> in <<P>> { <<pre>> S  } <<Q>> [serial 1046]
 


Theorem (962)                               [serial 1033] 
P [207] <<   >>
S [207] ->
Q [207] << manage_regulator_mode.impl proof obligations >>
by Initial Thread Obligations
and theorems 673 674 695 696 709 730 742 803 845 847 864 898 961:
Theorem (673) [serial 1034] used for:
  <<M(init)>> -> <<I>> from invariant I when complete state init has Assertion <<M(init)>> in its definition.
 
Theorem (674) [serial 1035] used for:
  <<M(normal)>> -> <<I>> from invariant I when complete state normal has Assertion <<M(normal)>> in its definition.
 
Theorem (695) [serial 1036] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_init, <<M(check_init)>> -> <<e1 or e2 or . . . en>>
 
Theorem (696) [serial 1037] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (709) [serial 1038] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_normal, <<M(check_normal)>> -> <<e1 or e2 or . . . en>>
 
Theorem (730) [serial 1039] used for:
   <<M(start)>> A <<M(init)>> for mrm1:start-[ ]->init{A};
 
Theorem (742) [serial 1040] used for:
   <<M(init) and x>> A <<M(check_init)>> for wait_init:init-[x]->check_init{A};
 
Theorem (803) [serial 1041] used for:
   <<M(check_init) and x>> A <<M(failed)>> for mrm:check_init-[x]->failed{A};
 
Theorem (845) [serial 1042] used for:
   <<M(check_init) and x>> A <<M(normal)>> for mrm2:check_init-[x]->normal{A};
 
Theorem (847) [serial 1043] used for:
   <<M(check_init) and x>> -> <<M(init)>> for mrm2x:check_init-[x]->init{};
 
Theorem (864) [serial 1044] used for:
   <<M(normal) and x>> A <<M(check_normal)>> for wait_normal:normal-[x]->check_normal{A};
 
Theorem (898) [serial 1045] used for:
   <<M(check_normal) and x>> A <<M(normal)>> for mrm3:check_normal-[x]->normal{A};
 
Theorem (961) [serial 1046] used for:
   <<M(check_normal) and x>> A <<M(failed)>> for mrm3x:check_normal-[x]->failed{A};
 


Theorem (963)                               [serial 2032] 
P [345] << heat_control^-1 = heat_previous_period >>
S [340] ->
Q [340] << heat_control^-1 = heat_previous_period >>
by Identity (id):  P->P is tautology


Theorem (964)                               [serial 2030] 
P [345] << ((heat_previous_period = heat_control^-1)) >>
S [340] ->
Q [340] << (heat_previous_period = heat_control^-1) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 963:
Theorem (963) [serial 2032] used for:
    normalization of [serial 2030]
 


Theorem (965)                               [serial 1048] 
P [345] << INVMHS() >>
S [340] ->
Q [340] << (heat_previous_period = heat_control^-1) >>
by Substitution of Assertion Labels
and theorem 964:
Theorem (964) [serial 2030] used for:
  substituted Assertions' predicates for  labels  [serial 1048]
 


Theorem (966)                               [serial 2045] 
P [347] << AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [347] << true >>
by True Conclusion Schema (tc): P->true


Theorem (967)                               [serial 2043] 
P [347] << AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [347] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 966:
Theorem (966) [serial 2045] used for:
    normalization of [serial 2043]
 


Theorem (968)                               [serial 2042] 
P [347] << AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [347] << (true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 967:
Theorem (967) [serial 2043] used for:
  Law of And-Simplification:  P and P is P [serial 2042]
 


Theorem (969)                               [serial 2041] 
P [347] << AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [347] << (LOWER_DESIRED_TEMP^0 < current_temperature.t or not LOWER_DESIRED_TEMP^0 < current_temperature.t or 
not current_temperature.t < UPPER_DESIRED_TEMP^0) and (current_temperature.t < UPPER_DESIRED_TEMP^0 or 
not LOWER_DESIRED_TEMP^0 < current_temperature.t or not current_temperature.t < UPPER_DESIRED_TEMP^0) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 968:
Theorem (968) [serial 2042] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2041]
 


Theorem (970)                               [serial 2039] 
P [347] << AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [347] << not LOWER_DESIRED_TEMP^0 < current_temperature.t or not current_temperature.t < UPPER_DESIRED_TEMP^0 or 
(LOWER_DESIRED_TEMP^0 < current_temperature.t and current_temperature.t < UPPER_DESIRED_TEMP^0) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 969:
Theorem (969) [serial 2041] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 2039]
 


Theorem (971)                               [serial 2037] 
P [347] << AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [347] << (not (current_temperature.t < UPPER_DESIRED_TEMP^0)) or (not (LOWER_DESIRED_TEMP^0 < current_temperature.t)) or 
(LOWER_DESIRED_TEMP^0 < current_temperature.t and current_temperature.t < UPPER_DESIRED_TEMP^0) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 970:
Theorem (970) [serial 2039] used for:
    normalization of [serial 2037]
 


Theorem (972)                               [serial 2035] 
P [347] << AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [347] << UPPER_DESIRED_TEMP^0 <= current_temperature.t or current_temperature.t <= LOWER_DESIRED_TEMP^0 or 
(LOWER_DESIRED_TEMP^0 < current_temperature.t and current_temperature.t < UPPER_DESIRED_TEMP^0) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 971:
Theorem (971) [serial 2037] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2035]
 


Theorem (973)                               [serial 1049] 
P [347] << (INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT()) >>
S [347] ->
Q [347] << (((current_temperature.t <= (LOWER_DESIRED_TEMP)^0)) or ((current_temperature.t >= (UPPER_DESIRED_TEMP)^0)) or 
(((current_temperature.t > (LOWER_DESIRED_TEMP)^0)) and ((current_temperature.t < (UPPER_DESIRED_TEMP)^0)))) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 972:
Theorem (972) [serial 2035] used for:
    normalization of [serial 1049]
 


Theorem (974)                               [serial 1050] 
P [344] << ((heat_previous_period = Off) and (INVMHS())^1) >>
S [344] ->
Q [344] << true >>
by True Conclusion Schema (tc): P->true


Theorem (975)                               [serial 2049] 
P [348] << heat_control^-1 = heat_previous_period and (REGULATOR_OK() and RUN()) and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [348] ->
Q [348] << O_n = heat_previous_period or Off = heat_previous_period >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (976)                               [serial 2047] 
P [348] << (((CURRENT_TEMP.t > LOWER_DESIRED_TEMP) and (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) and 
(REGULATOR_OK() and RUN()) and ((heat_previous_period = heat_control^-1)) and 
(((heat_previous_period = O_n)) or ((heat_previous_period = Off)))) >>
S [348] ->
Q [348] << ((((heat_previous_period = O_n))) or ((heat_previous_period = Off))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 975:
Theorem (975) [serial 2049] used for:
    normalization of [serial 2047]
 


Theorem (977)                               [serial 1051] 
P [348] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT()) >>
S [348] ->
Q [348] << ((((heat_previous_period = O_n))) or ((heat_previous_period = Off))) >>
by Substitution of Assertion Labels
and theorem 976:
Theorem (976) [serial 2047] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1051]
 


Theorem (978)                               [serial 2074] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << true >>
by True Conclusion Schema (tc): P->true


Theorem (979)                               [serial 2072] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 978:
Theorem (978) [serial 2074] used for:
    normalization of [serial 2072]
 


Theorem (980)                               [serial 2071] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 979:
Theorem (979) [serial 2072] used for:
  Law of And-Simplification:  P and P is P [serial 2071]
 


Theorem (981)                               [serial 2070] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (true) and (true) and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 980:
Theorem (980) [serial 2071] used for:
  Law of And-Simplification:  P and P is P [serial 2070]
 


Theorem (982)                               [serial 2069] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << ((not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) or 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) and ((not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) or 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) and ((not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 981:
Theorem (981) [serial 2070] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2069]
 


Theorem (983)                               [serial 2067] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) or not (
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) and (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) or 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) and (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 982:
Theorem (982) [serial 2069] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2067]
 


Theorem (984)                               [serial 2065] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << ((((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) or 
(not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) or 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) and (
(((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) or (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) and 
((((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) or (((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) or 
not (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid)))) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 983:
Theorem (983) [serial 2067] used for:
    normalization of [serial 2065]
 


Theorem (985)                               [serial 2064] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (INI() or REGULATOR_OK() or RUN()) and (INI() or RUN()) and (INI() or 
RUN() or not REGULATOR_OK()) >>
by Substitution of Assertion Labels
and theorem 984:
Theorem (984) [serial 2065] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2064]
 


Theorem (986)                               [serial 2062] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << true and (INI() or REGULATOR_OK() or RUN()) and (INI() or RUN()) and 
(INI() or RUN() or not REGULATOR_OK()) >>
by Law of And-Simplification:  P and true is P
and theorem 985:
Theorem (985) [serial 2064] used for:
  Law of And-Simplification:  P and true is P [serial 2062]
 


Theorem (987)                               [serial 2060] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (INI() or REGULATOR_OK() or RUN()) and (true) and (INI() or RUN()) and 
(INI() or RUN() or not REGULATOR_OK()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 986:
Theorem (986) [serial 2062] used for:
    normalization of [serial 2060]
 


Theorem (988)                               [serial 2059] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (INI() or REGULATOR_OK() or RUN()) and (true) and (INI() or RUN() or 
RUN()) and (INI() or RUN() or not REGULATOR_OK()) >>
by Law of Or-Simplification: P or P is P
and theorem 987:
Theorem (987) [serial 2060] used for:
  Law of Or-Simplification: P or P is P [serial 2059]
 


Theorem (989)                               [serial 2057] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (INI() or REGULATOR_OK() or RUN()) and (INI() or REGULATOR_OK() or not REGULATOR_OK()) and 
(INI() or RUN() or RUN()) and (INI() or RUN() or not REGULATOR_OK()) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 988:
Theorem (988) [serial 2059] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2057]
 


Theorem (990)                               [serial 2055] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (REGULATOR_OK() or RUN() or INI()) and (RUN() or RUN() or INI()) and 
(REGULATOR_OK() or not REGULATOR_OK() or INI()) and (RUN() or not REGULATOR_OK() or 
INI()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 989:
Theorem (989) [serial 2057] used for:
    normalization of [serial 2055]
 


Theorem (991)                               [serial 2052] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << INI() or (REGULATOR_OK() and RUN()) or (RUN() and not REGULATOR_OK()) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 990:
Theorem (990) [serial 2055] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 2052]
 


Theorem (992)                               [serial 1052] 
P [346] << INVMHS() >>
S [346] ->
Q [346] << (((not REGULATOR_OK() and RUN())) or ((INI())) or ((REGULATOR_OK() and 
RUN()))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 991:
Theorem (991) [serial 2052] used for:
    normalization of [serial 1052]
 


Theorem (993)                               [serial 1053] 
P [344] << ((heat_previous_period = Off) and (INVMHS())^1) >>
S [351] ->
Q [345] << (INVMHS())^1 >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (994)                               [serial 1054] 
P [345] << INVMHS() >>
S [352] ->
Q [346] << INVMHS() >>
by Identity (id):  P->P is tautology


Theorem (995)                               [serial 2112] 
P [305] << INVMHS() and RUN() and not REGULATOR_OK() >>
S [346] ->
Q [355] << RUN() and not REGULATOR_OK() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (996)                               [serial 2109] 
P [305] << RUN() and not REGULATOR_OK() and INVMHS() >>
S [346] ->
Q [355] << RUN() and not REGULATOR_OK() >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 995:
Theorem (995) [serial 2112] used for:
    normalization of [serial 2109]
 


Theorem (997)                               [serial 2104] 
P [305] << INVMHS() and (RUN() and not REGULATOR_OK()) >>
S [346] ->
Q [355] << RUN() and not REGULATOR_OK() >>
by Associativity: (b.c).a = a.b.c
and theorem 996:
Theorem (996) [serial 2109] used for:
  Associativity: (b.c).a = a.b.c [serial 2104]
 


Theorem (998)                               [serial 2101] 
P [305] << INVMHS() and (RUN() and not REGULATOR_OK()) >>
S [346] ->
Q [355] << (not REGULATOR_OK() and RUN()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 997:
Theorem (997) [serial 2104] used for:
    normalization of [serial 2101]
 


Theorem (999)                               [serial 2087] 
P [305] << INVMHS() and (RUN() and not REGULATOR_OK()) >>
S [346] ->
Q [355] << REQMHS5() >>
by Substitution of Assertion Labels
and theorem 998:
Theorem (998) [serial 2101] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2087]
 


Theorem (1000)                               [serial 2076] 
P [305] << ((INVMHS()) and ((not REGULATOR_OK() and RUN()))) >>
S [346] ->
Q [355] << REQMHS5() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 999:
Theorem (999) [serial 2087] used for:
    normalization of [serial 2076]
 


Theorem (1001)                               [serial 2120] 
P [359] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_previous_period^1 = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1002)                               [serial 2117] 
P [359] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control = heat_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 1001:
Theorem (1001) [serial 2120] used for:
    normalization of [serial 2117]
 


Theorem (1003)                               [serial 2114] 
P [359] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control^0 = heat_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1002:
Theorem (1002) [serial 2117] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2114]
 


Theorem (1004)                               [serial 2110] 
P [359] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^(-1+1) = (heat_previous_period)^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1003:
Theorem (1003) [serial 2114] used for:
    normalization of [serial 2110]
 


Theorem (1005)                               [serial 2106] 
P [359] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^-1 = heat_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1004:
Theorem (1004) [serial 2110] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2106]
 


Theorem (1006)                               [serial 2102] 
P [359] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (((heat_previous_period = heat_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1005:
Theorem (1005) [serial 2106] used for:
    normalization of [serial 2102]
 


Theorem (1007)                               [serial 2093] 
P [359] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Substitution of Assertion Labels
and theorem 1006:
Theorem (1006) [serial 2102] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2093]
 


Theorem (1008)                               [serial 2083] 
P [359] << ((heat_previous_period)^1 = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1007:
Theorem (1007) [serial 2093] used for:
    normalization of [serial 2083]
 


Theorem (1009)                               [serial 2077] 
P [359] << (heat_previous_period' = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1008:
Theorem (1008) [serial 2083] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2077]
 


Theorem (1010)                               [serial 2089] 
P [355] << REQMHS5() >>
S [356] ->
Q [98] << REQMHS1() or REQMHS3() or REQMHS5() or (HEAT_CONTROL^-1 = Off and REQMHS4()) >>
by Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (1011)                               [serial 2080] 
P [355] << REQMHS5() >>
S [356] ->
Q [98] << (REQMHS1()) or (REQMHS3()) or (REQMHS5()) or ((REQMHS4() and ((HEAT_CONTROL^-1 = Off)))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1010:
Theorem (1010) [serial 2089] used for:
    normalization of [serial 2080]
 


Theorem (1012)                               [serial 2095] 
P [356] << Off = heat_control and REQMHS5() >>
S [356] ->
Q [357] << Off = heat_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1013)                               [serial 2085] 
P [356] << (REQMHS5()) and ((heat_control) = (Off)) >>
S [356] ->
Q [357] << (heat_control = Off) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1012:
Theorem (1012) [serial 2095] used for:
    normalization of [serial 2085]
 


Theorem (1014)                               [serial 2084] 
P [356] << (REQMHS5()) and ((heat_control)^0 = (Off)^0) >>
S [356] ->
Q [357] << (heat_control = Off) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1013:
Theorem (1013) [serial 2085] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2084]
 


Theorem (1015)                               [serial 2081] 
P [356] << (REQMHS5()) and (heat_control = Off)^0 >>
S [356] ->
Q [357] << (heat_control = Off) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1014:
Theorem (1014) [serial 2084] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2081]
 


Theorem (1016)                               [serial 2078] 
P [355] << REQMHS5() >>
S [356] heat_control!(Off)
Q [357] << (heat_control = Off) >>
by Enumeration Type Port Output 
and theorems 1011 1015:
Theorem (1011) [serial 2080] used for:
  applied port output of enumeration type  heat_control!(Off) [serial 2078]
 
Theorem (1015) [serial 2081] used for:
  applied port output <<pre and (heat_control=Off)^0>> -> <<post>> [serial 2078]
 


Theorem (1017)                               [serial 2091] 
P [357] << Off = heat_control >>
S [358] ->
Q [359] << Off = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1018)                               [serial 2082] 
P [357] << (heat_control = Off) >>
S [358] ->
Q [359] << (Off = heat_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1017:
Theorem (1017) [serial 2091] used for:
    normalization of [serial 2082]
 


Theorem (1019)                               [serial 2079] 
P [357] << (heat_control = Off) >>
S [358] heat_previous_period' := Off
Q [359] << (heat_previous_period' = heat_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1018:
Theorem (1018) [serial 2082] used for:
  applied wp for assignment [serial 2079]
 


Theorem (1020)                               [serial 1055] 
P [346] << ((INVMHS()) and ((not REGULATOR_OK() and RUN()))) >>
S [355] << REQMHS5() >>
heat_control!(Off)
;
<< (heat_control = Off) >>
heat_previous_period' := Off
<< (heat_previous_period' = heat_control) >>
Q [345] << (INVMHS())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1000 1009 1016 1019:
Theorem (1000) [serial 2076] used for:
  P -> P1 in sequential composition for [serial 1055]
 
Theorem (1009) [serial 2077] used for:
  Q1 -> Q in sequential composition for [serial 1055]
 
Theorem (1016) [serial 2078] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1055]
 
Theorem (1019) [serial 2079] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1055]
 


Theorem (1021)                               [serial 2167] 
P [305] << heat_control^-1 = heat_previous_period and (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
S [346] ->
Q [363] << (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1022)                               [serial 2165] 
P [305] << (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
((heat_previous_period = heat_control^-1)) >>
S [346] ->
Q [363] << (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1021:
Theorem (1021) [serial 2167] used for:
    normalization of [serial 2165]
 


Theorem (1023)                               [serial 2150] 
P [305] << INI() and INVMHS() >>
S [346] ->
Q [363] << (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Substitution of Assertion Labels
and theorem 1022:
Theorem (1022) [serial 2165] used for:
  substituted Assertions' predicates for  labels  [serial 2150]
 


Theorem (1024)                               [serial 2147] 
P [305] << INI() and INVMHS() >>
S [346] ->
Q [363] << (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1023:
Theorem (1023) [serial 2150] used for:
    normalization of [serial 2147]
 


Theorem (1025)                               [serial 2133] 
P [305] << INI() and INVMHS() >>
S [346] ->
Q [363] << REQMHS1() >>
by Substitution of Assertion Labels
and theorem 1024:
Theorem (1024) [serial 2147] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2133]
 


Theorem (1026)                               [serial 2122] 
P [305] << ((INVMHS()) and ((INI()))) >>
S [346] ->
Q [363] << REQMHS1() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1025:
Theorem (1025) [serial 2133] used for:
    normalization of [serial 2122]
 


Theorem (1027)                               [serial 2163] 
P [367] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_previous_period^1 = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1028)                               [serial 2160] 
P [367] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control = heat_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 1027:
Theorem (1027) [serial 2163] used for:
    normalization of [serial 2160]
 


Theorem (1029)                               [serial 2158] 
P [367] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control^0 = heat_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1028:
Theorem (1028) [serial 2160] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2158]
 


Theorem (1030)                               [serial 2155] 
P [367] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^(-1+1) = (heat_previous_period)^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1029:
Theorem (1029) [serial 2158] used for:
    normalization of [serial 2155]
 


Theorem (1031)                               [serial 2152] 
P [367] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^-1 = heat_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1030:
Theorem (1030) [serial 2155] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2152]
 


Theorem (1032)                               [serial 2148] 
P [367] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (((heat_previous_period = heat_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1031:
Theorem (1031) [serial 2152] used for:
    normalization of [serial 2148]
 


Theorem (1033)                               [serial 2139] 
P [367] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Substitution of Assertion Labels
and theorem 1032:
Theorem (1032) [serial 2148] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2139]
 


Theorem (1034)                               [serial 2129] 
P [367] << ((heat_previous_period)^1 = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1033:
Theorem (1033) [serial 2139] used for:
    normalization of [serial 2129]
 


Theorem (1035)                               [serial 2123] 
P [367] << (heat_previous_period' = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1034:
Theorem (1034) [serial 2129] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2123]
 


Theorem (1036)                               [serial 2135] 
P [363] << REQMHS1() >>
S [364] ->
Q [98] << REQMHS1() or REQMHS3() or REQMHS5() or (HEAT_CONTROL^-1 = Off and REQMHS4()) >>
by Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (1037)                               [serial 2126] 
P [363] << REQMHS1() >>
S [364] ->
Q [98] << (REQMHS1()) or (REQMHS3()) or (REQMHS5()) or ((REQMHS4() and ((HEAT_CONTROL^-1 = Off)))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1036:
Theorem (1036) [serial 2135] used for:
    normalization of [serial 2126]
 


Theorem (1038)                               [serial 2141] 
P [364] << Off = heat_control and REQMHS1() >>
S [364] ->
Q [365] << Off = heat_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1039)                               [serial 2131] 
P [364] << (REQMHS1()) and ((heat_control) = (Off)) >>
S [364] ->
Q [365] << (heat_control = Off) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1038:
Theorem (1038) [serial 2141] used for:
    normalization of [serial 2131]
 


Theorem (1040)                               [serial 2130] 
P [364] << (REQMHS1()) and ((heat_control)^0 = (Off)^0) >>
S [364] ->
Q [365] << (heat_control = Off) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1039:
Theorem (1039) [serial 2131] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2130]
 


Theorem (1041)                               [serial 2127] 
P [364] << (REQMHS1()) and (heat_control = Off)^0 >>
S [364] ->
Q [365] << (heat_control = Off) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1040:
Theorem (1040) [serial 2130] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2127]
 


Theorem (1042)                               [serial 2124] 
P [363] << REQMHS1() >>
S [364] heat_control!(Off)
Q [365] << (heat_control = Off) >>
by Enumeration Type Port Output 
and theorems 1037 1041:
Theorem (1037) [serial 2126] used for:
  applied port output of enumeration type  heat_control!(Off) [serial 2124]
 
Theorem (1041) [serial 2127] used for:
  applied port output <<pre and (heat_control=Off)^0>> -> <<post>> [serial 2124]
 


Theorem (1043)                               [serial 2137] 
P [365] << Off = heat_control >>
S [366] ->
Q [367] << Off = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1044)                               [serial 2128] 
P [365] << (heat_control = Off) >>
S [366] ->
Q [367] << (Off = heat_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1043:
Theorem (1043) [serial 2137] used for:
    normalization of [serial 2128]
 


Theorem (1045)                               [serial 2125] 
P [365] << (heat_control = Off) >>
S [366] heat_previous_period' := Off
Q [367] << (heat_previous_period' = heat_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1044:
Theorem (1044) [serial 2128] used for:
  applied wp for assignment [serial 2125]
 


Theorem (1046)                               [serial 1056] 
P [346] << ((INVMHS()) and ((INI()))) >>
S [363] << REQMHS1() >>
heat_control!(Off)
;
<< (heat_control = Off) >>
heat_previous_period' := Off
<< (heat_previous_period' = heat_control) >>
Q [345] << (INVMHS())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1026 1035 1042 1045:
Theorem (1026) [serial 2122] used for:
  P -> P1 in sequential composition for [serial 1056]
 
Theorem (1035) [serial 2123] used for:
  Q1 -> Q in sequential composition for [serial 1056]
 
Theorem (1042) [serial 2124] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1056]
 
Theorem (1045) [serial 2125] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1056]
 


Theorem (1047)                               [serial 2175] 
P [346] << REGULATOR_OK() and RUN() and INVMHS() >>
S [369] ->
Q [347] << INVMHS() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1048)                               [serial 2179] 
P [346] << INVMHS() and REGULATOR_OK() and RUN() >>
S [369] ->
Q [347] << REGULATOR_OK() and RUN() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1049)                               [serial 2177] 
P [346] << REGULATOR_OK() and RUN() and INVMHS() >>
S [369] ->
Q [347] << (REGULATOR_OK() and RUN()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1048:
Theorem (1048) [serial 2179] used for:
    normalization of [serial 2177]
 


Theorem (1050)                               [serial 2176] 
P [346] << REGULATOR_OK() and RUN() and INVMHS() >>
S [369] ->
Q [347] << REGULATOR_MODE(x:Normal) >>
by Substitution of Assertion Labels
and theorem 1049:
Theorem (1049) [serial 2177] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2176]
 


Theorem (1051)                               [serial 2174] 
P [346] << REGULATOR_OK() and RUN() and INVMHS() >>
S [369] ->
Q [347] << INVMHS() and REGULATOR_MODE(x:Normal) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1047 1050:
Theorem (1047) [serial 2175] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2174]
 
Theorem (1050) [serial 2176] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2174]
 


Theorem (1052)                               [serial 2173] 
P [346] << INVMHS() and (REGULATOR_OK() and RUN()) >>
S [369] ->
Q [347] << INVMHS() and REGULATOR_MODE(x:Normal) >>
by Associativity: (b.c).a = a.b.c
and theorem 1051:
Theorem (1051) [serial 2174] used for:
  Associativity: (b.c).a = a.b.c [serial 2173]
 


Theorem (1053)                               [serial 2172] 
P [346] << INVMHS() and (REGULATOR_OK() and RUN()) >>
S [369] ->
Q [347] << true and INVMHS() and REGULATOR_MODE(x:Normal) >>
by Law of And-Simplification:  P and true is P
and theorem 1052:
Theorem (1052) [serial 2173] used for:
  Law of And-Simplification:  P and true is P [serial 2172]
 


Theorem (1054)                               [serial 2175] 
P [346] << REGULATOR_OK() and RUN() and INVMHS() >>
S [369] ->
Q [347] << INVMHS() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1055)                               [serial 2179] 
P [346] << INVMHS() and REGULATOR_OK() and RUN() >>
S [369] ->
Q [347] << REGULATOR_OK() and RUN() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1056)                               [serial 2177] 
P [346] << REGULATOR_OK() and RUN() and INVMHS() >>
S [369] ->
Q [347] << (REGULATOR_OK() and RUN()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1055:
Theorem (1055) [serial 2179] used for:
    normalization of [serial 2177]
 


Theorem (1057)                               [serial 2176] 
P [346] << REGULATOR_OK() and RUN() and INVMHS() >>
S [369] ->
Q [347] << REGULATOR_MODE(x:Normal) >>
by Substitution of Assertion Labels
and theorem 1056:
Theorem (1056) [serial 2177] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2176]
 


Theorem (1058)                               [serial 2174] 
P [346] << REGULATOR_OK() and RUN() and INVMHS() >>
S [369] ->
Q [347] << INVMHS() and REGULATOR_MODE(x:Normal) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1054 1057:
Theorem (1054) [serial 2175] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2174]
 
Theorem (1057) [serial 2176] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2174]
 


Theorem (1059)                               [serial 2173] 
P [346] << INVMHS() and (REGULATOR_OK() and RUN()) >>
S [369] ->
Q [347] << INVMHS() and REGULATOR_MODE(x:Normal) >>
by Associativity: (b.c).a = a.b.c
and theorem 1058:
Theorem (1058) [serial 2174] used for:
  Associativity: (b.c).a = a.b.c [serial 2173]
 


Theorem (1060)                               [serial 2172] 
P [346] << INVMHS() and (REGULATOR_OK() and RUN()) >>
S [369] ->
Q [347] << true and INVMHS() and REGULATOR_MODE(x:Normal) >>
by Law of And-Simplification:  P and true is P
and theorem 1059:
Theorem (1059) [serial 2173] used for:
  Law of And-Simplification:  P and true is P [serial 2172]
 


Theorem (1061)                               [serial 2170] 
P [346] << INVMHS() and (REGULATOR_OK() and RUN()) >>
S [369] ->
Q [347] << AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(x:Normal) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1060 1060:
Theorem (1060) [serial 2172] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1060) [serial 2172] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1062)                               [serial 1057] 
P [346] << ((INVMHS()) and ((REGULATOR_OK() and RUN()))) >>
S [369] ->
Q [347] << (INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1061:
Theorem (1061) [serial 2170] used for:
    normalization of [serial 1057]
 


Theorem (1063)                               [serial 2227] 
P [305] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [108] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1064)                               [serial 2225] 
P [305] << current_temperature.t <= LOWER_DESIRED_TEMP and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [108] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP >>
by Replacing port names with Assertions
and theorem 1063:
Theorem (1063) [serial 2227] used for:
  Replacing port names with Assertions [serial 2225]
 


Theorem (1065)                               [serial 2241] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [347] ->
Q [373] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1066)                               [serial 2239] 
P [305] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(not (LOWER_DESIRED_TEMP < CURRENT_TEMP.t)) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [347] ->
Q [373] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1065:
Theorem (1065) [serial 2241] used for:
    normalization of [serial 2239]
 


Theorem (1067)                               [serial 2237] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMP.t <= LOWER_DESIRED_TEMP and 
heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [347] ->
Q [373] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 1066:
Theorem (1066) [serial 2239] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2237]
 


Theorem (1068)                               [serial 2235] 
P [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and CURRENT_TEMP.t <= LOWER_DESIRED_TEMP and 
heat_control^-1 = heat_previous_period and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [347] ->
Q [373] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1067:
Theorem (1067) [serial 2237] used for:
    normalization of [serial 2235]
 


Theorem (1069)                               [serial 2234] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) and CURRENT_TEMP.t <= LOWER_DESIRED_TEMP and 
heat_control^-1 = heat_previous_period and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [347] ->
Q [373] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 1068:
Theorem (1068) [serial 2235] used for:
  Associativity: (b.c).a = a.b.c [serial 2234]
 


Theorem (1070)                               [serial 2232] 
P [305] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
(#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [347] ->
Q [373] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 1069:
Theorem (1069) [serial 2234] used for:
  Associativity: (b.c).a = a.b.c [serial 2232]
 


Theorem (1071)                               [serial 2230] 
P [305] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP and (((heat_previous_period = O_n)) or 
((heat_previous_period = Off))) and ((heat_previous_period = heat_control^-1)) and 
((not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) >>
S [347] ->
Q [373] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1070:
Theorem (1070) [serial 2232] used for:
    normalization of [serial 2230]
 


Theorem (1072)                               [serial 2229] 
P [305] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP and (((heat_previous_period = O_n)) or 
((heat_previous_period = Off))) and ((heat_previous_period = heat_control^-1)) and 
(REGULATOR_OK() and RUN()) >>
S [347] ->
Q [373] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Substitution of Assertion Labels
and theorem 1071:
Theorem (1071) [serial 2230] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2229]
 


Theorem (1073)                               [serial 2228] 
P [305] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [373] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Substitution of Assertion Labels
and theorem 1072:
Theorem (1072) [serial 2229] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2228]
 


Theorem (1074)                               [serial 2226] 
P [305] << current_temperature.t <= LOWER_DESIRED_TEMP and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [373] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Replacing port names with Assertions
and theorem 1073:
Theorem (1073) [serial 2228] used for:
  Replacing port names with Assertions [serial 2226]
 


Theorem (1075)                               [serial 2210] 
P [305] << current_temperature.t <= LOWER_DESIRED_TEMP and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [305] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1064 1074:
Theorem (1064) [serial 2225] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2210]
 
Theorem (1074) [serial 2226] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2210]
 


Theorem (1076)                               [serial 2207] 
P [305] << current_temperature.t <= LOWER_DESIRED_TEMP and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [305] << ((CURRENT_TEMP.t <= LOWER_DESIRED_TEMP)) and not (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1075:
Theorem (1075) [serial 2210] used for:
    normalization of [serial 2207]
 


Theorem (1077)                               [serial 2196] 
P [305] << current_temperature.t <= LOWER_DESIRED_TEMP and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [305] << REQMHS2() and not REQMHS1() >>
by Substitution of Assertion Labels
and theorem 1076:
Theorem (1076) [serial 2207] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2196]
 


Theorem (1078)                               [serial 2188] 
P [305] << (INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() and ((current_temperature.t <= (LOWER_DESIRED_TEMP)))) >>
S [347] ->
Q [305] << (REQMHS2() and not REQMHS1()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1077:
Theorem (1077) [serial 2196] used for:
    normalization of [serial 2188]
 


Theorem (1079)                               [serial 2181] 
P [305] << (INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() and ((current_temperature.t <= (LOWER_DESIRED_TEMP)^0))) >>
S [347] ->
Q [305] << (REQMHS2() and not REQMHS1()) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1078:
Theorem (1078) [serial 2188] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2181]
 


Theorem (1080)                               [serial 2223] 
P [377] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_previous_period^1 = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1081)                               [serial 2220] 
P [377] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control = heat_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 1080:
Theorem (1080) [serial 2223] used for:
    normalization of [serial 2220]
 


Theorem (1082)                               [serial 2218] 
P [377] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control^0 = heat_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1081:
Theorem (1081) [serial 2220] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2218]
 


Theorem (1083)                               [serial 2215] 
P [377] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^(-1+1) = (heat_previous_period)^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1082:
Theorem (1082) [serial 2218] used for:
    normalization of [serial 2215]
 


Theorem (1084)                               [serial 2212] 
P [377] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^-1 = heat_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1083:
Theorem (1083) [serial 2215] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2212]
 


Theorem (1085)                               [serial 2208] 
P [377] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (((heat_previous_period = heat_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1084:
Theorem (1084) [serial 2212] used for:
    normalization of [serial 2208]
 


Theorem (1086)                               [serial 2198] 
P [377] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Substitution of Assertion Labels
and theorem 1085:
Theorem (1085) [serial 2208] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2198]
 


Theorem (1087)                               [serial 2189] 
P [377] << ((heat_previous_period)^1 = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1086:
Theorem (1086) [serial 2198] used for:
    normalization of [serial 2189]
 


Theorem (1088)                               [serial 2182] 
P [377] << (heat_previous_period' = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1087:
Theorem (1087) [serial 2189] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2182]
 


Theorem (1089)                               [serial 2192] 
P [305] << REQMHS2() and not REQMHS1() >>
S [374] ->
Q [96] << REQMHS2() or (HEAT_CONTROL^-1 = O_n and REQMHS4()) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1090)                               [serial 2185] 
P [305] << (REQMHS2() and not REQMHS1()) >>
S [374] ->
Q [96] << (REQMHS2()) or ((REQMHS4() and ((HEAT_CONTROL^-1 = O_n)))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1089:
Theorem (1089) [serial 2192] used for:
    normalization of [serial 2185]
 


Theorem (1091)                               [serial 2206] 
P [374] << O_n = heat_control and (REQMHS2() and not REQMHS1()) >>
S [374] ->
Q [375] << O_n = heat_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1092)                               [serial 2200] 
P [374] << O_n^0 = heat_control^0 and (REQMHS2() and not REQMHS1()) >>
S [374] ->
Q [375] << O_n = heat_control >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1091:
Theorem (1091) [serial 2206] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2200]
 


Theorem (1093)                               [serial 2190] 
P [374] << ((REQMHS2() and not REQMHS1())) and ((heat_control)^0 = (O_n)^0) >>
S [374] ->
Q [375] << (heat_control = O_n) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1092:
Theorem (1092) [serial 2200] used for:
    normalization of [serial 2190]
 


Theorem (1094)                               [serial 2186] 
P [374] << ((REQMHS2() and not REQMHS1())) and (heat_control = O_n)^0 >>
S [374] ->
Q [375] << (heat_control = O_n) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1093:
Theorem (1093) [serial 2190] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2186]
 


Theorem (1095)                               [serial 2183] 
P [305] << (REQMHS2() and not REQMHS1()) >>
S [374] heat_control!(O_n)
Q [375] << (heat_control = O_n) >>
by Enumeration Type Port Output 
and theorems 1090 1094:
Theorem (1090) [serial 2185] used for:
  applied port output of enumeration type  heat_control!(O_n) [serial 2183]
 
Theorem (1094) [serial 2186] used for:
  applied port output <<pre and (heat_control=O_n)^0>> -> <<post>> [serial 2183]
 


Theorem (1096)                               [serial 2194] 
P [375] << O_n = heat_control >>
S [376] ->
Q [377] << O_n = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1097)                               [serial 2187] 
P [375] << (heat_control = O_n) >>
S [376] ->
Q [377] << (O_n = heat_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1096:
Theorem (1096) [serial 2194] used for:
    normalization of [serial 2187]
 


Theorem (1098)                               [serial 2184] 
P [375] << (heat_control = O_n) >>
S [376] heat_previous_period' := O_n
Q [377] << (heat_previous_period' = heat_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1097:
Theorem (1097) [serial 2187] used for:
  applied wp for assignment [serial 2184]
 


Theorem (1099)                               [serial 1058] 
P [347] << (INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() and ((current_temperature.t <= (LOWER_DESIRED_TEMP)^0))) >>
S [373] << (REQMHS2() and not REQMHS1()) >>
heat_control!(O_n)
;
<< (heat_control = O_n) >>
heat_previous_period' := O_n
<< (heat_previous_period' = heat_control) >>
Q [345] << (INVMHS())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1079 1088 1095 1098:
Theorem (1079) [serial 2181] used for:
  P -> P1 in sequential composition for [serial 1058]
 
Theorem (1088) [serial 2182] used for:
  Q1 -> Q in sequential composition for [serial 1058]
 
Theorem (1095) [serial 2183] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1058]
 
Theorem (1098) [serial 2184] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1058]
 


Theorem (1100)                               [serial 2298] 
P [305] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [4] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1101)                               [serial 2293] 
P [305] << UPPER_DESIRED_TEMP <= current_temperature.t and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [4] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t >>
by Replacing port names with Assertions
and theorem 1100:
Theorem (1100) [serial 2298] used for:
  Replacing port names with Assertions [serial 2293]
 


Theorem (1102)                               [serial 2325] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
not CURRENT_TEMP.t < UPPER_DESIRED_TEMP and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [347] ->
Q [381] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1103)                               [serial 2319] 
P [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
(not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(not (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) and heat_control^-1 = heat_previous_period and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [347] ->
Q [381] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1102:
Theorem (1102) [serial 2325] used for:
    normalization of [serial 2319]
 


Theorem (1104)                               [serial 2318] 
P [305] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) and 
(not (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) and heat_control^-1 = heat_previous_period and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [347] ->
Q [381] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 1103:
Theorem (1103) [serial 2319] used for:
  Associativity: (b.c).a = a.b.c [serial 2318]
 


Theorem (1105)                               [serial 2315] 
P [305] << (not (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) and heat_control^-1 = heat_previous_period and 
((not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [347] ->
Q [381] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 1104:
Theorem (1104) [serial 2318] used for:
  Associativity: (b.c).a = a.b.c [serial 2315]
 


Theorem (1106)                               [serial 2309] 
P [305] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t and heat_control^-1 = heat_previous_period and 
(#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [347] ->
Q [381] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 1105:
Theorem (1105) [serial 2315] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2309]
 


Theorem (1107)                               [serial 2303] 
P [305] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t and (((heat_previous_period = O_n)) or 
((heat_previous_period = Off))) and ((heat_previous_period = heat_control^-1)) and 
((not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) >>
S [347] ->
Q [381] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1106:
Theorem (1106) [serial 2309] used for:
    normalization of [serial 2303]
 


Theorem (1108)                               [serial 2302] 
P [305] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t and (((heat_previous_period = O_n)) or 
((heat_previous_period = Off))) and ((heat_previous_period = heat_control^-1)) and 
(REGULATOR_OK() and RUN()) >>
S [347] ->
Q [381] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Substitution of Assertion Labels
and theorem 1107:
Theorem (1107) [serial 2303] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2302]
 


Theorem (1109)                               [serial 2299] 
P [305] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [381] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Substitution of Assertion Labels
and theorem 1108:
Theorem (1108) [serial 2302] used for:
  substituted Assertions' predicates for  labels  [serial 2299]
 


Theorem (1110)                               [serial 2294] 
P [305] << UPPER_DESIRED_TEMP <= current_temperature.t and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [381] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Replacing port names with Assertions
and theorem 1109:
Theorem (1109) [serial 2299] used for:
  Replacing port names with Assertions [serial 2294]
 


Theorem (1111)                               [serial 2273] 
P [305] << UPPER_DESIRED_TEMP <= current_temperature.t and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [305] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1101 1110:
Theorem (1101) [serial 2293] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2273]
 
Theorem (1110) [serial 2294] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2273]
 


Theorem (1112)                               [serial 2269] 
P [305] << UPPER_DESIRED_TEMP <= current_temperature.t and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [305] << ((CURRENT_TEMP.t >= UPPER_DESIRED_TEMP)) and not (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1111:
Theorem (1111) [serial 2273] used for:
    normalization of [serial 2269]
 


Theorem (1113)                               [serial 2259] 
P [305] << UPPER_DESIRED_TEMP <= current_temperature.t and AXIOM_HEAT() and INVMHS() and 
REGULATOR_MODE(x:Normal) >>
S [347] ->
Q [305] << REQMHS3() and not REQMHS1() >>
by Substitution of Assertion Labels
and theorem 1112:
Theorem (1112) [serial 2269] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2259]
 


Theorem (1114)                               [serial 2250] 
P [305] << (INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() and ((current_temperature.t >= (UPPER_DESIRED_TEMP)))) >>
S [347] ->
Q [305] << (REQMHS3() and not REQMHS1()) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1113:
Theorem (1113) [serial 2259] used for:
    normalization of [serial 2250]
 


Theorem (1115)                               [serial 2243] 
P [305] << (INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() and ((current_temperature.t >= (UPPER_DESIRED_TEMP)^0))) >>
S [347] ->
Q [305] << (REQMHS3() and not REQMHS1()) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1114:
Theorem (1114) [serial 2250] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2243]
 


Theorem (1116)                               [serial 2291] 
P [385] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_previous_period^1 = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1117)                               [serial 2287] 
P [385] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control = heat_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 1116:
Theorem (1116) [serial 2291] used for:
    normalization of [serial 2287]
 


Theorem (1118)                               [serial 2285] 
P [385] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control^0 = heat_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1117:
Theorem (1117) [serial 2287] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2285]
 


Theorem (1119)                               [serial 2281] 
P [385] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^(-1+1) = (heat_previous_period)^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1118:
Theorem (1118) [serial 2285] used for:
    normalization of [serial 2281]
 


Theorem (1120)                               [serial 2275] 
P [385] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^-1 = heat_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1119:
Theorem (1119) [serial 2281] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2275]
 


Theorem (1121)                               [serial 2270] 
P [385] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (((heat_previous_period = heat_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1120:
Theorem (1120) [serial 2275] used for:
    normalization of [serial 2270]
 


Theorem (1122)                               [serial 2261] 
P [385] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Substitution of Assertion Labels
and theorem 1121:
Theorem (1121) [serial 2270] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2261]
 


Theorem (1123)                               [serial 2251] 
P [385] << ((heat_previous_period)^1 = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1122:
Theorem (1122) [serial 2261] used for:
    normalization of [serial 2251]
 


Theorem (1124)                               [serial 2244] 
P [385] << (heat_previous_period' = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1123:
Theorem (1123) [serial 2251] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2244]
 


Theorem (1125)                               [serial 2255] 
P [305] << REQMHS3() and not REQMHS1() >>
S [382] ->
Q [98] << REQMHS1() or REQMHS3() or REQMHS5() or (HEAT_CONTROL^-1 = Off and REQMHS4()) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1126)                               [serial 2247] 
P [305] << (REQMHS3() and not REQMHS1()) >>
S [382] ->
Q [98] << (REQMHS1()) or (REQMHS3()) or (REQMHS5()) or ((REQMHS4() and ((HEAT_CONTROL^-1 = Off)))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1125:
Theorem (1125) [serial 2255] used for:
    normalization of [serial 2247]
 


Theorem (1127)                               [serial 2321] 
P [382] << Off = heat_control and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
not CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [382] ->
Q [4] << not CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1128)                               [serial 2316] 
P [382] << (not (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
Off = heat_control >>
S [382] ->
Q [4] << (not (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1127:
Theorem (1127) [serial 2321] used for:
    normalization of [serial 2316]
 


Theorem (1129)                               [serial 2313] 
P [382] << Off = heat_control and ((not (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
S [382] ->
Q [4] << (not (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 1128:
Theorem (1128) [serial 2316] used for:
  Associativity: (b.c).a = a.b.c [serial 2313]
 


Theorem (1130)                               [serial 2305] 
P [382] << Off = heat_control and (UPPER_DESIRED_TEMP <= CURRENT_TEMP.t and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
S [382] ->
Q [4] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 1129:
Theorem (1129) [serial 2313] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2305]
 


Theorem (1131)                               [serial 2300] 
P [382] << Off = heat_control and (((CURRENT_TEMP.t >= UPPER_DESIRED_TEMP)) and 
not (((now - START_TIME) < #Iso_Properties::Initialization_Timeout))) >>
S [382] ->
Q [4] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1130:
Theorem (1130) [serial 2305] used for:
    normalization of [serial 2300]
 


Theorem (1132)                               [serial 2295] 
P [382] << Off = heat_control and (REQMHS3() and not REQMHS1()) >>
S [382] ->
Q [4] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t >>
by Substitution of Assertion Labels
and theorem 1131:
Theorem (1131) [serial 2300] used for:
  substituted Assertions' predicates for  labels  [serial 2295]
 


Theorem (1133)                               [serial 2296] 
P [382] << Off = heat_control and (REQMHS3() and not REQMHS1()) >>
S [382] ->
Q [383] << Off = heat_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1134)                               [serial 2323] 
P [382] << Off = heat_control and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
not CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [382] ->
Q [383] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1135)                               [serial 2317] 
P [382] << (not (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
Off = heat_control >>
S [382] ->
Q [383] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1134:
Theorem (1134) [serial 2323] used for:
    normalization of [serial 2317]
 


Theorem (1136)                               [serial 2314] 
P [382] << Off = heat_control and ((not (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
S [382] ->
Q [383] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 1135:
Theorem (1135) [serial 2317] used for:
  Associativity: (b.c).a = a.b.c [serial 2314]
 


Theorem (1137)                               [serial 2307] 
P [382] << Off = heat_control and (UPPER_DESIRED_TEMP <= CURRENT_TEMP.t and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout) >>
S [382] ->
Q [383] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 1136:
Theorem (1136) [serial 2314] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2307]
 


Theorem (1138)                               [serial 2301] 
P [382] << Off = heat_control and (((CURRENT_TEMP.t >= UPPER_DESIRED_TEMP)) and 
not (((now - START_TIME) < #Iso_Properties::Initialization_Timeout))) >>
S [382] ->
Q [383] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1137:
Theorem (1137) [serial 2307] used for:
    normalization of [serial 2301]
 


Theorem (1139)                               [serial 2297] 
P [382] << Off = heat_control and (REQMHS3() and not REQMHS1()) >>
S [382] ->
Q [383] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Substitution of Assertion Labels
and theorem 1138:
Theorem (1138) [serial 2301] used for:
  substituted Assertions' predicates for  labels  [serial 2297]
 


Theorem (1140)                               [serial 2277] 
P [382] << Off = heat_control and (REQMHS3() and not REQMHS1()) >>
S [382] ->
Q [305] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t and Off = heat_control and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1132 1133 1139:
Theorem (1132) [serial 2295] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2277]
 
Theorem (1133) [serial 2296] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2277]
 
Theorem (1139) [serial 2297] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2277]
 


Theorem (1141)                               [serial 2271] 
P [382] << Off = heat_control and (REQMHS3() and not REQMHS1()) >>
S [382] ->
Q [305] << Off = heat_control and ((CURRENT_TEMP.t >= UPPER_DESIRED_TEMP)) and not (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1140:
Theorem (1140) [serial 2277] used for:
    normalization of [serial 2271]
 


Theorem (1142)                               [serial 2263] 
P [382] << Off = heat_control and (REQMHS3() and not REQMHS1()) >>
S [382] ->
Q [305] << Off = heat_control and REQMHS3() and not REQMHS1() >>
by Substitution of Assertion Labels
and theorem 1141:
Theorem (1141) [serial 2271] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2263]
 


Theorem (1143)                               [serial 2253] 
P [382] << ((REQMHS3() and not REQMHS1())) and ((heat_control) = (Off)) >>
S [382] ->
Q [305] << (REQMHS3() and not REQMHS1() and ((heat_control = Off))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1142:
Theorem (1142) [serial 2263] used for:
    normalization of [serial 2253]
 


Theorem (1144)                               [serial 2252] 
P [382] << ((REQMHS3() and not REQMHS1())) and ((heat_control)^0 = (Off)^0) >>
S [382] ->
Q [305] << (REQMHS3() and not REQMHS1() and ((heat_control = Off))) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1143:
Theorem (1143) [serial 2253] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2252]
 


Theorem (1145)                               [serial 2248] 
P [382] << ((REQMHS3() and not REQMHS1())) and (heat_control = Off)^0 >>
S [382] ->
Q [305] << (REQMHS3() and not REQMHS1() and ((heat_control = Off))) >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1144:
Theorem (1144) [serial 2252] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2248]
 


Theorem (1146)                               [serial 2245] 
P [305] << (REQMHS3() and not REQMHS1()) >>
S [382] heat_control!(Off)
Q [305] << (REQMHS3() and not REQMHS1() and ((heat_control = Off))) >>
by Enumeration Type Port Output 
and theorems 1126 1145:
Theorem (1126) [serial 2247] used for:
  applied port output of enumeration type  heat_control!(Off) [serial 2245]
 
Theorem (1145) [serial 2248] used for:
  applied port output <<pre and (heat_control=Off)^0>> -> <<post>> [serial 2245]
 


Theorem (1147)                               [serial 2257] 
P [305] << Off = heat_control and REQMHS3() and not REQMHS1() >>
S [384] ->
Q [385] << Off = heat_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1148)                               [serial 2249] 
P [305] << (REQMHS3() and not REQMHS1() and ((heat_control = Off))) >>
S [384] ->
Q [385] << (Off = heat_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1147:
Theorem (1147) [serial 2257] used for:
    normalization of [serial 2249]
 


Theorem (1149)                               [serial 2246] 
P [305] << (REQMHS3() and not REQMHS1() and ((heat_control = Off))) >>
S [384] heat_previous_period' := Off
Q [385] << (heat_previous_period' = heat_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1148:
Theorem (1148) [serial 2249] used for:
  applied wp for assignment [serial 2246]
 


Theorem (1150)                               [serial 1059] 
P [347] << (INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() and ((current_temperature.t >= (UPPER_DESIRED_TEMP)^0))) >>
S [381] << (REQMHS3() and not REQMHS1()) >>
heat_control!(Off)
;
<< (REQMHS3() and not REQMHS1() and ((heat_control = Off))) >>
heat_previous_period' := Off
<< (heat_previous_period' = heat_control) >>
Q [345] << (INVMHS())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1115 1124 1146 1149:
Theorem (1115) [serial 2243] used for:
  P -> P1 in sequential composition for [serial 1059]
 
Theorem (1124) [serial 2244] used for:
  Q1 -> Q in sequential composition for [serial 1059]
 
Theorem (1146) [serial 2245] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1059]
 
Theorem (1149) [serial 2246] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1059]
 


Theorem (1151)                               [serial 2337] 
P [347] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1152)                               [serial 2336] 
P [347] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < current_temperature.t and 
current_temperature.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period >>
by Replacing port names with Assertions
and theorem 1151:
Theorem (1151) [serial 2337] used for:
  Replacing port names with Assertions [serial 2336]
 


Theorem (1153)                               [serial 2335] 
P [347] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP^0 < current_temperature.t and 
current_temperature.t < UPPER_DESIRED_TEMP^0 and heat_control^-1 = heat_previous_period and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1152:
Theorem (1152) [serial 2336] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2335]
 


Theorem (1154)                               [serial 2334] 
P [347] << heat_control^-1 = heat_previous_period and (REGULATOR_OK() and RUN()) and 
(LOWER_DESIRED_TEMP^0 < current_temperature.t and current_temperature.t < UPPER_DESIRED_TEMP^0) and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << heat_control^-1 = heat_previous_period and (REGULATOR_OK() and RUN()) and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Associativity: (b.c).a = a.b.c
and theorem 1153:
Theorem (1153) [serial 2335] used for:
  Associativity: (b.c).a = a.b.c [serial 2334]
 


Theorem (1155)                               [serial 2332] 
P [347] << heat_control^-1 = heat_previous_period and (REGULATOR_OK() and RUN()) and 
(LOWER_DESIRED_TEMP^0 < current_temperature.t and current_temperature.t < UPPER_DESIRED_TEMP^0) and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << heat_control^-1 = heat_previous_period and true and (REGULATOR_OK() and 
RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Law of And-Simplification:  P and true is P
and theorem 1154:
Theorem (1154) [serial 2334] used for:
  Law of And-Simplification:  P and true is P [serial 2332]
 


Theorem (1156)                               [serial 2330] 
P [347] << (((heat_previous_period = heat_control^-1)) and (REGULATOR_OK() and RUN()) and 
(((heat_previous_period = O_n)) or ((heat_previous_period = Off))) and (
((current_temperature.t > (LOWER_DESIRED_TEMP)^0)) and ((current_temperature.t < (UPPER_DESIRED_TEMP)^0)))) >>
S [387] ->
Q [348] << (((CURRENT_TEMP.t > LOWER_DESIRED_TEMP) and (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) and 
(REGULATOR_OK() and RUN()) and ((heat_previous_period = heat_control^-1)) and 
true) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1155:
Theorem (1155) [serial 2332] used for:
    normalization of [serial 2330]
 


Theorem (1157)                               [serial 2329] 
P [347] << (INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() and (((current_temperature.t > (LOWER_DESIRED_TEMP)^0)) and 
((current_temperature.t < (UPPER_DESIRED_TEMP)^0)))) >>
S [387] ->
Q [348] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
true) >>
by Substitution of Assertion Labels
and theorem 1156:
Theorem (1156) [serial 2330] used for:
  substituted Assertions' predicates for  labels  [serial 2329]
 


Theorem (1158)                               [serial 2337] 
P [347] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1159)                               [serial 2336] 
P [347] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < current_temperature.t and 
current_temperature.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period >>
by Replacing port names with Assertions
and theorem 1158:
Theorem (1158) [serial 2337] used for:
  Replacing port names with Assertions [serial 2336]
 


Theorem (1160)                               [serial 2335] 
P [347] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP^0 < current_temperature.t and 
current_temperature.t < UPPER_DESIRED_TEMP^0 and heat_control^-1 = heat_previous_period and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1159:
Theorem (1159) [serial 2336] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2335]
 


Theorem (1161)                               [serial 2334] 
P [347] << heat_control^-1 = heat_previous_period and (REGULATOR_OK() and RUN()) and 
(LOWER_DESIRED_TEMP^0 < current_temperature.t and current_temperature.t < UPPER_DESIRED_TEMP^0) and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << heat_control^-1 = heat_previous_period and (REGULATOR_OK() and RUN()) and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Associativity: (b.c).a = a.b.c
and theorem 1160:
Theorem (1160) [serial 2335] used for:
  Associativity: (b.c).a = a.b.c [serial 2334]
 


Theorem (1162)                               [serial 2332] 
P [347] << heat_control^-1 = heat_previous_period and (REGULATOR_OK() and RUN()) and 
(LOWER_DESIRED_TEMP^0 < current_temperature.t and current_temperature.t < UPPER_DESIRED_TEMP^0) and 
(O_n = heat_previous_period or Off = heat_previous_period) >>
S [387] ->
Q [348] << heat_control^-1 = heat_previous_period and true and (REGULATOR_OK() and 
RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Law of And-Simplification:  P and true is P
and theorem 1161:
Theorem (1161) [serial 2334] used for:
  Law of And-Simplification:  P and true is P [serial 2332]
 


Theorem (1163)                               [serial 2330] 
P [347] << (((heat_previous_period = heat_control^-1)) and (REGULATOR_OK() and RUN()) and 
(((heat_previous_period = O_n)) or ((heat_previous_period = Off))) and (
((current_temperature.t > (LOWER_DESIRED_TEMP)^0)) and ((current_temperature.t < (UPPER_DESIRED_TEMP)^0)))) >>
S [387] ->
Q [348] << (((CURRENT_TEMP.t > LOWER_DESIRED_TEMP) and (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) and 
(REGULATOR_OK() and RUN()) and ((heat_previous_period = heat_control^-1)) and 
true) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1162:
Theorem (1162) [serial 2332] used for:
    normalization of [serial 2330]
 


Theorem (1164)                               [serial 2329] 
P [347] << (INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() and (((current_temperature.t > (LOWER_DESIRED_TEMP)^0)) and 
((current_temperature.t < (UPPER_DESIRED_TEMP)^0)))) >>
S [387] ->
Q [348] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
true) >>
by Substitution of Assertion Labels
and theorem 1163:
Theorem (1163) [serial 2330] used for:
  substituted Assertions' predicates for  labels  [serial 2329]
 


Theorem (1165)                               [serial 1060] 
P [347] << (INVMHS() and REGULATOR_MODE(x:Normal) and AXIOM_HEAT() and (((current_temperature.t > (LOWER_DESIRED_TEMP)^0)) and 
((current_temperature.t < (UPPER_DESIRED_TEMP)^0)))) >>
S [387] ->
Q [348] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT()) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1164 1164:
Theorem (1164) [serial 2329] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1164) [serial 2329] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1166)                               [serial 2481] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [393] << heat_control^-1 = heat_previous_period >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1167)                               [serial 2459] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [393] << heat_control^-1 = O_n >>
by Guided Substitution of Equals
and theorem 1166:
Theorem (1166) [serial 2481] used for:
  Guided Substitution of Equals
 replacing "O_n" with its = "heat_previous_period" in its postcondition [serial 2459]
 


Theorem (1168)                               [serial 2460] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [129] << CURRENT_TEMPERATURE_STATUS = Valid >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1169)                               [serial 2461] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [128] << not INTERNAL_FAILURE >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1170)                               [serial 2462] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [128] << not REGULATOR_INTERFACE_FAILURE >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1171)                               [serial 2463] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [4] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1172)                               [serial 2464] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [4] << LOWER_DESIRED_TEMP < CURRENT_TEMP.t >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1173)                               [serial 2465] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [337] << CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1174)                               [serial 2453] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1167 1168 1169 1170 1171 1172 1173:
Theorem (1167) [serial 2459] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2453]
 
Theorem (1168) [serial 2460] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2453]
 
Theorem (1169) [serial 2461] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2453]
 
Theorem (1170) [serial 2462] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2453]
 
Theorem (1171) [serial 2463] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2453]
 
Theorem (1172) [serial 2464] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2453]
 
Theorem (1173) [serial 2465] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2453]
 


Theorem (1175)                               [serial 2449] 
P [305] << not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(O_n = heat_previous_period or Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and heat_control^-1 = O_n and 
CURRENT_TEMPERATURE_STATUS = Valid and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1174:
Theorem (1174) [serial 2453] used for:
    normalization of [serial 2449]
 


Theorem (1176)                               [serial 2445] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE) and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Associativity: (b.c).a = a.b.c
and theorem 1175:
Theorem (1175) [serial 2449] used for:
  Associativity: (b.c).a = a.b.c [serial 2445]
 


Theorem (1177)                               [serial 2441] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and (not (INTERNAL_FAILURE) and not (REGULATOR_INTERFACE_FAILURE)) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and (not (INTERNAL_FAILURE) and 
not (REGULATOR_INTERFACE_FAILURE)) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1176:
Theorem (1176) [serial 2445] used for:
    normalization of [serial 2441]
 


Theorem (1178)                               [serial 2439] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 1177:
Theorem (1177) [serial 2441] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2439]
 


Theorem (1179)                               [serial 2437] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << true and heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Law of And-Simplification:  P and true is P
and theorem 1178:
Theorem (1178) [serial 2439] used for:
  Law of And-Simplification:  P and true is P [serial 2437]
 


Theorem (1180)                               [serial 2432] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << heat_control^-1 = heat_control^-1 and heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Equality Law (idistr):  a=a <-> true
and theorem 1179:
Theorem (1179) [serial 2437] used for:
  Equality Law (idistr):  a=a <-> true [serial 2432]
 


Theorem (1181)                               [serial 2429] 
P [305] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
(O_n = heat_previous_period or Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
heat_control^-1 = heat_control^-1 and heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1180:
Theorem (1180) [serial 2432] used for:
    normalization of [serial 2429]
 


Theorem (1182)                               [serial 2427] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_control^-1 and 
heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 1181:
Theorem (1181) [serial 2429] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2427]
 


Theorem (1183)                               [serial 2423] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
and theorem 1182:
Theorem (1182) [serial 2427] used for:
  Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
 replacing "heat_previous_period"
 with its ="
 (heat_control^-1)" [serial 2423]
 


Theorem (1184)                               [serial 2419] 
P [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (O_n = heat_previous_period or Off = heat_previous_period) and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1183:
Theorem (1183) [serial 2423] used for:
    normalization of [serial 2419]
 


Theorem (1185)                               [serial 2415] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (CURRENT_TEMPERATURE_STATUS = Valid and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Associativity: (b.c).a = a.b.c
and theorem 1184:
Theorem (1184) [serial 2419] used for:
  Associativity: (b.c).a = a.b.c [serial 2415]
 


Theorem (1186)                               [serial 2411] 
P [305] << (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (O_n = heat_previous_period or Off = heat_previous_period) >>
S [348] ->
Q [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1185:
Theorem (1185) [serial 2415] used for:
    normalization of [serial 2411]
 


Theorem (1187)                               [serial 2409] 
P [305] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (O_n = heat_previous_period or Off = heat_previous_period) >>
S [348] ->
Q [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period >>
by Substitution of Assertion Labels
and theorem 1186:
Theorem (1186) [serial 2411] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2409]
 


Theorem (1188)                               [serial 2408] 
P [305] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (O_n = heat_previous_period or Off = heat_previous_period) >>
S [348] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period >>
by Associativity: (b.c).a = a.b.c
and theorem 1187:
Theorem (1187) [serial 2409] used for:
  Associativity: (b.c).a = a.b.c [serial 2408]
 


Theorem (1189)                               [serial 2407] 
P [305] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
(REGULATOR_OK() and RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [348] ->
Q [305] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
(#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Associativity: (b.c).a = a.b.c
and theorem 1188:
Theorem (1188) [serial 2408] used for:
  Associativity: (b.c).a = a.b.c [serial 2407]
 


Theorem (1190)                               [serial 2403] 
P [305] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
(REGULATOR_OK() and RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [348] ->
Q [305] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
true and (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Law of And-Simplification:  P and true is P
and theorem 1189:
Theorem (1189) [serial 2407] used for:
  Law of And-Simplification:  P and true is P [serial 2403]
 


Theorem (1191)                               [serial 2399] 
P [305] << O_n = heat_previous_period and (((heat_previous_period = O_n)) or ((heat_previous_period = Off))) and 
((heat_previous_period = heat_control^-1)) and (REGULATOR_OK() and RUN()) and 
((CURRENT_TEMP.t > LOWER_DESIRED_TEMP) and (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) >>
S [348] ->
Q [305] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
true and ((not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) and (
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1190:
Theorem (1190) [serial 2403] used for:
    normalization of [serial 2399]
 


Theorem (1192)                               [serial 2380] 
P [305] << O_n = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [305] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
true and (REGULATOR_OK() and RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Substitution of Assertion Labels
and theorem 1191:
Theorem (1191) [serial 2399] used for:
  substituted Assertions' predicates for  labels  [serial 2380]
 


Theorem (1193)                               [serial 2375] 
P [305] << O_n = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [305] << O_n = heat_previous_period and ((heat_previous_period = heat_control^-1)) and 
(REGULATOR_OK() and RUN()) and ((CURRENT_TEMP.t > LOWER_DESIRED_TEMP) and 
(CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) and true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1192:
Theorem (1192) [serial 2380] used for:
    normalization of [serial 2375]
 


Theorem (1194)                               [serial 2366] 
P [305] << O_n = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [305] << O_n = heat_previous_period and INVMHS() and REGULATOR_MODE(x:Normal) and 
TEMP_IN_DESIRED_RANGE() and true >>
by Substitution of Assertion Labels
and theorem 1193:
Theorem (1193) [serial 2375] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2366]
 


Theorem (1195)                               [serial 2360] 
P [305] << O_n = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [305] << O_n = heat_previous_period and true and INVMHS() and REGULATOR_MODE(x:Normal) and 
TEMP_IN_DESIRED_RANGE() >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1194:
Theorem (1194) [serial 2366] used for:
    normalization of [serial 2360]
 


Theorem (1196)                               [serial 2481] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [393] << heat_control^-1 = heat_previous_period >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1197)                               [serial 2459] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [393] << heat_control^-1 = O_n >>
by Guided Substitution of Equals
and theorem 1196:
Theorem (1196) [serial 2481] used for:
  Guided Substitution of Equals
 replacing "O_n" with its = "heat_previous_period" in its postcondition [serial 2459]
 


Theorem (1198)                               [serial 2460] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [129] << CURRENT_TEMPERATURE_STATUS = Valid >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1199)                               [serial 2461] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [128] << not INTERNAL_FAILURE >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1200)                               [serial 2462] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [128] << not REGULATOR_INTERFACE_FAILURE >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1201)                               [serial 2463] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [4] << not (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1202)                               [serial 2464] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [4] << LOWER_DESIRED_TEMP < CURRENT_TEMP.t >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1203)                               [serial 2465] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [337] << CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1204)                               [serial 2453] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1197 1198 1199 1200 1201 1202 1203:
Theorem (1197) [serial 2459] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2453]
 
Theorem (1198) [serial 2460] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2453]
 
Theorem (1199) [serial 2461] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2453]
 
Theorem (1200) [serial 2462] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2453]
 
Theorem (1201) [serial 2463] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2453]
 
Theorem (1202) [serial 2464] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2453]
 
Theorem (1203) [serial 2465] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2453]
 


Theorem (1205)                               [serial 2449] 
P [305] << not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(O_n = heat_previous_period or Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and heat_control^-1 = O_n and 
CURRENT_TEMPERATURE_STATUS = Valid and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1204:
Theorem (1204) [serial 2453] used for:
    normalization of [serial 2449]
 


Theorem (1206)                               [serial 2445] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE) and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Associativity: (b.c).a = a.b.c
and theorem 1205:
Theorem (1205) [serial 2449] used for:
  Associativity: (b.c).a = a.b.c [serial 2445]
 


Theorem (1207)                               [serial 2441] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and (not (INTERNAL_FAILURE) and not (REGULATOR_INTERFACE_FAILURE)) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and (not (INTERNAL_FAILURE) and 
not (REGULATOR_INTERFACE_FAILURE)) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1206:
Theorem (1206) [serial 2445] used for:
    normalization of [serial 2441]
 


Theorem (1208)                               [serial 2439] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 1207:
Theorem (1207) [serial 2441] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2439]
 


Theorem (1209)                               [serial 2437] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << true and heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Law of And-Simplification:  P and true is P
and theorem 1208:
Theorem (1208) [serial 2439] used for:
  Law of And-Simplification:  P and true is P [serial 2437]
 


Theorem (1210)                               [serial 2432] 
P [305] << heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << heat_control^-1 = heat_control^-1 and heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Equality Law (idistr):  a=a <-> true
and theorem 1209:
Theorem (1209) [serial 2437] used for:
  Equality Law (idistr):  a=a <-> true [serial 2432]
 


Theorem (1211)                               [serial 2429] 
P [305] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
(O_n = heat_previous_period or Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
heat_control^-1 = heat_control^-1 and heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1210:
Theorem (1210) [serial 2432] used for:
    normalization of [serial 2429]
 


Theorem (1212)                               [serial 2427] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_control^-1 and 
heat_control^-1 = O_n and CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or 
REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 1211:
Theorem (1211) [serial 2429] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2427]
 


Theorem (1213)                               [serial 2423] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
and theorem 1212:
Theorem (1212) [serial 2427] used for:
  Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
 replacing "heat_previous_period"
 with its ="
 (heat_control^-1)" [serial 2423]
 


Theorem (1214)                               [serial 2419] 
P [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (O_n = heat_previous_period or Off = heat_previous_period) and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1213:
Theorem (1213) [serial 2423] used for:
    normalization of [serial 2419]
 


Theorem (1215)                               [serial 2415] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (CURRENT_TEMPERATURE_STATUS = Valid and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) and (O_n = heat_previous_period or 
Off = heat_previous_period) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [348] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by Associativity: (b.c).a = a.b.c
and theorem 1214:
Theorem (1214) [serial 2419] used for:
  Associativity: (b.c).a = a.b.c [serial 2415]
 


Theorem (1216)                               [serial 2411] 
P [305] << (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (O_n = heat_previous_period or Off = heat_previous_period) >>
S [348] ->
Q [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1215:
Theorem (1215) [serial 2415] used for:
    normalization of [serial 2411]
 


Theorem (1217)                               [serial 2409] 
P [305] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (O_n = heat_previous_period or Off = heat_previous_period) >>
S [348] ->
Q [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period >>
by Substitution of Assertion Labels
and theorem 1216:
Theorem (1216) [serial 2411] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2409]
 


Theorem (1218)                               [serial 2408] 
P [305] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (O_n = heat_previous_period or Off = heat_previous_period) >>
S [348] ->
Q [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period >>
by Associativity: (b.c).a = a.b.c
and theorem 1217:
Theorem (1217) [serial 2409] used for:
  Associativity: (b.c).a = a.b.c [serial 2408]
 


Theorem (1219)                               [serial 2407] 
P [305] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
(REGULATOR_OK() and RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [348] ->
Q [305] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
(#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and (CURRENT_TEMPERATURE_STATUS = Valid and 
not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Associativity: (b.c).a = a.b.c
and theorem 1218:
Theorem (1218) [serial 2408] used for:
  Associativity: (b.c).a = a.b.c [serial 2407]
 


Theorem (1220)                               [serial 2403] 
P [305] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
(REGULATOR_OK() and RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) and (O_n = heat_previous_period or 
Off = heat_previous_period) >>
S [348] ->
Q [305] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
true and (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Law of And-Simplification:  P and true is P
and theorem 1219:
Theorem (1219) [serial 2407] used for:
  Law of And-Simplification:  P and true is P [serial 2403]
 


Theorem (1221)                               [serial 2399] 
P [305] << O_n = heat_previous_period and (((heat_previous_period = O_n)) or ((heat_previous_period = Off))) and 
((heat_previous_period = heat_control^-1)) and (REGULATOR_OK() and RUN()) and 
((CURRENT_TEMP.t > LOWER_DESIRED_TEMP) and (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) >>
S [348] ->
Q [305] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
true and ((not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout))) and (
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1220:
Theorem (1220) [serial 2403] used for:
    normalization of [serial 2399]
 


Theorem (1222)                               [serial 2380] 
P [305] << O_n = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [305] << heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
true and (REGULATOR_OK() and RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Substitution of Assertion Labels
and theorem 1221:
Theorem (1221) [serial 2399] used for:
  substituted Assertions' predicates for  labels  [serial 2380]
 


Theorem (1223)                               [serial 2375] 
P [305] << O_n = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [305] << O_n = heat_previous_period and ((heat_previous_period = heat_control^-1)) and 
(REGULATOR_OK() and RUN()) and ((CURRENT_TEMP.t > LOWER_DESIRED_TEMP) and 
(CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) and true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1222:
Theorem (1222) [serial 2380] used for:
    normalization of [serial 2375]
 


Theorem (1224)                               [serial 2366] 
P [305] << O_n = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [305] << O_n = heat_previous_period and INVMHS() and REGULATOR_MODE(x:Normal) and 
TEMP_IN_DESIRED_RANGE() and true >>
by Substitution of Assertion Labels
and theorem 1223:
Theorem (1223) [serial 2375] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2366]
 


Theorem (1225)                               [serial 2360] 
P [305] << O_n = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [305] << O_n = heat_previous_period and true and INVMHS() and REGULATOR_MODE(x:Normal) and 
TEMP_IN_DESIRED_RANGE() >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1224:
Theorem (1224) [serial 2366] used for:
    normalization of [serial 2360]
 


Theorem (1226)                               [serial 2346] 
P [305] << O_n = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [305] << O_n = heat_previous_period and AXIOM_HC() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1225 1225:
Theorem (1225) [serial 2360] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1225) [serial 2360] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1227)                               [serial 2338] 
P [305] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT() and (((heat_previous_period = O_n)))) >>
S [348] ->
Q [305] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and 
((heat_previous_period = O_n)) and INVMHS()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1226:
Theorem (1226) [serial 2346] used for:
    normalization of [serial 2338]
 


Theorem (1228)                               [serial 2396] 
P [397] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_previous_period^1 = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1229)                               [serial 2392] 
P [397] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control = heat_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 1228:
Theorem (1228) [serial 2396] used for:
    normalization of [serial 2392]
 


Theorem (1230)                               [serial 2390] 
P [397] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control^0 = heat_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1229:
Theorem (1229) [serial 2392] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2390]
 


Theorem (1231)                               [serial 2386] 
P [397] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^(-1+1) = (heat_previous_period)^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1230:
Theorem (1230) [serial 2390] used for:
    normalization of [serial 2386]
 


Theorem (1232)                               [serial 2382] 
P [397] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^-1 = heat_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1231:
Theorem (1231) [serial 2386] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2382]
 


Theorem (1233)                               [serial 2376] 
P [397] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (((heat_previous_period = heat_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1232:
Theorem (1232) [serial 2382] used for:
    normalization of [serial 2376]
 


Theorem (1234)                               [serial 2368] 
P [397] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Substitution of Assertion Labels
and theorem 1233:
Theorem (1233) [serial 2376] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2368]
 


Theorem (1235)                               [serial 2361] 
P [397] << heat_control = (heat_previous_period)^1 >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1234:
Theorem (1234) [serial 2368] used for:
    normalization of [serial 2361]
 


Theorem (1236)                               [serial 2348] 
P [397] << heat_control = heat_previous_period' >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1235:
Theorem (1235) [serial 2361] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2348]
 


Theorem (1237)                               [serial 2339] 
P [397] << (heat_previous_period' = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1236:
Theorem (1236) [serial 2348] used for:
    normalization of [serial 2339]
 


Theorem (1238)                               [serial 2482] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << heat_control^-1 = heat_previous_period or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1239)                               [serial 2476] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << heat_control^-1 = O_n or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t >>
by Guided Substitution of Equals
and theorem 1238:
Theorem (1238) [serial 2482] used for:
  Guided Substitution of Equals
 replacing "O_n" with its = "heat_previous_period" in its postcondition [serial 2476]
 


Theorem (1240)                               [serial 2466] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << (heat_control^-1 = O_n or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1239:
Theorem (1239) [serial 2476] used for:
    normalization of [serial 2466]
 


Theorem (1241)                               [serial 2478] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << not LOWER_DESIRED_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1242)                               [serial 2467] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << (not LOWER_DESIRED_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1241:
Theorem (1241) [serial 2478] used for:
    normalization of [serial 2467]
 


Theorem (1243)                               [serial 2458] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << (heat_control^-1 = O_n or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) and 
(not LOWER_DESIRED_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1240 1242:
Theorem (1240) [serial 2466] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2458]
 
Theorem (1242) [serial 2467] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2458]
 


Theorem (1244)                               [serial 2455] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not INTERNAL_FAILURE and 
not REGULATOR_INTERFACE_FAILURE and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << true and (heat_control^-1 = O_n or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) and 
(not LOWER_DESIRED_TEMP < CURRENT_TEMP.t or CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Law of And-Simplification:  P and true is P
and theorem 1243:
Theorem (1243) [serial 2458] used for:
  Law of And-Simplification:  P and true is P [serial 2455]
 


Theorem (1245)                               [serial 2451] 
P [305] << not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE and HEAT_CONTROL^-1 = heat_control^-1 and 
heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << (heat_control^-1 = O_n or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) and 
(true) and (CURRENT_TEMP.t < UPPER_DESIRED_TEMP or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1244:
Theorem (1244) [serial 2455] used for:
    normalization of [serial 2451]
 


Theorem (1246)                               [serial 2450] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << (heat_control^-1 = O_n or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) and 
(true) and (CURRENT_TEMP.t < UPPER_DESIRED_TEMP or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) >>
by Associativity: (b.c).a = a.b.c
and theorem 1245:
Theorem (1245) [serial 2451] used for:
  Associativity: (b.c).a = a.b.c [serial 2450]
 


Theorem (1247)                               [serial 2448] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << (heat_control^-1 = O_n or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) and 
(CURRENT_TEMP.t < UPPER_DESIRED_TEMP or not LOWER_DESIRED_TEMP < CURRENT_TEMP.t) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 1246:
Theorem (1246) [serial 2450] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2448]
 


Theorem (1248)                               [serial 2443] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
(not INTERNAL_FAILURE and not REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << not LOWER_DESIRED_TEMP < CURRENT_TEMP.t or (heat_control^-1 = O_n and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 1247:
Theorem (1247) [serial 2448] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 2443]
 


Theorem (1249)                               [serial 2440] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and (not (INTERNAL_FAILURE) and 
not (REGULATOR_INTERFACE_FAILURE)) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << not LOWER_DESIRED_TEMP < CURRENT_TEMP.t or (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = O_n) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1248:
Theorem (1248) [serial 2443] used for:
    normalization of [serial 2440]
 


Theorem (1250)                               [serial 2438] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << not LOWER_DESIRED_TEMP < CURRENT_TEMP.t or (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and heat_control^-1 = O_n) >>
by DeMorgan's Law: not (A or B) = (not A) and (not B)
and theorem 1249:
Theorem (1249) [serial 2440] used for:
  DeMorgan's Law: not (A or B) = (not A) and (not B) [serial 2438]
 


Theorem (1251)                               [serial 2434] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and not (now - START_TIME) < #Iso_Properties::Initialization_Timeout and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << not LOWER_DESIRED_TEMP < CURRENT_TEMP.t or (heat_control^-1 = O_n and 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 1250:
Theorem (1250) [serial 2438] used for:
  Associativity: (b.c).a = a.b.c [serial 2434]
 


Theorem (1252)                               [serial 2430] 
P [305] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << (not (LOWER_DESIRED_TEMP < CURRENT_TEMP.t)) or (heat_control^-1 = O_n and 
(LOWER_DESIRED_TEMP < (CURRENT_TEMP.t) and (CURRENT_TEMP.t) < UPPER_DESIRED_TEMP)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1251:
Theorem (1251) [serial 2434] used for:
    normalization of [serial 2430]
 


Theorem (1253)                               [serial 2428] 
P [305] << (not ((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) and 
HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
CURRENT_TEMPERATURE_STATUS = Valid and O_n = heat_previous_period and not (
INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << (not (LOWER_DESIRED_TEMP < CURRENT_TEMP.t)) or (heat_control^-1 = O_n and 
(CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Replace expression with range:  a<x and x<b  iff  x in a,,b
and theorem 1252:
Theorem (1252) [serial 2430] used for:
  Replace expression with range:  a<x and x<b  iff  x in a,,b [serial 2428]
 


Theorem (1254)                               [serial 2426] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and HEAT_CONTROL^-1 = heat_control^-1 and 
heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP or (heat_control^-1 = O_n and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 1253:
Theorem (1253) [serial 2428] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2426]
 


Theorem (1255)                               [serial 2421] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and HEAT_CONTROL^-1 = heat_control^-1 and 
heat_control^-1 = heat_previous_period and CURRENT_TEMPERATURE_STATUS = Valid and 
O_n = heat_previous_period and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP or (HEAT_CONTROL^-1 = O_n and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
and theorem 1254:
Theorem (1254) [serial 2426] used for:
  Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
 replacing "HEAT_CONTROL^-1"
 with its ="
 (heat_control^-1)" [serial 2421]
 


Theorem (1256)                               [serial 2418] 
P [305] << CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE) and 
#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and HEAT_CONTROL^-1 = heat_control^-1 and 
heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP or (HEAT_CONTROL^-1 = O_n and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1255:
Theorem (1255) [serial 2421] used for:
    normalization of [serial 2418]
 


Theorem (1257)                               [serial 2413] 
P [305] << #Iso_Properties::Initialization_Timeout <= (now - START_TIME) and HEAT_CONTROL^-1 = heat_control^-1 and 
heat_control^-1 = heat_previous_period and O_n = heat_previous_period and 
(CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE)) and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [394] ->
Q [96] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP or (HEAT_CONTROL^-1 = O_n and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 1256:
Theorem (1256) [serial 2418] used for:
  Associativity: (b.c).a = a.b.c [serial 2413]
 


Theorem (1258)                               [serial 2410] 
P [305] << (not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid))) and 
(((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and HEAT_CONTROL^-1 = heat_control^-1 and 
heat_control^-1 = heat_previous_period and O_n = heat_previous_period >>
S [394] ->
Q [96] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP or (HEAT_CONTROL^-1 = O_n and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1257:
Theorem (1257) [serial 2413] used for:
    normalization of [serial 2410]
 


Theorem (1259)                               [serial 2406] 
P [305] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and HEAT_CONTROL^-1 = heat_control^-1 and 
heat_control^-1 = heat_previous_period and O_n = heat_previous_period >>
S [394] ->
Q [96] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP or (HEAT_CONTROL^-1 = O_n and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Substitution of Assertion Labels
and theorem 1258:
Theorem (1258) [serial 2410] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2406]
 


Theorem (1260)                               [serial 2401] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
O_n = heat_previous_period and (REGULATOR_OK() and RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
S [394] ->
Q [96] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP or (HEAT_CONTROL^-1 = O_n and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Associativity: (b.c).a = a.b.c
and theorem 1259:
Theorem (1259) [serial 2406] used for:
  Associativity: (b.c).a = a.b.c [serial 2401]
 


Theorem (1261)                               [serial 2398] 
P [305] << O_n = heat_previous_period and ((HEAT_CONTROL^-1 = heat_control^-1)) and 
((heat_previous_period = heat_control^-1)) and (REGULATOR_OK() and RUN()) and 
((CURRENT_TEMP.t > LOWER_DESIRED_TEMP) and (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) >>
S [394] ->
Q [96] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP or (HEAT_CONTROL^-1 = O_n and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1260:
Theorem (1260) [serial 2401] used for:
    normalization of [serial 2398]
 


Theorem (1262)                               [serial 2378] 
P [305] << O_n = heat_previous_period and AXIOM_HC() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [394] ->
Q [96] << CURRENT_TEMP.t <= LOWER_DESIRED_TEMP or (HEAT_CONTROL^-1 = O_n and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) >>
by Substitution of Assertion Labels
and theorem 1261:
Theorem (1261) [serial 2398] used for:
  substituted Assertions' predicates for  labels  [serial 2378]
 


Theorem (1263)                               [serial 2374] 
P [305] << O_n = heat_previous_period and AXIOM_HC() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [394] ->
Q [96] << ((CURRENT_TEMP.t <= LOWER_DESIRED_TEMP)) or (HEAT_CONTROL^-1 = O_n and 
((CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1262:
Theorem (1262) [serial 2378] used for:
    normalization of [serial 2374]
 


Theorem (1264)                               [serial 2350] 
P [305] << O_n = heat_previous_period and AXIOM_HC() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [394] ->
Q [96] << REQMHS2() or (HEAT_CONTROL^-1 = O_n and REQMHS4()) >>
by Substitution of Assertion Labels
and theorem 1263:
Theorem (1263) [serial 2374] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2350]
 


Theorem (1265)                               [serial 2342] 
P [305] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and 
((heat_previous_period = O_n)) and INVMHS()) >>
S [394] ->
Q [96] << (REQMHS2()) or ((REQMHS4() and ((HEAT_CONTROL^-1 = O_n)))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1264:
Theorem (1264) [serial 2350] used for:
    normalization of [serial 2342]
 


Theorem (1266)                               [serial 2370] 
P [394] << O_n = heat_control and (O_n = heat_previous_period and AXIOM_HC() and 
INVMHS() and REGULATOR_MODE(x:Normal) and TEMP_IN_DESIRED_RANGE()) >>
S [394] ->
Q [395] << O_n = heat_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1267)                               [serial 2363] 
P [394] << ((O_n) = (heat_control)) and (O_n = heat_previous_period and AXIOM_HC() and 
INVMHS() and REGULATOR_MODE(x:Normal) and TEMP_IN_DESIRED_RANGE()) >>
S [394] ->
Q [395] << O_n = heat_control >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1266:
Theorem (1266) [serial 2370] used for:
    normalization of [serial 2363]
 


Theorem (1268)                               [serial 2362] 
P [394] << ((O_n)^0 = (heat_control)^0) and (O_n = heat_previous_period and AXIOM_HC() and 
INVMHS() and REGULATOR_MODE(x:Normal) and TEMP_IN_DESIRED_RANGE()) >>
S [394] ->
Q [395] << O_n = heat_control >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1267:
Theorem (1267) [serial 2363] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2362]
 


Theorem (1269)                               [serial 2352] 
P [394] << (O_n = heat_control)^0 and (O_n = heat_previous_period and AXIOM_HC() and 
INVMHS() and REGULATOR_MODE(x:Normal) and TEMP_IN_DESIRED_RANGE()) >>
S [394] ->
Q [395] << O_n = heat_control >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1268:
Theorem (1268) [serial 2362] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2352]
 


Theorem (1270)                               [serial 2343] 
P [394] << ((TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and 
((heat_previous_period = O_n)) and INVMHS())) and (heat_control = O_n)^0 >>
S [394] ->
Q [395] << (heat_control = O_n) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1269:
Theorem (1269) [serial 2352] used for:
    normalization of [serial 2343]
 


Theorem (1271)                               [serial 2340] 
P [305] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and 
((heat_previous_period = O_n)) and INVMHS()) >>
S [394] heat_control!(O_n)
Q [395] << (heat_control = O_n) >>
by Enumeration Type Port Output 
and theorems 1265 1270:
Theorem (1265) [serial 2342] used for:
  applied port output of enumeration type  heat_control!(O_n) [serial 2340]
 
Theorem (1270) [serial 2343] used for:
  applied port output <<pre and (heat_control=O_n)^0>> -> <<post>> [serial 2340]
 


Theorem (1272)                               [serial 2354] 
P [395] << O_n = heat_control >>
S [396] ->
Q [397] << O_n = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1273)                               [serial 2344] 
P [395] << (heat_control = O_n) >>
S [396] ->
Q [397] << (O_n = heat_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1272:
Theorem (1272) [serial 2354] used for:
    normalization of [serial 2344]
 


Theorem (1274)                               [serial 2341] 
P [395] << (heat_control = O_n) >>
S [396] heat_previous_period' := O_n
Q [397] << (heat_previous_period' = heat_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1273:
Theorem (1273) [serial 2344] used for:
  applied wp for assignment [serial 2341]
 


Theorem (1275)                               [serial 1061] 
P [348] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT() and (((heat_previous_period = O_n)))) >>
S [392] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and ((heat_previous_period = O_n)) and INVMHS()) >>
heat_control!(O_n)
;
<< (heat_control = O_n) >>
heat_previous_period' := O_n
<< (heat_previous_period' = heat_control) >>
Q [345] << (INVMHS())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1227 1237 1271 1274:
Theorem (1227) [serial 2338] used for:
  P -> P1 in sequential composition for [serial 1061]
 
Theorem (1237) [serial 2339] used for:
  Q1 -> Q in sequential composition for [serial 1061]
 
Theorem (1271) [serial 2340] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1061]
 
Theorem (1274) [serial 2341] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1061]
 


Theorem (1276)                               [serial 2501] 
P [305] << Off = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [305] << Off = heat_previous_period and INVMHS() and REGULATOR_MODE(x:Normal) and 
TEMP_IN_DESIRED_RANGE() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1277)                               [serial 2491] 
P [305] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT() and ((heat_previous_period = Off))) >>
S [348] ->
Q [305] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and ((heat_previous_period = Off)) and 
INVMHS()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1276:
Theorem (1276) [serial 2501] used for:
    normalization of [serial 2491]
 


Theorem (1278)                               [serial 2490] 
P [305] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT() and ((heat_previous_period = Off))) >>
S [348] ->
Q [305] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and true and ((heat_previous_period = Off)) and 
INVMHS()) >>
by Law of And-Simplification:  P and true is P
and theorem 1277:
Theorem (1277) [serial 2491] used for:
  Law of And-Simplification:  P and true is P [serial 2490]
 


Theorem (1279)                               [serial 2501] 
P [305] << Off = heat_previous_period and AXIOM_HEAT() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [348] ->
Q [305] << Off = heat_previous_period and INVMHS() and REGULATOR_MODE(x:Normal) and 
TEMP_IN_DESIRED_RANGE() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1280)                               [serial 2491] 
P [305] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT() and ((heat_previous_period = Off))) >>
S [348] ->
Q [305] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and ((heat_previous_period = Off)) and 
INVMHS()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1279:
Theorem (1279) [serial 2501] used for:
    normalization of [serial 2491]
 


Theorem (1281)                               [serial 2490] 
P [305] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT() and ((heat_previous_period = Off))) >>
S [348] ->
Q [305] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and true and ((heat_previous_period = Off)) and 
INVMHS()) >>
by Law of And-Simplification:  P and true is P
and theorem 1280:
Theorem (1280) [serial 2491] used for:
  Law of And-Simplification:  P and true is P [serial 2490]
 


Theorem (1282)                               [serial 2483] 
P [305] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT() and ((heat_previous_period = Off))) >>
S [348] ->
Q [305] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and 
((heat_previous_period = Off)) and INVMHS()) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1281 1281:
Theorem (1281) [serial 2490] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1281) [serial 2490] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1283)                               [serial 2533] 
P [406] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_previous_period^1 = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1284)                               [serial 2530] 
P [406] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control = heat_previous_period^1 >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 1283:
Theorem (1283) [serial 2533] used for:
    normalization of [serial 2530]
 


Theorem (1285)                               [serial 2528] 
P [406] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << heat_control^0 = heat_previous_period^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1284:
Theorem (1284) [serial 2530] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2528]
 


Theorem (1286)                               [serial 2525] 
P [406] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^(-1+1) = (heat_previous_period)^1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1285:
Theorem (1285) [serial 2528] used for:
    normalization of [serial 2525]
 


Theorem (1287)                               [serial 2522] 
P [406] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (heat_control^-1 = heat_previous_period)^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1286:
Theorem (1286) [serial 2525] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2522]
 


Theorem (1288)                               [serial 2518] 
P [406] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (((heat_previous_period = heat_control^-1)))^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1287:
Theorem (1287) [serial 2522] used for:
    normalization of [serial 2518]
 


Theorem (1289)                               [serial 2512] 
P [406] << heat_previous_period^1 = heat_control >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Substitution of Assertion Labels
and theorem 1288:
Theorem (1288) [serial 2518] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2512]
 


Theorem (1290)                               [serial 2507] 
P [406] << heat_control = (heat_previous_period)^1 >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1289:
Theorem (1289) [serial 2512] used for:
    normalization of [serial 2507]
 


Theorem (1291)                               [serial 2493] 
P [406] << heat_control = heat_previous_period' >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1290:
Theorem (1290) [serial 2507] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2493]
 


Theorem (1292)                               [serial 2484] 
P [406] << (heat_previous_period' = heat_control) >>
S [345] ->
Q [305] << (INVMHS())^1 >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1291:
Theorem (1291) [serial 2493] used for:
    normalization of [serial 2484]
 


Theorem (1293)                               [serial 2556] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = heat_previous_period and 
heat_control^-1 = Off and heat_control^-1 = heat_previous_period and Off = heat_previous_period and 
REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) or 
(HEAT_CONTROL^-1 = Off and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (1294)                               [serial 2554] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = heat_previous_period and 
heat_control^-1 = Off and heat_control^-1 = heat_previous_period and Off = heat_previous_period and 
REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) or 
(LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP and 
HEAT_CONTROL^-1 = Off) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1293:
Theorem (1293) [serial 2556] used for:
    normalization of [serial 2554]
 


Theorem (1295)                               [serial 2553] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = heat_previous_period and 
heat_control^-1 = Off and heat_control^-1 = heat_previous_period and Off = heat_previous_period and 
REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) or 
(HEAT_CONTROL^-1 = Off and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 1294:
Theorem (1294) [serial 2554] used for:
  Associativity: (b.c).a = a.b.c [serial 2553]
 


Theorem (1296)                               [serial 2552] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = heat_previous_period and 
heat_control^-1 = Off and heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
Off = heat_previous_period and REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) or 
(HEAT_CONTROL^-1 = Off and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Law of And-Simplification:  P and P is P
and theorem 1295:
Theorem (1295) [serial 2553] used for:
  Law of And-Simplification:  P and P is P [serial 2552]
 


Theorem (1297)                               [serial 2551] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = heat_control^-1 and 
HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = heat_previous_period and 
heat_control^-1 = Off and heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and Off = heat_previous_period and 
Off = heat_previous_period and REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) or 
(HEAT_CONTROL^-1 = Off and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Law of And-Simplification:  P and P is P
and theorem 1296:
Theorem (1296) [serial 2552] used for:
  Law of And-Simplification:  P and P is P [serial 2551]
 


Theorem (1298)                               [serial 2550] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = heat_control^-1 and 
HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and 
HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = heat_previous_period and 
HEAT_CONTROL^-1 = heat_previous_period and heat_control^-1 = Off and heat_control^-1 = Off and 
heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and Off = heat_previous_period and 
Off = heat_previous_period and Off = heat_previous_period and REGULATOR_OK() and 
RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) or 
(HEAT_CONTROL^-1 = Off and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Law of And-Simplification:  P and P is P
and theorem 1297:
Theorem (1297) [serial 2551] used for:
  Law of And-Simplification:  P and P is P [serial 2550]
 


Theorem (1299)                               [serial 2549] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = heat_control^-1 and 
HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = heat_control^-1 and 
HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and 
HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and 
HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and 
HEAT_CONTROL^-1 = heat_previous_period and HEAT_CONTROL^-1 = heat_previous_period and 
HEAT_CONTROL^-1 = heat_previous_period and HEAT_CONTROL^-1 = heat_previous_period and 
true and heat_control^-1 = Off and heat_control^-1 = Off and heat_control^-1 = Off and 
heat_control^-1 = Off and heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and true and Off = heat_previous_period and 
Off = heat_previous_period and Off = heat_previous_period and Off = heat_previous_period and 
Off = heat_previous_period and true and true and REGULATOR_OK() and RUN() and 
LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) or 
(HEAT_CONTROL^-1 = Off and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Law of And-Simplification:  P and P is P
and theorem 1298:
Theorem (1298) [serial 2550] used for:
  Law of And-Simplification:  P and P is P [serial 2549]
 


Theorem (1300)                               [serial 2547] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = heat_control^-1 and 
HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = heat_control^-1 and 
HEAT_CONTROL^-1 = heat_control^-1 and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and 
HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and 
HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and 
HEAT_CONTROL^-1 = heat_previous_period and HEAT_CONTROL^-1 = heat_previous_period and 
HEAT_CONTROL^-1 = heat_previous_period and HEAT_CONTROL^-1 = heat_previous_period and 
heat_control^-1 = heat_control^-1 and heat_control^-1 = Off and heat_control^-1 = Off and 
heat_control^-1 = Off and heat_control^-1 = Off and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
Off = Off and Off = heat_previous_period and Off = heat_previous_period and 
Off = heat_previous_period and Off = heat_previous_period and Off = heat_previous_period and 
heat_previous_period = heat_previous_period and heat_previous_period = heat_previous_period and 
REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) or 
(HEAT_CONTROL^-1 = Off and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Equality Law (idistr):  a=a <-> true
and theorem 1299:
Theorem (1299) [serial 2549] used for:
  Equality Law (idistr):  a=a <-> true [serial 2547]
 


Theorem (1301)                               [serial 2545] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
Off = heat_previous_period and REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and HEAT_CONTROL^-1 = heat_previous_period and 
HEAT_CONTROL^-1 = heat_previous_period and Off = heat_control^-1 and heat_control^-1 = Off and 
HEAT_CONTROL^-1 = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_previous_period and Off = HEAT_CONTROL^-1 and HEAT_CONTROL^-1 = Off and 
HEAT_CONTROL^-1 = heat_previous_period and Off = heat_control^-1 and HEAT_CONTROL^-1 = heat_control^-1 and 
HEAT_CONTROL^-1 = heat_control^-1 and Off = heat_previous_period and heat_previous_period = Off and 
heat_control^-1 = Off and HEAT_CONTROL^-1 = Off and HEAT_CONTROL^-1 = Off and 
heat_previous_period = heat_control^-1 and heat_control^-1 = heat_previous_period and 
heat_previous_period = heat_control^-1 and heat_control^-1 = HEAT_CONTROL^-1 and 
Off = HEAT_CONTROL^-1 and heat_previous_period = heat_previous_period and 
heat_previous_period = heat_control^-1 and heat_control^-1 = HEAT_CONTROL^-1 and 
Off = HEAT_CONTROL^-1 and heat_previous_period = heat_previous_period and 
HEAT_CONTROL^-1 = Off and Off = heat_previous_period and heat_control^-1 = heat_previous_period and 
heat_control^-1 = heat_control^-1 and HEAT_CONTROL^-1 = Off and Off = heat_previous_period and 
heat_control^-1 = heat_previous_period and Off = Off >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) or 
(HEAT_CONTROL^-1 = Off and (LOWER_DESIRED_TEMP < (CURRENT_TEMP.t) and (CURRENT_TEMP.t) < UPPER_DESIRED_TEMP)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1300:
Theorem (1300) [serial 2547] used for:
    normalization of [serial 2545]
 


Theorem (1302)                               [serial 2544] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
Off = heat_previous_period and REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and HEAT_CONTROL^-1 = heat_previous_period and 
HEAT_CONTROL^-1 = heat_previous_period and Off = heat_control^-1 and heat_control^-1 = Off >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) or 
(HEAT_CONTROL^-1 = Off and (LOWER_DESIRED_TEMP < (CURRENT_TEMP.t) and (CURRENT_TEMP.t) < UPPER_DESIRED_TEMP)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Remove Equivalent Term: P(a) and P(b) and a=b is P(a) and a=b
and theorem 1301:
Theorem (1301) [serial 2545] used for:
  Remove Equivalent Term: P(a) and P(b) and a=b is P(a) and a=b [serial 2544]
 


Theorem (1303)                               [serial 2543] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
Off = heat_previous_period and REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) or 
(HEAT_CONTROL^-1 = Off and (LOWER_DESIRED_TEMP < (CURRENT_TEMP.t) and (CURRENT_TEMP.t) < UPPER_DESIRED_TEMP)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Remove Equivalent Term: P(a) and P(b) and a=b is P(a) and a=b
and theorem 1302:
Theorem (1302) [serial 2544] used for:
  Remove Equivalent Term: P(a) and P(b) and a=b is P(a) and a=b [serial 2543]
 


Theorem (1304)                               [serial 2541] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
Off = heat_previous_period and REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) or 
(HEAT_CONTROL^-1 = Off and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Replace expression with range:  a<x and x<b  iff  x in a,,b
and theorem 1303:
Theorem (1303) [serial 2543] used for:
  Replace expression with range:  a<x and x<b  iff  x in a,,b [serial 2541]
 


Theorem (1305)                               [serial 2539] 
P [305] << REGULATOR_OK() and RUN() and LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP and HEAT_CONTROL^-1 = heat_control^-1 and 
heat_control^-1 = heat_previous_period and Off = heat_previous_period >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) or 
(HEAT_CONTROL^-1 = Off and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1304:
Theorem (1304) [serial 2541] used for:
    normalization of [serial 2539]
 


Theorem (1306)                               [serial 2537] 
P [305] << HEAT_CONTROL^-1 = heat_control^-1 and heat_control^-1 = heat_previous_period and 
Off = heat_previous_period and (REGULATOR_OK() and RUN()) and (LOWER_DESIRED_TEMP < CURRENT_TEMP.t and 
CURRENT_TEMP.t < UPPER_DESIRED_TEMP) >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or (#Iso_Properties::Initialization_Timeout <= (now - START_TIME) and 
not (CURRENT_TEMPERATURE_STATUS = Valid and not (INTERNAL_FAILURE or REGULATOR_INTERFACE_FAILURE))) or 
(HEAT_CONTROL^-1 = Off and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Associativity: (b.c).a = a.b.c
and theorem 1305:
Theorem (1305) [serial 2539] used for:
  Associativity: (b.c).a = a.b.c [serial 2537]
 


Theorem (1307)                               [serial 2535] 
P [305] << Off = heat_previous_period and ((HEAT_CONTROL^-1 = heat_control^-1)) and 
((heat_previous_period = heat_control^-1)) and (REGULATOR_OK() and RUN()) and 
((CURRENT_TEMP.t > LOWER_DESIRED_TEMP) and (CURRENT_TEMP.t < UPPER_DESIRED_TEMP)) >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or (HEAT_CONTROL^-1 = Off and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) or 
((((now - START_TIME) >= #Iso_Properties::Initialization_Timeout)) and not (
not (REGULATOR_INTERFACE_FAILURE or INTERNAL_FAILURE) and ((CURRENT_TEMPERATURE_STATUS = Valid)))) or 
(now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1306:
Theorem (1306) [serial 2537] used for:
    normalization of [serial 2535]
 


Theorem (1308)                               [serial 2520] 
P [305] << Off = heat_previous_period and AXIOM_HC() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [403] ->
Q [98] << UPPER_DESIRED_TEMP <= CURRENT_TEMP.t or (HEAT_CONTROL^-1 = Off and (CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP)) or 
(RUN() and not REGULATOR_OK()) or (now - START_TIME) < #Iso_Properties::Initialization_Timeout >>
by Substitution of Assertion Labels
and theorem 1307:
Theorem (1307) [serial 2535] used for:
  substituted Assertions' predicates for  labels  [serial 2520]
 


Theorem (1309)                               [serial 2517] 
P [305] << Off = heat_previous_period and AXIOM_HC() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [403] ->
Q [98] << (((now - START_TIME) < #Iso_Properties::Initialization_Timeout)) or ((CURRENT_TEMP.t >= UPPER_DESIRED_TEMP)) or 
(not REGULATOR_OK() and RUN()) or (HEAT_CONTROL^-1 = Off and ((CURRENT_TEMP.t in LOWER_DESIRED_TEMP ,, UPPER_DESIRED_TEMP))) >>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1308:
Theorem (1308) [serial 2520] used for:
    normalization of [serial 2517]
 


Theorem (1310)                               [serial 2495] 
P [305] << Off = heat_previous_period and AXIOM_HC() and INVMHS() and REGULATOR_MODE(
x:Normal) and TEMP_IN_DESIRED_RANGE() >>
S [403] ->
Q [98] << REQMHS1() or REQMHS3() or REQMHS5() or (HEAT_CONTROL^-1 = Off and REQMHS4()) >>
by Substitution of Assertion Labels
and theorem 1309:
Theorem (1309) [serial 2517] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2495]
 


Theorem (1311)                               [serial 2487] 
P [305] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and 
((heat_previous_period = Off)) and INVMHS()) >>
S [403] ->
Q [98] << (REQMHS1()) or (REQMHS3()) or (REQMHS5()) or ((REQMHS4() and ((HEAT_CONTROL^-1 = Off)))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1310:
Theorem (1310) [serial 2495] used for:
    normalization of [serial 2487]
 


Theorem (1312)                               [serial 2514] 
P [403] << Off = heat_control and (Off = heat_previous_period and AXIOM_HC() and 
INVMHS() and REGULATOR_MODE(x:Normal) and TEMP_IN_DESIRED_RANGE()) >>
S [403] ->
Q [404] << Off = heat_control >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1313)                               [serial 2509] 
P [403] << ((Off) = (heat_control)) and (Off = heat_previous_period and AXIOM_HC() and 
INVMHS() and REGULATOR_MODE(x:Normal) and TEMP_IN_DESIRED_RANGE()) >>
S [403] ->
Q [404] << Off = heat_control >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1312:
Theorem (1312) [serial 2514] used for:
    normalization of [serial 2509]
 


Theorem (1314)                               [serial 2508] 
P [403] << ((Off)^0 = (heat_control)^0) and (Off = heat_previous_period and AXIOM_HC() and 
INVMHS() and REGULATOR_MODE(x:Normal) and TEMP_IN_DESIRED_RANGE()) >>
S [403] ->
Q [404] << Off = heat_control >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1313:
Theorem (1313) [serial 2509] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2508]
 


Theorem (1315)                               [serial 2497] 
P [403] << (Off = heat_control)^0 and (Off = heat_previous_period and AXIOM_HC() and 
INVMHS() and REGULATOR_MODE(x:Normal) and TEMP_IN_DESIRED_RANGE()) >>
S [403] ->
Q [404] << Off = heat_control >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1314:
Theorem (1314) [serial 2508] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2497]
 


Theorem (1316)                               [serial 2488] 
P [403] << ((TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and 
((heat_previous_period = Off)) and INVMHS())) and (heat_control = Off)^0 >>
S [403] ->
Q [404] << (heat_control = Off) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1315:
Theorem (1315) [serial 2497] used for:
    normalization of [serial 2488]
 


Theorem (1317)                               [serial 2485] 
P [305] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and 
((heat_previous_period = Off)) and INVMHS()) >>
S [403] heat_control!(Off)
Q [404] << (heat_control = Off) >>
by Enumeration Type Port Output 
and theorems 1311 1316:
Theorem (1311) [serial 2487] used for:
  applied port output of enumeration type  heat_control!(Off) [serial 2485]
 
Theorem (1316) [serial 2488] used for:
  applied port output <<pre and (heat_control=Off)^0>> -> <<post>> [serial 2485]
 


Theorem (1318)                               [serial 2499] 
P [404] << Off = heat_control >>
S [405] ->
Q [406] << Off = heat_control >>
by Identity (id):  P->P is tautology


Theorem (1319)                               [serial 2489] 
P [404] << (heat_control = Off) >>
S [405] ->
Q [406] << (Off = heat_control) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1318:
Theorem (1318) [serial 2499] used for:
    normalization of [serial 2489]
 


Theorem (1320)                               [serial 2486] 
P [404] << (heat_control = Off) >>
S [405] heat_previous_period' := Off
Q [406] << (heat_previous_period' = heat_control) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1319:
Theorem (1319) [serial 2489] used for:
  applied wp for assignment [serial 2486]
 


Theorem (1321)                               [serial 1062] 
P [348] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and INVMHS() and 
AXIOM_HEAT() and ((heat_previous_period = Off))) >>
S [401] << (TEMP_IN_DESIRED_RANGE() and REGULATOR_MODE(x:Normal) and AXIOM_HC() and ((heat_previous_period = Off)) and INVMHS()) >>
heat_control!(Off)
;
<< (heat_control = Off) >>
heat_previous_period' := Off
<< (heat_previous_period' = heat_control) >>
Q [345] << (INVMHS())^1 >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1282 1292 1317 1320:
Theorem (1282) [serial 2483] used for:
  P -> P1 in sequential composition for [serial 1062]
 
Theorem (1292) [serial 2484] used for:
  Q1 -> Q in sequential composition for [serial 1062]
 
Theorem (1317) [serial 2485] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1062]
 
Theorem (1320) [serial 2486] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1062]
 


Theorem (1322)                               [serial 1063] 
P [408] << ((INVMHS()) and stop@now and not (exists u~time
  in tops,,now 
  that true ) and not (exists u~time
  in tops,,now 
  that stop@u )) >>
S [408] ->
Q [349] << true >>
by True Conclusion Schema (tc): P->true


Theorem (1323)                               [serial 1047] 
P [335] <<   >>
S [340] ->
Q [335] << manage_heat_source.impl proof obligations >>
by Initial Thread Obligations
and theorems 965 973 974 977 992 993 994 1020 1046 1062 1099 1150 1165 1275 1321 1322:
Theorem (965) [serial 1048] used for:
  <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
 
Theorem (973) [serial 1049] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_temp, <<M(check_temp)>> -> <<e1 or e2 or . . . en>>
 
Theorem (974) [serial 1050] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state poweron, <<M(poweron)>> -> <<e1 or e2 or . . . en>>
 
Theorem (977) [serial 1051] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_hyst, <<M(check_hyst)>> -> <<e1 or e2 or . . . en>>
 
Theorem (992) [serial 1052] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_mode, <<M(check_mode)>> -> <<e1 or e2 or . . . en>>
 
Theorem (993) [serial 1053] used for:
   <<M(poweron)>> -> <<M(run)>> for mhsPo:poweron-[ ]->run{};
 
Theorem (994) [serial 1054] used for:
   <<M(run) and x>> -> <<M(check_mode)>> for mhsRun:run-[x]->check_mode{};
 
Theorem (1020) [serial 1055] used for:
   <<M(check_mode) and x>> A <<M(run)>> for mhsFailed:check_mode-[x]->run{A};
 
Theorem (1046) [serial 1056] used for:
   <<M(check_mode) and x>> A <<M(run)>> for mhsInit:check_mode-[x]->run{A};
 
Theorem (1062) [serial 1057] used for:
   <<M(check_mode) and x>> -> <<M(check_temp)>> for mhsNormal:check_mode-[x]->check_temp{};
 
Theorem (1099) [serial 1058] used for:
   <<M(check_temp) and x>> A <<M(run)>> for mhsBelow:check_temp-[x]->run{A};
 
Theorem (1150) [serial 1059] used for:
   <<M(check_temp) and x>> A <<M(run)>> for mhsAbove:check_temp-[x]->run{A};
 
Theorem (1165) [serial 1060] used for:
   <<M(check_temp) and x>> -> <<M(check_hyst)>> for mhsHys:check_temp-[x]->check_hyst{};
 
Theorem (1275) [serial 1061] used for:
   <<M(check_hyst) and x>> A <<M(run)>> for mhsHysOn:check_hyst-[x]->run{A};
 
Theorem (1321) [serial 1062] used for:
   <<M(check_hyst) and x>> A <<M(run)>> for mhsHysOff:check_hyst-[x]->run{A};
 
Theorem (1322) [serial 1063] used for:
   <<M(run) and x>> -> <<M(halt)>> for mhsStop:run-[x]->halt{};
 


Theorem (1324)                               [serial 1064] 
P [4] << REGULATOR_INTERFACE_FAILURE >>
S [2] ->
Q [5] << REGULATOR_INTERFACE_FAILURE >>
by Identity (id):  P->P is tautology


Theorem (1325)                               [serial 1065] 
P [4] << +=> REGULATOR_MODE(x:regulator_mode) >> 
S [2] ->
Q [5] << +=> REGULATOR_MODE(x:regulator_mode) >> 
by Identity (id):  P->P is tautology


Theorem (1326)                               [serial 1066] 
P [4] << +=> REGULATOR_MODE(x:regulator_mode) >> 
S [2] ->
Q [5] << +=> REGULATOR_MODE(x:regulator_mode) >> 
by Identity (id):  P->P is tautology


Theorem (1327)                               [serial 1067] 
P [4] << MONITOR_INTERFACE_FAILURE >>
S [2] ->
Q [5] << MONITOR_INTERFACE_FAILURE >>
by Identity (id):  P->P is tautology


Theorem (1328)                               [serial 1068] 
P [4] << +=> MONITOR_MODE(x:monitor_mode) >> 
S [2] ->
Q [5] << +=> MONITOR_MODE(x:monitor_mode) >> 
by Identity (id):  P->P is tautology


Theorem (1329)                               [serial 1069] 
P [4] << +=> MONITOR_MODE(x:monitor_mode) >> 
S [2] ->
Q [5] << +=> MONITOR_MODE(x:monitor_mode) >> 
by Identity (id):  P->P is tautology


Theorem (1330)                               [serial 1070] 
P [4] << INTERNAL_FAILURE >>
S [2] ->
Q [5] << INTERNAL_FAILURE >>
by Identity (id):  P->P is tautology


Theorem (1331)                               [serial 1071] 
P [4] << (air_temperature_air = CURRENT_TEMP) >>
S [2] ->
Q [5] << (air_temperature_air = CURRENT_TEMP) >>
by Identity (id):  P->P is tautology


Theorem (1332)                               [serial 1072] 
P [4] << (air_temperature_air = CURRENT_TEMP) >>
S [2] ->
Q [5] << (air_temperature_air = CURRENT_TEMP) >>
by Identity (id):  P->P is tautology


Theorem (1333)                               [serial 1073] 
P [4] << (current_temperature = CURRENT_TEMP) >>
S [2] ->
Q [5] << (current_temperature = CURRENT_TEMP) >>
by Identity (id):  P->P is tautology


Theorem (1334)                               [serial 1074] 
P [4] << (current_temperature = CURRENT_TEMP) >>
S [2] ->
Q [5] << (current_temperature = CURRENT_TEMP) >>
by Identity (id):  P->P is tautology


Theorem (1335)                               [serial 1075] 
P [4] << (current_temperature = CURRENT_TEMP) >>
S [2] ->
Q [5] << (current_temperature = CURRENT_TEMP) >>
by Identity (id):  P->P is tautology


Theorem (1336)                               [serial 1076] 
P [4] << (current_temperature = CURRENT_TEMP) >>
S [2] ->
Q [5] << (current_temperature = CURRENT_TEMP) >>
by Identity (id):  P->P is tautology


Theorem (1337)                               [serial 1077] 
P [4] << (current_temperature = CURRENT_TEMP) >>
S [2] ->
Q [5] << (current_temperature = CURRENT_TEMP) >>
by Identity (id):  P->P is tautology


Theorem (1338)                               [serial 1078] 
P [4] << (current_temperature = CURRENT_TEMP) >>
S [2] ->
Q [5] << (current_temperature = CURRENT_TEMP) >>
by Identity (id):  P->P is tautology


Theorem (1339)                               [serial 1079] 
P [4] << +=> REGULATOR_STATUS(x:regulator_status) >> 
S [2] ->
Q [5] << +=> REGULATOR_STATUS(x:regulator_status) >> 
by Identity (id):  P->P is tautology


Theorem (1340)                               [serial 1080] 
P [4] << (displayed_temp_display_temperature = CURRENT_TEMP) >>
S [2] ->
Q [5] << (displayed_temp_display_temperature = CURRENT_TEMP) >>
by Identity (id):  P->P is tautology


Theorem (1341)                               [serial 1081] 
P [4] << +=> HEAT_CONTROL_A(x:heat_control) >> 
S [2] ->
Q [5] << +=> HEAT_CONTROL_A(x:heat_control) >> 
by Identity (id):  P->P is tautology


Theorem (1342)                               [serial 1082] 
P [4] << +=> TEMP_OUT_OF_RANGE(x:alarm_control) >> 
S [2] ->
Q [5] << +=> TEMP_OUT_OF_RANGE(x:alarm_control) >> 
by Identity (id):  P->P is tautology


Theorem (1343)                               [serial 1083] 
P [4] << (monitor_status = MONITOR_STATUS()) >>
S [2] ->
Q [5] << (monitor_status = MONITOR_STATUS()) >>
by Identity (id):  P->P is tautology


Theorem (1344)                               [serial 1084] 
P [4] << (lower_desired_temperature_lower_desired_temp = LOWER_DESIRED_TEMP) >>
S [2] ->
Q [5] << (lower_desired_temperature_lower_desired_temp = LOWER_DESIRED_TEMP) >>
by Identity (id):  P->P is tautology


Theorem (1345)                               [serial 1085] 
P [4] << (lower_desired_temperature = LOWER_DESIRED_TEMP) >>
S [2] ->
Q [5] << (lower_desired_temperature = LOWER_DESIRED_TEMP) >>
by Identity (id):  P->P is tautology


Theorem (1346)                               [serial 1086] 
P [4] << (upper_desired_temperature_upper_desired_temp = UPPER_DESIRED_TEMP) >>
S [2] ->
Q [5] << (upper_desired_temperature_upper_desired_temp = UPPER_DESIRED_TEMP) >>
by Identity (id):  P->P is tautology


Theorem (1347)                               [serial 1087] 
P [4] << (upper_desired_temperature = UPPER_DESIRED_TEMP) >>
S [2] ->
Q [5] << (upper_desired_temperature = UPPER_DESIRED_TEMP) >>
by Identity (id):  P->P is tautology


Theorem (1348)                               [serial 1088] 
P [4] << (lower_alarm_temperature = LOWER_ALARM_TEMP) >>
S [2] ->
Q [5] << (lower_alarm_temperature = LOWER_ALARM_TEMP) >>
by Identity (id):  P->P is tautology


Theorem (1349)                               [serial 1089] 
P [4] << (upper_alarm_temperature = UPPER_ALARM_TEMP) >>
S [2] ->
Q [5] << (upper_alarm_temperature = UPPER_ALARM_TEMP) >>
by Identity (id):  P->P is tautology


Theorem (1350)                               [serial 1001] 
P     
S     
Q     
by Initial Thread Obligations
and theorems 261 672 962 1323 1324 1325 1326 1327 1328 1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 1345 1346 1347 1348 1349:
Theorem (261) [serial 1002] used for:
  Initial proof obligations for manage_monitor_mode.impl
 
Theorem (672) [serial 1016] used for:
  Initial proof obligations for manage_alarm.impl
 
Theorem (962) [serial 1033] used for:
  Initial proof obligations for manage_regulator_mode.impl
 
Theorem (1323) [serial 1047] used for:
  Initial proof obligations for manage_heat_source.impl
 
Theorem (1324) [serial 1064] used for:
  Composition of Subcomponents via Directional Connection manage_regulator_interface.interface_failure -> manage_regulator_mode.interface_failure:
 interface_failure -> interface_failure
 
Theorem (1325) [serial 1065] used for:
  Composition of Subcomponents via Directional Connection manage_regulator_mode.regulator_mode -> manage_heat_source.regulator_mode:
 regulator_mode -> regulator_mode
 
Theorem (1326) [serial 1066] used for:
  Composition of Subcomponents via Directional Connection manage_regulator_mode.regulator_mode -> manage_regulator_interface.regulator_mode:
 regulator_mode -> regulator_mode
 
Theorem (1327) [serial 1067] used for:
  Composition of Subcomponents via Directional Connection manage_monitor_interface.interface_failure -> manage_monitor_mode.interface_failure:
 interface_failure -> interface_failure
 
Theorem (1328) [serial 1068] used for:
  Composition of Subcomponents via Directional Connection manage_monitor_mode.monitor_mode -> manage_monitor_interface.monitor_mode:
 monitor_mode -> monitor_mode
 
Theorem (1329) [serial 1069] used for:
  Composition of Subcomponents via Directional Connection manage_monitor_mode.monitor_mode -> manage_alarm.monitor_mode:
 monitor_mode -> monitor_mode
 
Theorem (1330) [serial 1070] used for:
  Composition of Subcomponents via Directional Connection detect_regulator_fail.internal_failure -> monitor_temperature.manage_monitor_mode.internal_failure:
 internal_failure -> internal_failure
 
Theorem (1331) [serial 1071] used for:
  Composition of Subcomponents via Directional Connection air_temperature -> control_sensor.air:
 air_temperature -> air
 
Theorem (1332) [serial 1072] used for:
  Composition of Subcomponents via Directional Connection air_temperature -> monitor_sensor.air:
 air_temperature -> air
 
Theorem (1333) [serial 1073] used for:
  Composition of Subcomponents via Directional Connection control_sensor.current_temperature -> thermostat.regulate_temperature.manage_regulator_interface.current_temperature:
 current_temperature -> current_temperature
 
Theorem (1334) [serial 1074] used for:
  Composition of Subcomponents via Directional Connection control_sensor.current_temperature -> thermostat.regulate_temperature.manage_heat_source.current_temperature:
 current_temperature -> current_temperature
 
Theorem (1335) [serial 1075] used for:
  Composition of Subcomponents via Directional Connection control_sensor.current_temperature -> thermostat.regulate_temperature.manage_regulator_mode.current_temperature:
 current_temperature -> current_temperature
 
Theorem (1336) [serial 1076] used for:
  Composition of Subcomponents via Directional Connection monitor_sensor.current_temperature -> thermostat.monitor_temperature.manage_monitor_interface.current_temperature:
 current_temperature -> current_temperature
 
Theorem (1337) [serial 1077] used for:
  Composition of Subcomponents via Directional Connection monitor_sensor.current_temperature -> thermostat.monitor_temperature.manage_alarm.current_temperature:
 current_temperature -> current_temperature
 
Theorem (1338) [serial 1078] used for:
  Composition of Subcomponents via Directional Connection monitor_sensor.current_temperature -> thermostat.monitor_temperature.manage_monitor_mode.current_temperature:
 current_temperature -> current_temperature
 
Theorem (1339) [serial 1079] used for:
  Composition of Subcomponents via Directional Connection thermostat.regulate_temperature.manage_regulator_interface.regulator_status -> operator_interface.regulator_status:
 regulator_status -> regulator_status
 
Theorem (1340) [serial 1080] used for:
  Composition of Subcomponents via Directional Connection thermostat.regulate_temperature.manage_regulator_interface.displayed_temp -> operator_interface.display_temperature:
 displayed_temp -> display_temperature
 
Theorem (1341) [serial 1081] used for:
  Composition of Subcomponents via Directional Connection thermostat.regulate_temperature.manage_heat_source.heat_control -> heat_source.heat_control:
 heat_control -> heat_control
 
Theorem (1342) [serial 1082] used for:
  Composition of Subcomponents via Directional Connection thermostat.monitor_temperature.manage_alarm.alarm_control -> operator_interface.alarm:
 alarm_control -> alarm
 
Theorem (1343) [serial 1083] used for:
  Composition of Subcomponents via Directional Connection thermostat.monitor_temperature.manage_monitor_interface.monitor_status -> operator_interface.monitor_status:
 monitor_status -> monitor_status
 
Theorem (1344) [serial 1084] used for:
  Composition of Subcomponents via Directional Connection operator_interface.lower_desired_temperature -> thermostat.regulate_temperature.manage_regulator_interface.lower_desired_temp:
 lower_desired_temperature -> lower_desired_temp
 
Theorem (1345) [serial 1085] used for:
  Composition of Subcomponents via Directional Connection operator_interface.lower_desired_temperature -> thermostat.regulate_temperature.manage_heat_source.lower_desired_temperature:
 lower_desired_temperature -> lower_desired_temperature
 
Theorem (1346) [serial 1086] used for:
  Composition of Subcomponents via Directional Connection operator_interface.upper_desired_temperature -> thermostat.regulate_temperature.manage_regulator_interface.upper_desired_temp:
 upper_desired_temperature -> upper_desired_temp
 
Theorem (1347) [serial 1087] used for:
  Composition of Subcomponents via Directional Connection operator_interface.upper_desired_temperature -> thermostat.regulate_temperature.manage_heat_source.upper_desired_temperature:
 upper_desired_temperature -> upper_desired_temperature
 
Theorem (1348) [serial 1088] used for:
  Composition of Subcomponents via Directional Connection operator_interface.lower_alarm_temperature -> thermostat.monitor_temperature.manage_alarm.lower_alarm_temperature:
 lower_alarm_temperature -> lower_alarm_temperature
 
Theorem (1349) [serial 1089] used for:
  Composition of Subcomponents via Directional Connection operator_interface.upper_alarm_temperature -> thermostat.monitor_temperature.manage_alarm.upper_alarm_temperature:
 upper_alarm_temperature -> upper_alarm_temperature
 


closing proof.txt file 