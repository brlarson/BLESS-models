package RD
public

	with BLESS, BLESS_Types, PulseOx_Types;


thread RapidDeclineThread
  features
    SpO2 : in data port PulseOx_Types::Percent  --oxygen saturation from pulse oximater device
      {BLESS::Value=>"<< returns quantity percent := SPO2 >>";};
    SensorConnected : in data port BLESS_Types::Boolean  --sensor is attached to patient
      {BLESS::Assertion=>"<< SENSOR_CONNECTED >>";}; 
    MotionArtifact : in data port BLESS_Types::Boolean  -- indication of motion noise in sensor reading
      {BLESS::Assertion=>"<< MOTION_ARTIFACT >>";};  
    AdultRapidDeclineAlarmEnabled : in data port BLESS_Types::Boolean  -- enabled derived alarm for rapid SpO2 decline in adult patient 
      {BLESS::Assertion=>"<< ADULT_RAPID_DECLINE_ALARM_ENABLED >>";};  
    MaxSpO2Decline : in data port PulseOx_Types::Percent
      {BLESS::Value=>"<< returns quantity percent := MAX_SPO2_DECLINE >>";};
    AverageSpO2 : in data port PulseOx_Types::Percent
      {BLESS::Value=>"<< returns quantity percent := SPO2_AVERAGE() >>";};
    RapidSpO2DeclineAlarm : out event port	-- decreasing SpO2 in adult alarm
      {BLESS::Assertion=>"<<RAPID_DECLINE_ALARM()>>";}
      ; --that had higher SpO2	than the rapid decline %
  properties
    --Thread_Properties::
        Dispatch_Protocol => Periodic;  
    --Timing_Properties::
        Period => PulseOx_Properties::SpO2_Sampling_Period;
end RapidDeclineThread;

thread implementation RapidDeclineThread.imp
annex BLESS 
{**
  invariant << true >>  
  states
    start : initial state 
    run : complete state    
  transitions
    rdt0: start -[ ]-> run;
    rdt1: run -[on dispatch]-> run
      {
      if
      (AdultRapidDeclineAlarmEnabled? and SensorConnected? and not MotionArtifact?
        and SpO2? + MaxSpO2Decline? < AverageSpO2?)~> 
        << RAPID_DECLINE_ALARM()>>
        RapidSpO2DeclineAlarm! 
      []
      (not (AdultRapidDeclineAlarmEnabled? and SensorConnected? and not MotionArtifact?
        and SpO2? + MaxSpO2Decline? < AverageSpO2?) )~>
        skip
      fi
      };
**};
end RapidDeclineThread.imp;

	
end RD;
