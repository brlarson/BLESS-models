--PO.aadl
--ICE pulse oximeter app
--provides control and smart alarms for a pulse oximeter

--ICEpoSystem has three major subcomponents
--  ICEpoInterface wraps a pulse oximeter device to provide ICE-standard interface
--  ICEpoUI defines the user interface to control the app and display its data
--  ICEpoApp performs calculations of smart alarms, etc.

--ICE_Display.aadl defines a physical Screen and Speaker used by ICEpoUI to intercat with clinicians
--PulseOx_Properties.aadl defines some types and constants used to specify app behavior


package PO

public
  with PulseOx_Properties;     --property set holding ICE-specific properties
  with PulseOx_Types;      --package holding data components used as types for pulse oximeters
  with ICE_Display;        --package holding flat-panel display showing image of control panels
  with BLESS;              --package defining BLESS::Assertion to be a string
  with BLESS_Types;        --predeclared types used by BLESS
  with HR;
  with MA;
  with SPA;
  with SPT, RD, SO;

annex Unit
{**  --create 'percent' unit
	base [ unitless ] u , < ratio times one hundred > percent * 100 ;
**};

	
	
annex Assertion 
{** 
ghost variables
  def SENSOR_CONNECTED~boolean
  def MOTION_ARTIFACT~boolean
  def SPO2~quantity percent
  def SPO2_LOWER_LIMIT~quantity percent
  def SPO2_LOWER_LIMIT_ADJ~quantity percent
  def MAX_SPO2_DECLINE~quantity percent
  def HEART_RATE~quantity Hz
  def HEART_RATE_LOWER_LIMIT~quantity Hz
  def HEART_RATE_UPPER_LIMIT~quantity Hz
  def SPO2_MOVING_AVERAGE_WINDOW_SAMPLES~quantity whole
  def SUPPL_OXY_ALARM_ENABLED~boolean
  def ADULT_RAPID_DECLINE_ALARM_ENABLED~boolean
  def SPO2_HISTORY~spo2_samples
  def HEART_RATE_HISTORY~heartrate_samples
  def NUM_SAMPLES~quantity whole
  
  
  <<SPO2_LOWER_LIMIT_ALARM: :SENSOR_CONNECTED and not MOTION_ARTIFACT and (SPO2 < SPO2_LOWER_LIMIT)>>	
  <<HEART_RATE_LOWER_LIMIT_ALARM: :SENSOR_CONNECTED and not MOTION_ARTIFACT and (HEART_RATE < HEART_RATE_LOWER_LIMIT)>>	
  <<HEART_RATE_UPPER_LIMIT_ALARM: :SENSOR_CONNECTED and not MOTION_ARTIFACT and (HEART_RATE > HEART_RATE_UPPER_LIMIT)>>
  <<SPO2_AVERAGE: returns quantity percent :=
     --the sum of good SpO2 measurements
      (sum i~quantity whole in -SPO2_MOVING_AVERAGE_WINDOW_SAMPLES..-1 of 
      	 (if SENSOR_CONNECTED^(i) and not MOTION_ARTIFACT^(i) then  SPO2^(i) else 0 u))
      /  --divided by the number of good SpO2 measurements
      (numberof i~quantity whole in -SPO2_MOVING_AVERAGE_WINDOW_SAMPLES..-1 
      	that (SENSOR_CONNECTED^(i) and not MOTION_ARTIFACT^(i)))>>
  <<SUPPL_O2_ALARM: :SUPPL_OXY_ALARM_ENABLED^0 and (SPO2_AVERAGE())^0 < (SPO2_LOWER_LIMIT^0+SPO2_LOWER_LIMIT_ADJ^0)>>
  <<RAPID_DECLINE_ALARM: :ADULT_RAPID_DECLINE_ALARM_ENABLED  and
      (exists j~quantity whole in 1 .. #PulseOx_Properties::Max_Window_Samples that (SPO2 <= (SPO2^(-j) - MAX_SPO2_DECLINE)))>>
  <<MOTION_ARTIFACT_ALARM: :all j~quantity whole 
        in 0 .. #PulseOx_Properties::Motion_Artifact_Sample_Limit are (MOTION_ARTIFACT^(-j) or not SENSOR_CONNECTED^(-j))>>      
  <<SPO2_TREND: : all s~quantity whole in 1 ..NUM_SAMPLES 
         are SPO2_HISTORY[s]=(if MOTION_ARTIFACT^(-s) or not SENSOR_CONNECTED^(-s) then 0 u else SPO2^(-s))>>
  <<HR_TREND: : all s~quantity whole in 1 ..NUM_SAMPLES 
         are HEART_RATE_HISTORY[s]=(if MOTION_ARTIFACT^(-s) or not SENSOR_CONNECTED^(-s) then 0 Hz else HEART_RATE^(-s))>>
**};

system ICEpoSystem
  --may add probe connected to Pulse Oximeter device
  --may add output to ICE data logger
  --may add output to electronic health record
  --  properties
 --   	Communication_Properties::Timing => immediate applies to probe_off_alarm, sensor_connected;
end ICEpoSystem;

system implementation ICEpoSystem.imp
  subcomponents
    po : device ICEpoInterface.imp;   --pulse oximeter
    app : process ICEpoAppProcess.imp;  --coordinating app
    ui : process ICEpoUIprocess.imp;    --user interface to nurse
    screen : device ICE_Display::Screen;	--ICE display touch screen
    piezo : device ICE_Display::Speaker;    --audible ICE alarm
  connections
    --====================
    --== SpO2 Sensor inputs and alarm configuration
    --====================
    spo2 : port po.SpO2 -> app.SpO2 {  --current SpO2 % from interface to app 
       	--Communication_Properties::
       	Timing => immediate;
      	--Communication_Properties::
      	Latency => 100 ms .. 300 ms;
      };
    spo2_ui : port po.SpO2 -> ui.SpO2 {  --current SpO2 % from interface to ui 
        --Communication_Properties::
        Timing => immediate;
      	--Communication_Properties::
        Latency => 100 ms .. 300 ms;
      };
    spo2_lower_limit : port ui.SpO2LowerLimit <-> po.SpO2LowerLimit {
    	--Communication_Properties::
        Timing => immediate;
      	--Communication_Properties::
        Latency => 100 ms .. 300 ms;
      };
    spo2_lower_limit_violated : port po.SpO2LowerLimitViolated -> ui.SpO2LowerLimitViolated {
    	--Communication_Properties::
        Timing => immediate;
      	--Communication_Properties::
        Latency => 100 ms .. 300 ms;
      };
      
      -- Ideally all port connections will have (as a default) the timing and latency properties specified
      -- for the first four connections.  Unfortunately, my understanding of AADL (and possibly AADL itself)
      -- won't allow defaults to be specified in a global, inheritable manner.  As a backup, each connection
      -- can be specified in the above manner.      
      
    --====================
    --== Heart Rate Sensor inputs and alarm configuration
    --====================
    heart_rate : port po.HeartRate -> ui.HeartRate;  --current heart rate from interface to ui
    heart_rate_app : port po.HeartRate -> app.HeartRate;  --current heart rate from interface to app
    heart_rate_lower_limit : port ui.HeartRateLowerLimit <-> po.HeartRateLowerLimit;  --bidirectional between interface and ui
    heart_rate_lower_limit_violated : port po.HeartRateLowerLimitViolated -> ui.HeartRateLowerLimitViolated  --interface to ui
      {--Communication_Properties::
        Timing=>immediate;};
    heart_rate_upper_limit : port ui.HeartRateUpperLimit <-> po.HeartRateUpperLimit;  --bidirectional between interface and ui
    heart_rate_upper_limit_violated : port po.HeartRateUpperLimitViolated -> ui.HeartRateUpperLimitViolated  --interface to ui
      {--Communication_Properties::
        Timing=>immediate;};
    heart_rate_trend : port app.HeartRateTrend -> ui.HeartRateTrend;  --heart rate trend data from app to up
    --====================
    --== App Suppl Oxygen Derived Alarm I/O and configuration
    --====================
    supplemental_oxygen : port ui.SupplOxyAlarmEnabled -> app.SupplOxyAlarmEnabled;
    supplemental_oxygen_adjustment : port ui.SpO2LevelAdj -> app.SpO2LevelAdj;
    supplemental_oxygen_alarm : port app.SpO2DerivedLowerLimitAlarm -> ui.SpO2DerivedLowerLimitAlarm;
    --====================
    --== App Adult Rapid SpO2 Decline Derived Alarm I/O and configuration
    --====================    
    adult_patient : port ui.AdultRapidDeclineAlarmEnabled -> app.AdultRapidDeclineAlarmEnabled;
    rapid_spo2_decline_percent : port ui.MaxSpO2Decline -> app.MaxSpO2Decline;    
    rapid_spo2_decline_alarm : port app.RapidSpO2DeclineAlarm -> ui.RapidSpO2DeclineAlarm
      {--Communication_Properties::
        Timing=>immediate;};
    --====================
    --== Indications of SpO2 measurement anomalies
    --====================
    sensor_connected : port po.SensorConnected -> app.SensorConnected;
    motion_artifact : port po.MotionArtifact -> app.MotionArtifact;
    probe_off_alarm : port po.ProbeOff -> ui.ProbeOff  --probe fell off alarm
      {--Communication_Properties::
        Timing=>immediate;};
    motion_artifact_alarm : port app.MotionArtifactAlarm -> ui.MotionArtifactAlarm
      {--Communication_Properties::
        Timing=>immediate;};
    --====================
    --== Data for SpO2 trending display
    --====================
    spO2_Trend : port app.SpO2Trend -> ui.SpO2Trend;
    spO2_Average : port app.SpO2Avg -> ui.SpO2Avg;
    spO2_MovingAverage : port ui.SpO2MovingAvgWindowSamples -> app.SpO2MovingAvgWindowSamples;
    --====================  
    --== display, touch screen, and alarm buzzer
    --====================  
    po_image : port ui.Image -> screen.Image;  --image to display
    po_touch : port screen.Touch -> ui.Touch;  --touch from display
    sound : port ui.Sound -> piezo.Sound;  --audible alarm
end ICEpoSystem.imp;


device ICEpoInterface 
  --ICE Interface that must be met by an ICE-compliant pulse oximeter
  features
    --====================
    --== SpO2 Sensor
    --====================
    -- SpO2 sensor metric
    SpO2 : out event data port PulseOx_Types::Percent {
        --Communication_Properties::
        Fan_Out_Policy=>Broadcast;
        --Communication_Properties::
        Output_Rate => [
          	Value_Range => 2.0 .. 2.0; -- 500 ms (2x per second)
          	Rate_Unit => PerSecond;
          	Rate_Distribution => Fixed;
          ];
          -- MIDAS requires a 20 ms deadline, omitted because
          -- sensor is unspecified
      };
    -- SpO2 sensor lower limit alarm
    SpO2LowerLimit : in out event data port PulseOx_Types::Percent { -- lower limit attribute can be both read and written by clients
        --Communication_Properties::
        Fan_Out_Policy=>Broadcast;
        -- the default output rate of 1.0 per dispatch is suffcient
      };	
    SpO2LowerLimitViolated : out event port { -- alarm event published when patient SpO2 below lower limit
--      BLESS::Assertion=>"<<SPO2_LOWER_LIMIT_ALARM()>>";
      --Communication_Properties::
        Fan_Out_Policy => Broadcast;
      --Communication_Properties::
        Latency => 0 ms .. 5 ms;
    };
    --====================
    --== Heart Rate Sensor
    --====================
    -- Heart Rate sensor metric
    HeartRate : out data port PulseOx_Types::Heart_Rate {  -- periodic publishing of heart rate from pulse oximeter
        --Communication_Properties::
        Fan_Out_Policy=>Broadcast;
        --Communication_Properties::
        Output_Rate => [
          Value_Range => 2.0 .. 2.0; -- 500 ms (2x per second)
          Rate_Unit => PerSecond;
          Rate_Distribution => Fixed;
        ];
      };	
    -- Heart Rate sensor lower limit alarm
    HeartRateLowerLimit : in out event data port PulseOx_Types::Heart_Rate { -- minimum heart rate
    	--Communication_Properties::
        Fan_Out_Policy=>Broadcast;
        -- the default output rate of 1.0 per dispatch is suffcient
      };
    HeartRateLowerLimitViolated : out event port {  -- alarm event published when patient HR below lower limit
      BLESS::Assertion=>"<<HEART_RATE_LOWER_LIMIT_ALARM()>>";
      --Communication_Properties::
        Fan_Out_Policy => Broadcast;
      --Communication_Properties::
        Latency => 0 ms .. 5 ms;
    };
    -- Heart Rate sensor upper limit alarm
    HeartRateUpperLimit : in out event data port PulseOx_Types::Heart_Rate {   -- maximum heart rate
    	--Communication_Properties::
        Fan_Out_Policy=>Broadcast;
        -- the default output rate of 1.0 per dispatch is suffcient
    };
    HeartRateUpperLimitViolated : out event port { -- alarm event published when patient HR above upper limit
      BLESS::Assertion=>"<<HEART_RATE_UPPER_LIMIT_ALARM()>>";
      --Communication_Properties::
        Fan_Out_Policy => Broadcast;
      --Communication_Properties::
        Latency => 0 ms .. 5 ms;
    };
    --====================
    --== Probe Sensor
    --====================
    SensorConnected : out data port BLESS_Types::Boolean {  --sensor is attached to patient
        --Communication_Properties::
        Fan_Out_Policy=>Broadcast;
        --Communication_Properties::
        Output_Rate => [
          Value_Range => 2.0 .. 2.0; -- 500 ms (2x per second)
          Rate_Unit => PerSecond;
          Rate_Distribution => Fixed;
        ];
      };	
    ProbeOff : out event port;  -- alarm indicating sensor became detatched from the patient
    MotionArtifact : out data port BLESS_Types::Boolean {     -- indication of motion noise in sensor reading
        --Communication_Properties::
        Fan_Out_Policy=>Broadcast; -- this is not an alarm, but an indication that
        --Communication_Properties::
        Output_Rate => [           -- the SpO2 reading is corrupted by motion
          Value_Range => 2.0 .. 2.0; -- 500 ms (2x per second)
          Rate_Unit => PerSecond;
          Rate_Distribution => Fixed;
        ];
    };
    
    -- This device (ICEpoInterface) has an example of how we would like defaults for publishers
    -- and alarms to look.  By default, publishers will broadcast their data twice a second (every
    -- 500ms) and alarms will broadcast within 5ms of their dispatch condition occurring.
    
  properties
    --Thread_Properties::
        Dispatch_Protocol => Periodic;
    ----Timing_Properties::
        
        Period => PulseOx_Properties::SpO2_Sampling_Period;
end ICEpoInterface;

device implementation ICEpoInterface.imp
--an implementation of the ICE interface by some pulse oximeterproperties
end ICEpoInterface.imp;

process ICEpoUIprocess
--holds ICEpoUI thread which provides the supervisor user interface
  features
    --====================  
    --== display, touch screen, and alarm buzzer
    --====================  
    Image : out data port;  --user interface image sent to ICE terminal
    Touch : in event data port;  --XY coordinates of center of touch-screen contact
    Sound : out data port;  --audible alarm at ICE terminal
    --====================
    --== SpO2 Sensor inputs and alarm configuration
    --====================
    SpO2 : in event data port PulseOx_Types::Percent { --oxygen saturation from pulse oximeter
        --Communication_Properties::
        Fan_Out_Policy=>Broadcast;
        --Communication_Properties::
        Input_Rate => [
          Value_Range => 2.0 .. 4.0; -- 250 - 500 ms (2-4x per second)
          Rate_Unit => PerSecond;
          Rate_Distribution => Fixed;
        ];
      };
    SpO2LowerLimit : in out event data port PulseOx_Types::Percent { --minimum allowed SpO2
        --Communication_Properties::
        Fan_Out_Policy=>Broadcast;    	
    };
    SpO2LowerLimitViolated : in event port
          {BLESS::Assertion=>"<<SPO2_LOWER_LIMIT_ALARM()>>";}
    ;  --patient SpO2 below lower limit

    --====================
    --== Heart Rate Sensor inputs and alarm configuration
    --====================
    HeartRate : in data port PulseOx_Types::Heart_Rate { -- patient's heart rate
        --Communication_Properties::
        Fan_Out_Policy=>Broadcast;
        --Communication_Properties::
        Input_Rate => [
          Value_Range => 2.0 .. 4.0; -- 250 - 500 ms (2-4x per second)
          Rate_Unit => PerSecond;
          Rate_Distribution => Fixed;
        ];
      };
    HeartRateLowerLimit : in out event data port PulseOx_Types::Heart_Rate { -- minimum heart rate
        --Communication_Properties::
        Fan_Out_Policy=>Broadcast;    	
      };
    HeartRateLowerLimitViolated : in event port  -- heart too slow
      {BLESS::Assertion=>"<<HEART_RATE_LOWER_LIMIT_ALARM()>>";}
      ;
    HeartRateUpperLimit : in out event data port PulseOx_Types::Heart_Rate { -- maximum heart rate
        --Communication_Properties::
        Fan_Out_Policy=>Broadcast;
      };
    HeartRateUpperLimitViolated : in event port  -- heart too fast
      {BLESS::Assertion=>"<<HEART_RATE_UPPER_LIMIT_ALARM()>>";}
      ;
    HeartRateTrend : in data port PulseOx_Types::HeartRateSamples
      {BLESS::Assertion=>"<<:=HEART_RATE_HISTORY>>";}
      ;  
    --====================
    --== Average SpO2 reading
    --====================
    SpO2MovingAvgWindowSamples : out data port PulseOx_Types::Second_Count{ --user may enter time in minutes and/or seconds, implementation must convert to number of seconds
        --Communication_Properties::
        Fan_Out_Policy=>Broadcast;
      };
      
    SpO2Avg : in data port PulseOx_Types::Percent  --PulseOx_Properties::SpO2_Averaging_Duration average, not including current measurment
      {BLESS::Assertion=>"<<SPO2_AVERAGE()>>";}
      ;
    --====================
    --== App Suppl Oxygen Derived Alarm I/O and configuration
    --====================
    SupplOxyAlarmEnabled : out data port BLESS_Types::Boolean { --patient is using bottled oxygen
      --Communication_Properties::
        Fan_Out_Policy=>Broadcast;
    };  
    SpO2LevelAdj : out data port PulseOx_Types::Percent { -- value used to decrease SpO2 level to obtain "derived" parameter
      --Communication_Properties::
        Fan_Out_Policy=>Broadcast;
    };
    SpO2DerivedLowerLimitAlarm : in event port  -- alarm triggered when patient SpO2  is below average level by SpO2LevelAdj
      {BLESS::Assertion=>"<<SUPPL_O2_ALARM()>>";}
      ;
    --====================
    --== App Adult Rapid SpO2 Decline Derived Alarm I/O and configuration
    --====================
    AdultRapidDeclineAlarmEnabled : out data port BLESS_Types::Boolean { --patient is an adult
      --Communication_Properties::
        Fan_Out_Policy=>Broadcast; --user may enter time in minutes and/or seconds, implementation must convert to number of seconds
    };  
      
    MaxSpO2Decline : out data port PulseOx_Types::Percent {
      --Communication_Properties::
        Fan_Out_Policy=>Broadcast;
    };
    
    RapidSpO2DeclineAlarm : in event port	-- decreasing SpO2 in adult alarm
      {BLESS::Assertion=>"<<RAPID_DECLINE_ALARM()>>";}
      ; --that had higher SpO2	than the rapid decline %
    --====================
    --== Indications of SpO2 measurement anamolies
    --====================
    ProbeOff : in event port;  -- alarm indicating sensor is not connected to patient
    MotionArtifactAlarm : in event data port  --motion artifact longer than PulseOx_Properties::Motion_Artifact_Duration_Limit
      {BLESS::Assertion=>"<<MOTION_ARTIFACT_ALARM()>>";}
      ;
    --====================
    --== Data for SpO2 trending display
    --====================
    SpO2Trend : in data port PulseOx_Types::SpO2Samples
      {BLESS::Assertion=>"<<SPO2_TREND()>>";}
      ;
      
      
    -- This process (ICEpoUIprocess) has an example of how we would like defaults for subscribers
    -- to look.  By default, subscribers will tolerate input rates varying from 4 to 2 times a second
    -- (that is, from every 250 to 400ms) 
    
end ICEpoUIprocess;

process implementation ICEpoUIprocess.imp
  --process implementation holds thread that performs supervisor user interface actions
  subcomponents
    uit : thread ICEpoUI.imp;   --only subcomponent is a thread that runs the user interface
  connections
    ui_image : port uit.Image -> Image;
    ui_touch : port Touch -> uit.Touch;
    ui_sound : port uit.Sound -> Sound;
    ui_spo2 : port SpO2 -> uit.SpO2;
    ui_spo2_ll : port SpO2LowerLimit -> uit.SpO2LowerLimit;
    ui_spo2_llv : port SpO2LowerLimitViolated -> uit.SpO2LowerLimitViolated;
    ui_heartrate : port HeartRate -> uit.HeartRate;
    ui_heartrate_ll : port HeartRateLowerLimit -> uit.HeartRateLowerLimit;
    ui_heartrate_llv : port HeartRateLowerLimitViolated -> uit.HeartRateLowerLimitViolated;
    ui_heartrate_ul : port HeartRateUpperLimit -> uit.HeartRateUpperLimit;
    ui_heartrate_ulv : port HeartRateUpperLimitViolated -> uit.HeartRateUpperLimitViolated;
    ui_heartrate_trend : port HeartRateTrend -> uit.HeartRateTrend;
    ui_suploxyalarmenabled : port uit.SupplOxyAlarmEnabled -> SupplOxyAlarmEnabled;
    ui_spo2leveladj : port uit.SpO2LevelAdj -> SpO2LevelAdj;
    ui_spo2derived_lla : port SpO2DerivedLowerLimitAlarm -> uit.SpO2DerivedLowerLimitAlarm;
    ui_spo2movingaverage : port uit.SpO2MovingAvgWindowSamples -> SpO2MovingAvgWindowSamples;
    ui_spo2avg : port SpO2Avg -> uit.SpO2Avg;
    ui_ardae : port uit.AdultRapidDeclineAlarmEnabled -> AdultRapidDeclineAlarmEnabled;
    ui_maxspo2decline : port uit.MaxSpO2Decline -> MaxSpO2Decline;
    ui_rapiddeclinealarm : port RapidSpO2DeclineAlarm -> uit.RapidSpO2DeclineAlarm;
    ui_probeoff : port ProbeOff -> uit.ProbeOff;
    ui_motionartifactalarm : port MotionArtifactAlarm -> uit.MotionArtifactAlarm;
    ui_spo2trend : port SpO2Trend -> uit.SpO2Trend;
end ICEpoUIprocess.imp;


thread ICEpoUI
--graphical user interface for ICE pulse oximeter
  features
    --====================  
    --== display, touch screen, and alarm buzzer
    --====================  
    Image : out data port;  --user interface image sent to ICE terminal
    Touch : in event data port;  --XY coordinates of center of touch-screen contact
    Sound : out data port;  --audible alarm at ICE terminal
    --====================
    --== SpO2 Sensor inputs and alarm configuration
    --====================
    SpO2 : in event data port PulseOx_Types::Percent;	--oxygen saturation from pulse oximater
    SpO2LowerLimit : in out event data port PulseOx_Types::Percent;  --minimum allowed SpO2
    SpO2LowerLimitViolated : in event port  --patient SpO2 below lower limit
      {BLESS::Assertion=>"<<SPO2_LOWER_LIMIT_ALARM()>>";}
      ;
    --====================
    --== Heart Rate Sensor inputs and alarm configuration
    --====================
    HeartRate : in data port PulseOx_Types::Heart_Rate;  -- patient's heart rate
    HeartRateLowerLimit : in out event data port PulseOx_Types::Heart_Rate;  -- minimum heart rate
    HeartRateLowerLimitViolated : in event port  -- heart too slow
      {BLESS::Assertion=>"<<HEART_RATE_LOWER_LIMIT_ALARM()>>";}
      ;
    HeartRateUpperLimit : in out event data port PulseOx_Types::Heart_Rate;  -- maximum heart rate
    HeartRateUpperLimitViolated : in event port  -- heart too fast
      {BLESS::Assertion=>"<<HEART_RATE_UPPER_LIMIT_ALARM()>>";}
      ;
    HeartRateTrend : in data port PulseOx_Types::HeartRateSamples
      {BLESS::Assertion=>"<<:=HEART_RATE_HISTORY>>";}
      ;  
    --====================
    --== App Suppl Oxygen Derived Alarm I/O and configuration
    --====================
    SupplOxyAlarmEnabled : out data port BLESS_Types::Boolean;  --patient is using bottled oxygen
    SpO2LevelAdj : out data port PulseOx_Types::Percent;  -- value used to decrease SpO2 level to obtain "derived" parameter
    SpO2DerivedLowerLimitAlarm : in event port  -- alarm triggered when derived patient SpO2 average level is below SpO2LowerLimit
      {BLESS::Assertion=>"<<SUPPL_O2_ALARM()>>";}
      ;
    --====================
    --== Average SpO2 reading
    --====================
    SpO2MovingAvgWindowSamples : out data port PulseOx_Types::Second_Count;
    SpO2Avg : in data port PulseOx_Types::Percent --PulseOx_Properties::SpO2_Averaging_Duration average, not including current measurment
      {BLESS::Assertion=>"<<:=SPO2_AVERAGE()>>";}
      ;      	
    --====================
    --== App Adult Rapid SpO2 Decline Derived Alarm I/O and configuration
    --====================
    AdultRapidDeclineAlarmEnabled : out data port BLESS_Types::Boolean;  --patient is an adult
    MaxSpO2Decline : out data port PulseOx_Types::Percent;
    RapidSpO2DeclineAlarm : in event port	-- decreasing SpO2 in adult alarm
      {BLESS::Assertion=>"<<RAPID_DECLINE_ALARM()>>";}
      ; --that had higher SpO2	than the rapid decline %
    --====================
    --== Indications of SpO2 measurement anamolies
    --====================
    ProbeOff : in event port;  -- alarm indicating sensor is not connected to patient
    MotionArtifactAlarm : in event data port  --motion artifact longer than PulseOx_Properties::Motion_Artifact_Duration_Limit
      {BLESS::Assertion=>"<<MOTION_ARTIFACT_ALARM()>>";}
      ;
    --====================
    --== Data for SpO2 trending display
    --====================
    SpO2Trend : in data port PulseOx_Types::SpO2Samples
      {BLESS::Assertion=>"<<SPO2_TREND()>>";}
      ;  --for which sample s was the patient's SpO2
  properties
    --Thread_Properties::
        Dispatch_Protocol => Periodic;
    ----Timing_Properties::
        
        Period => PulseOx_Properties::SpO2_Sampling_Period;
end ICEpoUI;

thread implementation ICEpoUI.imp
  --user interface implementation, 
  --usually just reference to source code that implements the user interface
end ICEpoUI.imp;

process ICEpoAppProcess
  --the process holds ICEpoApp thread group which performs "App" functions
  features
    --====================
    --== SpO2 Sensor inputs and alarm configuration
    --====================
    SpO2 : in event data port PulseOx_Types::Percent;	--oxygen saturation from pulse oximater device
    SpO2LowerLimit : in event data port PulseOx_Types::Percent;  -- minimum allowed SpO2 to/from device
    --====================
    --== Heart Rate Sensor inputs and Heart Rate Trending Data
    --====================
    HeartRate : in data port PulseOx_Types::Heart_Rate;  -- patient's heart rate
    HeartRateTrend : out data port PulseOx_Types::HeartRateSamples
      {BLESS::Assertion=>"<<:=HEART_RATE_HISTORY>>";}
      ;  
    --====================
    --== Indications of SpO2 measurement anamolies
    --====================
    SensorConnected : in data port BLESS_Types::Boolean;  --sensor is attached to patient
    MotionArtifact : in data port BLESS_Types::Boolean;  -- indication of motion noise in sensor reading
    MotionArtifactAlarm : out event data port  --motion artifact longer than PulseOx_Properties::Motion_Artifact_Duration_Limit
      {BLESS::Assertion=>"<<MOTION_ARTIFACT_ALARM()>>";}
      ;
    --====================
    --== Average SpO2 reading
    --====================
    SpO2MovingAvgWindowSamples : in data port PulseOx_Types::Second_Count; --how many samples in moving average?
    SpO2Avg : out data port PulseOx_Types::Percent  --PulseOx_Properties::SpO2_Averaging_Duration average, not including current measurment
      {BLESS::Assertion=>"<<SPO2_AVERAGE()>>";}
      ;      	
    --====================
    --== App Suppl Oxygen Derived Alarm I/O and configuration
    --====================
    SupplOxyAlarmEnabled : in data port BLESS_Types::Boolean;   -- enable derived alarm for patient using supplementary oxygen
    SpO2LevelAdj : in data port PulseOx_Types::Percent;  -- value used to decrease SpO2 level to obtain "derived" parameter
    SpO2DerivedLowerLimitAlarm : out event port  -- alarm triggered when derived patient SpO2 average level is below SpO2LowerLimit
      {BLESS::Assertion=>"<<SUPPL_O2_ALARM()>>";}
      ;
    --====================
    --== App Adult Rapid SpO2 Decline Derived Alarm I/O and configuration
    --====================
    AdultRapidDeclineAlarmEnabled : in data port BLESS_Types::Boolean;  -- enabled derived alarm for rapid SpO2 decline in adult patient 
    MaxSpO2Decline : in data port PulseOx_Types::Percent;
    RapidSpO2DeclineAlarm : out event port	-- decreasing SpO2 in adult alarm
      {BLESS::Assertion=>"<<RAPID_DECLINE_ALARM()>>";}
      ; --that had higher SpO2	than the rapid decline %
    --====================
    --== Data for SpO2 trending display
    --====================
    SpO2Trend : out data port PulseOx_Types::SpO2Samples  --one SpO2 reading each minute for the past hour
      {BLESS::Assertion=>"<<SPO2_TREND()>>";}
      ;  
end ICEpoAppProcess;

process implementation ICEpoAppProcess.imp
  --the process holds the thread group which performs "App" functions
  subcomponents
    tg : thread group ICEpoApp.imp;
  connections
    ap_spo2 : port SpO2 -> tg.SpO2;
    ap_spo2_ll : port SpO2LowerLimit -> tg.SpO2LowerLimit;
    ap_heartrate : port HeartRate -> tg.HeartRate;
    ap_heartrate_trend : port tg.HeartRateTrend -> HeartRateTrend;
    ap_sc : port SensorConnected -> tg.SensorConnected;
    ap_ma : port MotionArtifact -> tg.MotionArtifact;
    ap_maa : port tg.MotionArtifactAlarm -> MotionArtifactAlarm;
    ap_soae : port SupplOxyAlarmEnabled -> tg.SupplOxyAlarmEnabled;
    ap_spo2leveladj : port SpO2LevelAdj -> tg.SpO2LevelAdj;
    ap_spo2derived_lla : port tg.SpO2DerivedLowerLimitAlarm -> SpO2DerivedLowerLimitAlarm;
    ap_ardae : port AdultRapidDeclineAlarmEnabled -> tg.AdultRapidDeclineAlarmEnabled;
    ap_maxspo2decline : port MaxSpO2Decline -> tg.MaxSpO2Decline;
    ap_rda : port tg.RapidSpO2DeclineAlarm -> RapidSpO2DeclineAlarm;
    ap_spo2trend : port tg.SpO2Trend -> SpO2Trend;
    ap_spo2average : port tg.SpO2Avg -> SpO2Avg;
    ap_numsamples : port SpO2MovingAvgWindowSamples -> tg.SpO2MovingAvgWindowSamples;
end ICEpoAppProcess.imp;

thread group ICEpoApp
  --this is the ICE App that controls a pulse oximeter through an ICE interface
  --it has 6 thread components; one each for MotionArtifactThread, SpO2DerivedLowerLimitThread
  -- RapidSpO2DeclineThread, HeartRateTrendThread, SpO2AverageThread and SpO2TrendThread
  features  --same features as containing process ICEpoAppProcess
    --====================
    --== SpO2 Sensor inputs and alarm configuration
    --====================
    SpO2 : in event data port PulseOx_Types::Percent	--oxygen saturation from pulse oximater device
    {
    	  --Communication_Properties::
        Input_Rate => [
    	  	Value_Range => 1.667 .. 3.333; -- 600ms to 300ms
    	  	Rate_Unit => PerSecond;
    	  	Rate_Distribution => Fixed;
    	  ];
    };
    
    SpO2LowerLimit : in event data port PulseOx_Types::Percent;  -- minimum allowed SpO2 to/from device
    --====================
    --== Heart Rate Sensor inputs and Heart Rate Trending Data
    --====================
    HeartRate : in data port PulseOx_Types::Heart_Rate;  -- patient's heart rate
    HeartRateTrend : out data port PulseOx_Types::HeartRateSamples
      {BLESS::Assertion=>"<<:=HEART_RATE_HISTORY>>";}
      ;  
    --====================
    --== Indications of SpO2 measurement anamolies
    --====================
    SensorConnected : in data port BLESS_Types::Boolean;  --sensor is attached to patient
    MotionArtifact : in data port BLESS_Types::Boolean;  -- indication of motion noise in sensor reading
    MotionArtifactAlarm : out event data port  --motion artifact longer than PulseOx_Properties::Motion_Artifact_Duration_Limit
      {BLESS::Assertion=>"<<MOTION_ARTIFACT_ALARM()>>";}
      ;
    --====================
    --== Average SpO2 reading
    --====================
    SpO2MovingAvgWindowSamples : in data port PulseOx_Types::Second_Count;  --how many samples in average?
    SpO2Avg : out data port PulseOx_Types::Percent  --PulseOx_Properties::SpO2_Averaging_Duration average, not including current measurment
      {BLESS::Assertion=>"<<:=SPO2_AVERAGE()>>";}
      ;      	
    --====================
    --== App Suppl Oxygen Derived Alarm I/O and configuration
    --====================
    SupplOxyAlarmEnabled : in data port BLESS_Types::Boolean;   -- enable derived alarm for patient using supplementary oxygen
    SpO2LevelAdj : in data port PulseOx_Types::Percent;  -- value used to decrease SpO2 level to obtain "derived" parameter
    SpO2DerivedLowerLimitAlarm : out event port  -- alarm triggered when derived patient SpO2 average level is below SpO2LowerLimit
      {BLESS::Assertion=>"<<SUPPL_O2_ALARM()>>";}
      ;
    --====================
    --== App Adult Rapid SpO2 Decline Derived Alarm I/O and configuration
    --====================
    AdultRapidDeclineAlarmEnabled : in data port BLESS_Types::Boolean;  -- enabled derived alarm for rapid SpO2 decline in adult patient 
    MaxSpO2Decline : in data port PulseOx_Types::Percent;
    RapidSpO2DeclineAlarm : out event port	-- decreasing SpO2 in adult alarm
      {BLESS::Assertion=>"<<RAPID_DECLINE_ALARM()>>";}
      ; 
    --====================
    --== Data for SpO2 trending display
    --====================
    SpO2Trend : out data port PulseOx_Types::SpO2Samples  --one SpO2 reading each minute for the past hour
      {BLESS::Assertion=>"<<SPO2_TREND()>>";}
      ;  
end ICEpoApp;

thread group implementation ICEpoApp.imp
  subcomponents
    ma : thread MA::MotionArtifactThread.imp;
    so : thread SO::SupplemetalOxygenThread.imp;
    rd : thread RD::RapidDeclineThread.imp;
    tr : thread SPT::SpO2TrendThread.imp;
    hrt : thread HR::HeartRateTrendThread.imp;
    av : thread SPA::SpO2AverageThread.imp;
  connections
    scma : port SensorConnected -> ma.SensorConnected;
    scrd : port SensorConnected -> rd.SensorConnected;
    sctr : port SensorConnected -> tr.SensorConnected;
    schr : port SensorConnected -> hrt.SensorConnected;
--    scav : port SensorConnected -> ma.SensorConnected;
    mama : port MotionArtifact -> ma.MotionArtifact;
    mard : port MotionArtifact -> rd.MotionArtifact;
    matr : port MotionArtifact -> tr.MotionArtifact;
    mahr : port MotionArtifact -> hrt.MotionArtifact;
    maav : port MotionArtifact -> av.MotionArtifact;
    maa  : port ma.MotionArtifactAlarm -> MotionArtifactAlarm;
    sptr : port SpO2 -> tr.SpO2;
    sprd : port SpO2 -> rd.SpO2;
    spav : port SpO2 -> av.SpO2;
    avout : port av.SpO2Avg -> SpO2Avg;
    avso : port av.SpO2Avg -> so.SpO2Avg;
    llso : port SpO2LowerLimit -> so.SpO2LowerLimit;
    suso : port SupplOxyAlarmEnabled -> so.SupplOxyAlarmEnabled;
    laso : port SpO2LevelAdj -> so.SpO2LevelAdj;
    soalarm : port so.SpO2DerivedLowerLimitAlarm -> SpO2DerivedLowerLimitAlarm;
    aprd : port AdultRapidDeclineAlarmEnabled -> rd.AdultRapidDeclineAlarmEnabled;
    mxrd : port MaxSpO2Decline -> rd.MaxSpO2Decline;
    rdalarm : port rd.RapidSpO2DeclineAlarm -> RapidSpO2DeclineAlarm;
    sptrend : port tr.SpO2Trend -> SpO2Trend;
    hrpo : port HeartRate -> hrt.HeartRate;
    hrtr : port hrt.HeartRateTrend -> HeartRateTrend;
    numsamp: port SpO2MovingAvgWindowSamples -> av.SpO2MovingAvgWindowSamples;
    spo2av : port av.SpO2Avg -> rd.AverageSpO2;
    sc : port SensorConnected -> av.SensorConnected;
end ICEpoApp.imp;



end PO;
