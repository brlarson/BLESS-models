Theorem (1)                               [serial 2429] 
P [1069] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1052] ->
Q [1052] <<all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2)                               [serial 1003] 
P [1069] <<SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1052] ->
Q [1052] <<all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) >>
by Substitution of Assertion Labels
and theorem 1:
Theorem (1) [serial 2429] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1003]
 


Theorem (3)                               [serial 2430] 
P [1065] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1052] ->
Q [1052] <<all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (4)                               [serial 1004] 
P [1065] <<SpO2_INV() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1052] ->
Q [1052] <<all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) >>
by Substitution of Assertion Labels
and theorem 3:
Theorem (3) [serial 2430] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1004]
 


Theorem (5)                               [serial 1005] 
P [1061] <<(num_samples < #PulseOx_Properties::Num_Trending_Samples) and (num_samples = 0) and 
(all s:integer
  in num_samples+1..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) )>>
S [1061] ->
Q [1061] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (6)                               [serial 2434] 
P [1067] <<HOLD(num_samples)>>
S [1067] ->
Q [1067] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (7)                               [serial 2432] 
P [1067] <<HOLD(num_samples)>>
S [1067] ->
Q [1067] <<num_samples = #PulseOx_Properties::Num_Trending_Samples or num_samples < #PulseOx_Properties::Num_Trending_Samples or 
#PulseOx_Properties::Num_Trending_Samples < num_samples>>
by Less than, greater than, or equal:  |-a<b or b<a or a=b
and theorem 6:
Theorem (6) [serial 2434] used for:
  Less than, greater than, or equal:  |-a<b or b<a or a=b [serial 2432]
 


Theorem (8)                               [serial 1006] 
P [1067] <<HOLD(num_samples)>>
S [1067] ->
Q [1067] <<(num_samples < #PulseOx_Properties::Num_Trending_Samples) or (num_samples = #PulseOx_Properties::Num_Trending_Samples) or 
(num_samples > #PulseOx_Properties::Num_Trending_Samples)>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 7:
Theorem (7) [serial 2432] used for:
    normalization of [serial 1006]
 


Theorem (9)                               [serial 2473] 
P [1061] <<num_samples = 0 and (all s:integer
  in 1..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and 0 < #PulseOx_Properties::Num_Trending_Samples>>
S [1073] ->
Q [1065] <<0 < #PulseOx_Properties::Num_Trending_Samples>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (10)                               [serial 2471] 
P [1061] <<num_samples = 0 and (all s:integer
  in 1..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and 0 < #PulseOx_Properties::Num_Trending_Samples>>
S [1073] ->
Q [1065] <<(0 < #PulseOx_Properties::Num_Trending_Samples)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 9:
Theorem (9) [serial 2473] used for:
    normalization of [serial 2471]
 


Theorem (11)                               [serial 2469] 
P [1061] <<num_samples = 0 and (all s:integer
  in 1..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and 0 < #PulseOx_Properties::Num_Trending_Samples>>
S [1073] ->
Q [1065] <<true and 0 < #PulseOx_Properties::Num_Trending_Samples>>
by Law of And-Simplification:  P and true is P
and theorem 10:
Theorem (10) [serial 2471] used for:
  Law of And-Simplification:  P and true is P [serial 2469]
 


Theorem (12)                               [serial 2467] 
P [1061] <<(num_samples = 0) and (all s:integer
  in 1+0..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and (0 < #PulseOx_Properties::Num_Trending_Samples)>>
S [1073] ->
Q [1065] <<true and 0 < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 11:
Theorem (11) [serial 2469] used for:
    normalization of [serial 2467]
 


Theorem (13)                               [serial 2465] 
P [1061] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1073] ->
Q [1065] <<true and 0 < #PulseOx_Properties::Num_Trending_Samples>>
by Substituting Equals Within Conjunction
and theorem 12:
Theorem (12) [serial 2467] used for:
  Substituting Equals Within Conjunction [serial 2465]
 


Theorem (14)                               [serial 2463] 
P [1061] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1073] ->
Q [1065] <<(true) and 0^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 13:
Theorem (13) [serial 2465] used for:
    normalization of [serial 2463]
 


Theorem (15)                               [serial 2462] 
P [1061] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1073] ->
Q [1065] <<(all s:integer
  in false 
  are spo2[s]^1 = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) ) and 
0^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Empty Range Law All: all a:t in false are V is tautology
and theorem 14:
Theorem (14) [serial 2463] used for:
  Empty Range Law All: all a:t in false are V is tautology [serial 2462]
 


Theorem (16)                               [serial 2461] 
P [1061] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1073] ->
Q [1065] <<(all s:integer
  in 1..0 
  are spo2[s]^1 = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) ) and 
0^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Empty Range
and theorem 15:
Theorem (15) [serial 2462] used for:
  Empty Range [serial 2461]
 


Theorem (17)                               [serial 2458] 
P [1061] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1073] ->
Q [1065] <<(all s:integer
  in 1..num_samples 
  are spo2[s]^1 = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Guided Substitution of Equals
and theorem 16:
Theorem (16) [serial 2461] used for:
  Guided Substitution of Equals
 replacing "num_samples" with its = "0" in its postcondition [serial 2458]
 


Theorem (18)                               [serial 2456] 
P [1061] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1073] ->
Q [1065] <<(all s:integer
  in 1..num_samples 
  are spo2[s]^1 = (MotionArtifact^(1-s) or not (SensorConnected^(- s))^1??0:SpO2^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Caret Compostition:  (x^a)^b is x^(a+b)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 17:
Theorem (17) [serial 2458] used for:
    normalization of [serial 2456]
 


Theorem (19)                               [serial 2454] 
P [1061] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1073] ->
Q [1065] <<(all s:integer
  in 1..num_samples 
  are spo2[s]^1 = (MotionArtifact^(1-s) or (not SensorConnected^(- s))^1??0:SpO2^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 18:
Theorem (18) [serial 2456] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2454]
 


Theorem (20)                               [serial 2452] 
P [1061] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1073] ->
Q [1065] <<(all s:integer
  in 1..num_samples 
  are spo2[s]^1 = ((MotionArtifact^((- s)+1) or (not SensorConnected^(- s))^1)??0:SpO2^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 19:
Theorem (19) [serial 2454] used for:
    normalization of [serial 2452]
 


Theorem (21)                               [serial 2450] 
P [1061] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1073] ->
Q [1065] <<(all s:integer
  in 1..num_samples 
  are spo2[s]^1 = ((MotionArtifact^(- s) or not SensorConnected^(- s))^1??0:SpO2^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 20:
Theorem (20) [serial 2452] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2450]
 


Theorem (22)                               [serial 2448] 
P [1061] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1073] ->
Q [1065] <<(all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s))^1??(0)^1:SpO2^((- s)+1)) = spo2[s]^1 ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
    Associativity: (b.c).a = a.b.c
and theorem 21:
Theorem (21) [serial 2450] used for:
    normalization of [serial 2448]
 


Theorem (23)                               [serial 2446] 
P [1061] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1073] ->
Q [1065] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s))^1 = spo2[s]^1 ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 22:
Theorem (22) [serial 2448] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2446]
 


Theorem (24)                               [serial 2444] 
P [1061] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1073] ->
Q [1065] <<(all s:integer
  in 1..num_samples 
  are (((MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)))^1 = (spo2[s])^1) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 23:
Theorem (23) [serial 2446] used for:
    normalization of [serial 2444]
 


Theorem (25)                               [serial 2442] 
P [1061] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1073] ->
Q [1065] <<(all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s])^1 ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 24:
Theorem (24) [serial 2444] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2442]
 


Theorem (26)                               [serial 2440] 
P [1061] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1073] ->
Q [1065] <<(all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s])^1 ) and 
((num_samples)^1 < (#PulseOx_Properties::Num_Trending_Samples)^1)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 25:
Theorem (25) [serial 2442] used for:
    normalization of [serial 2440]
 


Theorem (27)                               [serial 2438] 
P [1061] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1073] ->
Q [1065] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )^1 and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 26:
Theorem (26) [serial 2440] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2438]
 


Theorem (28)                               [serial 2436] 
P [1061] <<(num_samples < #PulseOx_Properties::Num_Trending_Samples) and (num_samples = 0) and 
(all s:integer
  in num_samples+1..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) )>>
S [1073] ->
Q [1065] <<((all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) )^1 and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)^1)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 27:
Theorem (27) [serial 2438] used for:
    normalization of [serial 2436]
 


Theorem (29)                               [serial 2435] 
P [1061] <<(num_samples < #PulseOx_Properties::Num_Trending_Samples) and (num_samples = 0) and 
(all s:integer
  in num_samples+1..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) )>>
S [1073] ->
Q [1065] <<((all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples))^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 28:
Theorem (28) [serial 2436] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2435]
 


Theorem (30)                               [serial 1007] 
P [1061] <<(num_samples < #PulseOx_Properties::Num_Trending_Samples) and (num_samples = 0) and 
(all s:integer
  in num_samples+1..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) )>>
S [1073] ->
Q [1065] <<(SpO2_INV() and (num_samples < #PulseOx_Properties::Num_Trending_Samples))^1>>
by Substitution of Assertion Labels
and theorem 29:
Theorem (29) [serial 2435] used for:
  substituted Assertions' predicates for  labels  [serial 1007]
 


Theorem (31)                               [serial 2523] 
P [1065] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1065] ->
Q [1076] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Identity (id):  P->P is tautology


Theorem (32)                               [serial 2483] 
P [1065] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1065] ->
Q [1076] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 31:
Theorem (31) [serial 2523] used for:
    normalization of [serial 2483]
 


Theorem (33)                               [serial 2475] 
P [1065] <<SpO2_INV() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1065] ->
Q [1076] <<SpO2_INV() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
by Substitution of Assertion Labels
and theorem 32:
Theorem (32) [serial 2483] used for:
  substituted Assertions' predicates for  labels  [serial 2475]
 


Theorem (34)                               [serial 2616] 
P [1118] <<all #28#:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- #28#) or not SensorConnected^(- #28#)??0:SpO2^(- #28#)) = spo2[
      1+#28#] >>
S [1067] ->
Q [1067] <<all #29#:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- #29#) or not SensorConnected^(- #29#)??0:SpO2^(- #29#)) = spo2[
      1+#29#] >>
by Identity (id):  P->P is tautology


Theorem (35)                               [serial 2587] 
P [1118] <<all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2[
      1+i] >>
S [1067] ->
Q [1067] <<all s:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[
      1+s] >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 34:
Theorem (34) [serial 2616] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2587]
 


Theorem (36)                               [serial 2575] 
P [1118] <<all i:integer
  in 0..(num_samples-1) 
  are (MotionArtifact^(1-(i+1)) or not SensorConnected^(1-(i+1))??0:SpO2^(1-(i+1))) = spo2[(
      i+1)] >>
S [1067] ->
Q [1067] <<all s:integer
  in 0..(num_samples-1) 
  are (MotionArtifact^(1-(s+1)) or not SensorConnected^(1-(s+1))??0:SpO2^(1-(s+1))) = spo2[(
      s+1)] >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Subtaction of Added Value:  (a+b)-a is b
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 35:
Theorem (35) [serial 2587] used for:
    normalization of [serial 2575]
 


Theorem (37)                               [serial 2525] 
P [1118] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2[i] >>
S [1067] ->
Q [1067] <<all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] >>
by Shift Quantification Range so Lower Bound is Zero
and theorem 36:
Theorem (36) [serial 2575] used for:
  Shift Quantification Range so Lower Bound is Zero [serial 2525]
 


Theorem (38)                               [serial 2484] 
P [1118] <<all i:integer
  in 1..num_samples 
  are spo2[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) >>
S [1067] ->
Q [1067] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 37:
Theorem (37) [serial 2525] used for:
    normalization of [serial 2484]
 


Theorem (39)                               [serial 2476] 
P [1118] <<all i:integer
  in 1..num_samples 
  are spo2[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) >>
S [1067] ->
Q [1067] <<HOLD(num_samples)>>
by Substitution of Assertion Labels
and theorem 38:
Theorem (38) [serial 2484] used for:
  substituted Assertions' predicates for  labels  [serial 2476]
 


Theorem (40)                               [serial 2527] 
P [1076] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1077] ->
Q [1034] <<all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (41)                               [serial 2507] 
P [1076] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1077] ->
Q [1034] <<all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 40:
Theorem (40) [serial 2527] used for:
    normalization of [serial 2507]
 


Theorem (42)                               [serial 2569] 
P [1077] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples and (SpO2Trend iff spo2)^0>>
S [1077] ->
Q [1079] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (43)                               [serial 2529] 
P [1077] <<(SpO2Trend iff spo2)^0 and ((all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1077] ->
Q [1079] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Associativity: (b.c).a = a.b.c
and theorem 42:
Theorem (42) [serial 2569] used for:
  Associativity: (b.c).a = a.b.c [serial 2529]
 


Theorem (44)                               [serial 2508] 
P [1077] <<((all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)) and (SpO2Trend iff spo2)^0>>
S [1077] ->
Q [1079] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 43:
Theorem (43) [serial 2529] used for:
    normalization of [serial 2508]
 


Theorem (45)                               [serial 2485] 
P [1076] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1077] SpO2Trend!(spo2)
Q [1079] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 41 44:
Theorem (41) [serial 2507] used for:
  applied port output of value <<pre>> -> <<M(SpO2Trend)[SpO2Trend|spo2]>> [serial 2485]
 
Theorem (44) [serial 2508] used for:
  applied port output <<pre and (SpO2Trend iff spo2)^0>> -> <<post>> [serial 2485]
 


Theorem (46)                               [serial 2477] 
P [1076] <<SpO2_INV() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1077] SpO2Trend!(spo2)
Q [1079] <<SpO2_INV() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
by Substitution of Assertion Labels
and theorem 45:
Theorem (45) [serial 2485] used for:
  substituted Assertions' predicates for  labels  [serial 2477]
 


Theorem (47)                               [serial 2570] 
P [1080] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples and (NumSamples = num_samples)^0>>
S [1080] ->
Q [1082] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (48)                               [serial 2531] 
P [1080] <<(NumSamples = num_samples)^0 and ((all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1080] ->
Q [1082] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Associativity: (b.c).a = a.b.c
and theorem 47:
Theorem (47) [serial 2570] used for:
  Associativity: (b.c).a = a.b.c [serial 2531]
 


Theorem (49)                               [serial 2509] 
P [1080] <<((all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)) and (NumSamples = num_samples)^0>>
S [1080] ->
Q [1082] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 48:
Theorem (48) [serial 2531] used for:
    normalization of [serial 2509]
 


Theorem (50)                               [serial 2609] 
P [1080] <<NumSamples = num_samples and (all s:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+s)) or not SensorConnected^(- (1+s))??0:SpO2^(- (1+s))) = spo2[
      1+s] ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1080] ->
Q [1080] <<NumSamples = num_samples>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (51)                               [serial 2591] 
P [1080] <<(NumSamples = num_samples)^0 and (all s:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+s)) or not SensorConnected^(- (1+s))??0:SpO2^(- (1+s))) = spo2[
      1+s] ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1080] ->
Q [1080] <<NumSamples = num_samples>>
by Assume Present:  P = P@now = P^0 
and theorem 50:
Theorem (50) [serial 2609] used for:
  Assume Present:  P = P@now = P^0  [serial 2591]
 


Theorem (52)                               [serial 2579] 
P [1080] <<(all s:integer
  in 0..(num_samples-1) 
  are (MotionArtifact^(- (s+1)) or not SensorConnected^(- (s+1))??0:SpO2^(- (s+1))) = spo2[(
      s+1)] ) and num_samples < #PulseOx_Properties::Num_Trending_Samples and 
(NumSamples = num_samples)^0>>
S [1080] ->
Q [1080] <<NumSamples = num_samples>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 51:
Theorem (51) [serial 2591] used for:
    normalization of [serial 2579]
 


Theorem (53)                               [serial 2571] 
P [1080] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples and (NumSamples = num_samples)^0>>
S [1080] ->
Q [1080] <<NumSamples = num_samples>>
by Shift Quantification Range so Lower Bound is Zero
and theorem 52:
Theorem (52) [serial 2579] used for:
  Shift Quantification Range so Lower Bound is Zero [serial 2571]
 


Theorem (54)                               [serial 2533] 
P [1080] <<(NumSamples = num_samples)^0 and ((all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1080] ->
Q [1080] <<NumSamples = num_samples>>
by Associativity: (b.c).a = a.b.c
and theorem 53:
Theorem (53) [serial 2571] used for:
  Associativity: (b.c).a = a.b.c [serial 2533]
 


Theorem (55)                               [serial 2510] 
P [1080] <<((all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)) and (NumSamples = num_samples)^0>>
S [1080] ->
Q [1080] <<NumSamples = num_samples>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 54:
Theorem (54) [serial 2533] used for:
    normalization of [serial 2510]
 


Theorem (56)                               [serial 2486] 
P [1079] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1080] NumSamples!(num_samples)
Q [1082] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 49 55:
Theorem (49) [serial 2509] used for:
  applied port output <<pre and (NumSamples=num_samples)^0>> -> <<post>> [serial 2486]
 
Theorem (55) [serial 2510] used for:
  applied port output <<pre and (NumSamples=num_samples)^0>> -> <<(NumSamples=num_samples)^0>> [serial 2486]
 


Theorem (57)                               [serial 2478] 
P [1079] <<SpO2_INV() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1080] NumSamples!(num_samples)
Q [1082] <<SpO2_INV() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
by Substitution of Assertion Labels
and theorem 56:
Theorem (56) [serial 2486] used for:
  substituted Assertions' predicates for  labels  [serial 2478]
 


Theorem (58)                               [serial 2537] 
P [1085] <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2[i]>>
S [1086] ->
Q [1087] <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2[i]>>
by Identity (id):  P->P is tautology


Theorem (59)                               [serial 2511] 
P [1085] <<spo2[i] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i))>>
S [1086] ->
Q [1087] <<(spo2[i]) = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 58:
Theorem (58) [serial 2537] used for:
    normalization of [serial 2511]
 


Theorem (60)                               [serial 2497] 
P [1085] <<spo2[i] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i))>>
S [1086] spo2_nxt[i+1] := spo2[i]
Q [1087] <<spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i))>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 59:
Theorem (59) [serial 2511] used for:
  applied wp for assignment [serial 2497]
 


Theorem (61)                               [serial 2617] 
P [1082] <<(all #30#:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+#30#)) or not SensorConnected^(- (1+#30#))??0:SpO2^(- (1+#30#))) = spo2[
      1+#30#] ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1083] ->
Q [1089] <<all #31#:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+#31#)) or not SensorConnected^(- (1+#31#))??0:SpO2^(- (1+#31#))) = spo2[
      1+#31#] >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (62)                               [serial 2589] 
P [1082] <<(all s:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+s)) or not SensorConnected^(- (1+s))??0:SpO2^(- (1+s))) = spo2[
      1+s] ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1083] ->
Q [1089] <<all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2[
      1+i] >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 61:
Theorem (61) [serial 2617] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2589]
 


Theorem (63)                               [serial 2576] 
P [1082] <<(all s:integer
  in 0..(num_samples-1) 
  are (MotionArtifact^(- (s+1)) or not SensorConnected^(- (s+1))??0:SpO2^(- (s+1))) = spo2[(
      s+1)] ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1083] ->
Q [1089] <<all i:integer
  in 0..(num_samples-1) 
  are (MotionArtifact^(- (i+1)) or not SensorConnected^(- (i+1))??0:SpO2^(- (i+1))) = spo2[(
      i+1)] >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 62:
Theorem (62) [serial 2589] used for:
    normalization of [serial 2576]
 


Theorem (64)                               [serial 2535] 
P [1082] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1083] ->
Q [1089] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2[i] >>
by Shift Quantification Range so Lower Bound is Zero
and theorem 63:
Theorem (63) [serial 2576] used for:
  Shift Quantification Range so Lower Bound is Zero [serial 2535]
 


Theorem (65)                               [serial 2498] 
P [1082] <<((all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples))>>
S [1083] ->
Q [1089] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2[i] >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 64:
Theorem (64) [serial 2535] used for:
    normalization of [serial 2498]
 


Theorem (66)                               [serial 2487] 
P [1082] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1083] forall i in 1..num_samples
  {
  <<spo2[i] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i))>>
  spo2_nxt[i+1] := spo2[i]
  <<spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i))>>
  }  
Q [1089] <<all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) >>
by Universal Quantification Rule:
                      <<A>> T <<B>>
       <<P and (z in r) and (x=e) and FAT>> -> <<wp(forall,Q)>>
 --------------------------------------------------------------------
 <<P>> forall z:i in r declare variable x:t:=e; begin <<A>> T <<B>> end <<Q>>
   where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
     (in postcondition Q, replace all occurances of
     "all z:i in r are B" with "all z:i in r are A"
   and FAT are "fetch-add terms", if any (bl.ulq)
and theorems 60 65:
Theorem (60) [serial 2497] used for:
  <<A>> T <<B>> as subject for universal lattice quantification by [serial 2487]
 
Theorem (65) [serial 2498] used for:
    <<P and (x=e) and FAT>> -> <<wp(forall,Q)>>
 where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
   (in postcondition Q, replace all occurances of
    <<all z:i in r are B>> with <<all z:i in r are A>>)
  for [serial 2487]
 


Theorem (67)                               [serial 2479] 
P [1082] <<SpO2_INV() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1083] forall i in 1..num_samples
  {
  <<spo2[i] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i))>>
  spo2_nxt[i+1] := spo2[i]
  <<spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i))>>
  }  
Q [1089] <<all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) >>
by Substitution of Assertion Labels
and theorem 66:
Theorem (66) [serial 2487] used for:
  substituted Assertions' predicates for  labels  [serial 2479]
 


Theorem (68)                               [serial 2568] 
P [1089] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] >>
S [1092] ->
Q [1092] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (69)                               [serial 2515] 
P [1089] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] >>
S [1092] ->
Q [1092] <<not (MotionArtifact^0 or not SensorConnected^0) or (MotionArtifact^0 or 
not SensorConnected^0)>>
by Law of Excluded Middle: P or not P is tautology
and theorem 68:
Theorem (68) [serial 2568] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2515]
 


Theorem (70)                               [serial 2488] 
P [1089] <<all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) >>
S [1092] ->
Q [1092] <<(MotionArtifact^0 or not SensorConnected^0) or (not (MotionArtifact^0 or 
not SensorConnected^0))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 69:
Theorem (69) [serial 2515] used for:
    normalization of [serial 2488]
 


Theorem (71)                               [serial 2539] 
P [1092] <<(all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1092] ->
Q [1094] <<(all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
by Identity (id):  P->P is tautology


Theorem (72)                               [serial 2499] 
P [1092] <<(all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(MotionArtifact^0 or not SensorConnected^0)>>
S [1092] ->
Q [1094] <<(all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(MotionArtifact^0 or not SensorConnected^0)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 71:
Theorem (71) [serial 2539] used for:
    normalization of [serial 2499]
 


Theorem (73)                               [serial 2489] 
P [1092] <<(all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(MotionArtifact^0 or not SensorConnected^0)>>
S [1092] ->
Q [1094] <<SHFT() and (MotionArtifact^0 or not SensorConnected^0)>>
by Substitution of Assertion Labels
and theorem 72:
Theorem (72) [serial 2499] used for:
  substituted Assertions' predicates for  labels  [serial 2489]
 


Theorem (74)                               [serial 2614] 
P [1094] <<(all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] ) and (MotionArtifact or not SensorConnected)>>
S [1095] ->
Q [1096] <<(all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] ) and (MotionArtifact or not SensorConnected)>>
by Identity (id):  P->P is tautology


Theorem (75)                               [serial 2612] 
P [1094] <<(all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] ) and (MotionArtifact or not SensorConnected)>>
S [1095] ->
Q [1096] <<true and (all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] ) and (MotionArtifact or not SensorConnected)>>
by Law of And-Simplification:  P and true is P
and theorem 74:
Theorem (74) [serial 2614] used for:
  Law of And-Simplification:  P and true is P [serial 2612]
 


Theorem (76)                               [serial 2610] 
P [1094] <<(all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] ) and (MotionArtifact or not SensorConnected)>>
S [1095] ->
Q [1096] <<0 = 0 and (all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] ) and (MotionArtifact or not SensorConnected)>>
by Equality Law (idistr):  a=a <-> true
and theorem 75:
Theorem (75) [serial 2612] used for:
  Equality Law (idistr):  a=a <-> true [serial 2610]
 


Theorem (77)                               [serial 2607] 
P [1094] <<(all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1095] ->
Q [1096] <<0 = 0 and (all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
by Assume Present:  P = P@now = P^0 
and theorem 76:
Theorem (76) [serial 2610] used for:
  Assume Present:  P = P@now = P^0  [serial 2607]
 


Theorem (78)                               [serial 2593] 
P [1094] <<(all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1095] ->
Q [1096] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = 0 and (all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
by Conditional True Expression:  b and x=e  iff  b and x=(b??e:g) 
and theorem 77:
Theorem (77) [serial 2607] used for:
   Conditional True Expression:  b and x=e  iff  b and x=(b??e:g)  [serial 2593]
 


Theorem (79)                               [serial 2582] 
P [1094] <<(all i:integer
  in 0..(num_samples-1) 
  are (MotionArtifact^(- (i+1)) or not SensorConnected^(- (i+1))??0:SpO2^(- (i+1))) = spo2_nxt[
      i+1+1] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1095] ->
Q [1096] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = 0 and (all i:integer
  in 0..(num_samples-1) 
  are (MotionArtifact^(- (i+1)) or not SensorConnected^(- (i+1))??0:SpO2^(- (i+1))) = spo2_nxt[
      i+1+1] ) and (MotionArtifact^0 or not SensorConnected^0)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 78:
Theorem (78) [serial 2593] used for:
    normalization of [serial 2582]
 


Theorem (80)                               [serial 2577] 
P [1094] <<(all i:integer
  in 0..(num_samples-1) 
  are (MotionArtifact^(- (i+1)) or not SensorConnected^(- (i+1))??0:SpO2^(- (i+1))) = spo2_nxt[
      1+(i+1)] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1095] ->
Q [1096] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = 0 and (all i:integer
  in 0..(num_samples-1) 
  are (MotionArtifact^(- (i+1)) or not SensorConnected^(- (i+1))??0:SpO2^(- (i+1))) = spo2_nxt[
      1+(i+1)] ) and (MotionArtifact^0 or not SensorConnected^0)>>
by Associativity: (b.c).a = a.b.c
and theorem 79:
Theorem (79) [serial 2582] used for:
  Associativity: (b.c).a = a.b.c [serial 2577]
 


Theorem (81)                               [serial 2541] 
P [1094] <<(all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1095] ->
Q [1096] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = 0 and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
by Shift Quantification Range so Lower Bound is Zero
and theorem 80:
Theorem (80) [serial 2577] used for:
  Shift Quantification Range so Lower Bound is Zero [serial 2541]
 


Theorem (82)                               [serial 2512] 
P [1094] <<(all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(MotionArtifact^0 or not SensorConnected^0)>>
S [1095] ->
Q [1096] <<(all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(MotionArtifact^0 or not SensorConnected^0) and (0 = (MotionArtifact^0 or 
not SensorConnected^0??0:SpO2^0))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 81:
Theorem (81) [serial 2541] used for:
    normalization of [serial 2512]
 


Theorem (83)                               [serial 2500] 
P [1094] <<(all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(MotionArtifact^0 or not SensorConnected^0)>>
S [1095] spo2_nxt[1] := 0
Q [1096] <<(all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (MotionArtifact^0 or 
not SensorConnected^0??0:SpO2^0))>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 82:
Theorem (82) [serial 2512] used for:
  applied wp for assignment [serial 2500]
 


Theorem (84)                               [serial 2490] 
P [1094] <<SHFT() and (MotionArtifact^0 or not SensorConnected^0)>>
S [1095] spo2_nxt[1] := 0
Q [1096] <<SHFT() and (MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (
MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>>
by Substitution of Assertion Labels
and theorem 83:
Theorem (83) [serial 2500] used for:
  substituted Assertions' predicates for  labels  [serial 2490]
 


Theorem (85)                               [serial 2597] 
P [1096] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(all i:integer
  in 0..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1092] ->
Q [1105] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(all i:integer
  in 0..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (86)                               [serial 2584] 
P [1096] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(all i:integer
  in 0..(num_samples-0) 
  are (MotionArtifact^(- (i+0)) or not SensorConnected^(- (i+0))??0:SpO2^(- (i+0))) = spo2_nxt[
      i+0+1] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1092] ->
Q [1105] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(all i:integer
  in 0..((1+num_samples)-1) 
  are (MotionArtifact^(1-(i+1)) or not SensorConnected^(1-(i+1))??0:SpO2^(1-(i+1))) = spo2_nxt[(
      i+1)] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Subtaction of Added Value:  (a+b)-a is b
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 85:
Theorem (85) [serial 2597] used for:
    normalization of [serial 2584]
 


Theorem (87)                               [serial 2580] 
P [1096] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(all i:integer
  in 0..(num_samples-0) 
  are (MotionArtifact^(- (i+0)) or not SensorConnected^(- (i+0))??0:SpO2^(- (i+0))) = spo2_nxt[
      1+(i+0)] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1092] ->
Q [1105] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(all i:integer
  in 0..((1+num_samples)-1) 
  are (MotionArtifact^(1-(i+1)) or not SensorConnected^(1-(i+1))??0:SpO2^(1-(i+1))) = spo2_nxt[(
      i+1)] )>>
by Associativity: (b.c).a = a.b.c
and theorem 86:
Theorem (86) [serial 2584] used for:
  Associativity: (b.c).a = a.b.c [serial 2580]
 


Theorem (88)                               [serial 2573] 
P [1096] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(all i:integer
  in 0..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1092] ->
Q [1105] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(all i:integer
  in 1..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] )>>
by Shift Quantification Range so Lower Bound is Zero
and theorem 87:
Theorem (87) [serial 2580] used for:
  Shift Quantification Range so Lower Bound is Zero [serial 2573]
 


Theorem (89)                               [serial 2543] 
P [1096] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1092] ->
Q [1105] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(all i:integer
  in 2..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] )>>
by Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j)
and theorem 88:
Theorem (88) [serial 2573] used for:
  Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j) [serial 2543]
 


Theorem (90)                               [serial 2501] 
P [1096] <<(all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (MotionArtifact^0 or 
not SensorConnected^0??0:SpO2^0))>>
S [1092] ->
Q [1105] <<(spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0)) and 
(all i:integer
  in 2..num_samples+1 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 89:
Theorem (89) [serial 2543] used for:
    normalization of [serial 2501]
 


Theorem (91)                               [serial 2491] 
P [1096] <<SHFT() and (MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (
MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>>
S [1092] ->
Q [1105] <<(spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0)) and 
(all i:integer
  in 2..num_samples+1 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) )>>
by Substitution of Assertion Labels
and theorem 90:
Theorem (90) [serial 2501] used for:
  substituted Assertions' predicates for  labels  [serial 2491]
 


Theorem (92)                               [serial 2545] 
P [1092] <<not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1092] ->
Q [1100] <<not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
by Identity (id):  P->P is tautology


Theorem (93)                               [serial 2502] 
P [1092] <<(all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(not (MotionArtifact^0 or not SensorConnected^0))>>
S [1092] ->
Q [1100] <<(all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
not (MotionArtifact^0 or not SensorConnected^0)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 92:
Theorem (92) [serial 2545] used for:
    normalization of [serial 2502]
 


Theorem (94)                               [serial 2492] 
P [1092] <<(all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(not (MotionArtifact^0 or not SensorConnected^0))>>
S [1092] ->
Q [1100] <<SHFT() and not (MotionArtifact^0 or not SensorConnected^0)>>
by Substitution of Assertion Labels
and theorem 93:
Theorem (93) [serial 2502] used for:
  substituted Assertions' predicates for  labels  [serial 2492]
 


Theorem (95)                               [serial 2615] 
P [1100] <<not (MotionArtifact or not SensorConnected) and (all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] )>>
S [1101] ->
Q [1102] <<not (MotionArtifact or not SensorConnected) and (all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] )>>
by Identity (id):  P->P is tautology


Theorem (96)                               [serial 2613] 
P [1100] <<not (MotionArtifact or not SensorConnected) and (all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] )>>
S [1101] ->
Q [1102] <<true and not (MotionArtifact or not SensorConnected) and (all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] )>>
by Law of And-Simplification:  P and true is P
and theorem 95:
Theorem (95) [serial 2615] used for:
  Law of And-Simplification:  P and true is P [serial 2613]
 


Theorem (97)                               [serial 2611] 
P [1100] <<not (MotionArtifact or not SensorConnected) and (all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] )>>
S [1101] ->
Q [1102] <<SpO2 = SpO2 and not (MotionArtifact or not SensorConnected) and (all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] )>>
by Equality Law (idistr):  a=a <-> true
and theorem 96:
Theorem (96) [serial 2613] used for:
  Equality Law (idistr):  a=a <-> true [serial 2611]
 


Theorem (98)                               [serial 2608] 
P [1100] <<not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] )>>
S [1101] ->
Q [1102] <<SpO2^0 = SpO2^0 and not (MotionArtifact^0 or not SensorConnected^0) and 
(all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] )>>
by Assume Present:  P = P@now = P^0 
and theorem 97:
Theorem (97) [serial 2611] used for:
  Assume Present:  P = P@now = P^0  [serial 2608]
 


Theorem (99)                               [serial 2595] 
P [1100] <<not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] )>>
S [1101] ->
Q [1102] <<SpO2^0 = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) and not (
MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] )>>
by Conditional False Expression:  not b and x=g  iff  not b and x=(b??e:g) 
and theorem 98:
Theorem (98) [serial 2608] used for:
   Conditional False Expression:  not b and x=g  iff  not b and x=(b??e:g)  [serial 2595]
 


Theorem (100)                               [serial 2583] 
P [1100] <<not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 0..(num_samples-1) 
  are (MotionArtifact^(- (i+1)) or not SensorConnected^(- (i+1))??0:SpO2^(- (i+1))) = spo2_nxt[
      i+1+1] )>>
S [1101] ->
Q [1102] <<SpO2^0 = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) and not (
MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 0..(num_samples-1) 
  are (MotionArtifact^(- (i+1)) or not SensorConnected^(- (i+1))??0:SpO2^(- (i+1))) = spo2_nxt[
      i+1+1] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 99:
Theorem (99) [serial 2595] used for:
    normalization of [serial 2583]
 


Theorem (101)                               [serial 2578] 
P [1100] <<not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 0..(num_samples-1) 
  are (MotionArtifact^(- (i+1)) or not SensorConnected^(- (i+1))??0:SpO2^(- (i+1))) = spo2_nxt[
      1+(i+1)] )>>
S [1101] ->
Q [1102] <<SpO2^0 = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) and not (
MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 0..(num_samples-1) 
  are (MotionArtifact^(- (i+1)) or not SensorConnected^(- (i+1))??0:SpO2^(- (i+1))) = spo2_nxt[
      1+(i+1)] )>>
by Associativity: (b.c).a = a.b.c
and theorem 100:
Theorem (100) [serial 2583] used for:
  Associativity: (b.c).a = a.b.c [serial 2578]
 


Theorem (102)                               [serial 2547] 
P [1100] <<not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1101] ->
Q [1102] <<SpO2^0 = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) and not (
MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
by Shift Quantification Range so Lower Bound is Zero
and theorem 101:
Theorem (101) [serial 2578] used for:
  Shift Quantification Range so Lower Bound is Zero [serial 2547]
 


Theorem (103)                               [serial 2513] 
P [1100] <<(all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
not (MotionArtifact^0 or not SensorConnected^0)>>
S [1101] ->
Q [1102] <<(all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
not (MotionArtifact^0 or not SensorConnected^0) and ((SpO2^0) = (MotionArtifact^0 or 
not SensorConnected^0??0:SpO2^0))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 102:
Theorem (102) [serial 2547] used for:
    normalization of [serial 2513]
 


Theorem (104)                               [serial 2503] 
P [1100] <<(all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
not (MotionArtifact^0 or not SensorConnected^0)>>
S [1101] spo2_nxt[1] := SpO2?
Q [1102] <<(all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
not (MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (MotionArtifact^0 or 
not SensorConnected^0??0:SpO2^0))>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 103:
Theorem (103) [serial 2513] used for:
  applied wp for assignment [serial 2503]
 


Theorem (105)                               [serial 2493] 
P [1100] <<SHFT() and not (MotionArtifact^0 or not SensorConnected^0)>>
S [1101] spo2_nxt[1] := SpO2?
Q [1102] <<SHFT() and not (MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (
MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>>
by Substitution of Assertion Labels
and theorem 104:
Theorem (104) [serial 2503] used for:
  substituted Assertions' predicates for  labels  [serial 2493]
 


Theorem (106)                               [serial 2599] 
P [1102] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 0..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1092] ->
Q [1105] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(all i:integer
  in 0..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (107)                               [serial 2585] 
P [1102] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 0..(num_samples-0) 
  are (MotionArtifact^(- (i+0)) or not SensorConnected^(- (i+0))??0:SpO2^(- (i+0))) = spo2_nxt[
      i+0+1] )>>
S [1092] ->
Q [1105] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(all i:integer
  in 0..((1+num_samples)-1) 
  are (MotionArtifact^(1-(i+1)) or not SensorConnected^(1-(i+1))??0:SpO2^(1-(i+1))) = spo2_nxt[(
      i+1)] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Subtaction of Added Value:  (a+b)-a is b
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 106:
Theorem (106) [serial 2599] used for:
    normalization of [serial 2585]
 


Theorem (108)                               [serial 2581] 
P [1102] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 0..(num_samples-0) 
  are (MotionArtifact^(- (i+0)) or not SensorConnected^(- (i+0))??0:SpO2^(- (i+0))) = spo2_nxt[
      1+(i+0)] )>>
S [1092] ->
Q [1105] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(all i:integer
  in 0..((1+num_samples)-1) 
  are (MotionArtifact^(1-(i+1)) or not SensorConnected^(1-(i+1))??0:SpO2^(1-(i+1))) = spo2_nxt[(
      i+1)] )>>
by Associativity: (b.c).a = a.b.c
and theorem 107:
Theorem (107) [serial 2585] used for:
  Associativity: (b.c).a = a.b.c [serial 2581]
 


Theorem (109)                               [serial 2574] 
P [1102] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 0..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1092] ->
Q [1105] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(all i:integer
  in 1..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] )>>
by Shift Quantification Range so Lower Bound is Zero
and theorem 108:
Theorem (108) [serial 2581] used for:
  Shift Quantification Range so Lower Bound is Zero [serial 2574]
 


Theorem (110)                               [serial 2549] 
P [1102] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1092] ->
Q [1105] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(all i:integer
  in 2..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] )>>
by Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j)
and theorem 109:
Theorem (109) [serial 2574] used for:
  Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j) [serial 2549]
 


Theorem (111)                               [serial 2504] 
P [1102] <<(all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
not (MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (MotionArtifact^0 or 
not SensorConnected^0??0:SpO2^0))>>
S [1092] ->
Q [1105] <<(spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0)) and 
(all i:integer
  in 2..num_samples+1 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 110:
Theorem (110) [serial 2549] used for:
    normalization of [serial 2504]
 


Theorem (112)                               [serial 2494] 
P [1102] <<SHFT() and not (MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (
MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>>
S [1092] ->
Q [1105] <<(spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0)) and 
(all i:integer
  in 2..num_samples+1 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) )>>
by Substitution of Assertion Labels
and theorem 111:
Theorem (111) [serial 2504] used for:
  substituted Assertions' predicates for  labels  [serial 2494]
 


Theorem (113)                               [serial 2480] 
P [1089] <<all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) >>
S [1092] if 
(MotionArtifact? or not SensorConnected?)~> 
  <<SHFT() and (MotionArtifact^0 or not SensorConnected^0)>>
  spo2_nxt[1] := 0
  <<SHFT() and (MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>> 
[]
(not (MotionArtifact? or not SensorConnected?))~> 
  <<SHFT() and not (MotionArtifact^0 or not SensorConnected^0)>>
  spo2_nxt[1] := SpO2?
  <<SHFT() and not (MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>> 
fi
Q [1105] <<(spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0)) and 
(all i:integer
  in 2..num_samples+1 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) )>>
by Alternative Rule:
 <<P>> -> <<B1 or B2 or ... or Bn>>,
 <<P and B1>> -> <<P1>>, <<P and B2>> -> <<P2>>, . . . , <<P and Bn>> -> <<Pn>>,
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>,
 <<Q1>> -> <<Q>>, <<Q2>> -> <<Q>>, . . . <<Qn>> -> <<Q>>
 -------------------------------------------------------------------------
 <<P>> if B1-><<P1>>S1<<Q1>> [] B2-><<P2>>S2<<Q2>> [] . . . [] Bn-><<Pn>>Sn<<Qn>> fi <<Q>> (bl.iffi)
and theorems 70 73 84 91 94 105 112:
Theorem (70) [serial 2488] used for:
    <<P>> -> <<B1 or B2 or ... or Bn>>  in if-[]-fi  for [serial 2480]
 
Theorem (73) [serial 2489] used for:
    <<P and B0>> -> <<P0>>  for [serial 2480]
 
Theorem (84) [serial 2490] used for:
    <<P0>> S0 <<Q0>>  for [serial 2480]
 
Theorem (91) [serial 2491] used for:
    <<Q0>> -> <<Q>>  for [serial 2480]
 
Theorem (94) [serial 2492] used for:
    <<P and B1>> -> <<P1>>  for [serial 2480]
 
Theorem (105) [serial 2493] used for:
    <<P1>> S1 <<Q1>>  for [serial 2480]
 
Theorem (112) [serial 2494] used for:
    <<Q1>> -> <<Q>>  for [serial 2480]
 


Theorem (114)                               [serial 2572] 
P [1110] <<all i:integer
  in 1..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] >>
S [1109] ->
Q [1110] <<all i:integer
  in 1..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] >>
by Identity (id):  P->P is tautology


Theorem (115)                               [serial 2517] 
P [1105] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(all i:integer
  in 2..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] )>>
S [1109] ->
Q [1110] <<all i:integer
  in 1..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] >>
by Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j)
and theorem 114:
Theorem (114) [serial 2572] used for:
  Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j) [serial 2517]
 


Theorem (116)                               [serial 2505] 
P [1105] <<(spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0)) and 
(all i:integer
  in 2..num_samples+1 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) )>>
S [1109] ->
Q [1110] <<all i:integer
  in 1..(num_samples+1) 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 115:
Theorem (115) [serial 2517] used for:
    normalization of [serial 2505]
 


Theorem (117)                               [serial 2481] 
P [1105] <<(spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0)) and 
(all i:integer
  in 2..num_samples+1 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) )>>
S [1109] num_samples := num_samples+1
Q [1110] <<all i:integer
  in 1..num_samples 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 116:
Theorem (116) [serial 2505] used for:
  applied wp for assignment [serial 2481]
 


Theorem (118)                               [serial 2521] 
P [1114] <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i]>>
S [1115] ->
Q [1116] <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i]>>
by Identity (id):  P->P is tautology


Theorem (119)                               [serial 2506] 
P [1114] <<spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i))>>
S [1115] ->
Q [1116] <<(spo2_nxt[i]) = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 118:
Theorem (118) [serial 2521] used for:
    normalization of [serial 2506]
 


Theorem (120)                               [serial 2495] 
P [1114] <<spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i))>>
S [1115] spo2[i] := spo2_nxt[i]
Q [1116] <<spo2[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i))>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 119:
Theorem (119) [serial 2506] used for:
  applied wp for assignment [serial 2495]
 


Theorem (121)                               [serial 2519] 
P [1110] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] >>
S [1112] ->
Q [1118] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] >>
by Identity (id):  P->P is tautology


Theorem (122)                               [serial 2496] 
P [1110] <<(all i:integer
  in 1..num_samples 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) )>>
S [1112] ->
Q [1118] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 121:
Theorem (121) [serial 2519] used for:
    normalization of [serial 2496]
 


Theorem (123)                               [serial 2482] 
P [1110] <<all i:integer
  in 1..num_samples 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) >>
S [1112] forall i in 1..num_samples
  {
  <<spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i))>>
  spo2[i] := spo2_nxt[i]
  <<spo2[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i))>>
  }  
Q [1118] <<all i:integer
  in 1..num_samples 
  are spo2[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) >>
by Universal Quantification Rule:
                      <<A>> T <<B>>
       <<P and (z in r) and (x=e) and FAT>> -> <<wp(forall,Q)>>
 --------------------------------------------------------------------
 <<P>> forall z:i in r declare variable x:t:=e; begin <<A>> T <<B>> end <<Q>>
   where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
     (in postcondition Q, replace all occurances of
     "all z:i in r are B" with "all z:i in r are A"
   and FAT are "fetch-add terms", if any (bl.ulq)
and theorems 120 122:
Theorem (120) [serial 2495] used for:
  <<A>> T <<B>> as subject for universal lattice quantification by [serial 2482]
 
Theorem (122) [serial 2496] used for:
    <<P and (x=e) and FAT>> -> <<wp(forall,Q)>>
 where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
   (in postcondition Q, replace all occurances of
    <<all z:i in r are B>> with <<all z:i in r are A>>)
  for [serial 2482]
 


Theorem (124)                               [serial 1008] 
P [1065] <<SpO2_INV() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1076] <<SpO2_INV() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
SpO2Trend!(spo2)
;
<<SpO2_INV() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
NumSamples!(num_samples)
;
<<SpO2_INV() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
forall i in 1..num_samples
  {
  <<spo2[i] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i))>>
  spo2_nxt[i+1] := spo2[i]
  <<spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i))>>
  }  
<<SHFT: :all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) >>
;
if 
(MotionArtifact? or not SensorConnected?)~> 
  <<SHFT() and (MotionArtifact^0 or not SensorConnected^0)>>
  spo2_nxt[1] := 0
  <<SHFT() and (MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>> 
[]
(not (MotionArtifact? or not SensorConnected?))~> 
  <<SHFT() and not (MotionArtifact^0 or not SensorConnected^0)>>
  spo2_nxt[1] := SpO2?
  <<SHFT() and not (MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>> 
fi
<<(spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0)) and (all i:integer
  in 2..num_samples+1 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) )>>
;
num_samples := num_samples+1
<<all i:integer
  in 1..num_samples 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) >>
;
forall i in 1..num_samples
  {
  <<spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i))>>
  spo2[i] := spo2_nxt[i]
  <<spo2[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i))>>
  }  
<<all i:integer
  in 1..num_samples 
  are spo2[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) >>
Q [1067] <<HOLD(num_samples)>>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 33 39 46 57 67 113 117 123:
Theorem (33) [serial 2475] used for:
  P -> P1 in sequential composition for [serial 1008]
 
Theorem (39) [serial 2476] used for:
  Q5 -> Q in sequential composition for [serial 1008]
 
Theorem (46) [serial 2477] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1008]
 
Theorem (57) [serial 2478] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1008]
 
Theorem (67) [serial 2479] used for:
  <<Q1 and P2>> S2 <<Q2 and P3>> in sequential composition for [serial 1008]
 
Theorem (113) [serial 2480] used for:
  <<Q2 and P3>> S3 <<Q3 and P4>> in sequential composition for [serial 1008]
 
Theorem (117) [serial 2481] used for:
  <<Q3 and P4>> S4 <<Q4 and P5>> in sequential composition for [serial 1008]
 
Theorem (123) [serial 2482] used for:
  <<Q4 and P5>> S5 <<Q5>> in sequential composition for [serial 1008]
 


Theorem (125)                               [serial 2650] 
P [1067] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1121] ->
Q [1065] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Identity (id):  P->P is tautology


Theorem (126)                               [serial 2652] 
P [1067] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1121] ->
Q [1065] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Identity (id):  P->P is tautology


Theorem (127)                               [serial 2648] 
P [1067] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1121] ->
Q [1065] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorems 125 126:
Theorem (125) [serial 2650] used for:
    normalization of [serial 2648]
 
Theorem (126) [serial 2652] used for:
    normalization of [serial 2648]
 


Theorem (128)                               [serial 2645] 
P [1067] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1121] (spo2',num_samples' := spo2,num_samples)  
Q [1065] <<(all s:integer
  in 1..num_samples 
  are spo2[s]^1 = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Simultaneous Assignment
and theorem 127:
Theorem (127) [serial 2648] used for:
  applied wp for simultaneous assignment [serial 2645]
 


Theorem (129)                               [serial 2643] 
P [1067] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1121] (spo2',num_samples' := spo2,num_samples)  
Q [1065] <<(all s:integer
  in 1..num_samples 
  are spo2[s]^1 = (MotionArtifact^(1-s) or not (SensorConnected^(- s))^1??0:SpO2^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Caret Compostition:  (x^a)^b is x^(a+b)
    Associativity: (b.c).a = a.b.c
and theorem 128:
Theorem (128) [serial 2645] used for:
    normalization of [serial 2643]
 


Theorem (130)                               [serial 2641] 
P [1067] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1121] (spo2',num_samples' := spo2,num_samples)  
Q [1065] <<(all s:integer
  in 1..num_samples 
  are spo2[s]^1 = (MotionArtifact^(1-s) or (not SensorConnected^(- s))^1??0:SpO2^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 129:
Theorem (129) [serial 2643] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2641]
 


Theorem (131)                               [serial 2639] 
P [1067] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1121] (spo2',num_samples' := spo2,num_samples)  
Q [1065] <<(all s:integer
  in 1..num_samples 
  are spo2[s]^1 = ((MotionArtifact^((- s)+1) or (not SensorConnected^(- s))^1)??0:SpO2^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 130:
Theorem (130) [serial 2641] used for:
    normalization of [serial 2639]
 


Theorem (132)                               [serial 2637] 
P [1067] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1121] (spo2',num_samples' := spo2,num_samples)  
Q [1065] <<(all s:integer
  in 1..num_samples 
  are spo2[s]^1 = ((MotionArtifact^(- s) or not SensorConnected^(- s))^1??0:SpO2^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 131:
Theorem (131) [serial 2639] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2637]
 


Theorem (133)                               [serial 2635] 
P [1067] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1121] (spo2',num_samples' := spo2,num_samples)  
Q [1065] <<(all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s))^1??(0)^1:SpO2^((- s)+1)) = spo2[s]^1 ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
    Associativity: (b.c).a = a.b.c
and theorem 132:
Theorem (132) [serial 2637] used for:
    normalization of [serial 2635]
 


Theorem (134)                               [serial 2633] 
P [1067] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1121] (spo2',num_samples' := spo2,num_samples)  
Q [1065] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s))^1 = spo2[s]^1 ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 133:
Theorem (133) [serial 2635] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2633]
 


Theorem (135)                               [serial 2631] 
P [1067] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1121] (spo2',num_samples' := spo2,num_samples)  
Q [1065] <<(all s:integer
  in 1..num_samples 
  are (((MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)))^1 = (spo2[s])^1) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 134:
Theorem (134) [serial 2633] used for:
    normalization of [serial 2631]
 


Theorem (136)                               [serial 2629] 
P [1067] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1121] (spo2',num_samples' := spo2,num_samples)  
Q [1065] <<(all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s])^1 ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 135:
Theorem (135) [serial 2631] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2629]
 


Theorem (137)                               [serial 2627] 
P [1067] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1121] (spo2',num_samples' := spo2,num_samples)  
Q [1065] <<(all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s])^1 ) and 
((num_samples)^1 < (#PulseOx_Properties::Num_Trending_Samples)^1)>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 136:
Theorem (136) [serial 2629] used for:
    normalization of [serial 2627]
 


Theorem (138)                               [serial 2625] 
P [1067] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1121] (spo2',num_samples' := spo2,num_samples)  
Q [1065] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )^1 and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 137:
Theorem (137) [serial 2627] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2625]
 


Theorem (139)                               [serial 2623] 
P [1067] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1121] (spo2',num_samples' := spo2,num_samples)  
Q [1065] <<((all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )^1 and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)^1)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 138:
Theorem (138) [serial 2625] used for:
    normalization of [serial 2623]
 


Theorem (140)                               [serial 2620] 
P [1067] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1121] (spo2',num_samples' := spo2,num_samples)  
Q [1065] <<((all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples)^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 139:
Theorem (139) [serial 2623] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2620]
 


Theorem (141)                               [serial 2618] 
P [1067] <<((all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) )) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1121] (spo2',num_samples' := spo2,num_samples)  
Q [1065] <<((all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples))^1>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 140:
Theorem (140) [serial 2620] used for:
    normalization of [serial 2618]
 


Theorem (142)                               [serial 1009] 
P [1067] <<(HOLD(num_samples)) and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1121] (spo2',num_samples' := spo2,num_samples)  
Q [1065] <<(SpO2_INV() and (num_samples < #PulseOx_Properties::Num_Trending_Samples))^1>>
by Substitution of Assertion Labels
and theorem 141:
Theorem (141) [serial 2618] used for:
  substituted Assertions' predicates for  labels  [serial 1009]
 


Theorem (143)                               [serial 2687] 
P [1067] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] )>>
S [1123] ->
Q [1069] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] )>>
by Identity (id):  P->P is tautology


Theorem (144)                               [serial 2689] 
P [1067] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] )>>
S [1123] ->
Q [1069] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] )>>
by Identity (id):  P->P is tautology


Theorem (145)                               [serial 2685] 
P [1067] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] )>>
S [1123] ->
Q [1069] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorems 143 144:
Theorem (143) [serial 2687] used for:
    normalization of [serial 2685]
 
Theorem (144) [serial 2689] used for:
    normalization of [serial 2685]
 


Theorem (146)                               [serial 2682] 
P [1067] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] )>>
S [1123] (spo2',num_samples' := spo2,num_samples)  
Q [1069] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are spo2[s]^1 = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) )>>
by Simultaneous Assignment
and theorem 145:
Theorem (145) [serial 2685] used for:
  applied wp for simultaneous assignment [serial 2682]
 


Theorem (147)                               [serial 2680] 
P [1067] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] )>>
S [1123] (spo2',num_samples' := spo2,num_samples)  
Q [1069] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are spo2[s]^1 = (MotionArtifact^(1-s) or not (SensorConnected^(- s))^1??0:SpO2^(1-s)) )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Caret Compostition:  (x^a)^b is x^(a+b)
    Associativity: (b.c).a = a.b.c
and theorem 146:
Theorem (146) [serial 2682] used for:
    normalization of [serial 2680]
 


Theorem (148)                               [serial 2678] 
P [1067] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] )>>
S [1123] (spo2',num_samples' := spo2,num_samples)  
Q [1069] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are spo2[s]^1 = (MotionArtifact^(1-s) or (not SensorConnected^(- s))^1??0:SpO2^(1-s)) )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 147:
Theorem (147) [serial 2680] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2678]
 


Theorem (149)                               [serial 2676] 
P [1067] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] )>>
S [1123] (spo2',num_samples' := spo2,num_samples)  
Q [1069] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are spo2[s]^1 = ((MotionArtifact^((- s)+1) or (not SensorConnected^(- s))^1)??0:SpO2^(1-s)) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 148:
Theorem (148) [serial 2678] used for:
    normalization of [serial 2676]
 


Theorem (150)                               [serial 2674] 
P [1067] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] )>>
S [1123] (spo2',num_samples' := spo2,num_samples)  
Q [1069] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are spo2[s]^1 = ((MotionArtifact^(- s) or not SensorConnected^(- s))^1??0:SpO2^(1-s)) )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 149:
Theorem (149) [serial 2676] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2674]
 


Theorem (151)                               [serial 2672] 
P [1067] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] )>>
S [1123] (spo2',num_samples' := spo2,num_samples)  
Q [1069] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s))^1??(0)^1:SpO2^((- s)+1)) = spo2[s]^1 )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
    Associativity: (b.c).a = a.b.c
and theorem 150:
Theorem (150) [serial 2674] used for:
    normalization of [serial 2672]
 


Theorem (152)                               [serial 2670] 
P [1067] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] )>>
S [1123] (spo2',num_samples' := spo2,num_samples)  
Q [1069] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s))^1 = spo2[s]^1 )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 151:
Theorem (151) [serial 2672] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2670]
 


Theorem (153)                               [serial 2668] 
P [1067] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] )>>
S [1123] (spo2',num_samples' := spo2,num_samples)  
Q [1069] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (((MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)))^1 = (spo2[s])^1) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 152:
Theorem (152) [serial 2670] used for:
    normalization of [serial 2668]
 


Theorem (154)                               [serial 2666] 
P [1067] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] )>>
S [1123] (spo2',num_samples' := spo2,num_samples)  
Q [1069] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s])^1 )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 153:
Theorem (153) [serial 2668] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2666]
 


Theorem (155)                               [serial 2664] 
P [1067] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] )>>
S [1123] (spo2',num_samples' := spo2,num_samples)  
Q [1069] <<((num_samples)^1 = (#PulseOx_Properties::Num_Trending_Samples)^1) and 
(all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s])^1 )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 154:
Theorem (154) [serial 2666] used for:
    normalization of [serial 2664]
 


Theorem (156)                               [serial 2662] 
P [1067] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] )>>
S [1123] (spo2',num_samples' := spo2,num_samples)  
Q [1069] <<(num_samples = #PulseOx_Properties::Num_Trending_Samples)^1 and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 155:
Theorem (155) [serial 2664] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2662]
 


Theorem (157)                               [serial 2660] 
P [1067] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] )>>
S [1123] (spo2',num_samples' := spo2,num_samples)  
Q [1069] <<((num_samples = #PulseOx_Properties::Num_Trending_Samples)^1 and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )^1)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 156:
Theorem (156) [serial 2662] used for:
    normalization of [serial 2660]
 


Theorem (158)                               [serial 2657] 
P [1067] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) = spo2[s] )>>
S [1123] (spo2',num_samples' := spo2,num_samples)  
Q [1069] <<(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ))^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 157:
Theorem (157) [serial 2660] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2657]
 


Theorem (159)                               [serial 2655] 
P [1067] <<((all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:SpO2^(1-s)) )) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1123] (spo2',num_samples' := spo2,num_samples)  
Q [1069] <<((all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples))^1>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 158:
Theorem (158) [serial 2657] used for:
    normalization of [serial 2655]
 


Theorem (160)                               [serial 1010] 
P [1067] <<(HOLD(num_samples)) and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1123] (spo2',num_samples' := spo2,num_samples)  
Q [1069] <<(SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples))^1>>
by Substitution of Assertion Labels
and theorem 159:
Theorem (159) [serial 2655] used for:
  substituted Assertions' predicates for  labels  [serial 1010]
 


Theorem (161)                               [serial 1011] 
P [1067] <<(HOLD(num_samples)) and (num_samples > #PulseOx_Properties::Num_Trending_Samples)>>
S [1124] ->
Q [1071] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (162)                               [serial 2732] 
P [1069] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
S [1069] ->
Q [1127] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
by Identity (id):  P->P is tautology


Theorem (163)                               [serial 2701] 
P [1069] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1069] ->
Q [1127] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 162:
Theorem (162) [serial 2732] used for:
    normalization of [serial 2701]
 


Theorem (164)                               [serial 2692] 
P [1069] <<SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1069] ->
Q [1127] <<SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
by Substitution of Assertion Labels
and theorem 163:
Theorem (163) [serial 2701] used for:
  substituted Assertions' predicates for  labels  [serial 2692]
 


Theorem (165)                               [serial 2840] 
P [1174] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #34#:integer
  in 1..num_samples 
  are spo2[#34#]^1 = (MotionArtifact^(1-#34#) or not SensorConnected^(1-#34#)??0:SpO2^(1-#34#)) )>>
S [1069] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #35#:integer
  in 1..num_samples 
  are spo2[#35#]^1 = (MotionArtifact^(1-#35#) or not SensorConnected^(1-#35#)??0:SpO2^(1-#35#)) )>>
by Identity (id):  P->P is tautology


Theorem (166)                               [serial 2838] 
P [1174] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #34#:integer
  in 1..num_samples 
  are spo2[#34#]^1 = (MotionArtifact^(1-#34#) or not SensorConnected^(1-#34#)??0:SpO2^(1-#34#)) )>>
S [1069] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #35#:integer
  in 1..num_samples 
  are spo2[#35#]^1 = (MotionArtifact^(1-#35#) or not (SensorConnected^(- #35#))^1??0:SpO2^(1-#35#)) )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Caret Compostition:  (x^a)^b is x^(a+b)
    Associativity: (b.c).a = a.b.c
and theorem 165:
Theorem (165) [serial 2840] used for:
    normalization of [serial 2838]
 


Theorem (167)                               [serial 2836] 
P [1174] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #34#:integer
  in 1..num_samples 
  are spo2[#34#]^1 = (MotionArtifact^(1-#34#) or not SensorConnected^(1-#34#)??0:SpO2^(1-#34#)) )>>
S [1069] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #35#:integer
  in 1..num_samples 
  are spo2[#35#]^1 = (MotionArtifact^(1-#35#) or (not SensorConnected^(- #35#))^1??0:SpO2^(1-#35#)) )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 166:
Theorem (166) [serial 2838] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2836]
 


Theorem (168)                               [serial 2834] 
P [1174] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #34#:integer
  in 1..num_samples 
  are spo2[#34#]^1 = (MotionArtifact^(1-#34#) or not SensorConnected^(1-#34#)??0:SpO2^(1-#34#)) )>>
S [1069] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #35#:integer
  in 1..num_samples 
  are spo2[#35#]^1 = ((MotionArtifact^((- #35#)+1) or (not SensorConnected^(- #35#))^1)??0:SpO2^(1-#35#)) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 167:
Theorem (167) [serial 2836] used for:
    normalization of [serial 2834]
 


Theorem (169)                               [serial 2832] 
P [1174] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #34#:integer
  in 1..num_samples 
  are spo2[#34#]^1 = (MotionArtifact^(1-#34#) or not SensorConnected^(1-#34#)??0:SpO2^(1-#34#)) )>>
S [1069] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #35#:integer
  in 1..num_samples 
  are spo2[#35#]^1 = ((MotionArtifact^(- #35#) or not SensorConnected^(- #35#))^1??0:SpO2^(1-#35#)) )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 168:
Theorem (168) [serial 2834] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2832]
 


Theorem (170)                               [serial 2830] 
P [1174] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #34#:integer
  in 1..num_samples 
  are spo2[#34#]^1 = (MotionArtifact^(1-#34#) or not SensorConnected^(1-#34#)??0:SpO2^(1-#34#)) )>>
S [1069] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #35#:integer
  in 1..num_samples 
  are ((MotionArtifact^(- #35#) or not SensorConnected^(- #35#))^1??(0)^1:SpO2^((- #35#)+1)) = spo2[#35#]^1 )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
    Associativity: (b.c).a = a.b.c
and theorem 169:
Theorem (169) [serial 2832] used for:
    normalization of [serial 2830]
 


Theorem (171)                               [serial 2828] 
P [1174] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #34#:integer
  in 1..num_samples 
  are spo2[#34#]^1 = (MotionArtifact^(1-#34#) or not SensorConnected^(1-#34#)??0:SpO2^(1-#34#)) )>>
S [1069] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #35#:integer
  in 1..num_samples 
  are (MotionArtifact^(- #35#) or not SensorConnected^(- #35#)??0:SpO2^(- #35#))^1 = spo2[#35#]^1 )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 170:
Theorem (170) [serial 2830] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2828]
 


Theorem (172)                               [serial 2826] 
P [1174] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #34#:integer
  in 1..num_samples 
  are spo2[#34#]^1 = (MotionArtifact^(1-#34#) or not SensorConnected^(1-#34#)??0:SpO2^(1-#34#)) )>>
S [1069] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #35#:integer
  in 1..num_samples 
  are (((MotionArtifact^(- #35#) or not SensorConnected^(- #35#)??0:SpO2^(- #35#)))^1 = (spo2[#35#])^1) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 171:
Theorem (171) [serial 2828] used for:
    normalization of [serial 2826]
 


Theorem (173)                               [serial 2824] 
P [1174] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #34#:integer
  in 1..num_samples 
  are spo2[#34#]^1 = (MotionArtifact^(1-#34#) or not SensorConnected^(1-#34#)??0:SpO2^(1-#34#)) )>>
S [1069] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #35#:integer
  in 1..num_samples 
  are ((MotionArtifact^(- #35#) or not SensorConnected^(- #35#)??0:SpO2^(- #35#)) = spo2[#35#])^1 )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 172:
Theorem (172) [serial 2826] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2824]
 


Theorem (174)                               [serial 2822] 
P [1174] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #34#:integer
  in 1..num_samples 
  are spo2[#34#]^1 = (MotionArtifact^(1-#34#) or not SensorConnected^(1-#34#)??0:SpO2^(1-#34#)) )>>
S [1069] ->
Q    <<((num_samples)^1 = (#PulseOx_Properties::Num_Trending_Samples)^1) and 
(all #35#:integer
  in 1..num_samples 
  are ((MotionArtifact^(- #35#) or not SensorConnected^(- #35#)??0:SpO2^(- #35#)) = spo2[#35#])^1 )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 173:
Theorem (173) [serial 2824] used for:
    normalization of [serial 2822]
 


Theorem (175)                               [serial 2820] 
P [1174] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #34#:integer
  in 1..num_samples 
  are spo2[#34#]^1 = (MotionArtifact^(1-#34#) or not SensorConnected^(1-#34#)??0:SpO2^(1-#34#)) )>>
S [1069] ->
Q    <<(num_samples = #PulseOx_Properties::Num_Trending_Samples)^1 and (all #35#:integer
  in 1..num_samples 
  are (MotionArtifact^(- #35#) or not SensorConnected^(- #35#)??0:SpO2^(- #35#)) = spo2[#35#] )^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 174:
Theorem (174) [serial 2822] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2820]
 


Theorem (176)                               [serial 2818] 
P [1174] <<#PulseOx_Properties::Num_Trending_Samples = (num_samples)^1 and (all #34#:integer
  in 1..num_samples 
  are (MotionArtifact^(1-#34#) or not SensorConnected^(1-#34#)??0:SpO2^(1-#34#)) = (spo2[#34#])^1 )>>
S [1069] ->
Q    <<((num_samples = #PulseOx_Properties::Num_Trending_Samples)^1 and (all #35#:integer
  in 1..num_samples 
  are (MotionArtifact^(- #35#) or not SensorConnected^(- #35#)??0:SpO2^(- #35#)) = spo2[#35#] )^1)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 175:
Theorem (175) [serial 2820] used for:
    normalization of [serial 2818]
 


Theorem (177)                               [serial 2817] 
P [1174] <<#PulseOx_Properties::Num_Trending_Samples = num_samples' and (all #34#:integer
  in 1..num_samples 
  are (MotionArtifact^(1-#34#) or not SensorConnected^(1-#34#)??0:SpO2^(1-#34#)) = spo2[#34#]' )>>
S [1069] ->
Q    <<(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #35#:integer
  in 1..num_samples 
  are (MotionArtifact^(- #35#) or not SensorConnected^(- #35#)??0:SpO2^(- #35#)) = spo2[#35#] ))^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 176:
Theorem (176) [serial 2818] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2817]
 


Theorem (178)                               [serial 2734] 
P [1174] <<#PulseOx_Properties::Num_Trending_Samples = num_samples' and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2[i]' )>>
S [1069] ->
Q    <<(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ))^1>>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 177:
Theorem (177) [serial 2817] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2734]
 


Theorem (179)                               [serial 2702] 
P [1174] <<(all i:integer
  in 1..num_samples 
  are spo2[i]' = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) ) and 
(num_samples' = #PulseOx_Properties::Num_Trending_Samples)>>
S [1069] ->
Q    <<((all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples))^1>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 178:
Theorem (178) [serial 2734] used for:
    normalization of [serial 2702]
 


Theorem (180)                               [serial 2693] 
P [1174] <<(all i:integer
  in 1..num_samples 
  are spo2[i]' = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) ) and 
(num_samples' = #PulseOx_Properties::Num_Trending_Samples)>>
S [1069] ->
Q    <<(SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples))^1>>
by Substitution of Assertion Labels
and theorem 179:
Theorem (179) [serial 2702] used for:
  substituted Assertions' predicates for  labels  [serial 2693]
 


Theorem (181)                               [serial 2846] 
P [1127] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
S [1128] ->
Q [1034] <<all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (182)                               [serial 2843] 
P [1127] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
S [1128] ->
Q [1034] <<all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 181:
Theorem (181) [serial 2846] used for:
    normalization of [serial 2843]
 


Theorem (183)                               [serial 2848] 
P [1128] <<(SpO2Trend iff spo2)^0 and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ))>>
S [1128] ->
Q [1130] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (184)                               [serial 2844] 
P [1128] <<(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )) and 
(SpO2Trend iff spo2)^0>>
S [1128] ->
Q [1130] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 183:
Theorem (183) [serial 2848] used for:
    normalization of [serial 2844]
 


Theorem (185)                               [serial 2736] 
P [1127] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
S [1128] SpO2Trend!(spo2)
Q [1130] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 182 184:
Theorem (182) [serial 2843] used for:
  applied port output of value <<pre>> -> <<M(SpO2Trend)[SpO2Trend|spo2]>> [serial 2736]
 
Theorem (184) [serial 2844] used for:
  applied port output <<pre and (SpO2Trend iff spo2)^0>> -> <<post>> [serial 2736]
 


Theorem (186)                               [serial 2703] 
P [1127] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1128] SpO2Trend!(spo2)
Q [1130] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 185:
Theorem (185) [serial 2736] used for:
    normalization of [serial 2703]
 


Theorem (187)                               [serial 2694] 
P [1127] <<SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1128] SpO2Trend!(spo2)
Q [1130] <<SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
by Substitution of Assertion Labels
and theorem 186:
Theorem (186) [serial 2703] used for:
  substituted Assertions' predicates for  labels  [serial 2694]
 


Theorem (188)                               [serial 2863] 
P [1131] <<NumSamples = num_samples and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ))>>
S [1131] ->
Q [1133] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (189)                               [serial 2861] 
P [1131] <<(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )) and 
(NumSamples = num_samples)^0>>
S [1131] ->
Q [1133] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
by Assume Present:  P = P@now = P^0 
and theorem 188:
Theorem (188) [serial 2863] used for:
  Assume Present:  P = P@now = P^0  [serial 2861]
 


Theorem (190)                               [serial 2864] 
P [1131] <<NumSamples = num_samples and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ))>>
S [1131] ->
Q [1131] <<NumSamples = num_samples>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (191)                               [serial 2862] 
P [1131] <<(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )) and 
(NumSamples = num_samples)^0>>
S [1131] ->
Q [1131] <<NumSamples = num_samples>>
by Assume Present:  P = P@now = P^0 
and theorem 190:
Theorem (190) [serial 2864] used for:
  Assume Present:  P = P@now = P^0  [serial 2862]
 


Theorem (192)                               [serial 2772] 
P [1130] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
S [1131] NumSamples!(num_samples)
Q [1133] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 189 191:
Theorem (189) [serial 2861] used for:
  applied port output <<pre and (NumSamples=num_samples)^0>> -> <<post>> [serial 2772]
 
Theorem (191) [serial 2862] used for:
  applied port output <<pre and (NumSamples=num_samples)^0>> -> <<(NumSamples=num_samples)^0>> [serial 2772]
 


Theorem (193)                               [serial 2742] 
P [1130] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
S [1131] NumSamples!(num_samples)
Q [1133] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and true and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
by Law of And-Simplification:  P and true is P
and theorem 192:
Theorem (192) [serial 2772] used for:
  Law of And-Simplification:  P and true is P [serial 2742]
 


Theorem (194)                               [serial 2705] 
P [1130] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1131] NumSamples!(num_samples)
Q [1133] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and true>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 193:
Theorem (193) [serial 2742] used for:
    normalization of [serial 2705]
 


Theorem (195)                               [serial 2700] 
P [1130] <<SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1131] NumSamples!(num_samples)
Q [1133] <<SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples) and 
true>>
by Substitution of Assertion Labels
and theorem 194:
Theorem (194) [serial 2705] used for:
  substituted Assertions' predicates for  labels  [serial 2700]
 


Theorem (196)                               [serial 2863] 
P [1131] <<NumSamples = num_samples and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ))>>
S [1131] ->
Q [1133] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (197)                               [serial 2861] 
P [1131] <<(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )) and 
(NumSamples = num_samples)^0>>
S [1131] ->
Q [1133] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
by Assume Present:  P = P@now = P^0 
and theorem 196:
Theorem (196) [serial 2863] used for:
  Assume Present:  P = P@now = P^0  [serial 2861]
 


Theorem (198)                               [serial 2864] 
P [1131] <<NumSamples = num_samples and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ))>>
S [1131] ->
Q [1131] <<NumSamples = num_samples>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (199)                               [serial 2862] 
P [1131] <<(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )) and 
(NumSamples = num_samples)^0>>
S [1131] ->
Q [1131] <<NumSamples = num_samples>>
by Assume Present:  P = P@now = P^0 
and theorem 198:
Theorem (198) [serial 2864] used for:
  Assume Present:  P = P@now = P^0  [serial 2862]
 


Theorem (200)                               [serial 2772] 
P [1130] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
S [1131] NumSamples!(num_samples)
Q [1133] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 197 199:
Theorem (197) [serial 2861] used for:
  applied port output <<pre and (NumSamples=num_samples)^0>> -> <<post>> [serial 2772]
 
Theorem (199) [serial 2862] used for:
  applied port output <<pre and (NumSamples=num_samples)^0>> -> <<(NumSamples=num_samples)^0>> [serial 2772]
 


Theorem (201)                               [serial 2742] 
P [1130] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
S [1131] NumSamples!(num_samples)
Q [1133] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and true and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] )>>
by Law of And-Simplification:  P and true is P
and theorem 200:
Theorem (200) [serial 2772] used for:
  Law of And-Simplification:  P and true is P [serial 2742]
 


Theorem (202)                               [serial 2705] 
P [1130] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1131] NumSamples!(num_samples)
Q [1133] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and true>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 201:
Theorem (201) [serial 2742] used for:
    normalization of [serial 2705]
 


Theorem (203)                               [serial 2700] 
P [1130] <<SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1131] NumSamples!(num_samples)
Q [1133] <<SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples) and 
true>>
by Substitution of Assertion Labels
and theorem 202:
Theorem (202) [serial 2705] used for:
  substituted Assertions' predicates for  labels  [serial 2700]
 


Theorem (204)                               [serial 2695] 
P [1130] <<SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1131] NumSamples!(num_samples)
Q [1133] <<SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples) and 
AXIOM_CR()>>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 203 203:
Theorem (203) [serial 2700] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (203) [serial 2700] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (205)                               [serial 2859] 
P [1137] <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2[i]>>
S [1138] ->
Q [1139] <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2[i]>>
by Identity (id):  P->P is tautology


Theorem (206)                               [serial 2857] 
P [1137] <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2[i]>>
S [1138] ->
Q [1139] <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = (spo2[i])>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 205:
Theorem (205) [serial 2859] used for:
    normalization of [serial 2857]
 


Theorem (207)                               [serial 2740] 
P [1137] <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2[i]>>
S [1138] spo2_nxt[1+i] := spo2[i]
Q [1139] <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
1+i]>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 206:
Theorem (206) [serial 2857] used for:
  applied wp for assignment [serial 2740]
 


Theorem (208)                               [serial 2715] 
P [1137] <<spo2[i] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i))>>
S [1138] spo2_nxt[i+1] := spo2[i]
Q [1139] <<spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 207:
Theorem (207) [serial 2740] used for:
    normalization of [serial 2715]
 


Theorem (209)                               [serial 2856] 
P [1133] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #36#:integer
  in 0..num_samples-2 
  are (MotionArtifact^(- (1+#36#)) or not SensorConnected^(- (1+#36#))??0:SpO2^(- (1+#36#))) = spo2[
      1+#36#] ) and (num_samples-2) < (num_samples-1)>>
S [1135] ->
Q [1141] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #37#:integer
  in 0..num_samples-2 
  are (MotionArtifact^(- (1+#37#)) or not SensorConnected^(- (1+#37#))??0:SpO2^(- (1+#37#))) = spo2[
      1+#37#] )>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (210)                               [serial 2854] 
P [1133] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #36#:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+#36#)) or not SensorConnected^(- (1+#36#))??0:SpO2^(- (1+#36#))) = spo2[
      1+#36#] ) and (num_samples-2) < (num_samples-1)>>
S [1135] ->
Q [1141] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #37#:integer
  in 0..num_samples-2 
  are (MotionArtifact^(- (1+#37#)) or not SensorConnected^(- (1+#37#))??0:SpO2^(- (1+#37#))) = spo2[
      1+#37#] )>>
by Contract Universal Quantification Range
and theorem 209:
Theorem (209) [serial 2856] used for:
  Contract Universal Quantification Range [serial 2854]
 


Theorem (211)                               [serial 2852] 
P [1133] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #36#:integer
  in 0..(num_samples-1) 
  are (MotionArtifact^(- (#36#+1)) or not SensorConnected^(- (#36#+1))??0:SpO2^(- (#36#+1))) = spo2[(
      #36#+1)] ) and (num_samples-2) < (num_samples-1)>>
S [1135] ->
Q [1141] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #37#:integer
  in 0..((num_samples-1)-1) 
  are (MotionArtifact^(- (#37#+1)) or not SensorConnected^(- (#37#+1))??0:SpO2^(- (#37#+1))) = spo2[(
      #37#+1)] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 210:
Theorem (210) [serial 2854] used for:
    normalization of [serial 2852]
 


Theorem (212)                               [serial 2851] 
P [1133] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #36#:integer
  in 1..num_samples 
  are (MotionArtifact^(- #36#) or not SensorConnected^(- #36#)??0:SpO2^(- #36#)) = spo2[#36#] ) and 
(num_samples-2) < (num_samples-1)>>
S [1135] ->
Q [1141] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #37#:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- #37#) or not SensorConnected^(- #37#)??0:SpO2^(- #37#)) = spo2[#37#] )>>
by Shift Quantification Range so Lower Bound is Zero
and theorem 211:
Theorem (211) [serial 2852] used for:
  Shift Quantification Range so Lower Bound is Zero [serial 2851]
 


Theorem (213)                               [serial 2738] 
P [1133] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = spo2[s] ) and 
(num_samples-2) < (num_samples-1)>>
S [1135] ->
Q [1141] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2[i] )>>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 212:
Theorem (212) [serial 2851] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2738]
 


Theorem (214)                               [serial 2716] 
P [1133] <<((all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and ((num_samples-2) < (num_samples-1)))>>
S [1135] ->
Q [1141] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2[i] )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 213:
Theorem (213) [serial 2738] used for:
    normalization of [serial 2716]
 


Theorem (215)                               [serial 2704] 
P [1133] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and ((num_samples-2) < (num_samples-1))>>
S [1135] forall i in 1..num_samples-1
  {
  <<spo2[i] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i))>>
  spo2_nxt[i+1] := spo2[i]
  <<spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i))>>
  }  
Q [1141] <<(all i:integer
  in 1..num_samples-1 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
by Universal Quantification Rule:
                      <<A>> T <<B>>
       <<P and (z in r) and (x=e) and FAT>> -> <<wp(forall,Q)>>
 --------------------------------------------------------------------
 <<P>> forall z:i in r declare variable x:t:=e; begin <<A>> T <<B>> end <<Q>>
   where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
     (in postcondition Q, replace all occurances of
     "all z:i in r are B" with "all z:i in r are A"
   and FAT are "fetch-add terms", if any (bl.ulq)
and theorems 208 214:
Theorem (208) [serial 2715] used for:
  <<A>> T <<B>> as subject for universal lattice quantification by [serial 2704]
 
Theorem (214) [serial 2716] used for:
    <<P and (x=e) and FAT>> -> <<wp(forall,Q)>>
 where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
   (in postcondition Q, replace all occurances of
    <<all z:i in r are B>> with <<all z:i in r are A>>)
  for [serial 2704]
 


Theorem (216)                               [serial 2696] 
P [1133] <<SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples) and 
AXIOM_CR()>>
S [1135] forall i in 1..num_samples-1
  {
  <<spo2[i] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i))>>
  spo2_nxt[i+1] := spo2[i]
  <<spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i))>>
  }  
Q [1141] <<(all i:integer
  in 1..num_samples-1 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
by Substitution of Assertion Labels
and theorem 215:
Theorem (215) [serial 2704] used for:
  substituted Assertions' predicates for  labels  [serial 2696]
 


Theorem (217)                               [serial 2771] 
P [1141] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1145] ->
Q [1145] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (218)                               [serial 2724] 
P [1141] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1145] ->
Q [1145] <<not (MotionArtifact^0 or not SensorConnected^0) or (MotionArtifact^0 or 
not SensorConnected^0)>>
by Law of Excluded Middle: P or not P is tautology
and theorem 217:
Theorem (217) [serial 2771] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2724]
 


Theorem (219)                               [serial 2706] 
P [1141] <<(all i:integer
  in 1..num_samples-1 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1145] ->
Q [1145] <<(MotionArtifact^0 or not SensorConnected^0) or (not (MotionArtifact^0 or 
not SensorConnected^0))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 218:
Theorem (218) [serial 2724] used for:
    normalization of [serial 2706]
 


Theorem (220)                               [serial 2773] 
P [1145] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1145] ->
Q [1147] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
by Identity (id):  P->P is tautology


Theorem (221)                               [serial 2744] 
P [1145] <<(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1145] ->
Q [1147] <<(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )) and (MotionArtifact^0 or not SensorConnected^0)>>
by Associativity: (b.c).a = a.b.c
and theorem 220:
Theorem (220) [serial 2773] used for:
  Associativity: (b.c).a = a.b.c [serial 2744]
 


Theorem (222)                               [serial 2717] 
P [1145] <<((all i:integer
  in 1..num_samples-1 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (MotionArtifact^0 or 
not SensorConnected^0)>>
S [1145] ->
Q [1147] <<((all i:integer
  in 1..num_samples-1 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (MotionArtifact^0 or 
not SensorConnected^0)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 221:
Theorem (221) [serial 2744] used for:
    normalization of [serial 2717]
 


Theorem (223)                               [serial 2707] 
P [1145] <<((all i:integer
  in 1..num_samples-1 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (MotionArtifact^0 or 
not SensorConnected^0)>>
S [1145] ->
Q [1147] <<SHFTR() and (MotionArtifact^0 or not SensorConnected^0)>>
by Substitution of Assertion Labels
and theorem 222:
Theorem (222) [serial 2717] used for:
  substituted Assertions' predicates for  labels  [serial 2707]
 


Theorem (224)                               [serial 2868] 
P [1147] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1148] ->
Q [1149] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
by Identity (id):  P->P is tautology


Theorem (225)                               [serial 2867] 
P [1147] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1148] ->
Q [1149] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and true and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
by Law of And-Simplification:  P and true is P
and theorem 224:
Theorem (224) [serial 2868] used for:
  Law of And-Simplification:  P and true is P [serial 2867]
 


Theorem (226)                               [serial 2866] 
P [1147] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1148] ->
Q [1149] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and 0 = 0 and 
(all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
by Equality Law (idistr):  a=a <-> true
and theorem 225:
Theorem (225) [serial 2867] used for:
  Equality Law (idistr):  a=a <-> true [serial 2866]
 


Theorem (227)                               [serial 2865] 
P [1147] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1148] ->
Q [1149] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = 0 and num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
by Conditional True Expression:  b and x=e  iff  b and x=(b??e:g) 
and theorem 226:
Theorem (226) [serial 2866] used for:
   Conditional True Expression:  b and x=e  iff  b and x=(b??e:g)  [serial 2865]
 


Theorem (228)                               [serial 2791] 
P [1147] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1148] spo2_nxt[1] := 0
Q [1149] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 227:
Theorem (227) [serial 2865] used for:
  applied wp for assignment [serial 2791]
 


Theorem (229)                               [serial 2774] 
P [1147] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1148] spo2_nxt[1] := 0
Q [1149] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(MotionArtifact^0 or not SensorConnected^0)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 228:
Theorem (228) [serial 2791] used for:
    normalization of [serial 2774]
 


Theorem (230)                               [serial 2746] 
P [1147] <<(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1148] spo2_nxt[1] := 0
Q [1149] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )) and (MotionArtifact^0 or not SensorConnected^0)>>
by Associativity: (b.c).a = a.b.c
and theorem 229:
Theorem (229) [serial 2774] used for:
  Associativity: (b.c).a = a.b.c [serial 2746]
 


Theorem (231)                               [serial 2718] 
P [1147] <<((all i:integer
  in 1..num_samples-1 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (MotionArtifact^0 or 
not SensorConnected^0)>>
S [1148] spo2_nxt[1] := 0
Q [1149] <<((all i:integer
  in 1..num_samples-1 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (MotionArtifact^0 or 
not SensorConnected^0) and (spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 230:
Theorem (230) [serial 2746] used for:
    normalization of [serial 2718]
 


Theorem (232)                               [serial 2708] 
P [1147] <<SHFTR() and (MotionArtifact^0 or not SensorConnected^0)>>
S [1148] spo2_nxt[1] := 0
Q [1149] <<SHFTR() and (MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (
MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>>
by Substitution of Assertion Labels
and theorem 231:
Theorem (231) [serial 2718] used for:
  substituted Assertions' predicates for  labels  [serial 2708]
 


Theorem (233)                               [serial 2869] 
P [1149] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1145] ->
Q [1158] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1]>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (234)                               [serial 2870] 
P [1149] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1145] ->
Q [1159] <<num_samples = #PulseOx_Properties::Num_Trending_Samples>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (235)                               [serial 2882] 
P [1149] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..-2+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:SpO2^(-1+- i)) = spo2_nxt[
      2+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1145] ->
Q [1160] <<all i:integer
  in 0..-2+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:SpO2^(-1+- i)) = spo2_nxt[
      2+i] >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (236)                               [serial 2880] 
P [1149] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..num_samples+ -2 
  are (MotionArtifact^((- 1+- i)) or not SensorConnected^((- 1+- i))??0:SpO2^((- 1+- i))) = spo2_nxt[
      2+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1145] ->
Q [1160] <<all i:integer
  in 0..num_samples+ -2 
  are (MotionArtifact^(1+- 2+- i) or not SensorConnected^(1+- 2+- i)??0:SpO2^(1+- 2+- i)) = spo2_nxt[
      2+i] >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 235:
Theorem (235) [serial 2882] used for:
    normalization of [serial 2880]
 


Theorem (237)                               [serial 2878] 
P [1149] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..num_samples-2 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      2+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1145] ->
Q [1160] <<all i:integer
  in 0..num_samples-2 
  are (MotionArtifact^(1-(2+i)) or not SensorConnected^(1-(2+i))??0:SpO2^(1-(2+i))) = spo2_nxt[
      2+i] >>
by Equivlence of negation and subtraction: (a-b) = (a + (-b))
and theorem 236:
Theorem (236) [serial 2880] used for:
   changing adding negation to subtraction  [serial 2878]
 


Theorem (238)                               [serial 2876] 
P [1149] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..num_samples-2 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      1+i+1] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1145] ->
Q [1160] <<all i:integer
  in 0..num_samples-2 
  are (MotionArtifact^(1-(2+i)) or not SensorConnected^(1-(2+i))??0:SpO2^(1-(2+i))) = spo2_nxt[
      2+i] >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 237:
Theorem (237) [serial 2878] used for:
    normalization of [serial 2876]
 


Theorem (239)                               [serial 2874] 
P [1149] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..num_samples-2 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:SpO2^(- (1+i))) = spo2_nxt[
      1+(1+i)] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1145] ->
Q [1160] <<all i:integer
  in 0..num_samples-2 
  are (MotionArtifact^(1-(2+i)) or not SensorConnected^(1-(2+i))??0:SpO2^(1-(2+i))) = spo2_nxt[
      2+i] >>
by Associativity: (b.c).a = a.b.c
and theorem 238:
Theorem (238) [serial 2876] used for:
  Associativity: (b.c).a = a.b.c [serial 2874]
 


Theorem (240)                               [serial 2872] 
P [1149] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..((num_samples-1)-1) 
  are (MotionArtifact^(- (i+1)) or not SensorConnected^(- (i+1))??0:SpO2^(- (i+1))) = spo2_nxt[
      1+(i+1)] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1145] ->
Q [1160] <<(all i:integer
  in 0..(num_samples-2) 
  are (MotionArtifact^(1-(i+2)) or not SensorConnected^(1-(i+2))??0:SpO2^(1-(i+2))) = spo2_nxt[(
      i+2)] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 239:
Theorem (239) [serial 2874] used for:
    normalization of [serial 2872]
 


Theorem (241)                               [serial 2871] 
P [1149] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1145] ->
Q [1160] <<(all i:integer
  in 2..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] )>>
by Shift Quantification Range so Lower Bound is Zero
and theorem 240:
Theorem (240) [serial 2872] used for:
  Shift Quantification Range so Lower Bound is Zero [serial 2871]
 


Theorem (242)                               [serial 2793] 
P [1149] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1145] ->
Q [1158] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 2..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] )>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 233 234 241:
Theorem (233) [serial 2869] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2793]
 
Theorem (234) [serial 2870] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2793]
 
Theorem (241) [serial 2871] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2793]
 


Theorem (243)                               [serial 2775] 
P [1149] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(MotionArtifact^0 or not SensorConnected^0)>>
S [1145] ->
Q [1158] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 2..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 242:
Theorem (242) [serial 2793] used for:
    normalization of [serial 2775]
 


Theorem (244)                               [serial 2748] 
P [1149] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1145] ->
Q [1158] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 2..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] )>>
by Associativity: (b.c).a = a.b.c
and theorem 243:
Theorem (243) [serial 2775] used for:
  Associativity: (b.c).a = a.b.c [serial 2748]
 


Theorem (245)                               [serial 2719] 
P [1149] <<((all i:integer
  in 1..num_samples-1 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (MotionArtifact^0 or 
not SensorConnected^0) and (spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>>
S [1145] ->
Q [1158] <<(spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0)) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and (all i:integer
  in 2..num_samples 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 244:
Theorem (244) [serial 2748] used for:
    normalization of [serial 2719]
 


Theorem (246)                               [serial 2709] 
P [1149] <<SHFTR() and (MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (
MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>>
S [1145] ->
Q [1158] <<(spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0)) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and (all i:integer
  in 2..num_samples 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) )>>
by Substitution of Assertion Labels
and theorem 245:
Theorem (245) [serial 2719] used for:
  substituted Assertions' predicates for  labels  [serial 2709]
 


Theorem (247)                               [serial 2795] 
P [1145] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1145] ->
Q [1153] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
by Identity (id):  P->P is tautology


Theorem (248)                               [serial 2776] 
P [1145] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and not (MotionArtifact^0 or not SensorConnected^0)>>
S [1145] ->
Q [1153] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and not (MotionArtifact^0 or not SensorConnected^0)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 247:
Theorem (247) [serial 2795] used for:
    normalization of [serial 2776]
 


Theorem (249)                               [serial 2750] 
P [1145] <<not (MotionArtifact^0 or not SensorConnected^0) and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ))>>
S [1145] ->
Q [1153] <<not (MotionArtifact^0 or not SensorConnected^0) and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ))>>
by Associativity: (b.c).a = a.b.c
and theorem 248:
Theorem (248) [serial 2776] used for:
  Associativity: (b.c).a = a.b.c [serial 2750]
 


Theorem (250)                               [serial 2720] 
P [1145] <<((all i:integer
  in 1..num_samples-1 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (not (MotionArtifact^0 or 
not SensorConnected^0))>>
S [1145] ->
Q [1153] <<((all i:integer
  in 1..num_samples-1 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and not (MotionArtifact^0 or 
not SensorConnected^0)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 249:
Theorem (249) [serial 2750] used for:
    normalization of [serial 2720]
 


Theorem (251)                               [serial 2710] 
P [1145] <<((all i:integer
  in 1..num_samples-1 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (not (MotionArtifact^0 or 
not SensorConnected^0))>>
S [1145] ->
Q [1153] <<SHFTR() and not (MotionArtifact^0 or not SensorConnected^0)>>
by Substitution of Assertion Labels
and theorem 250:
Theorem (250) [serial 2720] used for:
  substituted Assertions' predicates for  labels  [serial 2710]
 


Theorem (252)                               [serial 2890] 
P [1153] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1154] ->
Q [1155] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
by Identity (id):  P->P is tautology


Theorem (253)                               [serial 2889] 
P [1153] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1154] ->
Q [1155] <<true and num_samples = #PulseOx_Properties::Num_Trending_Samples and not (
MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
by Law of And-Simplification:  P and true is P
and theorem 252:
Theorem (252) [serial 2890] used for:
  Law of And-Simplification:  P and true is P [serial 2889]
 


Theorem (254)                               [serial 2888] 
P [1153] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1154] ->
Q [1155] <<SpO2^0 = SpO2^0 and num_samples = #PulseOx_Properties::Num_Trending_Samples and 
not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
by Equality Law (idistr):  a=a <-> true
and theorem 253:
Theorem (253) [serial 2889] used for:
  Equality Law (idistr):  a=a <-> true [serial 2888]
 


Theorem (255)                               [serial 2886] 
P [1153] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1154] ->
Q [1155] <<SpO2^0 = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) and num_samples = #PulseOx_Properties::Num_Trending_Samples and 
not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
by Conditional False Expression:  not b and x=g  iff  not b and x=(b??e:g) 
and theorem 254:
Theorem (254) [serial 2888] used for:
   Conditional False Expression:  not b and x=g  iff  not b and x=(b??e:g)  [serial 2886]
 


Theorem (256)                               [serial 2884] 
P [1153] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1154] ->
Q [1155] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = (SpO2^0) and num_samples = #PulseOx_Properties::Num_Trending_Samples and 
not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 255:
Theorem (255) [serial 2886] used for:
    normalization of [serial 2884]
 


Theorem (257)                               [serial 2797] 
P [1153] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1154] spo2_nxt[1] := SpO2?
Q [1155] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 256:
Theorem (256) [serial 2884] used for:
  applied wp for assignment [serial 2797]
 


Theorem (258)                               [serial 2777] 
P [1153] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and not (MotionArtifact^0 or not SensorConnected^0)>>
S [1154] spo2_nxt[1] := SpO2?
Q [1155] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
not (MotionArtifact^0 or not SensorConnected^0)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 257:
Theorem (257) [serial 2797] used for:
    normalization of [serial 2777]
 


Theorem (259)                               [serial 2752] 
P [1153] <<not (MotionArtifact^0 or not SensorConnected^0) and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ))>>
S [1154] spo2_nxt[1] := SpO2?
Q [1155] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
not (MotionArtifact^0 or not SensorConnected^0) and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ))>>
by Associativity: (b.c).a = a.b.c
and theorem 258:
Theorem (258) [serial 2777] used for:
  Associativity: (b.c).a = a.b.c [serial 2752]
 


Theorem (260)                               [serial 2721] 
P [1153] <<((all i:integer
  in 1..num_samples-1 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and not (MotionArtifact^0 or 
not SensorConnected^0)>>
S [1154] spo2_nxt[1] := SpO2?
Q [1155] <<((all i:integer
  in 1..num_samples-1 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and not (MotionArtifact^0 or 
not SensorConnected^0) and (spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 259:
Theorem (259) [serial 2752] used for:
    normalization of [serial 2721]
 


Theorem (261)                               [serial 2711] 
P [1153] <<SHFTR() and not (MotionArtifact^0 or not SensorConnected^0)>>
S [1154] spo2_nxt[1] := SpO2?
Q [1155] <<SHFTR() and not (MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (
MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>>
by Substitution of Assertion Labels
and theorem 260:
Theorem (260) [serial 2721] used for:
  substituted Assertions' predicates for  labels  [serial 2711]
 


Theorem (262)                               [serial 2891] 
P [1155] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1145] ->
Q [1158] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1]>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (263)                               [serial 2892] 
P [1155] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1145] ->
Q [1159] <<num_samples = #PulseOx_Properties::Num_Trending_Samples>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (264)                               [serial 2906] 
P [1155] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 0..-2+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:SpO2^(-1+- i)) = spo2_nxt[
      2+i] )>>
S [1145] ->
Q [1160] <<all i:integer
  in 0..-2+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:SpO2^(-1+- i)) = spo2_nxt[
      2+i] >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (265)                               [serial 2904] 
P [1155] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 0..-2+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:SpO2^(-1+- i)) = spo2_nxt[
      1+i+1] )>>
S [1145] ->
Q [1160] <<all i:integer
  in 0..-2+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:SpO2^(-1+- i)) = spo2_nxt[
      2+i] >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 264:
Theorem (264) [serial 2906] used for:
    normalization of [serial 2904]
 


Theorem (266)                               [serial 2902] 
P [1155] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 0..-2+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:SpO2^(-1+- i)) = spo2_nxt[
      1+(1+i)] )>>
S [1145] ->
Q [1160] <<all i:integer
  in 0..-2+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:SpO2^(-1+- i)) = spo2_nxt[
      2+i] >>
by Associativity: (b.c).a = a.b.c
and theorem 265:
Theorem (265) [serial 2904] used for:
  Associativity: (b.c).a = a.b.c [serial 2902]
 


Theorem (267)                               [serial 2900] 
P [1155] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 0..(num_samples+ -1+ -1) 
  are (MotionArtifact^((- i+- 1)) or not SensorConnected^((- i+- 1))??0:SpO2^((- i+- 1))) = spo2_nxt[
      1+(i+1)] )>>
S [1145] ->
Q [1160] <<all i:integer
  in 0..(num_samples+ -2) 
  are (MotionArtifact^(1+- i+- 2) or not SensorConnected^(1+- i+- 2)??0:SpO2^(1+- i+- 2)) = spo2_nxt[(
      i+2)] >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 266:
Theorem (266) [serial 2902] used for:
    normalization of [serial 2900]
 


Theorem (268)                               [serial 2899] 
P [1155] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 0..((num_samples-1)-1) 
  are (MotionArtifact^(- (i+1)) or not SensorConnected^(- (i+1))??0:SpO2^(- (i+1))) = spo2_nxt[
      1+(i+1)] )>>
S [1145] ->
Q [1160] <<all i:integer
  in 0..(num_samples-2) 
  are (MotionArtifact^(1-(i+2)) or not SensorConnected^(1-(i+2))??0:SpO2^(1-(i+2))) = spo2_nxt[(
      i+2)] >>
by Equivlence of negation and subtraction: (a-b) = (a + (-b))
and theorem 267:
Theorem (267) [serial 2900] used for:
   changing adding negation to subtraction  [serial 2899]
 


Theorem (269)                               [serial 2897] 
P [1155] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1145] ->
Q [1160] <<all i:integer
  in 2..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] >>
by Shift Quantification Range so Lower Bound is Zero
and theorem 268:
Theorem (268) [serial 2899] used for:
  Shift Quantification Range so Lower Bound is Zero [serial 2897]
 


Theorem (270)                               [serial 2893] 
P [1155] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1145] ->
Q [1160] <<(all i:integer
  in 2..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 269:
Theorem (269) [serial 2897] used for:
    normalization of [serial 2893]
 


Theorem (271)                               [serial 2799] 
P [1155] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] )>>
S [1145] ->
Q [1158] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 2..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] )>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 262 263 270:
Theorem (262) [serial 2891] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2799]
 
Theorem (263) [serial 2892] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2799]
 
Theorem (270) [serial 2893] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2799]
 


Theorem (272)                               [serial 2778] 
P [1155] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
not (MotionArtifact^0 or not SensorConnected^0)>>
S [1145] ->
Q [1158] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 2..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 271:
Theorem (271) [serial 2799] used for:
    normalization of [serial 2778]
 


Theorem (273)                               [serial 2754] 
P [1155] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
not (MotionArtifact^0 or not SensorConnected^0) and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) = spo2_nxt[
      1+i] ))>>
S [1145] ->
Q [1158] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 2..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] )>>
by Associativity: (b.c).a = a.b.c
and theorem 272:
Theorem (272) [serial 2778] used for:
  Associativity: (b.c).a = a.b.c [serial 2754]
 


Theorem (274)                               [serial 2722] 
P [1155] <<((all i:integer
  in 1..num_samples-1 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and not (MotionArtifact^0 or 
not SensorConnected^0) and (spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>>
S [1145] ->
Q [1158] <<(spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0)) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and (all i:integer
  in 2..num_samples 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 273:
Theorem (273) [serial 2754] used for:
    normalization of [serial 2722]
 


Theorem (275)                               [serial 2712] 
P [1155] <<SHFTR() and not (MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (
MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>>
S [1145] ->
Q [1158] <<(spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0)) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and (all i:integer
  in 2..num_samples 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) )>>
by Substitution of Assertion Labels
and theorem 274:
Theorem (274) [serial 2722] used for:
  substituted Assertions' predicates for  labels  [serial 2712]
 


Theorem (276)                               [serial 2697] 
P [1141] <<(all i:integer
  in 1..num_samples-1 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1145] if 
(MotionArtifact? or not SensorConnected?)~> 
  <<SHFTR() and (MotionArtifact^0 or not SensorConnected^0)>>
  spo2_nxt[1] := 0
  <<SHFTR() and (MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>> 
[]
(not (MotionArtifact? or not SensorConnected?))~> 
  <<SHFTR() and not (MotionArtifact^0 or not SensorConnected^0)>>
  spo2_nxt[1] := SpO2?
  <<SHFTR() and not (MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>> 
fi
Q [1158] <<(spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0)) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and (all i:integer
  in 2..num_samples 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) )>>
by Alternative Rule:
 <<P>> -> <<B1 or B2 or ... or Bn>>,
 <<P and B1>> -> <<P1>>, <<P and B2>> -> <<P2>>, . . . , <<P and Bn>> -> <<Pn>>,
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>,
 <<Q1>> -> <<Q>>, <<Q2>> -> <<Q>>, . . . <<Qn>> -> <<Q>>
 -------------------------------------------------------------------------
 <<P>> if B1-><<P1>>S1<<Q1>> [] B2-><<P2>>S2<<Q2>> [] . . . [] Bn-><<Pn>>Sn<<Qn>> fi <<Q>> (bl.iffi)
and theorems 219 223 232 246 251 261 275:
Theorem (219) [serial 2706] used for:
    <<P>> -> <<B1 or B2 or ... or Bn>>  in if-[]-fi  for [serial 2697]
 
Theorem (223) [serial 2707] used for:
    <<P and B0>> -> <<P0>>  for [serial 2697]
 
Theorem (232) [serial 2708] used for:
    <<P0>> S0 <<Q0>>  for [serial 2697]
 
Theorem (246) [serial 2709] used for:
    <<Q0>> -> <<Q>>  for [serial 2697]
 
Theorem (251) [serial 2710] used for:
    <<P and B1>> -> <<P1>>  for [serial 2697]
 
Theorem (261) [serial 2711] used for:
    <<P1>> S1 <<Q1>>  for [serial 2697]
 
Theorem (275) [serial 2712] used for:
    <<Q1>> -> <<Q>>  for [serial 2697]
 


Theorem (277)                               [serial 2808] 
P [1165] <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i]>>
S [1166] ->
Q [1167] <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i]>>
by Identity (id):  P->P is tautology


Theorem (278)                               [serial 2806] 
P [1165] <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i]>>
S [1166] ->
Q [1167] <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = (spo2_nxt[i])>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 277:
Theorem (277) [serial 2808] used for:
    normalization of [serial 2806]
 


Theorem (279)                               [serial 2728] 
P [1165] <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i]>>
S [1166] spo2[i]' := spo2_nxt[i]
Q [1167] <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2[i]'>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 278:
Theorem (278) [serial 2806] used for:
  applied wp for assignment [serial 2728]
 


Theorem (280)                               [serial 2713] 
P [1165] <<spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i))>>
S [1166] spo2[i]' := spo2_nxt[i]
Q [1167] <<spo2[i]' = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 279:
Theorem (279) [serial 2728] used for:
    normalization of [serial 2713]
 


Theorem (281)                               [serial 2805] 
P [1169] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] )>>
S [1163] ->
Q [1169] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] )>>
by Identity (id):  P->P is tautology


Theorem (282)                               [serial 2726] 
P [1158] <<(MotionArtifact^0 or not SensorConnected^0??0:SpO2^0) = spo2_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 2..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] )>>
S [1163] ->
Q [1169] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] )>>
by Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j)
and theorem 281:
Theorem (281) [serial 2805] used for:
  Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j) [serial 2726]
 


Theorem (283)                               [serial 2714] 
P [1158] <<((spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0)) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and (all i:integer
  in 2..num_samples 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) ))>>
S [1163] ->
Q [1169] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2_nxt[i] )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 282:
Theorem (282) [serial 2726] used for:
    normalization of [serial 2714]
 


Theorem (284)                               [serial 2698] 
P [1158] <<(spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0)) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and (all i:integer
  in 2..num_samples 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) )>>
S [1163] forall i in 1..num_samples
  {
  <<spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i))>>
  spo2[i]' := spo2_nxt[i]
  <<spo2[i]' = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i))>>
  }  
Q [1169] <<(all i:integer
  in 1..num_samples 
  are spo2[i]' = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
by Universal Quantification Rule:
                      <<A>> T <<B>>
       <<P and (z in r) and (x=e) and FAT>> -> <<wp(forall,Q)>>
 --------------------------------------------------------------------
 <<P>> forall z:i in r declare variable x:t:=e; begin <<A>> T <<B>> end <<Q>>
   where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
     (in postcondition Q, replace all occurances of
     "all z:i in r are B" with "all z:i in r are A"
   and FAT are "fetch-add terms", if any (bl.ulq)
and theorems 280 283:
Theorem (280) [serial 2713] used for:
  <<A>> T <<B>> as subject for universal lattice quantification by [serial 2698]
 
Theorem (283) [serial 2714] used for:
    <<P and (x=e) and FAT>> -> <<wp(forall,Q)>>
 where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
   (in postcondition Q, replace all occurances of
    <<all z:i in r are B>> with <<all z:i in r are A>>)
  for [serial 2698]
 


Theorem (285)                               [serial 2816] 
P [1169] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #32#:integer
  in 1..num_samples 
  are spo2[#32#]^1 = (MotionArtifact^(1-#32#) or not SensorConnected^(1-#32#)??0:SpO2^(1-#32#)) )>>
S [1173] ->
Q [1174] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #33#:integer
  in 1..num_samples 
  are spo2[#33#]^1 = (MotionArtifact^(1-#33#) or not SensorConnected^(1-#33#)??0:SpO2^(1-#33#)) )>>
by Identity (id):  P->P is tautology


Theorem (286)                               [serial 2813] 
P [1169] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are spo2[i]^1 = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) )>>
S [1173] ->
Q [1174] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are spo2[i]^1 = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) )>>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 285:
Theorem (285) [serial 2816] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2813]
 


Theorem (287)                               [serial 2811] 
P [1169] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = (spo2[i])^1 )>>
S [1173] ->
Q [1174] <<#PulseOx_Properties::Num_Trending_Samples = num_samples and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = (spo2[i])^1 )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 286:
Theorem (286) [serial 2813] used for:
    normalization of [serial 2811]
 


Theorem (288)                               [serial 2810] 
P [1169] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2[i]' )>>
S [1173] ->
Q [1174] <<#PulseOx_Properties::Num_Trending_Samples = num_samples and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2[i]' )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 287:
Theorem (287) [serial 2811] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2810]
 


Theorem (289)                               [serial 2730] 
P [1169] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2[i]' )>>
S [1173] num_samples' := num_samples
Q [1174] <<#PulseOx_Properties::Num_Trending_Samples = num_samples' and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) = spo2[i]' )>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 288:
Theorem (288) [serial 2810] used for:
  applied wp for assignment [serial 2730]
 


Theorem (290)                               [serial 2699] 
P [1169] <<(all i:integer
  in 1..num_samples 
  are spo2[i]' = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1173] num_samples' := num_samples
Q [1174] <<(all i:integer
  in 1..num_samples 
  are spo2[i]' = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) ) and 
(num_samples' = #PulseOx_Properties::Num_Trending_Samples)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 289:
Theorem (289) [serial 2730] used for:
    normalization of [serial 2699]
 


Theorem (291)                               [serial 1012] 
P [1069] <<SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1127] <<SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
SpO2Trend!(spo2)
;
<<SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
NumSamples!(num_samples)
;
<<SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples) and AXIOM_CR()>>
forall i in 1..num_samples-1
  {
  <<spo2[i] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i))>>
  spo2_nxt[i+1] := spo2[i]
  <<spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i))>>
  }  
<<SHFTR: :(all i:integer
  in 1..num_samples-1 
  are spo2_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:SpO2^(- i)) ) and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
;
if 
(MotionArtifact? or not SensorConnected?)~> 
  <<SHFTR() and (MotionArtifact^0 or not SensorConnected^0)>>
  spo2_nxt[1] := 0
  <<SHFTR() and (MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>> 
[]
(not (MotionArtifact? or not SensorConnected?))~> 
  <<SHFTR() and not (MotionArtifact^0 or not SensorConnected^0)>>
  spo2_nxt[1] := SpO2?
  <<SHFTR() and not (MotionArtifact^0 or not SensorConnected^0) and (spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0))>> 
fi
<<(spo2_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:SpO2^0)) and (num_samples = #PulseOx_Properties::Num_Trending_Samples) and (all i:integer
  in 2..num_samples 
  are spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) )>>
;
forall i in 1..num_samples
  {
  <<spo2_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i))>>
  spo2[i]' := spo2_nxt[i]
  <<spo2[i]' = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i))>>
  }  
<<(all i:integer
  in 1..num_samples 
  are spo2[i]' = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) ) and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
;
num_samples' := num_samples
<<(all i:integer
  in 1..num_samples 
  are spo2[i]' = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:SpO2^(1-i)) ) and (num_samples' = #PulseOx_Properties::Num_Trending_Samples)>>
Q [1069] <<(SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples))^1>>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 164 180 187 204 216 276 284 290:
Theorem (164) [serial 2692] used for:
  P -> P1 in sequential composition for [serial 1012]
 
Theorem (180) [serial 2693] used for:
  Q5 -> Q in sequential composition for [serial 1012]
 
Theorem (187) [serial 2694] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1012]
 
Theorem (204) [serial 2695] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1012]
 
Theorem (216) [serial 2696] used for:
  <<Q1 and P2>> S2 <<Q2 and P3>> in sequential composition for [serial 1012]
 
Theorem (276) [serial 2697] used for:
  <<Q2 and P3>> S3 <<Q3 and P4>> in sequential composition for [serial 1012]
 
Theorem (284) [serial 2698] used for:
  <<Q3 and P4>> S4 <<Q4 and P5>> in sequential composition for [serial 1012]
 
Theorem (290) [serial 2699] used for:
  <<Q4 and P5>> S5 <<Q5>> in sequential composition for [serial 1012]
 


Theorem (292)                               [serial 1013] 
P [1178] <<(SpO2_INV() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)) and 
stop@now and not (exists u:time
  in tops,,now 
  that true ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [1178] ->
Q [1070] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (293)                               [serial 1014] 
P [1178] <<(SpO2_INV() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)) and 
stop@now and not (exists u:time
  in tops,,now 
  that true ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [1178] ->
Q [1070] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (294)                               [serial 1002] 
P [1048] << >>
S [1052] ->
Q [1048] <<SpO2TrendThread.imp proof obligations>>
by Initial Thread Obligations
and theorems 2 4 5 8 30 124 142 160 161 291 292 293:
Theorem (2) [serial 1003] used for:
  <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
 
Theorem (4) [serial 1004] used for:
  <<M(fill)>> -> <<I>> from invariant I when complete state fill has Assertion <<M(fill)>> in its definition.
 
Theorem (5) [serial 1005] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (8) [serial 1006] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check, <<M(check)>> -> <<e1 or e2 or . . . en>>
 
Theorem (30) [serial 1007] used for:
   <<M(start)>> -> <<M(fill)>> for sptt0:start-[ ]->fill{};
 
Theorem (124) [serial 1008] used for:
   <<M(fill) and x>> A <<M(check)>> for sptt1:fill-[x]->check{A};
 
Theorem (142) [serial 1009] used for:
   <<M(check) and x>> A <<M(fill)>> for sptt2a:check-[x]->fill{A};
 
Theorem (160) [serial 1010] used for:
   <<M(check) and x>> A <<M(run)>> for sptt2b:check-[x]->run{A};
 
Theorem (161) [serial 1011] used for:
   <<M(check) and x>> -> <<M(fail)>> for sptt2c:check-[x]->fail{};
 
Theorem (291) [serial 1012] used for:
   <<M(run) and x>> A <<M(run)>> for sptt3:run-[x]->run{A};
 
Theorem (292) [serial 1013] used for:
   <<M(fill) and x>> -> <<M(halt)>> for sptt4:fill-[x]->halt{};
 
Theorem (293) [serial 1014] used for:
   <<M(run) and x>> -> <<M(halt)>> for sptt4:run-[x]->halt{};
 


Theorem (295)                               [serial 1858] 
P [1222] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1205] ->
Q [1205] <<all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (296)                               [serial 1016] 
P [1222] <<INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1205] ->
Q [1205] <<all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) >>
by Substitution of Assertion Labels
and theorem 295:
Theorem (295) [serial 1858] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1016]
 


Theorem (297)                               [serial 1859] 
P [1218] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1205] ->
Q [1205] <<all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (298)                               [serial 1017] 
P [1218] <<INV_HR() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1205] ->
Q [1205] <<all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) >>
by Substitution of Assertion Labels
and theorem 297:
Theorem (297) [serial 1859] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1017]
 


Theorem (299)                               [serial 1018] 
P [1214] <<(num_samples < #PulseOx_Properties::Num_Trending_Samples) and (num_samples = 0) and 
(all s:integer
  in num_samples+1..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) )>>
S [1214] ->
Q [1214] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (300)                               [serial 1863] 
P [1220] <<HOLD_HR(num_samples)>>
S [1220] ->
Q [1220] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (301)                               [serial 1861] 
P [1220] <<HOLD_HR(num_samples)>>
S [1220] ->
Q [1220] <<num_samples = #PulseOx_Properties::Num_Trending_Samples or num_samples < #PulseOx_Properties::Num_Trending_Samples or 
#PulseOx_Properties::Num_Trending_Samples < num_samples>>
by Less than, greater than, or equal:  |-a<b or b<a or a=b
and theorem 300:
Theorem (300) [serial 1863] used for:
  Less than, greater than, or equal:  |-a<b or b<a or a=b [serial 1861]
 


Theorem (302)                               [serial 1019] 
P [1220] <<HOLD_HR(num_samples)>>
S [1220] ->
Q [1220] <<(num_samples < #PulseOx_Properties::Num_Trending_Samples) or (num_samples = #PulseOx_Properties::Num_Trending_Samples) or 
(num_samples > #PulseOx_Properties::Num_Trending_Samples)>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 301:
Theorem (301) [serial 1861] used for:
    normalization of [serial 1019]
 


Theorem (303)                               [serial 1904] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] ->
Q [1205] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (304)                               [serial 1903] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] ->
Q [1205] <<all s:integer
  in false 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] >>
by Empty Range Law All: all a:t in false are V is tautology
and theorem 303:
Theorem (303) [serial 1904] used for:
  Empty Range Law All: all a:t in false are V is tautology [serial 1903]
 


Theorem (305)                               [serial 1902] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] ->
Q [1205] <<all s:integer
  in 1..0 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] >>
by Empty Range
and theorem 304:
Theorem (304) [serial 1903] used for:
  Empty Range [serial 1902]
 


Theorem (306)                               [serial 1898] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] ->
Q [1205] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) )>>
by Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
and theorem 305:
Theorem (305) [serial 1902] used for:
  Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
 replacing "num_samples"
 with its ="
 (0)" [serial 1898]
 


Theorem (307)                               [serial 1899] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] ->
Q [1218] <<num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (308)                               [serial 1909] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] ->
Q [1205] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (309)                               [serial 1907] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] ->
Q [1205] <<(true)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 308:
Theorem (308) [serial 1909] used for:
    normalization of [serial 1907]
 


Theorem (310)                               [serial 1906] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] ->
Q [1205] <<(all s:integer
  in false 
  are heart_rate[s] = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) )>>
by Empty Range Law All: all a:t in false are V is tautology
and theorem 309:
Theorem (309) [serial 1907] used for:
  Empty Range Law All: all a:t in false are V is tautology [serial 1906]
 


Theorem (311)                               [serial 1905] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] ->
Q [1205] <<(all s:integer
  in 1..0 
  are heart_rate[s] = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) )>>
by Empty Range
and theorem 310:
Theorem (310) [serial 1906] used for:
  Empty Range [serial 1905]
 


Theorem (312)                               [serial 1900] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] ->
Q [1205] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) )>>
by Guided Substitution of Equals
and theorem 311:
Theorem (311) [serial 1905] used for:
  Guided Substitution of Equals
 replacing "num_samples" with its = "0" in its postcondition [serial 1900]
 


Theorem (313)                               [serial 1901] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] ->
Q [1218] <<num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (314)                               [serial 1897] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] ->
Q [1218] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 306 307 312 313:
Theorem (306) [serial 1898] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1897]
 
Theorem (307) [serial 1899] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1897]
 
Theorem (312) [serial 1900] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1897]
 
Theorem (313) [serial 1901] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1897]
 


Theorem (315)                               [serial 1894] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Simultaneous Assignment
and theorem 314:
Theorem (314) [serial 1897] used for:
  applied wp for simultaneous assignment [serial 1894]
 


Theorem (316)                               [serial 1892] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = (MotionArtifact^(1-s) or not (SensorConnected^(- s))^1??0:HeartRate^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Caret Compostition:  (x^a)^b is x^(a+b)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 315:
Theorem (315) [serial 1894] used for:
    normalization of [serial 1892]
 


Theorem (317)                               [serial 1890] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = (MotionArtifact^(1-s) or (not SensorConnected^(- s))^1??0:HeartRate^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 316:
Theorem (316) [serial 1892] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1890]
 


Theorem (318)                               [serial 1888] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = ((MotionArtifact^((- s)+1) or (not SensorConnected^(- s))^1)??0:HeartRate^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 317:
Theorem (317) [serial 1890] used for:
    normalization of [serial 1888]
 


Theorem (319)                               [serial 1886] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = ((MotionArtifact^(- s) or not SensorConnected^(- s))^1??0:HeartRate^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 318:
Theorem (318) [serial 1888] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1886]
 


Theorem (320)                               [serial 1884] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s))^1??(0)^1:HeartRate^((- s)+1)) = heart_rate[s]^1 ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
    Associativity: (b.c).a = a.b.c
and theorem 319:
Theorem (319) [serial 1886] used for:
    normalization of [serial 1884]
 


Theorem (321)                               [serial 1882] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s))^1 = heart_rate[s]^1 ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 320:
Theorem (320) [serial 1884] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1882]
 


Theorem (322)                               [serial 1880] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are (((MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)))^1 = (heart_rate[s])^1) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 321:
Theorem (321) [serial 1882] used for:
    normalization of [serial 1880]
 


Theorem (323)                               [serial 1878] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s])^1 ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 322:
Theorem (322) [serial 1880] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1878]
 


Theorem (324)                               [serial 1876] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s])^1 ) and 
((num_samples)^1 < (#PulseOx_Properties::Num_Trending_Samples)^1)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 323:
Theorem (323) [serial 1878] used for:
    normalization of [serial 1876]
 


Theorem (325)                               [serial 1874] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )^1 and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 324:
Theorem (324) [serial 1876] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1874]
 


Theorem (326)                               [serial 1872] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<((all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )^1 and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)^1)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 325:
Theorem (325) [serial 1874] used for:
    normalization of [serial 1872]
 


Theorem (327)                               [serial 1869] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<((all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples)^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 326:
Theorem (326) [serial 1872] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1869]
 


Theorem (328)                               [serial 1867] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<((all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples)^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 327:
Theorem (327) [serial 1869] used for:
    normalization of [serial 1867]
 


Theorem (329)                               [serial 1865] 
P [1214] <<num_samples = 0 and (all s:integer
  in 1+num_samples..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) ) and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1226] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(INV_HR() and num_samples < #PulseOx_Properties::Num_Trending_Samples)^1>>
by Substitution of Assertion Labels
and theorem 328:
Theorem (328) [serial 1867] used for:
  substituted Assertions' predicates for  labels  [serial 1865]
 


Theorem (330)                               [serial 1020] 
P [1214] <<(num_samples < #PulseOx_Properties::Num_Trending_Samples) and (num_samples = 0) and 
(all s:integer
  in num_samples+1..#PulseOx_Properties::Num_Trending_Samples 
  are not SensorConnected^(- s) )>>
S [1226] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(INV_HR() and (num_samples < #PulseOx_Properties::Num_Trending_Samples))^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 329:
Theorem (329) [serial 1865] used for:
    normalization of [serial 1020]
 


Theorem (331)                               [serial 1965] 
P [1218] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1218] ->
Q [1229] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Identity (id):  P->P is tautology


Theorem (332)                               [serial 1926] 
P [1218] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1218] ->
Q [1229] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 331:
Theorem (331) [serial 1965] used for:
    normalization of [serial 1926]
 


Theorem (333)                               [serial 1918] 
P [1218] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1218] ->
Q [1229] <<INV_HR() and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Substitution of Assertion Labels
and theorem 332:
Theorem (332) [serial 1926] used for:
  substituted Assertions' predicates for  labels  [serial 1918]
 


Theorem (334)                               [serial 1947] 
P [1270] <<all #12#:integer
  in 1..num_samples 
  are (MotionArtifact^(1-#12#) or not SensorConnected^(1-#12#)??0:HeartRate^(1-#12#)) = heart_rate[#12#] >>
S [1220] ->
Q [1202] <<all #13#:integer
  in 1..num_samples 
  are (MotionArtifact^(1-#13#) or not SensorConnected^(1-#13#)??0:HeartRate^(1-#13#)) = heart_rate[#13#] >>
by Identity (id):  P->P is tautology


Theorem (335)                               [serial 1919] 
P [1270] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = heart_rate[i] >>
S [1220] ->
Q [1202] <<all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 334:
Theorem (334) [serial 1947] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 1919]
 


Theorem (336)                               [serial 1967] 
P [1229] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1230] ->
Q [1188] <<all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (337)                               [serial 1969] 
P [1230] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples and (HeartRateTrend iff heart_rate)^0>>
S [1230] ->
Q [1232] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (338)                               [serial 1968] 
P [1230] <<((all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples) and (HeartRateTrend iff heart_rate)^0>>
S [1230] ->
Q [1232] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Associativity: (b.c).a = a.b.c
and theorem 337:
Theorem (337) [serial 1969] used for:
  Associativity: (b.c).a = a.b.c [serial 1968]
 


Theorem (339)                               [serial 1927] 
P [1229] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1230] HeartRateTrend!(heart_rate)
Q [1232] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 336 338:
Theorem (336) [serial 1967] used for:
  applied port output of value <<pre>> -> <<M(HeartRateTrend)[HeartRateTrend|heart_rate]>> [serial 1927]
 
Theorem (338) [serial 1968] used for:
  applied port output <<pre and (HeartRateTrend iff heart_rate)^0>> -> <<post>> [serial 1927]
 


Theorem (340)                               [serial 1920] 
P [1229] <<INV_HR() and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1230] HeartRateTrend!(heart_rate)
Q [1232] <<INV_HR() and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Substitution of Assertion Labels
and theorem 339:
Theorem (339) [serial 1927] used for:
  substituted Assertions' predicates for  labels  [serial 1920]
 


Theorem (341)                               [serial 1973] 
P [1232] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1233] ->
Q [1192] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (342)                               [serial 1970] 
P [1232] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1233] ->
Q [1192] <<num_samples = num_samples>>
by Equality Law (idistr):  a=a <-> true
and theorem 341:
Theorem (341) [serial 1973] used for:
  Equality Law (idistr):  a=a <-> true [serial 1970]
 


Theorem (343)                               [serial 1974] 
P [1233] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples and (NumSamples iff num_samples)>>
S [1233] ->
Q [1235] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (344)                               [serial 1972] 
P [1233] <<((all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples) and (NumSamples iff num_samples)>>
S [1233] ->
Q [1235] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Associativity: (b.c).a = a.b.c
and theorem 343:
Theorem (343) [serial 1974] used for:
  Associativity: (b.c).a = a.b.c [serial 1972]
 


Theorem (345)                               [serial 1971] 
P [1233] <<((all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples) and (NumSamples iff num_samples)^0>>
S [1233] ->
Q [1235] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Assume Present:  P = P@now = P^0 
and theorem 344:
Theorem (344) [serial 1972] used for:
  Assume Present:  P = P@now = P^0  [serial 1971]
 


Theorem (346)                               [serial 1928] 
P [1232] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1233] NumSamples!(num_samples)
Q [1235] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 342 345:
Theorem (342) [serial 1970] used for:
  applied port output of value <<pre>> -> <<M(NumSamples)[NumSamples|num_samples]>> [serial 1928]
 
Theorem (345) [serial 1971] used for:
  applied port output <<pre and (NumSamples iff num_samples)^0>> -> <<post>> [serial 1928]
 


Theorem (347)                               [serial 1921] 
P [1232] <<INV_HR() and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1233] NumSamples!(num_samples)
Q [1235] <<INV_HR() and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Substitution of Assertion Labels
and theorem 346:
Theorem (346) [serial 1928] used for:
  substituted Assertions' predicates for  labels  [serial 1921]
 


Theorem (348)                               [serial 1981] 
P [1238] <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = heart_rate[i]>>
S [1239] ->
Q [1240] <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = heart_rate[i]>>
by Identity (id):  P->P is tautology


Theorem (349)                               [serial 1979] 
P [1238] <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = heart_rate[i]>>
S [1239] ->
Q [1240] <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = (heart_rate[i])>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 348:
Theorem (348) [serial 1981] used for:
    normalization of [serial 1979]
 


Theorem (350)                               [serial 1939] 
P [1238] <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = heart_rate[i]>>
S [1239] hr_nxt[1+i] := heart_rate[i]
Q [1240] <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
1+i]>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 349:
Theorem (349) [serial 1979] used for:
  applied wp for assignment [serial 1939]
 


Theorem (351)                               [serial 1978] 
P [1235] <<(all #14#:integer
  in 1..num_samples 
  are (MotionArtifact^(- #14#) or not SensorConnected^(- #14#)??0:HeartRate^(- #14#)) = heart_rate[#14#] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1236] ->
Q [1242] <<all #15#:integer
  in 1..num_samples 
  are (MotionArtifact^(- #15#) or not SensorConnected^(- #15#)??0:HeartRate^(- #15#)) = heart_rate[#15#] >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (352)                               [serial 1976] 
P [1235] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1236] ->
Q [1242] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = heart_rate[i] >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 351:
Theorem (351) [serial 1978] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 1976]
 


Theorem (353)                               [serial 1940] 
P [1235] <<((all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1236] ->
Q [1242] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = heart_rate[i] >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 352:
Theorem (352) [serial 1976] used for:
    normalization of [serial 1940]
 


Theorem (354)                               [serial 1929] 
P [1235] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1236] forall i in 1..num_samples
  {
  <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = heart_rate[i]>>
  hr_nxt[1+i] := heart_rate[i]
  <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[1+i]>>
  }  
Q [1242] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] >>
by Universal Quantification Rule:
                      <<A>> T <<B>>
       <<P and (z in r) and (x=e) and FAT>> -> <<wp(forall,Q)>>
 --------------------------------------------------------------------
 <<P>> forall z:i in r declare variable x:t:=e; begin <<A>> T <<B>> end <<Q>>
   where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
     (in postcondition Q, replace all occurances of
     "all z:i in r are B" with "all z:i in r are A"
   and FAT are "fetch-add terms", if any (bl.ulq)
and theorems 350 353:
Theorem (350) [serial 1939] used for:
  <<A>> T <<B>> as subject for universal lattice quantification by [serial 1929]
 
Theorem (353) [serial 1940] used for:
    <<P and (x=e) and FAT>> -> <<wp(forall,Q)>>
 where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
   (in postcondition Q, replace all occurances of
    <<all z:i in r are B>> with <<all z:i in r are A>>)
  for [serial 1929]
 


Theorem (355)                               [serial 1922] 
P [1235] <<INV_HR() and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1236] forall i in 1..num_samples
  {
  <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = heart_rate[i]>>
  hr_nxt[1+i] := heart_rate[i]
  <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[1+i]>>
  }  
Q [1242] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] >>
by Substitution of Assertion Labels
and theorem 354:
Theorem (354) [serial 1929] used for:
  substituted Assertions' predicates for  labels  [serial 1922]
 


Theorem (356)                               [serial 1951] 
P [1242] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] >>
S [1245] ->
Q [1245] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (357)                               [serial 1949] 
P [1242] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] >>
S [1245] ->
Q [1245] <<not (MotionArtifact^0 or not SensorConnected^0) or (MotionArtifact^0 or 
not SensorConnected^0)>>
by Law of Excluded Middle: P or not P is tautology
and theorem 356:
Theorem (356) [serial 1951] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1949]
 


Theorem (358)                               [serial 1930] 
P [1242] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] >>
S [1245] ->
Q [1245] <<(not SensorConnected^0 or MotionArtifact^0) or (not (not SensorConnected^0 or 
MotionArtifact^0))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 357:
Theorem (357) [serial 1949] used for:
    normalization of [serial 1930]
 


Theorem (359)                               [serial 1984] 
P [1245] <<(all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1245] ->
Q [1247] <<(all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
by Identity (id):  P->P is tautology


Theorem (360)                               [serial 1941] 
P [1245] <<(all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ) and (not SensorConnected^0 or MotionArtifact^0)>>
S [1245] ->
Q [1247] <<(all i:integer
  in 1..num_samples 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(MotionArtifact^0 or not SensorConnected^0)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 359:
Theorem (359) [serial 1984] used for:
    normalization of [serial 1941]
 


Theorem (361)                               [serial 1931] 
P [1245] <<(all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ) and (not SensorConnected^0 or MotionArtifact^0)>>
S [1245] ->
Q [1247] <<SHFT_HR() and (MotionArtifact^0 or not SensorConnected^0)>>
by Substitution of Assertion Labels
and theorem 360:
Theorem (360) [serial 1941] used for:
  substituted Assertions' predicates for  labels  [serial 1931]
 


Theorem (362)                               [serial 1991] 
P [1247] <<(all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1248] ->
Q [1249] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (363)                               [serial 1989] 
P [1247] <<(all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1248] ->
Q [1249] <<((all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 362:
Theorem (362) [serial 1991] used for:
    normalization of [serial 1989]
 


Theorem (364)                               [serial 1988] 
P [1247] <<(all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1248] ->
Q [1249] <<true and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
by Law of And-Simplification:  P and true is P
and theorem 363:
Theorem (363) [serial 1989] used for:
  Law of And-Simplification:  P and true is P [serial 1988]
 


Theorem (365)                               [serial 1987] 
P [1247] <<(all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1248] ->
Q [1249] <<0 = 0 and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
by Equality Law (idistr):  a=a <-> true
and theorem 364:
Theorem (364) [serial 1988] used for:
  Equality Law (idistr):  a=a <-> true [serial 1987]
 


Theorem (366)                               [serial 1986] 
P [1247] <<(all i:integer
  in 1..num_samples 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(MotionArtifact^0 or not SensorConnected^0)>>
S [1248] ->
Q [1249] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = 0 and (all i:integer
  in 1..num_samples 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) )>>
by Conditional True Expression:  b and x=e  iff  b and x=(b??e:g) 
and theorem 365:
Theorem (365) [serial 1987] used for:
   Conditional True Expression:  b and x=e  iff  b and x=(b??e:g)  [serial 1986]
 


Theorem (367)                               [serial 1942] 
P [1247] <<(all i:integer
  in 1..num_samples 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(MotionArtifact^0 or not SensorConnected^0)>>
S [1248] hr_nxt[1] := 0
Q [1249] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 1..num_samples 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) )>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 366:
Theorem (366) [serial 1986] used for:
  applied wp for assignment [serial 1942]
 


Theorem (368)                               [serial 1932] 
P [1247] <<SHFT_HR() and (MotionArtifact^0 or not SensorConnected^0)>>
S [1248] hr_nxt[1] := 0
Q [1249] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
SHFT_HR()>>
by Substitution of Assertion Labels
and theorem 367:
Theorem (367) [serial 1942] used for:
  substituted Assertions' predicates for  labels  [serial 1932]
 


Theorem (369)                               [serial 1999] 
P [1249] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 0..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
S [1245] ->
Q [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 0..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
by Identity (id):  P->P is tautology


Theorem (370)                               [serial 1997] 
P [1249] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 0..(num_samples-0) 
  are (MotionArtifact^(- (i+0)) or not SensorConnected^(- (i+0))??0:HeartRate^(- (i+0))) = hr_nxt[
      1+(i+0)] )>>
S [1245] ->
Q [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 0..((1+num_samples)-1) 
  are (MotionArtifact^(1-(i+1)) or not SensorConnected^(1-(i+1))??0:HeartRate^(1-(i+1))) = hr_nxt[(
      i+1)] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Subtaction of Added Value:  (a+b)-a is b
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 369:
Theorem (369) [serial 1999] used for:
    normalization of [serial 1997]
 


Theorem (371)                               [serial 1996] 
P [1249] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 0..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
S [1245] ->
Q [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 1..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
by Shift Quantification Range so Lower Bound is Zero
and theorem 370:
Theorem (370) [serial 1997] used for:
  Shift Quantification Range so Lower Bound is Zero [serial 1996]
 


Theorem (372)                               [serial 1994] 
P [1249] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
S [1245] ->
Q [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 2..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
by Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j)
and theorem 371:
Theorem (371) [serial 1996] used for:
  Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j) [serial 1994]
 


Theorem (373)                               [serial 1943] 
P [1249] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 1..num_samples 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) )>>
S [1245] ->
Q [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 2..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 372:
Theorem (372) [serial 1994] used for:
    normalization of [serial 1943]
 


Theorem (374)                               [serial 1933] 
P [1249] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
SHFT_HR()>>
S [1245] ->
Q [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 2..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
by Substitution of Assertion Labels
and theorem 373:
Theorem (373) [serial 1943] used for:
  substituted Assertions' predicates for  labels  [serial 1933]
 


Theorem (375)                               [serial 2002] 
P [1245] <<not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
S [1245] ->
Q [1252] <<not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
by Identity (id):  P->P is tautology


Theorem (376)                               [serial 1944] 
P [1245] <<(all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ) and (not (not SensorConnected^0 or MotionArtifact^0))>>
S [1245] ->
Q [1252] <<(all i:integer
  in 1..num_samples 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
not (MotionArtifact^0 or not SensorConnected^0)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 375:
Theorem (375) [serial 2002] used for:
    normalization of [serial 1944]
 


Theorem (377)                               [serial 1934] 
P [1245] <<(all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ) and (not (not SensorConnected^0 or MotionArtifact^0))>>
S [1245] ->
Q [1252] <<SHFT_HR() and not (MotionArtifact^0 or not SensorConnected^0)>>
by Substitution of Assertion Labels
and theorem 376:
Theorem (376) [serial 1944] used for:
  substituted Assertions' predicates for  labels  [serial 1934]
 


Theorem (378)                               [serial 2012] 
P [1252] <<not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
S [1253] ->
Q [1254] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (379)                               [serial 2010] 
P [1252] <<not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
S [1253] ->
Q [1254] <<((all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 378:
Theorem (378) [serial 2012] used for:
    normalization of [serial 2010]
 


Theorem (380)                               [serial 2009] 
P [1252] <<not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
S [1253] ->
Q [1254] <<true and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
by Law of And-Simplification:  P and true is P
and theorem 379:
Theorem (379) [serial 2010] used for:
  Law of And-Simplification:  P and true is P [serial 2009]
 


Theorem (381)                               [serial 2008] 
P [1252] <<not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
S [1253] ->
Q [1254] <<HeartRate^0 = HeartRate^0 and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
by Equality Law (idistr):  a=a <-> true
and theorem 380:
Theorem (380) [serial 2009] used for:
  Equality Law (idistr):  a=a <-> true [serial 2008]
 


Theorem (382)                               [serial 2006] 
P [1252] <<not (MotionArtifact^0 or not SensorConnected^0) and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
S [1253] ->
Q [1254] <<HeartRate^0 = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) and 
(all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
by Conditional False Expression:  not b and x=g  iff  not b and x=(b??e:g) 
and theorem 381:
Theorem (381) [serial 2008] used for:
   Conditional False Expression:  not b and x=g  iff  not b and x=(b??e:g)  [serial 2006]
 


Theorem (383)                               [serial 2004] 
P [1252] <<(all i:integer
  in 1..num_samples 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
not (MotionArtifact^0 or not SensorConnected^0)>>
S [1253] ->
Q [1254] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = (HeartRate^0) and 
(all i:integer
  in 1..num_samples 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 382:
Theorem (382) [serial 2006] used for:
    normalization of [serial 2004]
 


Theorem (384)                               [serial 1945] 
P [1252] <<(all i:integer
  in 1..num_samples 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
not (MotionArtifact^0 or not SensorConnected^0)>>
S [1253] hr_nxt[1] := HeartRate?
Q [1254] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 1..num_samples 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) )>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 383:
Theorem (383) [serial 2004] used for:
  applied wp for assignment [serial 1945]
 


Theorem (385)                               [serial 1935] 
P [1252] <<SHFT_HR() and not (MotionArtifact^0 or not SensorConnected^0)>>
S [1253] hr_nxt[1] := HeartRate?
Q [1254] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
SHFT_HR()>>
by Substitution of Assertion Labels
and theorem 384:
Theorem (384) [serial 1945] used for:
  substituted Assertions' predicates for  labels  [serial 1935]
 


Theorem (386)                               [serial 2027] 
P [1254] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 0..-1+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:HeartRate^(-1+- i)) = hr_nxt[
      2+i] )>>
S [1245] ->
Q [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 0..-1+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:HeartRate^(-1+- i)) = hr_nxt[
      2+i] )>>
by Identity (id):  P->P is tautology


Theorem (387)                               [serial 2025] 
P [1254] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 0..-1+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:HeartRate^(-1+- i)) = hr_nxt[
      1+i+1] )>>
S [1245] ->
Q [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 0..-1+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:HeartRate^(-1+- i)) = hr_nxt[
      2+i] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 386:
Theorem (386) [serial 2027] used for:
    normalization of [serial 2025]
 


Theorem (388)                               [serial 2023] 
P [1254] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 0..-1+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:HeartRate^(-1+- i)) = hr_nxt[
      1+(1+i)] )>>
S [1245] ->
Q [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 0..-1+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:HeartRate^(-1+- i)) = hr_nxt[
      2+i] )>>
by Associativity: (b.c).a = a.b.c
and theorem 387:
Theorem (387) [serial 2025] used for:
  Associativity: (b.c).a = a.b.c [serial 2023]
 


Theorem (389)                               [serial 2021] 
P [1254] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 0..num_samples+ -1 
  are (MotionArtifact^((- 1+- i)) or not SensorConnected^((- 1+- i))??0:HeartRate^((- 1+- i))) = hr_nxt[
      1+(1+i)] )>>
S [1245] ->
Q [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 0..1+num_samples+ -2 
  are (MotionArtifact^(1+- 2+- i) or not SensorConnected^(1+- 2+- i)??0:HeartRate^(1+- 2+- i)) = hr_nxt[
      2+i] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 388:
Theorem (388) [serial 2023] used for:
    normalization of [serial 2021]
 


Theorem (390)                               [serial 2019] 
P [1254] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:HeartRate^(- (1+i))) = hr_nxt[
      1+(1+i)] )>>
S [1245] ->
Q [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 0..(1+num_samples)-2 
  are (MotionArtifact^(1-(2+i)) or not SensorConnected^(1-(2+i))??0:HeartRate^(1-(2+i))) = hr_nxt[
      2+i] )>>
by Equivlence of negation and subtraction: (a-b) = (a + (-b))
and theorem 389:
Theorem (389) [serial 2021] used for:
   changing adding negation to subtraction  [serial 2019]
 


Theorem (391)                               [serial 2017] 
P [1254] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 0..(num_samples-1) 
  are (MotionArtifact^(- (i+1)) or not SensorConnected^(- (i+1))??0:HeartRate^(- (i+1))) = hr_nxt[
      1+(i+1)] )>>
S [1245] ->
Q [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 0..((1+num_samples)-2) 
  are (MotionArtifact^(1-(i+2)) or not SensorConnected^(1-(i+2))??0:HeartRate^(1-(i+2))) = hr_nxt[(
      i+2)] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 390:
Theorem (390) [serial 2019] used for:
    normalization of [serial 2017]
 


Theorem (392)                               [serial 2015] 
P [1254] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
S [1245] ->
Q [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 2..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
by Shift Quantification Range so Lower Bound is Zero
and theorem 391:
Theorem (391) [serial 2017] used for:
  Shift Quantification Range so Lower Bound is Zero [serial 2015]
 


Theorem (393)                               [serial 1946] 
P [1254] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 1..num_samples 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) )>>
S [1245] ->
Q [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 2..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 392:
Theorem (392) [serial 2015] used for:
    normalization of [serial 1946]
 


Theorem (394)                               [serial 1936] 
P [1254] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
SHFT_HR()>>
S [1245] ->
Q [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 2..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
by Substitution of Assertion Labels
and theorem 393:
Theorem (393) [serial 1946] used for:
  substituted Assertions' predicates for  labels  [serial 1936]
 


Theorem (395)                               [serial 1923] 
P [1242] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] >>
S [1245] if 
(not SensorConnected? or MotionArtifact?)~> 
  <<SHFT_HR() and (MotionArtifact^0 or not SensorConnected^0)>>
  hr_nxt[1] := 0
  <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and SHFT_HR()>> 
[]
(not (not SensorConnected? or MotionArtifact?))~> 
  <<SHFT_HR() and not (MotionArtifact^0 or not SensorConnected^0)>>
  hr_nxt[1] := HeartRate?
  <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and SHFT_HR()>> 
fi
Q [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 2..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
by Alternative Rule:
 <<P>> -> <<B1 or B2 or ... or Bn>>,
 <<P and B1>> -> <<P1>>, <<P and B2>> -> <<P2>>, . . . , <<P and Bn>> -> <<Pn>>,
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>,
 <<Q1>> -> <<Q>>, <<Q2>> -> <<Q>>, . . . <<Qn>> -> <<Q>>
 -------------------------------------------------------------------------
 <<P>> if B1-><<P1>>S1<<Q1>> [] B2-><<P2>>S2<<Q2>> [] . . . [] Bn-><<Pn>>Sn<<Qn>> fi <<Q>> (bl.iffi)
and theorems 358 361 368 374 377 385 394:
Theorem (358) [serial 1930] used for:
    <<P>> -> <<B1 or B2 or ... or Bn>>  in if-[]-fi  for [serial 1923]
 
Theorem (361) [serial 1931] used for:
    <<P and B0>> -> <<P0>>  for [serial 1923]
 
Theorem (368) [serial 1932] used for:
    <<P0>> S0 <<Q0>>  for [serial 1923]
 
Theorem (374) [serial 1933] used for:
    <<Q0>> -> <<Q>>  for [serial 1923]
 
Theorem (377) [serial 1934] used for:
    <<P and B1>> -> <<P1>>  for [serial 1923]
 
Theorem (385) [serial 1935] used for:
    <<P1>> S1 <<Q1>>  for [serial 1923]
 
Theorem (394) [serial 1936] used for:
    <<Q1>> -> <<Q>>  for [serial 1923]
 


Theorem (396)                               [serial 1956] 
P [1261] <<all i:integer
  in 1..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] >>
S [1260] ->
Q [1261] <<all i:integer
  in 1..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] >>
by Identity (id):  P->P is tautology


Theorem (397)                               [serial 1954] 
P [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 2..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
S [1260] ->
Q [1261] <<all i:integer
  in 1..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] >>
by Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j)
and theorem 396:
Theorem (396) [serial 1956] used for:
  Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j) [serial 1954]
 


Theorem (398)                               [serial 1952] 
P [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 2..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
S [1260] ->
Q [1261] <<all i:integer
  in 1..(1+num_samples) 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 397:
Theorem (397) [serial 1954] used for:
    normalization of [serial 1952]
 


Theorem (399)                               [serial 1924] 
P [1256] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(all i:integer
  in 2..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
S [1260] num_samples := 1+num_samples
Q [1261] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 398:
Theorem (398) [serial 1952] used for:
  applied wp for assignment [serial 1924]
 


Theorem (400)                               [serial 1962] 
P [1266] <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i]>>
S [1267] ->
Q [1268] <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i]>>
by Identity (id):  P->P is tautology


Theorem (401)                               [serial 1960] 
P [1266] <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i]>>
S [1267] ->
Q [1268] <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = (hr_nxt[i])>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 400:
Theorem (400) [serial 1962] used for:
    normalization of [serial 1960]
 


Theorem (402)                               [serial 1937] 
P [1266] <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i]>>
S [1267] heart_rate[i] := hr_nxt[i]
Q [1268] <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = heart_rate[i]>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 401:
Theorem (401) [serial 1960] used for:
  applied wp for assignment [serial 1937]
 


Theorem (403)                               [serial 1958] 
P [1261] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] >>
S [1264] ->
Q [1270] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] >>
by Identity (id):  P->P is tautology


Theorem (404)                               [serial 1938] 
P [1261] <<(all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
S [1264] ->
Q [1270] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 403:
Theorem (403) [serial 1958] used for:
    normalization of [serial 1938]
 


Theorem (405)                               [serial 1925] 
P [1261] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] >>
S [1264] forall i in 1..num_samples
  {
  <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i]>>
  heart_rate[i] := hr_nxt[i]
  <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = heart_rate[i]>>
  }  
Q [1270] <<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = heart_rate[i] >>
by Universal Quantification Rule:
                      <<A>> T <<B>>
       <<P and (z in r) and (x=e) and FAT>> -> <<wp(forall,Q)>>
 --------------------------------------------------------------------
 <<P>> forall z:i in r declare variable x:t:=e; begin <<A>> T <<B>> end <<Q>>
   where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
     (in postcondition Q, replace all occurances of
     "all z:i in r are B" with "all z:i in r are A"
   and FAT are "fetch-add terms", if any (bl.ulq)
and theorems 402 404:
Theorem (402) [serial 1937] used for:
  <<A>> T <<B>> as subject for universal lattice quantification by [serial 1925]
 
Theorem (404) [serial 1938] used for:
    <<P and (x=e) and FAT>> -> <<wp(forall,Q)>>
 where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
   (in postcondition Q, replace all occurances of
    <<all z:i in r are B>> with <<all z:i in r are A>>)
  for [serial 1925]
 


Theorem (406)                               [serial 1916] 
P [1218] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1229] <<INV_HR() and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
HeartRateTrend!(heart_rate)
;
<<INV_HR() and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
NumSamples!(num_samples)
;
<<INV_HR() and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
forall i in 1..num_samples
  {
  <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = heart_rate[i]>>
  hr_nxt[1+i] := heart_rate[i]
  <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[1+i]>>
  }  
<<SHFT_HR: :all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[1+i] >>
;
if 
(not SensorConnected? or MotionArtifact?)~> 
  <<SHFT_HR() and (MotionArtifact^0 or not SensorConnected^0)>>
  hr_nxt[1] := 0
  <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and SHFT_HR()>> 
[]
(not (not SensorConnected? or MotionArtifact?))~> 
  <<SHFT_HR() and not (MotionArtifact^0 or not SensorConnected^0)>>
  hr_nxt[1] := HeartRate?
  <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and SHFT_HR()>> 
fi
<<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and (all i:integer
  in 2..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
;
num_samples := 1+num_samples
<<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] >>
;
forall i in 1..num_samples
  {
  <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i]>>
  heart_rate[i] := hr_nxt[i]
  <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = heart_rate[i]>>
  }  
<<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = heart_rate[i] >>
Q [1220] <<all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 333 335 340 347 355 395 399 405:
Theorem (333) [serial 1918] used for:
  P -> P1 in sequential composition for [serial 1916]
 
Theorem (335) [serial 1919] used for:
  Q5 -> Q in sequential composition for [serial 1916]
 
Theorem (340) [serial 1920] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1916]
 
Theorem (347) [serial 1921] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1916]
 
Theorem (355) [serial 1922] used for:
  <<Q1 and P2>> S2 <<Q2 and P3>> in sequential composition for [serial 1916]
 
Theorem (395) [serial 1923] used for:
  <<Q2 and P3>> S3 <<Q3 and P4>> in sequential composition for [serial 1916]
 
Theorem (399) [serial 1924] used for:
  <<Q3 and P4>> S4 <<Q4 and P5>> in sequential composition for [serial 1916]
 
Theorem (405) [serial 1925] used for:
  <<Q4 and P5>> S5 <<Q5>> in sequential composition for [serial 1916]
 


Theorem (407)                               [serial 1914] 
P [1218] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1229] <<INV_HR() and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
HeartRateTrend!(heart_rate)
;
<<INV_HR() and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
NumSamples!(num_samples)
;
<<INV_HR() and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
forall i in 1..num_samples
  {
  <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = heart_rate[i]>>
  hr_nxt[1+i] := heart_rate[i]
  <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[1+i]>>
  }  
<<SHFT_HR: :all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[1+i] >>
;
if 
(not SensorConnected? or MotionArtifact?)~> 
  <<SHFT_HR() and (MotionArtifact^0 or not SensorConnected^0)>>
  hr_nxt[1] := 0
  <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and SHFT_HR()>> 
[]
(not (not SensorConnected? or MotionArtifact?))~> 
  <<SHFT_HR() and not (MotionArtifact^0 or not SensorConnected^0)>>
  hr_nxt[1] := HeartRate?
  <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and SHFT_HR()>> 
fi
<<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and (all i:integer
  in 2..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
;
num_samples := 1+num_samples
<<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] >>
;
forall i in 1..num_samples
  {
  <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i]>>
  heart_rate[i] := hr_nxt[i]
  <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = heart_rate[i]>>
  }  
<<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = heart_rate[i] >>
Q [1220] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 406:
Theorem (406) [serial 1916] used for:
    normalization of [serial 1914]
 


Theorem (408)                               [serial 1912] 
P [1218] <<INV_HR() and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1229] <<INV_HR() and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
HeartRateTrend!(heart_rate)
;
<<INV_HR() and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
NumSamples!(num_samples)
;
<<INV_HR() and num_samples < #PulseOx_Properties::Num_Trending_Samples>>
forall i in 1..num_samples
  {
  <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = heart_rate[i]>>
  hr_nxt[1+i] := heart_rate[i]
  <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[1+i]>>
  }  
<<SHFT_HR: :all i:integer
  in 1..num_samples 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[1+i] >>
;
if 
(not SensorConnected? or MotionArtifact?)~> 
  <<SHFT_HR() and (MotionArtifact^0 or not SensorConnected^0)>>
  hr_nxt[1] := 0
  <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and SHFT_HR()>> 
[]
(not (not SensorConnected? or MotionArtifact?))~> 
  <<SHFT_HR() and not (MotionArtifact^0 or not SensorConnected^0)>>
  hr_nxt[1] := HeartRate?
  <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and SHFT_HR()>> 
fi
<<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and (all i:integer
  in 2..1+num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
;
num_samples := 1+num_samples
<<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] >>
;
forall i in 1..num_samples
  {
  <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i]>>
  heart_rate[i] := hr_nxt[i]
  <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = heart_rate[i]>>
  }  
<<all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = heart_rate[i] >>
Q [1220] <<HOLD_HR(num_samples)>>
by Substitution of Assertion Labels
and theorem 407:
Theorem (407) [serial 1914] used for:
  substituted Assertions' predicates for  labels  [serial 1912]
 


Theorem (409)                               [serial 1021] 
P [1218] <<INV_HR() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1229] <<INV_HR() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
HeartRateTrend!(heart_rate)
;
<<INV_HR() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
NumSamples!(num_samples)
;
<<INV_HR() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
forall i in 1..num_samples
  {
  <<heart_rate[i] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i))>>
  hr_nxt[i+1] := heart_rate[i]
  <<hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i))>>
  }  
<<SHFT_HR: :all i:integer
  in 1..num_samples 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) >>
;
if 
(MotionArtifact? or not SensorConnected?)~> 
  <<SHFT_HR() and (MotionArtifact^0 or not SensorConnected^0)>>
  hr_nxt[1] := 0
  <<SHFT_HR() and (hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0))>> 
[]
(not (MotionArtifact? or not SensorConnected?))~> 
  <<SHFT_HR() and not (MotionArtifact^0 or not SensorConnected^0)>>
  hr_nxt[1] := HeartRate?
  <<SHFT_HR() and (hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0))>> 
fi
<<(hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0)) and (all i:integer
  in 2..num_samples+1 
  are hr_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
;
num_samples := num_samples+1
<<all i:integer
  in 1..num_samples 
  are hr_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) >>
;
forall i in 1..num_samples
  {
  <<hr_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i))>>
  heart_rate[i] := hr_nxt[i]
  <<heart_rate[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i))>>
  }  
<<all i:integer
  in 1..num_samples 
  are heart_rate[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) >>
Q [1220] <<HOLD_HR(num_samples)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 408:
Theorem (408) [serial 1912] used for:
    normalization of [serial 1021]
 


Theorem (410)                               [serial 2061] 
P [1220] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1274] ->
Q [1218] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Identity (id):  P->P is tautology


Theorem (411)                               [serial 2063] 
P [1220] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1274] ->
Q [1218] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Identity (id):  P->P is tautology


Theorem (412)                               [serial 2059] 
P [1220] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1274] ->
Q [1218] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorems 410 411:
Theorem (410) [serial 2061] used for:
    normalization of [serial 2059]
 
Theorem (411) [serial 2063] used for:
    normalization of [serial 2059]
 


Theorem (413)                               [serial 2056] 
P [1220] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1274] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Simultaneous Assignment
and theorem 412:
Theorem (412) [serial 2059] used for:
  applied wp for simultaneous assignment [serial 2056]
 


Theorem (414)                               [serial 2054] 
P [1220] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1274] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = (MotionArtifact^(1-s) or not (SensorConnected^(- s))^1??0:HeartRate^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Caret Compostition:  (x^a)^b is x^(a+b)
    Associativity: (b.c).a = a.b.c
and theorem 413:
Theorem (413) [serial 2056] used for:
    normalization of [serial 2054]
 


Theorem (415)                               [serial 2052] 
P [1220] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1274] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = (MotionArtifact^(1-s) or (not SensorConnected^(- s))^1??0:HeartRate^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 414:
Theorem (414) [serial 2054] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2052]
 


Theorem (416)                               [serial 2050] 
P [1220] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1274] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = ((MotionArtifact^((- s)+1) or (not SensorConnected^(- s))^1)??0:HeartRate^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 415:
Theorem (415) [serial 2052] used for:
    normalization of [serial 2050]
 


Theorem (417)                               [serial 2048] 
P [1220] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1274] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = ((MotionArtifact^(- s) or not SensorConnected^(- s))^1??0:HeartRate^(1-s)) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 416:
Theorem (416) [serial 2050] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2048]
 


Theorem (418)                               [serial 2046] 
P [1220] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1274] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s))^1??(0)^1:HeartRate^((- s)+1)) = heart_rate[s]^1 ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
    Associativity: (b.c).a = a.b.c
and theorem 417:
Theorem (417) [serial 2048] used for:
    normalization of [serial 2046]
 


Theorem (419)                               [serial 2044] 
P [1220] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1274] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s))^1 = heart_rate[s]^1 ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 418:
Theorem (418) [serial 2046] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2044]
 


Theorem (420)                               [serial 2042] 
P [1220] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1274] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are (((MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)))^1 = (heart_rate[s])^1) ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 419:
Theorem (419) [serial 2044] used for:
    normalization of [serial 2042]
 


Theorem (421)                               [serial 2040] 
P [1220] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1274] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s])^1 ) and 
num_samples^1 < #PulseOx_Properties::Num_Trending_Samples>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 420:
Theorem (420) [serial 2042] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2040]
 


Theorem (422)                               [serial 2038] 
P [1220] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1274] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s])^1 ) and 
((num_samples)^1 < (#PulseOx_Properties::Num_Trending_Samples)^1)>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 421:
Theorem (421) [serial 2040] used for:
    normalization of [serial 2038]
 


Theorem (423)                               [serial 2036] 
P [1220] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1274] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )^1 and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 422:
Theorem (422) [serial 2038] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2036]
 


Theorem (424)                               [serial 2034] 
P [1220] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1274] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<((all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )^1 and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)^1)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 423:
Theorem (423) [serial 2036] used for:
    normalization of [serial 2034]
 


Theorem (425)                               [serial 2031] 
P [1220] <<(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples>>
S [1274] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<((all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ) and 
num_samples < #PulseOx_Properties::Num_Trending_Samples)^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 424:
Theorem (424) [serial 2034] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2031]
 


Theorem (426)                               [serial 2029] 
P [1220] <<((all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) )) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1274] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<((all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples < #PulseOx_Properties::Num_Trending_Samples))^1>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 425:
Theorem (425) [serial 2031] used for:
    normalization of [serial 2029]
 


Theorem (427)                               [serial 1022] 
P [1220] <<(HOLD_HR(num_samples)) and (num_samples < #PulseOx_Properties::Num_Trending_Samples)>>
S [1274] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1218] <<(INV_HR() and (num_samples < #PulseOx_Properties::Num_Trending_Samples))^1>>
by Substitution of Assertion Labels
and theorem 426:
Theorem (426) [serial 2029] used for:
  substituted Assertions' predicates for  labels  [serial 1022]
 


Theorem (428)                               [serial 2098] 
P [1220] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] )>>
S [1276] ->
Q [1222] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] )>>
by Identity (id):  P->P is tautology


Theorem (429)                               [serial 2100] 
P [1220] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] )>>
S [1276] ->
Q [1222] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] )>>
by Identity (id):  P->P is tautology


Theorem (430)                               [serial 2096] 
P [1220] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] )>>
S [1276] ->
Q [1222] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorems 428 429:
Theorem (428) [serial 2098] used for:
    normalization of [serial 2096]
 
Theorem (429) [serial 2100] used for:
    normalization of [serial 2096]
 


Theorem (431)                               [serial 2093] 
P [1220] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] )>>
S [1276] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1222] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) )>>
by Simultaneous Assignment
and theorem 430:
Theorem (430) [serial 2096] used for:
  applied wp for simultaneous assignment [serial 2093]
 


Theorem (432)                               [serial 2091] 
P [1220] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] )>>
S [1276] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1222] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = (MotionArtifact^(1-s) or not (SensorConnected^(- s))^1??0:HeartRate^(1-s)) )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Caret Compostition:  (x^a)^b is x^(a+b)
    Associativity: (b.c).a = a.b.c
and theorem 431:
Theorem (431) [serial 2093] used for:
    normalization of [serial 2091]
 


Theorem (433)                               [serial 2089] 
P [1220] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] )>>
S [1276] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1222] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = (MotionArtifact^(1-s) or (not SensorConnected^(- s))^1??0:HeartRate^(1-s)) )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 432:
Theorem (432) [serial 2091] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2089]
 


Theorem (434)                               [serial 2087] 
P [1220] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] )>>
S [1276] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1222] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = ((MotionArtifact^((- s)+1) or (not SensorConnected^(- s))^1)??0:HeartRate^(1-s)) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 433:
Theorem (433) [serial 2089] used for:
    normalization of [serial 2087]
 


Theorem (435)                               [serial 2085] 
P [1220] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] )>>
S [1276] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1222] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = ((MotionArtifact^(- s) or not SensorConnected^(- s))^1??0:HeartRate^(1-s)) )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 434:
Theorem (434) [serial 2087] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2085]
 


Theorem (436)                               [serial 2083] 
P [1220] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] )>>
S [1276] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1222] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s))^1??(0)^1:HeartRate^((- s)+1)) = heart_rate[s]^1 )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
    Associativity: (b.c).a = a.b.c
and theorem 435:
Theorem (435) [serial 2085] used for:
    normalization of [serial 2083]
 


Theorem (437)                               [serial 2081] 
P [1220] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] )>>
S [1276] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1222] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s))^1 = heart_rate[s]^1 )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 436:
Theorem (436) [serial 2083] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2081]
 


Theorem (438)                               [serial 2079] 
P [1220] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] )>>
S [1276] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1222] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (((MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)))^1 = (heart_rate[s])^1) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 437:
Theorem (437) [serial 2081] used for:
    normalization of [serial 2079]
 


Theorem (439)                               [serial 2077] 
P [1220] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] )>>
S [1276] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1222] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s])^1 )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 438:
Theorem (438) [serial 2079] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2077]
 


Theorem (440)                               [serial 2075] 
P [1220] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] )>>
S [1276] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1222] <<((num_samples)^1 = (#PulseOx_Properties::Num_Trending_Samples)^1) and 
(all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s])^1 )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 439:
Theorem (439) [serial 2077] used for:
    normalization of [serial 2075]
 


Theorem (441)                               [serial 2073] 
P [1220] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] )>>
S [1276] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1222] <<(num_samples = #PulseOx_Properties::Num_Trending_Samples)^1 and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 440:
Theorem (440) [serial 2075] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2073]
 


Theorem (442)                               [serial 2071] 
P [1220] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] )>>
S [1276] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1222] <<((num_samples = #PulseOx_Properties::Num_Trending_Samples)^1 and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )^1)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 441:
Theorem (441) [serial 2073] used for:
    normalization of [serial 2071]
 


Theorem (443)                               [serial 2068] 
P [1220] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) = heart_rate[s] )>>
S [1276] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1222] <<(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ))^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 442:
Theorem (442) [serial 2071] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2068]
 


Theorem (444)                               [serial 2066] 
P [1220] <<((all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) )) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1276] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1222] <<((all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples))^1>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 443:
Theorem (443) [serial 2068] used for:
    normalization of [serial 2066]
 


Theorem (445)                               [serial 1023] 
P [1220] <<(HOLD_HR(num_samples)) and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1276] (nts',heart_rate',hr_nxt',num_samples' := nts,heart_rate,hr_nxt,num_samples)  
Q [1222] <<(INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples))^1>>
by Substitution of Assertion Labels
and theorem 444:
Theorem (444) [serial 2066] used for:
  substituted Assertions' predicates for  labels  [serial 1023]
 


Theorem (446)                               [serial 1024] 
P [1220] <<(HOLD_HR(num_samples)) and (num_samples > #PulseOx_Properties::Num_Trending_Samples)>>
S [1277] ->
Q [1224] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (447)                               [serial 2144] 
P [1222] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #16#:integer
  in 1..num_samples 
  are (MotionArtifact^(- #16#) or not SensorConnected^(- #16#)??0:HeartRate^(- #16#)) = heart_rate[#16#] )>>
S [1222] ->
Q [1280] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #17#:integer
  in 1..num_samples 
  are (MotionArtifact^(- #17#) or not SensorConnected^(- #17#)??0:HeartRate^(- #17#)) = heart_rate[#17#] )>>
by Identity (id):  P->P is tautology


Theorem (448)                               [serial 2142] 
P [1222] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )>>
S [1222] ->
Q [1280] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )>>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 447:
Theorem (447) [serial 2144] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2142]
 


Theorem (449)                               [serial 2112] 
P [1222] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1222] ->
Q [1280] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 448:
Theorem (448) [serial 2142] used for:
    normalization of [serial 2112]
 


Theorem (450)                               [serial 2103] 
P [1222] <<INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1222] ->
Q [1280] <<INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
by Substitution of Assertion Labels
and theorem 449:
Theorem (449) [serial 2112] used for:
  substituted Assertions' predicates for  labels  [serial 2103]
 


Theorem (451)                               [serial 2170] 
P [1325] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #18#:integer
  in 1..num_samples 
  are heart_rate[#18#]^1 = (MotionArtifact^(1-#18#) or not SensorConnected^(1-#18#)??0:HeartRate^(1-#18#)) )>>
S [1222] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all #19#:integer
  in 1..num_samples 
  are heart_rate[#19#]^1 = (MotionArtifact^(1-#19#) or not SensorConnected^(1-#19#)??0:HeartRate^(1-#19#)) )>>
by Identity (id):  P->P is tautology


Theorem (452)                               [serial 2167] 
P [1325] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are heart_rate[i]^1 = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
S [1222] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = (MotionArtifact^(1-s) or not SensorConnected^(1-s)??0:HeartRate^(1-s)) )>>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 451:
Theorem (451) [serial 2170] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2167]
 


Theorem (453)                               [serial 2165] 
P [1325] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are heart_rate[i]^1 = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
S [1222] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = (MotionArtifact^(1-s) or not (SensorConnected^(- s))^1??0:HeartRate^(1-s)) )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Caret Compostition:  (x^a)^b is x^(a+b)
    Associativity: (b.c).a = a.b.c
and theorem 452:
Theorem (452) [serial 2167] used for:
    normalization of [serial 2165]
 


Theorem (454)                               [serial 2163] 
P [1325] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are heart_rate[i]^1 = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
S [1222] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = (MotionArtifact^(1-s) or (not SensorConnected^(- s))^1??0:HeartRate^(1-s)) )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 453:
Theorem (453) [serial 2165] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2163]
 


Theorem (455)                               [serial 2161] 
P [1325] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are heart_rate[i]^1 = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
S [1222] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = ((MotionArtifact^((- s)+1) or (not SensorConnected^(- s))^1)??0:HeartRate^(1-s)) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 454:
Theorem (454) [serial 2163] used for:
    normalization of [serial 2161]
 


Theorem (456)                               [serial 2159] 
P [1325] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are heart_rate[i]^1 = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
S [1222] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are heart_rate[s]^1 = ((MotionArtifact^(- s) or not SensorConnected^(- s))^1??0:HeartRate^(1-s)) )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 455:
Theorem (455) [serial 2161] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2159]
 


Theorem (457)                               [serial 2157] 
P [1325] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are heart_rate[i]^1 = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
S [1222] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s))^1??(0)^1:HeartRate^((- s)+1)) = heart_rate[s]^1 )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
    Associativity: (b.c).a = a.b.c
and theorem 456:
Theorem (456) [serial 2159] used for:
    normalization of [serial 2157]
 


Theorem (458)                               [serial 2155] 
P [1325] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are heart_rate[i]^1 = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
S [1222] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s))^1 = heart_rate[s]^1 )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 457:
Theorem (457) [serial 2157] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2155]
 


Theorem (459)                               [serial 2153] 
P [1325] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are heart_rate[i]^1 = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
S [1222] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (((MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)))^1 = (heart_rate[s])^1) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 458:
Theorem (458) [serial 2155] used for:
    normalization of [serial 2153]
 


Theorem (460)                               [serial 2151] 
P [1325] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are heart_rate[i]^1 = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
S [1222] ->
Q    <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s])^1 )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 459:
Theorem (459) [serial 2153] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2151]
 


Theorem (461)                               [serial 2149] 
P [1325] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are heart_rate[i]^1 = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
S [1222] ->
Q    <<((num_samples)^1 = (#PulseOx_Properties::Num_Trending_Samples)^1) and 
(all s:integer
  in 1..num_samples 
  are ((MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s])^1 )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 460:
Theorem (460) [serial 2151] used for:
    normalization of [serial 2149]
 


Theorem (462)                               [serial 2147] 
P [1325] <<num_samples^1 = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are heart_rate[i]^1 = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
S [1222] ->
Q    <<(num_samples = #PulseOx_Properties::Num_Trending_Samples)^1 and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 461:
Theorem (461) [serial 2149] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2147]
 


Theorem (463)                               [serial 2145] 
P [1325] <<(all i:integer
  in 1..num_samples 
  are (heart_rate[i])^1 = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) ) and 
((num_samples)^1 = #PulseOx_Properties::Num_Trending_Samples)>>
S [1222] ->
Q    <<((all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) )^1 and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)^1)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 462:
Theorem (462) [serial 2147] used for:
    normalization of [serial 2145]
 


Theorem (464)                               [serial 2113] 
P [1325] <<(all i:integer
  in 1..num_samples 
  are heart_rate[i]' = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) ) and 
(num_samples' = #PulseOx_Properties::Num_Trending_Samples)>>
S [1222] ->
Q    <<((all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples))^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 463:
Theorem (463) [serial 2145] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2113]
 


Theorem (465)                               [serial 2104] 
P [1325] <<(all i:integer
  in 1..num_samples 
  are heart_rate[i]' = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) ) and 
(num_samples' = #PulseOx_Properties::Num_Trending_Samples)>>
S [1222] ->
Q    <<(INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples))^1>>
by Substitution of Assertion Labels
and theorem 464:
Theorem (464) [serial 2113] used for:
  substituted Assertions' predicates for  labels  [serial 2104]
 


Theorem (466)                               [serial 2174] 
P [1280] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )>>
S [1281] ->
Q [1188] <<all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (467)                               [serial 2171] 
P [1280] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1281] ->
Q [1188] <<all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 466:
Theorem (466) [serial 2174] used for:
    normalization of [serial 2171]
 


Theorem (468)                               [serial 2176] 
P [1281] <<(HeartRateTrend iff heart_rate)^0 and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ))>>
S [1281] ->
Q [1283] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (469)                               [serial 2172] 
P [1281] <<((all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (HeartRateTrend iff heart_rate)^0>>
S [1281] ->
Q [1283] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 468:
Theorem (468) [serial 2176] used for:
    normalization of [serial 2172]
 


Theorem (470)                               [serial 2114] 
P [1280] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1281] HeartRateTrend!(heart_rate)
Q [1283] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 467 469:
Theorem (467) [serial 2171] used for:
  applied port output of value <<pre>> -> <<M(HeartRateTrend)[HeartRateTrend|heart_rate]>> [serial 2114]
 
Theorem (469) [serial 2172] used for:
  applied port output <<pre and (HeartRateTrend iff heart_rate)^0>> -> <<post>> [serial 2114]
 


Theorem (471)                               [serial 2105] 
P [1280] <<INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1281] HeartRateTrend!(heart_rate)
Q [1283] <<INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
by Substitution of Assertion Labels
and theorem 470:
Theorem (470) [serial 2114] used for:
  substituted Assertions' predicates for  labels  [serial 2105]
 


Theorem (472)                               [serial 2200] 
P [1283] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )>>
S [1284] ->
Q [1192] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (473)                               [serial 2195] 
P [1283] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )>>
S [1284] ->
Q [1192] <<num_samples = num_samples>>
by Equality Law (idistr):  a=a <-> true
and theorem 472:
Theorem (472) [serial 2200] used for:
  Equality Law (idistr):  a=a <-> true [serial 2195]
 


Theorem (474)                               [serial 2192] 
P [1283] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1284] ->
Q [1192] <<num_samples = num_samples>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 473:
Theorem (473) [serial 2195] used for:
    normalization of [serial 2192]
 


Theorem (475)                               [serial 2202] 
P [1284] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ) and 
(NumSamples iff num_samples)^0>>
S [1284] ->
Q [1286] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (476)                               [serial 2201] 
P [1284] <<(NumSamples iff num_samples)^0 and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ))>>
S [1284] ->
Q [1286] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )>>
by Associativity: (b.c).a = a.b.c
and theorem 475:
Theorem (475) [serial 2202] used for:
  Associativity: (b.c).a = a.b.c [serial 2201]
 


Theorem (477)                               [serial 2197] 
P [1284] <<(NumSamples iff num_samples)^0 and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ))>>
S [1284] ->
Q [1286] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and true and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )>>
by Law of And-Simplification:  P and true is P
and theorem 476:
Theorem (476) [serial 2201] used for:
  Law of And-Simplification:  P and true is P [serial 2197]
 


Theorem (478)                               [serial 2193] 
P [1284] <<((all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (NumSamples iff num_samples)^0>>
S [1284] ->
Q [1286] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and true>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 477:
Theorem (477) [serial 2197] used for:
    normalization of [serial 2193]
 


Theorem (479)                               [serial 2116] 
P [1283] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1284] NumSamples!(num_samples)
Q [1286] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and true>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 474 478:
Theorem (474) [serial 2192] used for:
  applied port output of value <<pre>> -> <<M(NumSamples)[NumSamples|num_samples]>> [serial 2116]
 
Theorem (478) [serial 2193] used for:
  applied port output <<pre and (NumSamples iff num_samples)^0>> -> <<post>> [serial 2116]
 


Theorem (480)                               [serial 2111] 
P [1283] <<INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1284] NumSamples!(num_samples)
Q [1286] <<INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples) and 
true>>
by Substitution of Assertion Labels
and theorem 479:
Theorem (479) [serial 2116] used for:
  substituted Assertions' predicates for  labels  [serial 2111]
 


Theorem (481)                               [serial 2200] 
P [1283] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )>>
S [1284] ->
Q [1192] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (482)                               [serial 2195] 
P [1283] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )>>
S [1284] ->
Q [1192] <<num_samples = num_samples>>
by Equality Law (idistr):  a=a <-> true
and theorem 481:
Theorem (481) [serial 2200] used for:
  Equality Law (idistr):  a=a <-> true [serial 2195]
 


Theorem (483)                               [serial 2192] 
P [1283] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1284] ->
Q [1192] <<num_samples = num_samples>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 482:
Theorem (482) [serial 2195] used for:
    normalization of [serial 2192]
 


Theorem (484)                               [serial 2202] 
P [1284] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ) and 
(NumSamples iff num_samples)^0>>
S [1284] ->
Q [1286] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (485)                               [serial 2201] 
P [1284] <<(NumSamples iff num_samples)^0 and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ))>>
S [1284] ->
Q [1286] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )>>
by Associativity: (b.c).a = a.b.c
and theorem 484:
Theorem (484) [serial 2202] used for:
  Associativity: (b.c).a = a.b.c [serial 2201]
 


Theorem (486)                               [serial 2197] 
P [1284] <<(NumSamples iff num_samples)^0 and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ))>>
S [1284] ->
Q [1286] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and true and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] )>>
by Law of And-Simplification:  P and true is P
and theorem 485:
Theorem (485) [serial 2201] used for:
  Law of And-Simplification:  P and true is P [serial 2197]
 


Theorem (487)                               [serial 2193] 
P [1284] <<((all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (NumSamples iff num_samples)^0>>
S [1284] ->
Q [1286] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and true>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 486:
Theorem (486) [serial 2197] used for:
    normalization of [serial 2193]
 


Theorem (488)                               [serial 2116] 
P [1283] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1284] NumSamples!(num_samples)
Q [1286] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and true>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 483 487:
Theorem (483) [serial 2192] used for:
  applied port output of value <<pre>> -> <<M(NumSamples)[NumSamples|num_samples]>> [serial 2116]
 
Theorem (487) [serial 2193] used for:
  applied port output <<pre and (NumSamples iff num_samples)^0>> -> <<post>> [serial 2116]
 


Theorem (489)                               [serial 2111] 
P [1283] <<INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1284] NumSamples!(num_samples)
Q [1286] <<INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples) and 
true>>
by Substitution of Assertion Labels
and theorem 488:
Theorem (488) [serial 2116] used for:
  substituted Assertions' predicates for  labels  [serial 2111]
 


Theorem (490)                               [serial 2106] 
P [1283] <<INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1284] NumSamples!(num_samples)
Q [1286] <<INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples) and 
AXIOM_CR()>>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 489 489:
Theorem (489) [serial 2111] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (489) [serial 2111] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (491)                               [serial 2190] 
P [1290] <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = heart_rate[i]>>
S [1291] ->
Q [1292] <<(MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = heart_rate[i]>>
by Identity (id):  P->P is tautology


Theorem (492)                               [serial 2188] 
P [1290] <<heart_rate[i] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i))>>
S [1291] ->
Q [1292] <<(heart_rate[i]) = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 491:
Theorem (491) [serial 2190] used for:
    normalization of [serial 2188]
 


Theorem (493)                               [serial 2126] 
P [1290] <<heart_rate[i] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i))>>
S [1291] hr_nxt[i+1] := heart_rate[i]
Q [1292] <<hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i))>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 492:
Theorem (492) [serial 2188] used for:
  applied wp for assignment [serial 2126]
 


Theorem (494)                               [serial 2187] 
P [1286] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #20#:integer
  in 0..num_samples-2 
  are (MotionArtifact^(- (1+#20#)) or not SensorConnected^(- (1+#20#))??0:HeartRate^(- (1+#20#))) = heart_rate[
      1+#20#] ) and (num_samples-2) < (num_samples-1)>>
S [1288] ->
Q [1294] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #21#:integer
  in 0..num_samples-2 
  are (MotionArtifact^(- (1+#21#)) or not SensorConnected^(- (1+#21#))??0:HeartRate^(- (1+#21#))) = heart_rate[
      1+#21#] )>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (495)                               [serial 2185] 
P [1286] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #20#:integer
  in 0..num_samples-1 
  are (MotionArtifact^(- (1+#20#)) or not SensorConnected^(- (1+#20#))??0:HeartRate^(- (1+#20#))) = heart_rate[
      1+#20#] ) and (num_samples-2) < (num_samples-1)>>
S [1288] ->
Q [1294] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #21#:integer
  in 0..num_samples-2 
  are (MotionArtifact^(- (1+#21#)) or not SensorConnected^(- (1+#21#))??0:HeartRate^(- (1+#21#))) = heart_rate[
      1+#21#] )>>
by Contract Universal Quantification Range
and theorem 494:
Theorem (494) [serial 2187] used for:
  Contract Universal Quantification Range [serial 2185]
 


Theorem (496)                               [serial 2183] 
P [1286] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #20#:integer
  in 0..(num_samples-1) 
  are (MotionArtifact^(- (#20#+1)) or not SensorConnected^(- (#20#+1))??0:HeartRate^(- (#20#+1))) = heart_rate[(
      #20#+1)] ) and (num_samples-2) < (num_samples-1)>>
S [1288] ->
Q [1294] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #21#:integer
  in 0..((num_samples-1)-1) 
  are (MotionArtifact^(- (#21#+1)) or not SensorConnected^(- (#21#+1))??0:HeartRate^(- (#21#+1))) = heart_rate[(
      #21#+1)] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 495:
Theorem (495) [serial 2185] used for:
    normalization of [serial 2183]
 


Theorem (497)                               [serial 2182] 
P [1286] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #20#:integer
  in 1..num_samples 
  are (MotionArtifact^(- #20#) or not SensorConnected^(- #20#)??0:HeartRate^(- #20#)) = heart_rate[#20#] ) and 
(num_samples-2) < (num_samples-1)>>
S [1288] ->
Q [1294] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all #21#:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- #21#) or not SensorConnected^(- #21#)??0:HeartRate^(- #21#)) = heart_rate[#21#] )>>
by Shift Quantification Range so Lower Bound is Zero
and theorem 496:
Theorem (496) [serial 2183] used for:
  Shift Quantification Range so Lower Bound is Zero [serial 2182]
 


Theorem (498)                               [serial 2180] 
P [1286] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = heart_rate[s] ) and 
(num_samples-2) < (num_samples-1)>>
S [1288] ->
Q [1294] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = heart_rate[i] )>>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 497:
Theorem (497) [serial 2182] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2180]
 


Theorem (499)                               [serial 2127] 
P [1286] <<((all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and ((num_samples-2) < (num_samples-1)))>>
S [1288] ->
Q [1294] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = heart_rate[i] )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 498:
Theorem (498) [serial 2180] used for:
    normalization of [serial 2127]
 


Theorem (500)                               [serial 2115] 
P [1286] <<(all s:integer
  in 1..num_samples 
  are heart_rate[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and ((num_samples-2) < (num_samples-1))>>
S [1288] forall i in 1..num_samples-1
  {
  <<heart_rate[i] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i))>>
  hr_nxt[i+1] := heart_rate[i]
  <<hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i))>>
  }  
Q [1294] <<(all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
by Universal Quantification Rule:
                      <<A>> T <<B>>
       <<P and (z in r) and (x=e) and FAT>> -> <<wp(forall,Q)>>
 --------------------------------------------------------------------
 <<P>> forall z:i in r declare variable x:t:=e; begin <<A>> T <<B>> end <<Q>>
   where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
     (in postcondition Q, replace all occurances of
     "all z:i in r are B" with "all z:i in r are A"
   and FAT are "fetch-add terms", if any (bl.ulq)
and theorems 493 499:
Theorem (493) [serial 2126] used for:
  <<A>> T <<B>> as subject for universal lattice quantification by [serial 2115]
 
Theorem (499) [serial 2127] used for:
    <<P and (x=e) and FAT>> -> <<wp(forall,Q)>>
 where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
   (in postcondition Q, replace all occurances of
    <<all z:i in r are B>> with <<all z:i in r are A>>)
  for [serial 2115]
 


Theorem (501)                               [serial 2107] 
P [1286] <<INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples) and 
AXIOM_CR()>>
S [1288] forall i in 1..num_samples-1
  {
  <<heart_rate[i] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i))>>
  hr_nxt[i+1] := heart_rate[i]
  <<hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i))>>
  }  
Q [1294] <<(all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
by Substitution of Assertion Labels
and theorem 500:
Theorem (500) [serial 2115] used for:
  substituted Assertions' predicates for  labels  [serial 2107]
 


Theorem (502)                               [serial 2134] 
P [1294] <<(all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1298] ->
Q [1298] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (503)                               [serial 2117] 
P [1294] <<(all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1298] ->
Q [1298] <<(MotionArtifact^0 or not SensorConnected^0) or (not (MotionArtifact^0 or 
not SensorConnected^0))>>
by Law of Excluded Middle: P or not P is tautology
and theorem 502:
Theorem (502) [serial 2134] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2117]
 


Theorem (504)                               [serial 2203] 
P [1298] <<(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )) and (MotionArtifact or not SensorConnected)>>
S [1298] ->
Q [1300] <<(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )) and (MotionArtifact or not SensorConnected)>>
by Identity (id):  P->P is tautology


Theorem (505)                               [serial 2128] 
P [1298] <<((all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (MotionArtifact^0 or 
not SensorConnected^0)>>
S [1298] ->
Q [1300] <<((all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (MotionArtifact^0 or 
not SensorConnected^0)>>
by Assume Present:  P = P@now = P^0 
and theorem 504:
Theorem (504) [serial 2203] used for:
  Assume Present:  P = P@now = P^0  [serial 2128]
 


Theorem (506)                               [serial 2118] 
P [1298] <<((all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (MotionArtifact^0 or 
not SensorConnected^0)>>
S [1298] ->
Q [1300] <<SHFTR_HR() and (MotionArtifact^0 or not SensorConnected^0)>>
by Substitution of Assertion Labels
and theorem 505:
Theorem (505) [serial 2128] used for:
  substituted Assertions' predicates for  labels  [serial 2118]
 


Theorem (507)                               [serial 2210] 
P [1300] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1301] ->
Q [1302] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (508)                               [serial 2208] 
P [1300] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1301] ->
Q [1302] <<((num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 507:
Theorem (507) [serial 2210] used for:
    normalization of [serial 2208]
 


Theorem (509)                               [serial 2207] 
P [1300] <<(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1301] ->
Q [1302] <<((num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )))>>
by Associativity: (b.c).a = a.b.c
and theorem 508:
Theorem (508) [serial 2208] used for:
  Associativity: (b.c).a = a.b.c [serial 2207]
 


Theorem (510)                               [serial 2206] 
P [1300] <<(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1301] ->
Q [1302] <<true and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ))>>
by Law of And-Simplification:  P and true is P
and theorem 509:
Theorem (509) [serial 2207] used for:
  Law of And-Simplification:  P and true is P [serial 2206]
 


Theorem (511)                               [serial 2205] 
P [1300] <<(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )) and (MotionArtifact^0 or not SensorConnected^0)>>
S [1301] ->
Q [1302] <<0 = 0 and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ))>>
by Equality Law (idistr):  a=a <-> true
and theorem 510:
Theorem (510) [serial 2206] used for:
  Equality Law (idistr):  a=a <-> true [serial 2205]
 


Theorem (512)                               [serial 2204] 
P [1300] <<((all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (MotionArtifact^0 or 
not SensorConnected^0)>>
S [1301] ->
Q [1302] <<((all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (0 = (MotionArtifact^0 or 
not SensorConnected^0??0:HeartRate^0))>>
by Conditional True Expression:  b and x=e  iff  b and x=(b??e:g) 
and theorem 511:
Theorem (511) [serial 2205] used for:
   Conditional True Expression:  b and x=e  iff  b and x=(b??e:g)  [serial 2204]
 


Theorem (513)                               [serial 2129] 
P [1300] <<((all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (MotionArtifact^0 or 
not SensorConnected^0)>>
S [1301] hr_nxt[1] := 0
Q [1302] <<((all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (hr_nxt[1] = (
MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0))>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 512:
Theorem (512) [serial 2204] used for:
  applied wp for assignment [serial 2129]
 


Theorem (514)                               [serial 2119] 
P [1300] <<SHFTR_HR() and (MotionArtifact^0 or not SensorConnected^0)>>
S [1301] hr_nxt[1] := 0
Q [1302] <<SHFTR_HR() and (hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0))>>
by Substitution of Assertion Labels
and theorem 513:
Theorem (513) [serial 2129] used for:
  substituted Assertions' predicates for  labels  [serial 2119]
 


Theorem (515)                               [serial 2225] 
P [1302] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..-2+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:HeartRate^(-1+- i)) = hr_nxt[
      2+i] )>>
S [1298] ->
Q [1309] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..-2+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:HeartRate^(-1+- i)) = hr_nxt[
      2+i] )>>
by Identity (id):  P->P is tautology


Theorem (516)                               [serial 2223] 
P [1302] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..-2+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:HeartRate^(-1+- i)) = hr_nxt[
      1+i+1] ) and (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1]>>
S [1298] ->
Q [1309] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..-2+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:HeartRate^(-1+- i)) = hr_nxt[
      2+i] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 515:
Theorem (515) [serial 2225] used for:
    normalization of [serial 2223]
 


Theorem (517)                               [serial 2221] 
P [1302] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..-2+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:HeartRate^(-1+- i)) = hr_nxt[
      1+(1+i)] ))>>
S [1298] ->
Q [1309] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..-2+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:HeartRate^(-1+- i)) = hr_nxt[
      2+i] )>>
by Associativity: (b.c).a = a.b.c
and theorem 516:
Theorem (516) [serial 2223] used for:
  Associativity: (b.c).a = a.b.c [serial 2221]
 


Theorem (518)                               [serial 2219] 
P [1302] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..num_samples+ -2 
  are (MotionArtifact^((- 1+- i)) or not SensorConnected^((- 1+- i))??0:HeartRate^((- 1+- i))) = hr_nxt[
      1+(1+i)] ))>>
S [1298] ->
Q [1309] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..num_samples+ -2 
  are (MotionArtifact^(1+- 2+- i) or not SensorConnected^(1+- 2+- i)??0:HeartRate^(1+- 2+- i)) = hr_nxt[
      2+i] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 517:
Theorem (517) [serial 2221] used for:
    normalization of [serial 2219]
 


Theorem (519)                               [serial 2217] 
P [1302] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..num_samples-2 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:HeartRate^(- (1+i))) = hr_nxt[
      1+(1+i)] ))>>
S [1298] ->
Q [1309] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..num_samples-2 
  are (MotionArtifact^(1-(2+i)) or not SensorConnected^(1-(2+i))??0:HeartRate^(1-(2+i))) = hr_nxt[
      2+i] )>>
by Equivlence of negation and subtraction: (a-b) = (a + (-b))
and theorem 518:
Theorem (518) [serial 2219] used for:
   changing adding negation to subtraction  [serial 2217]
 


Theorem (520)                               [serial 2215] 
P [1302] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..((num_samples-1)-1) 
  are (MotionArtifact^(- (i+1)) or not SensorConnected^(- (i+1))??0:HeartRate^(- (i+1))) = hr_nxt[
      1+(i+1)] ))>>
S [1298] ->
Q [1309] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..(num_samples-2) 
  are (MotionArtifact^(1-(i+2)) or not SensorConnected^(1-(i+2))??0:HeartRate^(1-(i+2))) = hr_nxt[(
      i+2)] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 519:
Theorem (519) [serial 2217] used for:
    normalization of [serial 2215]
 


Theorem (521)                               [serial 2213] 
P [1302] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ))>>
S [1298] ->
Q [1309] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 2..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
by Shift Quantification Range so Lower Bound is Zero
and theorem 520:
Theorem (520) [serial 2215] used for:
  Shift Quantification Range so Lower Bound is Zero [serial 2213]
 


Theorem (522)                               [serial 2130] 
P [1302] <<((all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (hr_nxt[1] = (
MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0))>>
S [1298] ->
Q [1309] <<(hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0)) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and (all i:integer
  in 2..num_samples 
  are hr_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 521:
Theorem (521) [serial 2213] used for:
    normalization of [serial 2130]
 


Theorem (523)                               [serial 2120] 
P [1302] <<SHFTR_HR() and (hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0))>>
S [1298] ->
Q [1309] <<(hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0)) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and (all i:integer
  in 2..num_samples 
  are hr_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
by Substitution of Assertion Labels
and theorem 522:
Theorem (522) [serial 2130] used for:
  substituted Assertions' predicates for  labels  [serial 2120]
 


Theorem (524)                               [serial 2228] 
P [1298] <<not (MotionArtifact^0 or not SensorConnected^0) and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ))>>
S [1298] ->
Q [1305] <<not (MotionArtifact^0 or not SensorConnected^0) and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ))>>
by Identity (id):  P->P is tautology


Theorem (525)                               [serial 2131] 
P [1298] <<((all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (not (MotionArtifact^0 or 
not SensorConnected^0))>>
S [1298] ->
Q [1305] <<((all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and not (MotionArtifact^0 or 
not SensorConnected^0)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 524:
Theorem (524) [serial 2228] used for:
    normalization of [serial 2131]
 


Theorem (526)                               [serial 2121] 
P [1298] <<((all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (not (MotionArtifact^0 or 
not SensorConnected^0))>>
S [1298] ->
Q [1305] <<SHFTR_HR() and not (MotionArtifact^0 or not SensorConnected^0)>>
by Substitution of Assertion Labels
and theorem 525:
Theorem (525) [serial 2131] used for:
  substituted Assertions' predicates for  labels  [serial 2121]
 


Theorem (527)                               [serial 2239] 
P [1305] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and not (MotionArtifact^0 or 
not SensorConnected^0) and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
S [1306] ->
Q [1307] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (528)                               [serial 2237] 
P [1305] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ) and not (MotionArtifact^0 or not SensorConnected^0)>>
S [1306] ->
Q [1307] <<((num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 527:
Theorem (527) [serial 2239] used for:
    normalization of [serial 2237]
 


Theorem (529)                               [serial 2236] 
P [1305] <<not (MotionArtifact^0 or not SensorConnected^0) and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ))>>
S [1306] ->
Q [1307] <<((num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] )))>>
by Associativity: (b.c).a = a.b.c
and theorem 528:
Theorem (528) [serial 2237] used for:
  Associativity: (b.c).a = a.b.c [serial 2236]
 


Theorem (530)                               [serial 2235] 
P [1305] <<not (MotionArtifact^0 or not SensorConnected^0) and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ))>>
S [1306] ->
Q [1307] <<true and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ))>>
by Law of And-Simplification:  P and true is P
and theorem 529:
Theorem (529) [serial 2236] used for:
  Law of And-Simplification:  P and true is P [serial 2235]
 


Theorem (531)                               [serial 2234] 
P [1305] <<not (MotionArtifact^0 or not SensorConnected^0) and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ))>>
S [1306] ->
Q [1307] <<HeartRate^0 = HeartRate^0 and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ))>>
by Equality Law (idistr):  a=a <-> true
and theorem 530:
Theorem (530) [serial 2235] used for:
  Equality Law (idistr):  a=a <-> true [serial 2234]
 


Theorem (532)                               [serial 2232] 
P [1305] <<not (MotionArtifact^0 or not SensorConnected^0) and (num_samples = #PulseOx_Properties::Num_Trending_Samples and 
(all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ))>>
S [1306] ->
Q [1307] <<HeartRate^0 = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ))>>
by Conditional False Expression:  not b and x=g  iff  not b and x=(b??e:g) 
and theorem 531:
Theorem (531) [serial 2234] used for:
   Conditional False Expression:  not b and x=g  iff  not b and x=(b??e:g)  [serial 2232]
 


Theorem (533)                               [serial 2230] 
P [1305] <<((all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and not (MotionArtifact^0 or 
not SensorConnected^0)>>
S [1306] ->
Q [1307] <<((all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and ((HeartRate^0) = (
MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 532:
Theorem (532) [serial 2232] used for:
    normalization of [serial 2230]
 


Theorem (534)                               [serial 2132] 
P [1305] <<((all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and not (MotionArtifact^0 or 
not SensorConnected^0)>>
S [1306] hr_nxt[1] := HeartRate?
Q [1307] <<((all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (hr_nxt[1] = (
MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0))>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 533:
Theorem (533) [serial 2230] used for:
  applied wp for assignment [serial 2132]
 


Theorem (535)                               [serial 2122] 
P [1305] <<SHFTR_HR() and not (MotionArtifact^0 or not SensorConnected^0)>>
S [1306] hr_nxt[1] := HeartRate?
Q [1307] <<SHFTR_HR() and (hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0))>>
by Substitution of Assertion Labels
and theorem 534:
Theorem (534) [serial 2132] used for:
  substituted Assertions' predicates for  labels  [serial 2122]
 


Theorem (536)                               [serial 2245] 
P [1307] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1]>>
S [1298] ->
Q [1309] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1]>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (537)                               [serial 2246] 
P [1307] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1]>>
S [1298] ->
Q [1310] <<num_samples = #PulseOx_Properties::Num_Trending_Samples>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (538)                               [serial 2255] 
P [1307] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..-2+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:HeartRate^(-1+- i)) = hr_nxt[
      2+i] )>>
S [1298] ->
Q [1311] <<all i:integer
  in 0..-2+num_samples 
  are (MotionArtifact^(-1+- i) or not SensorConnected^(-1+- i)??0:HeartRate^(-1+- i)) = hr_nxt[
      2+i] >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (539)                               [serial 2253] 
P [1307] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..num_samples+ -2 
  are (MotionArtifact^((- 1+- i)) or not SensorConnected^((- 1+- i))??0:HeartRate^((- 1+- i))) = hr_nxt[
      1+i+1] )>>
S [1298] ->
Q [1311] <<all i:integer
  in 0..num_samples+ -2 
  are (MotionArtifact^(1+- 2+- i) or not SensorConnected^(1+- 2+- i)??0:HeartRate^(1+- 2+- i)) = hr_nxt[
      2+i] >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 538:
Theorem (538) [serial 2255] used for:
    normalization of [serial 2253]
 


Theorem (540)                               [serial 2252] 
P [1307] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..num_samples-2 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:HeartRate^(- (1+i))) = hr_nxt[
      1+i+1] )>>
S [1298] ->
Q [1311] <<all i:integer
  in 0..num_samples-2 
  are (MotionArtifact^(1-(2+i)) or not SensorConnected^(1-(2+i))??0:HeartRate^(1-(2+i))) = hr_nxt[
      2+i] >>
by Equivlence of negation and subtraction: (a-b) = (a + (-b))
and theorem 539:
Theorem (539) [serial 2253] used for:
   changing adding negation to subtraction  [serial 2252]
 


Theorem (541)                               [serial 2250] 
P [1307] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..num_samples-2 
  are (MotionArtifact^(- (1+i)) or not SensorConnected^(- (1+i))??0:HeartRate^(- (1+i))) = hr_nxt[
      1+(1+i)] )>>
S [1298] ->
Q [1311] <<all i:integer
  in 0..num_samples-2 
  are (MotionArtifact^(1-(2+i)) or not SensorConnected^(1-(2+i))??0:HeartRate^(1-(2+i))) = hr_nxt[
      2+i] >>
by Associativity: (b.c).a = a.b.c
and theorem 540:
Theorem (540) [serial 2252] used for:
  Associativity: (b.c).a = a.b.c [serial 2250]
 


Theorem (542)                               [serial 2248] 
P [1307] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 0..((num_samples-1)-1) 
  are (MotionArtifact^(- (i+1)) or not SensorConnected^(- (i+1))??0:HeartRate^(- (i+1))) = hr_nxt[
      1+(i+1)] ) and (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1]>>
S [1298] ->
Q [1311] <<(all i:integer
  in 0..(num_samples-2) 
  are (MotionArtifact^(1-(i+2)) or not SensorConnected^(1-(i+2))??0:HeartRate^(1-(i+2))) = hr_nxt[(
      i+2)] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Associativity: (b.c).a = a.b.c
and theorem 541:
Theorem (541) [serial 2250] used for:
    normalization of [serial 2248]
 


Theorem (543)                               [serial 2247] 
P [1307] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1]>>
S [1298] ->
Q [1311] <<(all i:integer
  in 2..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
by Shift Quantification Range so Lower Bound is Zero
and theorem 542:
Theorem (542) [serial 2248] used for:
  Shift Quantification Range so Lower Bound is Zero [serial 2247]
 


Theorem (544)                               [serial 2244] 
P [1307] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ) and (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1]>>
S [1298] ->
Q [1309] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 2..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 536 537 543:
Theorem (536) [serial 2245] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2244]
 
Theorem (537) [serial 2246] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2244]
 
Theorem (543) [serial 2247] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2244]
 


Theorem (545)                               [serial 2242] 
P [1307] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples-1 
  are (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) = hr_nxt[
      1+i] ))>>
S [1298] ->
Q [1309] <<(MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0) = hr_nxt[1] and 
num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 2..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
by Associativity: (b.c).a = a.b.c
and theorem 544:
Theorem (544) [serial 2244] used for:
  Associativity: (b.c).a = a.b.c [serial 2242]
 


Theorem (546)                               [serial 2133] 
P [1307] <<((all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)) and (hr_nxt[1] = (
MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0))>>
S [1298] ->
Q [1309] <<(hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0)) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and (all i:integer
  in 2..num_samples 
  are hr_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 545:
Theorem (545) [serial 2242] used for:
    normalization of [serial 2133]
 


Theorem (547)                               [serial 2123] 
P [1307] <<SHFTR_HR() and (hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0))>>
S [1298] ->
Q [1309] <<(hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0)) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and (all i:integer
  in 2..num_samples 
  are hr_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
by Substitution of Assertion Labels
and theorem 546:
Theorem (546) [serial 2133] used for:
  substituted Assertions' predicates for  labels  [serial 2123]
 


Theorem (548)                               [serial 2108] 
P [1294] <<(all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1298] if 
(MotionArtifact? or not SensorConnected?)~> 
  <<SHFTR_HR() and (MotionArtifact^0 or not SensorConnected^0)>>
  hr_nxt[1] := 0
  <<SHFTR_HR() and (hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0))>> 
[]
(not (MotionArtifact? or not SensorConnected?))~> 
  <<SHFTR_HR() and not (MotionArtifact^0 or not SensorConnected^0)>>
  hr_nxt[1] := HeartRate?
  <<SHFTR_HR() and (hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0))>> 
fi
Q [1309] <<(hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0)) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and (all i:integer
  in 2..num_samples 
  are hr_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
by Alternative Rule:
 <<P>> -> <<B1 or B2 or ... or Bn>>,
 <<P and B1>> -> <<P1>>, <<P and B2>> -> <<P2>>, . . . , <<P and Bn>> -> <<Pn>>,
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>,
 <<Q1>> -> <<Q>>, <<Q2>> -> <<Q>>, . . . <<Qn>> -> <<Q>>
 -------------------------------------------------------------------------
 <<P>> if B1-><<P1>>S1<<Q1>> [] B2-><<P2>>S2<<Q2>> [] . . . [] Bn-><<Pn>>Sn<<Qn>> fi <<Q>> (bl.iffi)
and theorems 503 506 514 523 526 535 547:
Theorem (503) [serial 2117] used for:
    <<P>> -> <<B1 or B2 or ... or Bn>>  in if-[]-fi  for [serial 2108]
 
Theorem (506) [serial 2118] used for:
    <<P and B0>> -> <<P0>>  for [serial 2108]
 
Theorem (514) [serial 2119] used for:
    <<P0>> S0 <<Q0>>  for [serial 2108]
 
Theorem (523) [serial 2120] used for:
    <<Q0>> -> <<Q>>  for [serial 2108]
 
Theorem (526) [serial 2121] used for:
    <<P and B1>> -> <<P1>>  for [serial 2108]
 
Theorem (535) [serial 2122] used for:
    <<P1>> S1 <<Q1>>  for [serial 2108]
 
Theorem (547) [serial 2123] used for:
    <<Q1>> -> <<Q>>  for [serial 2108]
 


Theorem (549)                               [serial 2138] 
P [1316] <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i]>>
S [1317] ->
Q [1318] <<(MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i]>>
by Identity (id):  P->P is tautology


Theorem (550)                               [serial 2136] 
P [1316] <<hr_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i))>>
S [1317] ->
Q [1318] <<(hr_nxt[i]) = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 549:
Theorem (549) [serial 2138] used for:
    normalization of [serial 2136]
 


Theorem (551)                               [serial 2124] 
P [1316] <<hr_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i))>>
S [1317] heart_rate[i] := hr_nxt[i]
Q [1318] <<heart_rate[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i))>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 550:
Theorem (550) [serial 2136] used for:
  applied wp for assignment [serial 2124]
 


Theorem (552)                               [serial 2135] 
P [1320] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
S [1314] ->
Q [1320] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
by Identity (id):  P->P is tautology


Theorem (553)                               [serial 2125] 
P [1309] <<((hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0)) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and (all i:integer
  in 2..num_samples 
  are hr_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) ))>>
S [1314] ->
Q [1320] <<num_samples = #PulseOx_Properties::Num_Trending_Samples and (all i:integer
  in 1..num_samples 
  are (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) = hr_nxt[i] )>>
by Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j)
and theorem 552:
Theorem (552) [serial 2135] used for:
  Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j) [serial 2125]
 


Theorem (554)                               [serial 2109] 
P [1309] <<(hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0)) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples) and (all i:integer
  in 2..num_samples 
  are hr_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
S [1314] forall i in 1..num_samples
  {
  <<hr_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i))>>
  heart_rate[i] := hr_nxt[i]
  <<heart_rate[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i))>>
  }  
Q [1320] <<(all i:integer
  in 1..num_samples 
  are heart_rate[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
by Universal Quantification Rule:
                      <<A>> T <<B>>
       <<P and (z in r) and (x=e) and FAT>> -> <<wp(forall,Q)>>
 --------------------------------------------------------------------
 <<P>> forall z:i in r declare variable x:t:=e; begin <<A>> T <<B>> end <<Q>>
   where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
     (in postcondition Q, replace all occurances of
     "all z:i in r are B" with "all z:i in r are A"
   and FAT are "fetch-add terms", if any (bl.ulq)
and theorems 551 553:
Theorem (551) [serial 2124] used for:
  <<A>> T <<B>> as subject for universal lattice quantification by [serial 2109]
 
Theorem (553) [serial 2125] used for:
    <<P and (x=e) and FAT>> -> <<wp(forall,Q)>>
 where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
   (in postcondition Q, replace all occurances of
    <<all z:i in r are B>> with <<all z:i in r are A>>)
  for [serial 2109]
 


Theorem (555)                               [serial 2140] 
P [1320] <<(all i:integer
  in 1..num_samples 
  are heart_rate[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1324] ->
Q [1325] <<(all i:integer
  in 1..num_samples 
  are heart_rate[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
by Identity (id):  P->P is tautology


Theorem (556)                               [serial 2110] 
P [1320] <<(all i:integer
  in 1..num_samples 
  are heart_rate[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) ) and 
(num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1324] (heart_rate',num_samples' := heart_rate,num_samples)  
Q [1325] <<(all i:integer
  in 1..num_samples 
  are heart_rate[i]' = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) ) and 
(num_samples' = #PulseOx_Properties::Num_Trending_Samples)>>
by Simultaneous Assignment
and theorem 555:
Theorem (555) [serial 2140] used for:
  applied wp for simultaneous assignment [serial 2110]
 


Theorem (557)                               [serial 1025] 
P [1222] <<INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
S [1280] <<INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
HeartRateTrend!(heart_rate)
;
<<INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
NumSamples!(num_samples)
;
<<INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples) and AXIOM_CR()>>
forall i in 1..num_samples-1
  {
  <<heart_rate[i] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i))>>
  hr_nxt[i+1] := heart_rate[i]
  <<hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i))>>
  }  
<<SHFTR_HR: :(all i:integer
  in 1..num_samples-1 
  are hr_nxt[i+1] = (MotionArtifact^(- i) or not SensorConnected^(- i)??0:HeartRate^(- i)) ) and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
;
if 
(MotionArtifact? or not SensorConnected?)~> 
  <<SHFTR_HR() and (MotionArtifact^0 or not SensorConnected^0)>>
  hr_nxt[1] := 0
  <<SHFTR_HR() and (hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0))>> 
[]
(not (MotionArtifact? or not SensorConnected?))~> 
  <<SHFTR_HR() and not (MotionArtifact^0 or not SensorConnected^0)>>
  hr_nxt[1] := HeartRate?
  <<SHFTR_HR() and (hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0))>> 
fi
<<(hr_nxt[1] = (MotionArtifact^0 or not SensorConnected^0??0:HeartRate^0)) and (num_samples = #PulseOx_Properties::Num_Trending_Samples) and (all i:integer
  in 2..num_samples 
  are hr_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) )>>
;
forall i in 1..num_samples
  {
  <<hr_nxt[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i))>>
  heart_rate[i] := hr_nxt[i]
  <<heart_rate[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i))>>
  }  
<<(all i:integer
  in 1..num_samples 
  are heart_rate[i] = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) ) and (num_samples = #PulseOx_Properties::Num_Trending_Samples)>>
;
(heart_rate',num_samples' := heart_rate,num_samples)  
<<(all i:integer
  in 1..num_samples 
  are heart_rate[i]' = (MotionArtifact^(1-i) or not SensorConnected^(1-i)??0:HeartRate^(1-i)) ) and (num_samples' = #PulseOx_Properties::Num_Trending_Samples)>>
Q [1222] <<(INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples))^1>>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 450 465 471 490 501 548 554 556:
Theorem (450) [serial 2103] used for:
  P -> P1 in sequential composition for [serial 1025]
 
Theorem (465) [serial 2104] used for:
  Q5 -> Q in sequential composition for [serial 1025]
 
Theorem (471) [serial 2105] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1025]
 
Theorem (490) [serial 2106] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1025]
 
Theorem (501) [serial 2107] used for:
  <<Q1 and P2>> S2 <<Q2 and P3>> in sequential composition for [serial 1025]
 
Theorem (548) [serial 2108] used for:
  <<Q2 and P3>> S3 <<Q3 and P4>> in sequential composition for [serial 1025]
 
Theorem (554) [serial 2109] used for:
  <<Q3 and P4>> S4 <<Q4 and P5>> in sequential composition for [serial 1025]
 
Theorem (556) [serial 2110] used for:
  <<Q4 and P5>> S5 <<Q5>> in sequential composition for [serial 1025]
 


Theorem (558)                               [serial 1026] 
P [1330] <<(INV_HR() and (num_samples < #PulseOx_Properties::Num_Trending_Samples)) and 
stop@now and not (exists u:time
  in tops,,now 
  that true ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [1330] ->
Q [1223] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (559)                               [serial 1027] 
P [1330] <<(INV_HR() and (num_samples = #PulseOx_Properties::Num_Trending_Samples)) and 
stop@now and not (exists u:time
  in tops,,now 
  that true ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [1330] ->
Q [1223] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (560)                               [serial 1015] 
P [1201] << >>
S [1205] ->
Q [1201] <<HeartRateTrendThread.imp proof obligations>>
by Initial Thread Obligations
and theorems 296 298 299 302 330 409 427 445 446 557 558 559:
Theorem (296) [serial 1016] used for:
  <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
 
Theorem (298) [serial 1017] used for:
  <<M(fill)>> -> <<I>> from invariant I when complete state fill has Assertion <<M(fill)>> in its definition.
 
Theorem (299) [serial 1018] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (302) [serial 1019] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check, <<M(check)>> -> <<e1 or e2 or . . . en>>
 
Theorem (330) [serial 1020] used for:
   <<M(start)>> A <<M(fill)>> for hrtt0:start-[ ]->fill{A};
 
Theorem (409) [serial 1021] used for:
   <<M(fill) and x>> A <<M(check)>> for hrtt1:fill-[x]->check{A};
 
Theorem (427) [serial 1022] used for:
   <<M(check) and x>> A <<M(fill)>> for hrtt2a:check-[x]->fill{A};
 
Theorem (445) [serial 1023] used for:
   <<M(check) and x>> A <<M(run)>> for hrtt2b:check-[x]->run{A};
 
Theorem (446) [serial 1024] used for:
   <<M(check) and x>> -> <<M(fail)>> for hrtt2c:check-[x]->fail{};
 
Theorem (557) [serial 1025] used for:
   <<M(run) and x>> A <<M(run)>> for hrtt3:run-[x]->run{A};
 
Theorem (558) [serial 1026] used for:
   <<M(fill) and x>> -> <<M(halt)>> for hrtt4:fill-[x]->halt{};
 
Theorem (559) [serial 1027] used for:
   <<M(run) and x>> -> <<M(halt)>> for hrtt4:run-[x]->halt{};
 


Theorem (561)                               [serial 1097] 
P [751] <<WINDOW() and TOTAL_SPO2() and GOOD() and GS() and ((ub-lb) < window_size)>>
S [727] ->
Q [727] <<WINDOW() and TOTAL_SPO2() and GOOD() and GS()>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (562)                               [serial 1096] 
P [751] <<((ub-lb) < window_size) and (WINDOW() and TOTAL_SPO2() and GOOD() and 
GS())>>
S [727] ->
Q [727] <<WINDOW() and TOTAL_SPO2() and GOOD() and GS()>>
by Associativity: (b.c).a = a.b.c
and theorem 561:
Theorem (561) [serial 1097] used for:
  Associativity: (b.c).a = a.b.c [serial 1096]
 


Theorem (563)                               [serial 1029] 
P [751] <<((ub-lb) < window_size) and INV_AV()>>
S [727] ->
Q [727] <<WINDOW() and TOTAL_SPO2() and GOOD() and GS()>>
by Substitution of Assertion Labels
and theorem 562:
Theorem (562) [serial 1096] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1029]
 


Theorem (564)                               [serial 1099] 
P [762] <<WINDOW() and TOTAL_SPO2() and GOOD() and GS() and ((ub-lb) = window_size)>>
S [727] ->
Q [727] <<WINDOW() and TOTAL_SPO2() and GOOD() and GS()>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (565)                               [serial 1098] 
P [762] <<(WINDOW() and TOTAL_SPO2() and GOOD() and GS()) and ((ub-lb) = window_size)>>
S [727] ->
Q [727] <<WINDOW() and TOTAL_SPO2() and GOOD() and GS()>>
by Associativity: (b.c).a = a.b.c
and theorem 564:
Theorem (564) [serial 1099] used for:
  Associativity: (b.c).a = a.b.c [serial 1098]
 


Theorem (566)                               [serial 1030] 
P [762] <<INV_AV() and ((ub-lb) = window_size)>>
S [727] ->
Q [727] <<WINDOW() and TOTAL_SPO2() and GOOD() and GS()>>
by Substitution of Assertion Labels
and theorem 565:
Theorem (565) [serial 1098] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1030]
 


Theorem (567)                               [serial 1103] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C((1+k)-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C((1+k)-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [753] ->
Q [753] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (568)                               [serial 1101] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C((1+k)-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C((1+k)-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [753] ->
Q [753] <<window_size = (ub-lb) or window_size < (ub-lb) or (ub-lb) < window_size>>
by Less than, greater than, or equal:  |-a<b or b<a or a=b
and theorem 567:
Theorem (567) [serial 1103] used for:
  Less than, greater than, or equal:  |-a<b or b<a or a=b [serial 1101]
 


Theorem (569)                               [serial 1031] 
P [753] <<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-(ub-1)) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-(ub-1)) )) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-(ub-1)) and 
      not MotionArtifact^(k-(ub-1))) )>>
S [753] ->
Q [753] <<((ub-lb) < window_size) or ((ub-lb) = window_size) or ((ub-lb) > window_size)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
    Associativity: (b.c).a = a.b.c
and theorem 568:
Theorem (568) [serial 1101] used for:
    normalization of [serial 1031]
 


Theorem (570)                               [serial 1108] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0>>
S [748] ->
Q [748] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (571)                               [serial 1107] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0>>
S [748] ->
Q [748] <<(not ((ub-lb) < window_size)) or (ub-lb) < window_size>>
by Law of Excluded Middle: P or not P is tautology
and theorem 570:
Theorem (570) [serial 1108] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1107]
 


Theorem (572)                               [serial 1105] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0>>
S [748] ->
Q [748] <<window_size <= (ub-lb) or (ub-lb) < window_size>>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 571:
Theorem (571) [serial 1107] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1105]
 


Theorem (573)                               [serial 1032] 
P [748] <<(numSamplesInWindow = 0) and (ub = 0) and (oldestSample = 0) and (totalSpO2 = 0) and 
(lb = 0) and (goodCount = 0)>>
S [748] ->
Q [748] <<((ub-lb) < window_size) or ((ub-lb) >= window_size)>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 572:
Theorem (572) [serial 1105] used for:
    normalization of [serial 1032]
 


Theorem (574)                               [serial 1186] 
P [748] <<(goodCount = 0) and (lb = 0) and (numSamplesInWindow = 0) and (oldestSample = 0) and 
(totalSpO2 = 0) and (ub = 0) and (0 < window_size)>>
S [767] ->
Q [751] <<0 < window_size>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (575)                               [serial 1181] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and ub < window_size>>
S [767] ->
Q [751] <<0 < window_size>>
by Substituting Equals Within Conjunction
and theorem 574:
Theorem (574) [serial 1186] used for:
  Substituting Equals Within Conjunction [serial 1181]
 


Theorem (576)                               [serial 1178] 
P [748] <<(goodCount = 0) and (lb = 0) and (numSamplesInWindow = 0) and (oldestSample = 0) and 
(totalSpO2 = 0) and (ub = 0) and ((ub-0) < window_size)>>
S [767] ->
Q [751] <<0 < window_size>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 575:
Theorem (575) [serial 1181] used for:
    normalization of [serial 1178]
 


Theorem (577)                               [serial 1173] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<0 < window_size>>
by Substituting Equals Within Conjunction
and theorem 576:
Theorem (576) [serial 1178] used for:
  Substituting Equals Within Conjunction [serial 1173]
 


Theorem (578)                               [serial 1170] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<(0 < window_size)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 577:
Theorem (577) [serial 1173] used for:
    normalization of [serial 1170]
 


Theorem (579)                               [serial 1168] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<true and true and true and true and 0 < window_size>>
by Law of And-Simplification:  P and true is P
and theorem 578:
Theorem (578) [serial 1170] used for:
  Law of And-Simplification:  P and true is P [serial 1168]
 


Theorem (580)                               [serial 1163] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<0 = 0 and 0 = 0 and true and true and 0 < window_size>>
by Equality Law (idistr):  a=a <-> true
and theorem 579:
Theorem (579) [serial 1168] used for:
  Equality Law (idistr):  a=a <-> true [serial 1163]
 


Theorem (581)                               [serial 1160] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<0 = (0) and 0 = (0) and (true) and (true) and 0 < window_size>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 580:
Theorem (580) [serial 1163] used for:
    normalization of [serial 1160]
 


Theorem (582)                               [serial 1158] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<0 = (numberof k:integer
  in false 
  that (SensorConnected^((1+k)-0) and not MotionArtifact^((1+k)-0)) ) and 
0 = (sum k:integer
  in false 
  of (SensorConnected^((1+k)-0) and not MotionArtifact^((1+k)-0)??SpO2^((1+k)-0):0) ) and 
(all k:integer
  in false 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-0) and 
      not MotionArtifact^((1+k)-0)??SpO2^((1+k)-0):0) ) and (all k:integer
  in false 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-0) and 
      not MotionArtifact^((1+k)-0)) ) and 0 < window_size>>
by Empty Range Law All: all a:t in false are V is tautology
and theorem 581:
Theorem (581) [serial 1160] used for:
  Empty Range Law All: all a:t in false are V is tautology [serial 1158]
 


Theorem (583)                               [serial 1153] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<0 = (numberof k:integer
  in 0..-1 
  that (SensorConnected^((1+k)-0) and not MotionArtifact^((1+k)-0)) ) and 
0 = (sum k:integer
  in 0..-1 
  of (SensorConnected^((1+k)-0) and not MotionArtifact^((1+k)-0)??SpO2^((1+k)-0):0) ) and 
(all k:integer
  in 0..-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-0) and 
      not MotionArtifact^((1+k)-0)??SpO2^((1+k)-0):0) ) and (all k:integer
  in 0..-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-0) and 
      not MotionArtifact^((1+k)-0)) ) and 0 < window_size>>
by Empty Range
and theorem 582:
Theorem (582) [serial 1158] used for:
  Empty Range [serial 1153]
 


Theorem (584)                               [serial 1150] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<0^1 = (numberof k:integer
  in 0..0-1 
  that (SensorConnected^((1+k)-0) and not MotionArtifact^((1+k)-0)) ) and 
0^1 = (sum k:integer
  in 0..0-1 
  of (SensorConnected^((1+k)-0) and not MotionArtifact^((1+k)-0)??SpO2^((1+k)-0):0) ) and 
(all k:integer
  in 0..0-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-0) and 
      not MotionArtifact^((1+k)-0)??SpO2^((1+k)-0):0) ) and (all k:integer
  in 0..0-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-0) and 
      not MotionArtifact^((1+k)-0)) ) and (0-0) < window_size>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Unary Minus:  -(x-y) is (y-x)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 583:
Theorem (583) [serial 1153] used for:
    normalization of [serial 1150]
 


Theorem (585)                               [serial 1148] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
by Substitution in Postcondition of All Equivalents in Precondition
and theorem 584:
Theorem (584) [serial 1150] used for:
  Substitution in Postcondition of All Equivalents in Precondition
 substituting in postcondition all equivalents in precondition [serial 1148]
 


Theorem (586)                               [serial 1187] 
P [748] <<(goodCount = 0) and (lb = 0) and (numSamplesInWindow = 0) and (oldestSample = 0) and 
(totalSpO2 = 0) and (ub = 0) and (0 < window_size)>>
S [767] ->
Q [751] <<0 < window_size>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (587)                               [serial 1183] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and ub < window_size>>
S [767] ->
Q [751] <<0 < window_size>>
by Substituting Equals Within Conjunction
and theorem 586:
Theorem (586) [serial 1187] used for:
  Substituting Equals Within Conjunction [serial 1183]
 


Theorem (588)                               [serial 1179] 
P [748] <<(goodCount = 0) and (lb = 0) and (numSamplesInWindow = 0) and (oldestSample = 0) and 
(totalSpO2 = 0) and (ub = 0) and ((ub-0) < window_size)>>
S [767] ->
Q [751] <<0 < window_size>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 587:
Theorem (587) [serial 1183] used for:
    normalization of [serial 1179]
 


Theorem (589)                               [serial 1175] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<0 < window_size>>
by Substituting Equals Within Conjunction
and theorem 588:
Theorem (588) [serial 1179] used for:
  Substituting Equals Within Conjunction [serial 1175]
 


Theorem (590)                               [serial 1171] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<(0 < window_size)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 589:
Theorem (589) [serial 1175] used for:
    normalization of [serial 1171]
 


Theorem (591)                               [serial 1169] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<true and true and true and true and 0 < window_size>>
by Law of And-Simplification:  P and true is P
and theorem 590:
Theorem (590) [serial 1171] used for:
  Law of And-Simplification:  P and true is P [serial 1169]
 


Theorem (592)                               [serial 1165] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<0 = 0 and 0 = 0 and true and true and 0 < window_size>>
by Equality Law (idistr):  a=a <-> true
and theorem 591:
Theorem (591) [serial 1169] used for:
  Equality Law (idistr):  a=a <-> true [serial 1165]
 


Theorem (593)                               [serial 1161] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<0 = (0) and 0 = (0) and (true) and (true) and 0 < window_size>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 592:
Theorem (592) [serial 1165] used for:
    normalization of [serial 1161]
 


Theorem (594)                               [serial 1159] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<0 = (numberof k:integer
  in false 
  that (SensorConnected^((1+k)-0) and not MotionArtifact^((1+k)-0)) ) and 
0 = (sum k:integer
  in false 
  of (SensorConnected^((1+k)-0) and not MotionArtifact^((1+k)-0)??SpO2^((1+k)-0):0) ) and 
(all k:integer
  in false 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-0) and 
      not MotionArtifact^((1+k)-0)??SpO2^((1+k)-0):0) ) and (all k:integer
  in false 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-0) and 
      not MotionArtifact^((1+k)-0)) ) and 0 < window_size>>
by Empty Range Law All: all a:t in false are V is tautology
and theorem 593:
Theorem (593) [serial 1161] used for:
  Empty Range Law All: all a:t in false are V is tautology [serial 1159]
 


Theorem (595)                               [serial 1155] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<0 = (numberof k:integer
  in 0..-1 
  that (SensorConnected^((1+k)-0) and not MotionArtifact^((1+k)-0)) ) and 
0 = (sum k:integer
  in 0..-1 
  of (SensorConnected^((1+k)-0) and not MotionArtifact^((1+k)-0)??SpO2^((1+k)-0):0) ) and 
(all k:integer
  in 0..-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-0) and 
      not MotionArtifact^((1+k)-0)??SpO2^((1+k)-0):0) ) and (all k:integer
  in 0..-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-0) and 
      not MotionArtifact^((1+k)-0)) ) and 0 < window_size>>
by Empty Range
and theorem 594:
Theorem (594) [serial 1159] used for:
  Empty Range [serial 1155]
 


Theorem (596)                               [serial 1151] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<0^1 = (numberof k:integer
  in 0..0-1 
  that (SensorConnected^((1+k)-0) and not MotionArtifact^((1+k)-0)) ) and 
0^1 = (sum k:integer
  in 0..0-1 
  of (SensorConnected^((1+k)-0) and not MotionArtifact^((1+k)-0)??SpO2^((1+k)-0):0) ) and 
(all k:integer
  in 0..0-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-0) and 
      not MotionArtifact^((1+k)-0)??SpO2^((1+k)-0):0) ) and (all k:integer
  in 0..0-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-0) and 
      not MotionArtifact^((1+k)-0)) ) and (0-0) < window_size>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Unary Minus:  -(x-y) is (y-x)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 595:
Theorem (595) [serial 1155] used for:
    normalization of [serial 1151]
 


Theorem (597)                               [serial 1149] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
by Substitution in Postcondition of All Equivalents in Precondition
and theorem 596:
Theorem (596) [serial 1151] used for:
  Substitution in Postcondition of All Equivalents in Precondition
 substituting in postcondition all equivalents in precondition [serial 1149]
 


Theorem (598)                               [serial 1147] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] ->
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )) and (ub-lb) < window_size>>
by Associativity: (b.c).a = a.b.c
and theorems 585 597:
Theorem (585) [serial 1148] used for:
  Associativity: (b.c).a = a.b.c [serial 1147]
 
Theorem (597) [serial 1149] used for:
  Associativity: (b.c).a = a.b.c [serial 1147]
 


Theorem (599)                               [serial 1144] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )) and (ub^1-lb^1) < window_size^1>>
by Simultaneous Assignment
and theorem 598:
Theorem (598) [serial 1147] used for:
  applied wp for simultaneous assignment [serial 1144]
 


Theorem (600)                               [serial 1142] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not (MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not (MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )) and (ub^1-lb^1) < window_size^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Caret Compostition:  (x^a)^b is x^(a+b)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 599:
Theorem (599) [serial 1144] used for:
    normalization of [serial 1142]
 


Theorem (601)                               [serial 1140] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and (not MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      (not MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )) and (ub^1-lb^1) < window_size^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 600:
Theorem (600) [serial 1142] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1140]
 


Theorem (602)                               [serial 1138] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not (MotionArtifact^(k-ub))^1) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^((k-ub)+1) and (not MotionArtifact^(k-ub))^1)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = ((SensorConnected^((k-ub)+1) and 
      (not MotionArtifact^(k-ub))^1)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not (MotionArtifact^(k-ub))^1) )) and (ub^1-lb^1) < window_size^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Caret Compostition:  (x^a)^b is x^(a+b)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 601:
Theorem (601) [serial 1140] used for:
    normalization of [serial 1138]
 


Theorem (603)                               [serial 1136] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and (not MotionArtifact^(k-ub))^1) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      (not MotionArtifact^(k-ub))^1) )) and (ub^1-lb^1) < window_size^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 602:
Theorem (602) [serial 1138] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1136]
 


Theorem (604)                               [serial 1134] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((k-ub)+1) and (not MotionArtifact^(k-ub))^1) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1??SpO2^((k-ub)+1):(0)^1) ) and 
(all k:integer
  in lb..ub-1 
  are ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1??SpO2^((k-ub)+1):(0)^1) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((k-ub)+1) and 
      (not MotionArtifact^(k-ub))^1) )) and (ub^1-lb^1) < window_size^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
    Associativity: (b.c).a = a.b.c
and theorem 603:
Theorem (603) [serial 1136] used for:
    normalization of [serial 1134]
 


Theorem (605)                               [serial 1132] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1 ) and totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)^1 ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)^1 = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub))^1 )) and (ub^1-lb^1) < window_size^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 604:
Theorem (604) [serial 1134] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1132]
 


Theorem (606)                               [serial 1130] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)))^1 ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0))^1 ) and 
(all k:integer
  in lb..ub-1 
  are (((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0))^1 = (spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples])^1) ) and 
(all k:integer
  in lb..ub-1 
  are ((goodSamp[k mod #PulseOx_Properties::Max_Window_Samples])^1 iff (
      SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1) )) and (ub^1-lb^1) < window_size^1>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 605:
Theorem (605) [serial 1132] used for:
    normalization of [serial 1130]
 


Theorem (607)                               [serial 1128] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )^1 and totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )^1 and 
(all k:integer
  in lb..ub-1 
  are ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples])^1 ) and 
(all k:integer
  in lb..ub-1 
  are (goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)))^1 )) and (ub^1-lb^1) < window_size^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 606:
Theorem (606) [serial 1130] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1128]
 


Theorem (608)                               [serial 1126] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<(((goodCount)^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )^1) and ((totalSpO2)^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )^1) and 
(all k:integer
  in lb..ub-1 
  are ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples])^1 ) and 
(all k:integer
  in lb..ub-1 
  are (goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)))^1 )) and ((ub)^1-(lb)^1) < window_size^1>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 607:
Theorem (607) [serial 1128] used for:
    normalization of [serial 1126]
 


Theorem (609)                               [serial 1124] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))^1 and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))^1 and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] )^1 and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )^1) and (ub-lb)^1 < window_size^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 608:
Theorem (608) [serial 1126] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1124]
 


Theorem (610)                               [serial 1122] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))^1 and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))^1 and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] )^1 and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )^1) and ((ub-lb)^1 < (window_size)^1)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 609:
Theorem (609) [serial 1124] used for:
    normalization of [serial 1122]
 


Theorem (611)                               [serial 1120] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ))^1 and ((ub-lb) < window_size)^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 610:
Theorem (610) [serial 1122] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1120]
 


Theorem (612)                               [serial 1118] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<(((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) )) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ))^1 and ((ub-lb) < window_size)^1)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 611:
Theorem (611) [serial 1120] used for:
    normalization of [serial 1118]
 


Theorem (613)                               [serial 1117] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<(((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) )) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) )) and (ub-lb) < window_size)^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 612:
Theorem (612) [serial 1118] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1117]
 


Theorem (614)                               [serial 1116] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<(((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) )) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) )) and 
(ub-lb) < window_size)^1>>
by Substitution of Assertion Labels
and theorem 613:
Theorem (613) [serial 1117] used for:
  substituted Assertions' predicates for  labels  [serial 1116]
 


Theorem (615)                               [serial 1114] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<((GOOD() and GS() and TOTAL_SPO2() and WINDOW()) and (ub-lb) < window_size)^1>>
by Substitution of Assertion Labels
and theorem 614:
Theorem (614) [serial 1116] used for:
  substituted Assertions' predicates for  labels  [serial 1114]
 


Theorem (616)                               [serial 1112] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<((WINDOW() and TOTAL_SPO2() and GOOD() and GS()) and (ub-lb) < window_size)^1>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 615:
Theorem (615) [serial 1114] used for:
    normalization of [serial 1112]
 


Theorem (617)                               [serial 1110] 
P [748] <<goodCount = 0 and lb = 0 and numSamplesInWindow = 0 and oldestSample = 0 and 
totalSpO2 = 0 and ub = 0 and (ub-lb) < window_size>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<(INV_AV() and (ub-lb) < window_size)^1>>
by Substitution of Assertion Labels
and theorem 616:
Theorem (616) [serial 1112] used for:
  substituted Assertions' predicates for  labels  [serial 1110]
 


Theorem (618)                               [serial 1033] 
P [748] <<(numSamplesInWindow = 0) and (ub = 0) and (oldestSample = 0) and (totalSpO2 = 0) and 
(lb = 0) and (goodCount = 0) and ((ub-lb) < window_size)>>
S [767] (ub',lb',window_size' := ub,lb,window_size)  
Q [751] <<(((ub-lb) < window_size) and INV_AV())^1>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 617:
Theorem (617) [serial 1110] used for:
    normalization of [serial 1033]
 


Theorem (619)                               [serial 1188] 
P [748] <<(numSamplesInWindow = 0) and (ub = 0) and (oldestSample = 0) and (totalSpO2 = 0) and 
(lb = 0) and (goodCount = 0) and ((ub-lb) >= window_size)>>
S [769] ->
Q [764] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (620)                               [serial 1034] 
P [748] <<(numSamplesInWindow = 0) and (ub = 0) and (oldestSample = 0) and (totalSpO2 = 0) and 
(lb = 0) and (goodCount = 0) and ((ub-lb) >= window_size)>>
S [769] (ub',lb',window_size' := ub,lb,window_size)  
Q [764] <<true>>
by Simultaneous Assignment
and theorem 619:
Theorem (619) [serial 1188] used for:
  applied wp for simultaneous assignment [serial 1034]
 


Theorem (621)                               [serial 1344] 
P [751] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (ub-lb) < window_size>>
S [751] ->
Q [771] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (ub-lb) < window_size>>
by Identity (id):  P->P is tautology


Theorem (622)                               [serial 1324] 
P [751] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [751] ->
Q [771] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
by Associativity: (b.c).a = a.b.c
and theorem 621:
Theorem (621) [serial 1344] used for:
  Associativity: (b.c).a = a.b.c [serial 1324]
 


Theorem (623)                               [serial 1317] 
P [751] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [751] ->
Q [771] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 622:
Theorem (622) [serial 1324] used for:
    normalization of [serial 1317]
 


Theorem (624)                               [serial 1303] 
P [751] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [751] ->
Q [771] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
by Substitution of Assertion Labels
and theorem 623:
Theorem (623) [serial 1317] used for:
  substituted Assertions' predicates for  labels  [serial 1303]
 


Theorem (625)                               [serial 1296] 
P [751] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [751] ->
Q [771] <<((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) )) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) )) and 
(ub-lb) < window_size>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 624:
Theorem (624) [serial 1303] used for:
    normalization of [serial 1296]
 


Theorem (626)                               [serial 1279] 
P [751] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [751] ->
Q [771] <<(GOOD() and GS() and TOTAL_SPO2() and WINDOW()) and (ub-lb) < window_size>>
by Substitution of Assertion Labels
and theorem 625:
Theorem (625) [serial 1296] used for:
  substituted Assertions' predicates for  labels  [serial 1279]
 


Theorem (627)                               [serial 1272] 
P [751] <<((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) )) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) )) and 
(ub-lb) < window_size>>
S [751] ->
Q [771] <<(WINDOW() and TOTAL_SPO2() and GOOD() and GS()) and (ub-lb) < window_size>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 626:
Theorem (626) [serial 1279] used for:
    normalization of [serial 1272]
 


Theorem (628)                               [serial 1255] 
P [751] <<(GOOD() and GS() and TOTAL_SPO2() and WINDOW()) and (ub-lb) < window_size>>
S [751] ->
Q [771] <<INV_AV() and (ub-lb) < window_size>>
by Substitution of Assertion Labels
and theorem 627:
Theorem (627) [serial 1272] used for:
  substituted Assertions' predicates for  labels  [serial 1255]
 


Theorem (629)                               [serial 1248] 
P [751] <<(WINDOW() and TOTAL_SPO2() and GOOD() and GS()) and (ub-lb) < window_size>>
S [751] ->
Q [771] <<(((ub-lb) < window_size) and INV_AV())>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 628:
Theorem (628) [serial 1255] used for:
    normalization of [serial 1248]
 


Theorem (630)                               [serial 1206] 
P [751] <<INV_AV() and (ub-lb) < window_size>>
S [751] ->
Q [771] <<FW()>>
by Substitution of Assertion Labels
and theorem 629:
Theorem (629) [serial 1248] used for:
  substituted Assertions' predicates for  labels  [serial 1206]
 


Theorem (631)                               [serial 1189] 
P [751] <<((ub-lb) < window_size) and INV_AV()>>
S [751] ->
Q [771] <<FW()>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 630:
Theorem (630) [serial 1206] used for:
    normalization of [serial 1189]
 


Theorem (632)                               [serial 1208] 
P [803] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C((1+k)-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C((1+k)-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [753] ->
Q [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C((1+k)-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C((1+k)-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
by Identity (id):  P->P is tautology


Theorem (633)                               [serial 1190] 
P [803] <<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-(ub-1)) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-(ub-1)) )) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-(ub-1)) and 
      not MotionArtifact^(k-(ub-1))) )>>
S [753] ->
Q [753] <<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-(ub-1)) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-(ub-1)) )) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-(ub-1)) and 
      not MotionArtifact^(k-(ub-1))) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Associativity: (b.c).a = a.b.c
and theorem 632:
Theorem (632) [serial 1208] used for:
    normalization of [serial 1190]
 


Theorem (634)                               [serial 1194] 
P [771] <<FW()>>
S [773] ->
Q [773] <<FW()>>
by Identity (id):  P->P is tautology


Theorem (635)                               [serial 1365] 
P [792] <<goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [777] ->
Q [792] <<goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Identity (id):  P->P is tautology


Theorem (636)                               [serial 1281] 
P [773] <<(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0) = spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] and 
goodCount = ((SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and totalSpO2 = (
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^0 and not MotionArtifact^0))>>
S [777] ->
Q [792] <<goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j)
and theorem 635:
Theorem (635) [serial 1365] used for:
  Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j) [serial 1281]
 


Theorem (637)                               [serial 1273] 
P [773] <<(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0) = spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] and 
goodCount = ((SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and totalSpO2 = (
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^0 and not MotionArtifact^0))>>
S [777] ->
Q [792] <<goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 636:
Theorem (636) [serial 1281] used for:
    normalization of [serial 1273]
 


Theorem (638)                               [serial 1257] 
P [773] <<(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0) = spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] and 
goodCount = ((SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and totalSpO2 = (
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^0 and not MotionArtifact^0))>>
S [777] ->
Q [792] <<goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Substitution of Assertion Labels
and theorem 637:
Theorem (637) [serial 1273] used for:
  substituted Assertions' predicates for  labels  [serial 1257]
 


Theorem (639)                               [serial 1249] 
P [773] <<goodCount = ((SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] = ((
SensorConnected^(0) and not MotionArtifact^(0)??SpO2^(0):0)) and totalSpO2 = (
((SensorConnected^(0) and not MotionArtifact^(0)??SpO2^(0):0))+(sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) )) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^0 and 
not MotionArtifact^0))>>
S [777] ->
Q [792] <<goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and 
(all k:integer
  in lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and (all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 638:
Theorem (638) [serial 1257] used for:
    normalization of [serial 1249]
 


Theorem (640)                               [serial 1211] 
P [773] <<goodCount = ((SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] = C(0) and 
totalSpO2 = (C(0)+(sum k:integer
  in lb..ub-1 
  of C(k-ub) )) and GS() and WINDOW() and (goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^0 and not MotionArtifact^0))>>
S [777] ->
Q [792] <<goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub 
  of C(k-ub) ) and (all k:integer
  in lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Substitution of Assertion Labels
and theorem 639:
Theorem (639) [serial 1249] used for:
  substituted Assertions' predicates for  labels  [serial 1211]
 


Theorem (641)                               [serial 1195] 
P [773] <<(WINDOW()) and ((spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] = C(0))) and 
(totalSpO2 = (C(0)+(sum k:integer
  in lb..ub-1 
  of C(k-ub) ))) and (goodCount = ((SensorConnected^0 and not MotionArtifact^0??1:0)+
(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))) and ((goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^0 and not MotionArtifact^0))) and (GS())>>
S [777] ->
Q [792] <<(all k:integer
  in lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub 
  of C(k-ub) )) and (goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 640:
Theorem (640) [serial 1211] used for:
    normalization of [serial 1195]
 


Theorem (642)                               [serial 1361] 
P [773] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (ub-lb) < window_size>>
S [775] ->
Q [777] <<all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (643)                               [serial 1352] 
P [773] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (ub-lb) < window_size>>
S [775] ->
Q [777] <<((all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 642:
Theorem (642) [serial 1361] used for:
    normalization of [serial 1352]
 


Theorem (644)                               [serial 1349] 
P [773] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [775] ->
Q [777] <<((all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ))>>
by Associativity: (b.c).a = a.b.c
and theorem 643:
Theorem (643) [serial 1352] used for:
  Associativity: (b.c).a = a.b.c [serial 1349]
 


Theorem (645)                               [serial 1345] 
P [773] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [775] ->
Q [777] <<true and (all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] )>>
by Law of And-Simplification:  P and true is P
and theorem 644:
Theorem (644) [serial 1349] used for:
  Law of And-Simplification:  P and true is P [serial 1345]
 


Theorem (646)                               [serial 1326] 
P [773] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [775] ->
Q [777] <<(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0) = (SensorConnected^0 and 
not MotionArtifact^0??SpO2^0:0) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] )>>
by Equality Law (idistr):  a=a <-> true
and theorem 645:
Theorem (645) [serial 1345] used for:
  Equality Law (idistr):  a=a <-> true [serial 1326]
 


Theorem (647)                               [serial 1318] 
P [773] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [775] ->
Q [777] <<(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0) = (SensorConnected^0 and 
not MotionArtifact^0??SpO2^0:0) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 646:
Theorem (646) [serial 1326] used for:
    normalization of [serial 1318]
 


Theorem (648)                               [serial 1305] 
P [773] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [775] ->
Q [777] <<(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0) = (SensorConnected^0 and 
not MotionArtifact^0??SpO2^0:0) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] )>>
by Substitution of Assertion Labels
and theorem 647:
Theorem (647) [serial 1318] used for:
  substituted Assertions' predicates for  labels  [serial 1305]
 


Theorem (649)                               [serial 1297] 
P [773] <<((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) )) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) )) and 
(ub-lb) < window_size>>
S [775] ->
Q [777] <<(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0) = (SensorConnected^0 and 
not MotionArtifact^0??SpO2^0:0) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 648:
Theorem (648) [serial 1305] used for:
    normalization of [serial 1297]
 


Theorem (650)                               [serial 1283] 
P [773] <<(GOOD() and GS() and TOTAL_SPO2() and WINDOW()) and (ub-lb) < window_size>>
S [775] ->
Q [777] <<(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0) = (SensorConnected^0 and 
not MotionArtifact^0??SpO2^0:0) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] )>>
by Substitution of Assertion Labels
and theorem 649:
Theorem (649) [serial 1297] used for:
  substituted Assertions' predicates for  labels  [serial 1283]
 


Theorem (651)                               [serial 1274] 
P [773] <<(WINDOW() and TOTAL_SPO2() and GOOD() and GS()) and (ub-lb) < window_size>>
S [775] ->
Q [777] <<(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0) = (SensorConnected^0 and 
not MotionArtifact^0??SpO2^0:0) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 650:
Theorem (650) [serial 1283] used for:
    normalization of [serial 1274]
 


Theorem (652)                               [serial 1259] 
P [773] <<INV_AV() and (ub-lb) < window_size>>
S [775] ->
Q [777] <<(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0) = (SensorConnected^0 and 
not MotionArtifact^0??SpO2^0:0) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) )>>
by Substitution of Assertion Labels
and theorem 651:
Theorem (651) [serial 1274] used for:
  substituted Assertions' predicates for  labels  [serial 1259]
 


Theorem (653)                               [serial 1250] 
P [773] <<(((ub-lb) < window_size) and INV_AV())>>
S [775] ->
Q [777] <<(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0) = ((SensorConnected^(0) and 
not MotionArtifact^(0)??SpO2^(0):0)) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 652:
Theorem (652) [serial 1259] used for:
    normalization of [serial 1250]
 


Theorem (654)                               [serial 1213] 
P [773] <<FW()>>
S [775] ->
Q [777] <<(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0) = C(0) and WINDOW()>>
by Substitution of Assertion Labels
and theorem 653:
Theorem (653) [serial 1250] used for:
  substituted Assertions' predicates for  labels  [serial 1213]
 


Theorem (655)                               [serial 1200] 
P [773] <<FW()>>
S [775] ->
Q [777] <<WINDOW() and (((SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)) = C(0))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 654:
Theorem (654) [serial 1213] used for:
    normalization of [serial 1200]
 


Theorem (656)                               [serial 1196] 
P [773] <<FW()>>
S [775] spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] := (SensorConnected? and 
not MotionArtifact? ?? SpO2? : 0)
Q [777] <<WINDOW() and (spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] = C(0))>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 655:
Theorem (655) [serial 1200] used for:
  applied wp for assignment [serial 1196]
 


Theorem (657)                               [serial 1357] 
P [771] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (ub-lb) < window_size>>
S [779] ->
Q [780] <<totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (658)                               [serial 1350] 
P [771] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (ub-lb) < window_size>>
S [779] ->
Q [780] <<(totalSpO2) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 657:
Theorem (657) [serial 1357] used for:
    normalization of [serial 1350]
 


Theorem (659)                               [serial 1346] 
P [771] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (ub-lb) < window_size>>
S [779] ->
Q [780] <<((SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+totalSpO2) = (
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))>>
by Add both sides of equality:  a=b -> x+a=x+b
and theorem 658:
Theorem (658) [serial 1350] used for:
  Add both sides of equality:  a=b -> x+a=x+b [serial 1346]
 


Theorem (660)                               [serial 1328] 
P [771] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [779] ->
Q [780] <<((SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+totalSpO2) = (
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))>>
by Associativity: (b.c).a = a.b.c
and theorem 659:
Theorem (659) [serial 1346] used for:
  Associativity: (b.c).a = a.b.c [serial 1328]
 


Theorem (661)                               [serial 1319] 
P [771] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [779] ->
Q [780] <<((SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+totalSpO2) = (
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 660:
Theorem (660) [serial 1328] used for:
    normalization of [serial 1319]
 


Theorem (662)                               [serial 1307] 
P [771] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [779] ->
Q [780] <<((SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+totalSpO2) = (
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))>>
by Substitution of Assertion Labels
and theorem 661:
Theorem (661) [serial 1319] used for:
  substituted Assertions' predicates for  labels  [serial 1307]
 


Theorem (663)                               [serial 1298] 
P [771] <<((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) )) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) )) and 
(ub-lb) < window_size>>
S [779] ->
Q [780] <<((SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+totalSpO2) = (
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 662:
Theorem (662) [serial 1307] used for:
    normalization of [serial 1298]
 


Theorem (664)                               [serial 1285] 
P [771] <<(GOOD() and GS() and TOTAL_SPO2() and WINDOW()) and (ub-lb) < window_size>>
S [779] ->
Q [780] <<((SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+totalSpO2) = (
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))>>
by Substitution of Assertion Labels
and theorem 663:
Theorem (663) [serial 1298] used for:
  substituted Assertions' predicates for  labels  [serial 1285]
 


Theorem (665)                               [serial 1275] 
P [771] <<(WINDOW() and TOTAL_SPO2() and GOOD() and GS()) and (ub-lb) < window_size>>
S [779] ->
Q [780] <<((SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+totalSpO2) = (
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 664:
Theorem (664) [serial 1285] used for:
    normalization of [serial 1275]
 


Theorem (666)                               [serial 1261] 
P [771] <<INV_AV() and (ub-lb) < window_size>>
S [779] ->
Q [780] <<((SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+totalSpO2) = (
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))>>
by Substitution of Assertion Labels
and theorem 665:
Theorem (665) [serial 1275] used for:
  substituted Assertions' predicates for  labels  [serial 1261]
 


Theorem (667)                               [serial 1251] 
P [771] <<(((ub-lb) < window_size) and INV_AV())>>
S [779] ->
Q [780] <<((SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+totalSpO2) = (
((SensorConnected^(0) and not MotionArtifact^(0)??SpO2^(0):0))+(sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ))>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 666:
Theorem (666) [serial 1261] used for:
    normalization of [serial 1251]
 


Theorem (668)                               [serial 1215] 
P [771] <<FW()>>
S [779] ->
Q [780] <<((SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+totalSpO2) = (
C(0)+(sum k:integer
  in lb..ub-1 
  of C(k-ub) ))>>
by Substitution of Assertion Labels
and theorem 667:
Theorem (667) [serial 1251] used for:
  substituted Assertions' predicates for  labels  [serial 1215]
 


Theorem (669)                               [serial 1201] 
P [771] <<FW()>>
S [779] ->
Q [780] <<(totalSpO2+(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)) = (
C(0)+(sum k:integer
  in lb..ub-1 
  of C(k-ub) ))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 668:
Theorem (668) [serial 1215] used for:
    normalization of [serial 1201]
 


Theorem (670)                               [serial 1197] 
P [771] <<FW()>>
S [779] totalSpO2 := totalSpO2+(SensorConnected? and not MotionArtifact? ?? SpO2? : 0)
Q [780] <<totalSpO2 = (C(0)+(sum k:integer
  in lb..ub-1 
  of C(k-ub) ))>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 669:
Theorem (669) [serial 1201] used for:
  applied wp for assignment [serial 1197]
 


Theorem (671)                               [serial 1347] 
P [771] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (ub-lb) < window_size>>
S [782] ->
Q [783] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (672)                               [serial 1330] 
P [771] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [782] ->
Q [783] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )>>
by Associativity: (b.c).a = a.b.c
and theorem 671:
Theorem (671) [serial 1347] used for:
  Associativity: (b.c).a = a.b.c [serial 1330]
 


Theorem (673)                               [serial 1320] 
P [771] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [782] ->
Q [783] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 672:
Theorem (672) [serial 1330] used for:
    normalization of [serial 1320]
 


Theorem (674)                               [serial 1309] 
P [771] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [782] ->
Q [783] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )>>
by Substitution of Assertion Labels
and theorem 673:
Theorem (673) [serial 1320] used for:
  substituted Assertions' predicates for  labels  [serial 1309]
 


Theorem (675)                               [serial 1299] 
P [771] <<((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) )) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) )) and 
(ub-lb) < window_size>>
S [782] ->
Q [783] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 674:
Theorem (674) [serial 1309] used for:
    normalization of [serial 1299]
 


Theorem (676)                               [serial 1287] 
P [771] <<(GOOD() and GS() and TOTAL_SPO2() and WINDOW()) and (ub-lb) < window_size>>
S [782] ->
Q [783] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )>>
by Substitution of Assertion Labels
and theorem 675:
Theorem (675) [serial 1299] used for:
  substituted Assertions' predicates for  labels  [serial 1287]
 


Theorem (677)                               [serial 1276] 
P [771] <<(WINDOW() and TOTAL_SPO2() and GOOD() and GS()) and (ub-lb) < window_size>>
S [782] ->
Q [783] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 676:
Theorem (676) [serial 1287] used for:
    normalization of [serial 1276]
 


Theorem (678)                               [serial 1263] 
P [771] <<INV_AV() and (ub-lb) < window_size>>
S [782] ->
Q [783] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )>>
by Substitution of Assertion Labels
and theorem 677:
Theorem (677) [serial 1276] used for:
  substituted Assertions' predicates for  labels  [serial 1263]
 


Theorem (679)                               [serial 1252] 
P [771] <<(((ub-lb) < window_size) and INV_AV())>>
S [782] ->
Q [783] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 678:
Theorem (678) [serial 1263] used for:
    normalization of [serial 1252]
 


Theorem (680)                               [serial 1240] 
P [771] <<FW()>>
S [782] ->
Q [783] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )>>
by Substitution of Assertion Labels
and theorem 679:
Theorem (679) [serial 1252] used for:
  substituted Assertions' predicates for  labels  [serial 1240]
 


Theorem (681)                               [serial 1230] 
P [771] <<FW()>>
S [782] ->
Q [783] <<(goodCount) = ((numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 680:
Theorem (680) [serial 1240] used for:
    normalization of [serial 1230]
 


Theorem (682)                               [serial 1217] 
P [771] <<FW()>>
S [782] ->
Q [783] <<((SensorConnected^0 and not MotionArtifact^0??1:0)+goodCount) = ((SensorConnected^0 and 
not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))>>
by Add both sides of equality:  a=b -> x+a=x+b
and theorem 681:
Theorem (681) [serial 1230] used for:
  Add both sides of equality:  a=b -> x+a=x+b [serial 1217]
 


Theorem (683)                               [serial 1202] 
P [771] <<FW()>>
S [782] ->
Q [783] <<((goodCount+(SensorConnected^0 and not MotionArtifact^0??1:0))) = ((SensorConnected^0 and 
not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 682:
Theorem (682) [serial 1217] used for:
    normalization of [serial 1202]
 


Theorem (684)                               [serial 1198] 
P [771] <<FW()>>
S [782] goodCount := (goodCount+(SensorConnected? and not MotionArtifact? ?? 1 : 0))
Q [783] <<goodCount = ((SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 683:
Theorem (683) [serial 1202] used for:
  applied wp for assignment [serial 1198]
 


Theorem (685)                               [serial 1359] 
P [771] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (ub-lb) < window_size>>
S [787] ->
Q [789] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (686)                               [serial 1351] 
P [771] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (ub-lb) < window_size>>
S [787] ->
Q [789] <<((all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 685:
Theorem (685) [serial 1359] used for:
    normalization of [serial 1351]
 


Theorem (687)                               [serial 1348] 
P [771] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [787] ->
Q [789] <<((all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ))>>
by Associativity: (b.c).a = a.b.c
and theorem 686:
Theorem (686) [serial 1351] used for:
  Associativity: (b.c).a = a.b.c [serial 1348]
 


Theorem (688)                               [serial 1332] 
P [771] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [787] ->
Q [789] <<true and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Law of And-Simplification:  P and true is P
and theorem 687:
Theorem (687) [serial 1348] used for:
  Law of And-Simplification:  P and true is P [serial 1332]
 


Theorem (689)                               [serial 1321] 
P [771] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [787] ->
Q [789] <<true and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 688:
Theorem (688) [serial 1332] used for:
    normalization of [serial 1321]
 


Theorem (690)                               [serial 1311] 
P [771] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size>>
S [787] ->
Q [789] <<true and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Substitution of Assertion Labels
and theorem 689:
Theorem (689) [serial 1321] used for:
  substituted Assertions' predicates for  labels  [serial 1311]
 


Theorem (691)                               [serial 1300] 
P [771] <<((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) )) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) )) and 
(ub-lb) < window_size>>
S [787] ->
Q [789] <<true and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 690:
Theorem (690) [serial 1311] used for:
    normalization of [serial 1300]
 


Theorem (692)                               [serial 1289] 
P [771] <<(GOOD() and GS() and TOTAL_SPO2() and WINDOW()) and (ub-lb) < window_size>>
S [787] ->
Q [789] <<true and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Substitution of Assertion Labels
and theorem 691:
Theorem (691) [serial 1300] used for:
  substituted Assertions' predicates for  labels  [serial 1289]
 


Theorem (693)                               [serial 1277] 
P [771] <<(WINDOW() and TOTAL_SPO2() and GOOD() and GS()) and (ub-lb) < window_size>>
S [787] ->
Q [789] <<true and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 692:
Theorem (692) [serial 1289] used for:
    normalization of [serial 1277]
 


Theorem (694)                               [serial 1265] 
P [771] <<INV_AV() and (ub-lb) < window_size>>
S [787] ->
Q [789] <<true and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Substitution of Assertion Labels
and theorem 693:
Theorem (693) [serial 1277] used for:
  substituted Assertions' predicates for  labels  [serial 1265]
 


Theorem (695)                               [serial 1253] 
P [771] <<(((ub-lb) < window_size) and INV_AV())>>
S [787] ->
Q [789] <<(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and true>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 694:
Theorem (694) [serial 1265] used for:
    normalization of [serial 1253]
 


Theorem (696)                               [serial 1242] 
P [771] <<FW()>>
S [787] ->
Q [789] <<GS() and true>>
by Substitution of Assertion Labels
and theorem 695:
Theorem (695) [serial 1253] used for:
  substituted Assertions' predicates for  labels  [serial 1242]
 


Theorem (697)                               [serial 1231] 
P [771] <<FW()>>
S [787] ->
Q [789] <<GS() and (true)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 696:
Theorem (696) [serial 1242] used for:
    normalization of [serial 1231]
 


Theorem (698)                               [serial 1219] 
P [771] <<FW()>>
S [787] ->
Q [789] <<GS() and ((SensorConnected^0 and not MotionArtifact^0) iff (SensorConnected^0 and 
not MotionArtifact^0))>>
by Equality Law (idistr):  a=a <-> true
and theorem 697:
Theorem (697) [serial 1231] used for:
  Equality Law (idistr):  a=a <-> true [serial 1219]
 


Theorem (699)                               [serial 1203] 
P [771] <<FW()>>
S [787] ->
Q [789] <<(((SensorConnected^0 and not MotionArtifact^0)) iff (SensorConnected^0 and 
not MotionArtifact^0)) and GS()>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 698:
Theorem (698) [serial 1219] used for:
    normalization of [serial 1203]
 


Theorem (700)                               [serial 1199] 
P [771] <<FW()>>
S [787] goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] := (SensorConnected? and 
not MotionArtifact?)
Q [789] <<(goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^0 and 
not MotionArtifact^0)) and GS()>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 699:
Theorem (699) [serial 1203] used for:
  applied wp for assignment [serial 1199]
 


Theorem (701)                               [serial 1193] 
P [771] <<FW()>>
S [773] <<FW()>>
spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] := (SensorConnected? and not MotionArtifact? ?? SpO2? : 0)
<<WINDOW() and (spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] = C(0))>>
&
totalSpO2 := totalSpO2+(SensorConnected? and not MotionArtifact? ?? SpO2? : 0)
<<totalSpO2 = (C(0)+(sum k:integer
  in lb..ub-1 
  of C(k-ub) ))>>
&
goodCount := (goodCount+(SensorConnected? and not MotionArtifact? ?? 1 : 0))
<<goodCount = ((SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))>>
&
goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] := (SensorConnected? and not MotionArtifact?)
<<(goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^0 and not MotionArtifact^0)) and GS()>>
Q [792] <<(all k:integer
  in lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub 
  of C(k-ub) )) and (goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 634 641 656 670 684 700:
Theorem (634) [serial 1194] used for:
  P -> P1 in concurrent composition for [serial 1193]
 
Theorem (641) [serial 1195] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1193]
 
Theorem (656) [serial 1196] used for:
  <<P1>> S1 <<Q1>> in concurrent composition for [serial 1193]
 
Theorem (670) [serial 1197] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1193]
 
Theorem (684) [serial 1198] used for:
  <<P>> S3 <<Q3>> in concurrent composition for [serial 1193]
 
Theorem (700) [serial 1199] used for:
  <<P>> S4 <<Q4>> in concurrent composition for [serial 1193]
 


Theorem (702)                               [serial 1191] 
P [771] <<FW()>>
S [772] {
<<FW()>>
spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] := (SensorConnected? and not MotionArtifact? ?? SpO2? : 0)
<<WINDOW() and (spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] = C(0))>>
&
totalSpO2 := totalSpO2+(SensorConnected? and not MotionArtifact? ?? SpO2? : 0)
<<totalSpO2 = (C(0)+(sum k:integer
  in lb..ub-1 
  of C(k-ub) ))>>
&
goodCount := (goodCount+(SensorConnected? and not MotionArtifact? ?? 1 : 0))
<<goodCount = ((SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))>>
&
goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] := (SensorConnected? and not MotionArtifact?)
<<(goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^0 and not MotionArtifact^0)) and GS()>>
} 
Q [792] <<(all k:integer
  in lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub 
  of C(k-ub) )) and (goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Introduction of Existential Quantification (bl.elq)
and theorem 701:
Theorem (701) [serial 1193] used for:
  <<P>> T <<Q>> in existential lattice quantification for [serial 1191]
 


Theorem (703)                               [serial 1244] 
P [792] <<goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub 
  of C(k-ub) ) and (all k:integer
  in lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [802] ->
Q [803] <<goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub 
  of C(k-ub) ) and (all k:integer
  in lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Identity (id):  P->P is tautology


Theorem (704)                               [serial 1232] 
P [792] <<goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub 
  of C(k-ub) ) and (all k:integer
  in lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [802] ->
Q [803] <<goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^((k)-(ub)) and not MotionArtifact^((k)-(ub))) ) and 
totalSpO2 = (sum k:integer
  in lb..ub 
  of C((k)-(ub)) ) and (all k:integer
  in lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C((k)-(ub)) ) and 
(all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((k)-(ub)) and 
      not MotionArtifact^((k)-(ub))) )>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 703:
Theorem (703) [serial 1244] used for:
    normalization of [serial 1232]
 


Theorem (705)                               [serial 1221] 
P [792] <<goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub 
  of C(k-ub) ) and (all k:integer
  in lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [802] ->
Q [803] <<goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^((1+k)-(1+ub)) and not MotionArtifact^((1+k)-(1+ub))) ) and 
totalSpO2 = (sum k:integer
  in lb..ub 
  of C((1+k)-(1+ub)) ) and (all k:integer
  in lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C((1+k)-(
      1+ub)) ) and (all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-(1+ub)) and 
      not MotionArtifact^((1+k)-(1+ub))) )>>
by Add both sides of subtraction:  a-b is (x+a)-(x+b)
and theorem 704:
Theorem (704) [serial 1232] used for:
  Add both sides of subtraction:  a-b is (x+a)-(x+b) [serial 1221]
 


Theorem (706)                               [serial 1204] 
P [792] <<(all k:integer
  in lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub 
  of C(k-ub) )) and (goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [802] ->
Q [803] <<(all k:integer
  in lb..(ub+1)-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-((ub+
      1)-1)) ) and (totalSpO2 = (sum k:integer
  in lb..(ub+1)-1 
  of C(k-((ub+1)-1)) )) and (goodCount = (numberof k:integer
  in lb..(ub+1)-1 
  that (SensorConnected^(k-((ub+1)-1)) and not MotionArtifact^(k-((ub+1)-1))) )) and 
(all k:integer
  in lb..(ub+1)-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-((ub+1)-1)) and 
      not MotionArtifact^(k-((ub+1)-1))) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Subtaction of Added Value:  (a+b)-a is b
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Associativity: (b.c).a = a.b.c
and theorem 705:
Theorem (705) [serial 1221] used for:
    normalization of [serial 1204]
 


Theorem (707)                               [serial 1192] 
P [792] <<(all k:integer
  in lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub 
  of C(k-ub) )) and (goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [802] ub := ub+1
Q [803] <<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-(ub-1)) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-(ub-1)) )) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-(ub-1)) and 
      not MotionArtifact^(k-(ub-1))) )>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 706:
Theorem (706) [serial 1204] used for:
  applied wp for assignment [serial 1192]
 


Theorem (708)                               [serial 1035] 
P [751] <<((ub-lb) < window_size) and INV_AV()>>
S [771] <<FW()>>
{
<<FW()>>
spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] := (SensorConnected? and not MotionArtifact? ?? SpO2? : 0)
<<WINDOW() and (spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] = C(0))>>
&
totalSpO2 := totalSpO2+(SensorConnected? and not MotionArtifact? ?? SpO2? : 0)
<<totalSpO2 = (C(0)+(sum k:integer
  in lb..ub-1 
  of C(k-ub) ))>>
&
goodCount := (goodCount+(SensorConnected? and not MotionArtifact? ?? 1 : 0))
<<goodCount = ((SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))>>
&
goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] := (SensorConnected? and not MotionArtifact?)
<<(goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^0 and not MotionArtifact^0)) and GS()>>
} 
<<(all k:integer
  in lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and (totalSpO2 = (sum k:integer
  in lb..ub 
  of C(k-ub) )) and (goodCount = (numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )>>
;
ub := ub+1
<<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-(ub-1)) ) and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-(ub-1)) )) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )>>
Q [753] <<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-(ub-1)) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-(ub-1)) )) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-(ub-1)) and 
      not MotionArtifact^(k-(ub-1))) )>>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 631 633 702 707:
Theorem (631) [serial 1189] used for:
  P -> P1 in sequential composition for [serial 1035]
 
Theorem (633) [serial 1190] used for:
  Q1 -> Q in sequential composition for [serial 1035]
 
Theorem (702) [serial 1191] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1035]
 
Theorem (707) [serial 1192] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1035]
 


Theorem (709)                               [serial 1411] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] ->
Q [751] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
by Identity (id):  P->P is tautology


Theorem (710)                               [serial 1413] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] ->
Q [751] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
by Identity (id):  P->P is tautology


Theorem (711)                               [serial 1409] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] ->
Q [751] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorems 709 710:
Theorem (709) [serial 1411] used for:
    normalization of [serial 1409]
 
Theorem (710) [serial 1413] used for:
    normalization of [serial 1409]
 


Theorem (712)                               [serial 1408] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub^1-lb^1) < window_size^1>>
by Simultaneous Assignment
and theorem 711:
Theorem (711) [serial 1409] used for:
  applied wp for simultaneous assignment [serial 1408]
 


Theorem (713)                               [serial 1405] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )) and (ub^1-lb^1) < window_size^1>>
by Associativity: (b.c).a = a.b.c
and theorem 712:
Theorem (712) [serial 1408] used for:
  Associativity: (b.c).a = a.b.c [serial 1405]
 


Theorem (714)                               [serial 1403] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not (MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not (MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )) and (ub^1-lb^1) < window_size^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Caret Compostition:  (x^a)^b is x^(a+b)
    Associativity: (b.c).a = a.b.c
and theorem 713:
Theorem (713) [serial 1405] used for:
    normalization of [serial 1403]
 


Theorem (715)                               [serial 1401] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and (not MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      (not MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )) and (ub^1-lb^1) < window_size^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 714:
Theorem (714) [serial 1403] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1401]
 


Theorem (716)                               [serial 1399] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not (MotionArtifact^(k-ub))^1) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^((k-ub)+1) and (not MotionArtifact^(k-ub))^1)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = ((SensorConnected^((k-ub)+1) and 
      (not MotionArtifact^(k-ub))^1)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not (MotionArtifact^(k-ub))^1) )) and (ub^1-lb^1) < window_size^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Caret Compostition:  (x^a)^b is x^(a+b)
    Associativity: (b.c).a = a.b.c
and theorem 715:
Theorem (715) [serial 1401] used for:
    normalization of [serial 1399]
 


Theorem (717)                               [serial 1397] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and (not MotionArtifact^(k-ub))^1) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      (not MotionArtifact^(k-ub))^1) )) and (ub^1-lb^1) < window_size^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 716:
Theorem (716) [serial 1399] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1397]
 


Theorem (718)                               [serial 1395] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((k-ub)+1) and (not MotionArtifact^(k-ub))^1) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1??SpO2^((k-ub)+1):(0)^1) ) and 
(all k:integer
  in lb..ub-1 
  are ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1??SpO2^((k-ub)+1):(0)^1) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((k-ub)+1) and 
      (not MotionArtifact^(k-ub))^1) )) and (ub^1-lb^1) < window_size^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
    Associativity: (b.c).a = a.b.c
and theorem 717:
Theorem (717) [serial 1397] used for:
    normalization of [serial 1395]
 


Theorem (719)                               [serial 1393] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1 ) and totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)^1 ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)^1 = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub))^1 )) and (ub^1-lb^1) < window_size^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 718:
Theorem (718) [serial 1395] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1393]
 


Theorem (720)                               [serial 1391] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)))^1 ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0))^1 ) and 
(all k:integer
  in lb..ub-1 
  are (((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0))^1 = (spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples])^1) ) and 
(all k:integer
  in lb..ub-1 
  are ((goodSamp[k mod #PulseOx_Properties::Max_Window_Samples])^1 iff (
      SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1) )) and (ub^1-lb^1) < window_size^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 719:
Theorem (719) [serial 1393] used for:
    normalization of [serial 1391]
 


Theorem (721)                               [serial 1389] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<(goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )^1 and totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )^1 and 
(all k:integer
  in lb..ub-1 
  are ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples])^1 ) and 
(all k:integer
  in lb..ub-1 
  are (goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)))^1 )) and (ub^1-lb^1) < window_size^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 720:
Theorem (720) [serial 1391] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1389]
 


Theorem (722)                               [serial 1387] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<(((goodCount)^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )^1) and ((totalSpO2)^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )^1) and 
(all k:integer
  in lb..ub-1 
  are ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples])^1 ) and 
(all k:integer
  in lb..ub-1 
  are (goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)))^1 )) and ((ub)^1-(lb)^1) < window_size^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 721:
Theorem (721) [serial 1389] used for:
    normalization of [serial 1387]
 


Theorem (723)                               [serial 1385] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))^1 and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))^1 and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] )^1 and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )^1) and (ub-lb)^1 < window_size^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 722:
Theorem (722) [serial 1387] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1385]
 


Theorem (724)                               [serial 1383] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))^1 and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))^1 and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] )^1 and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )^1) and ((ub-lb)^1 < (window_size)^1)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 723:
Theorem (723) [serial 1385] used for:
    normalization of [serial 1383]
 


Theorem (725)                               [serial 1381] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ))^1 and ((ub-lb) < window_size)^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 724:
Theorem (724) [serial 1383] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1381]
 


Theorem (726)                               [serial 1379] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ))^1 and ((ub-lb) < window_size)^1)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 725:
Theorem (725) [serial 1381] used for:
    normalization of [serial 1379]
 


Theorem (727)                               [serial 1376] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size)^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 726:
Theorem (726) [serial 1379] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1376]
 


Theorem (728)                               [serial 1374] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size)^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 727:
Theorem (727) [serial 1376] used for:
    normalization of [serial 1374]
 


Theorem (729)                               [serial 1372] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and (ub-lb) < window_size)^1>>
by Substitution of Assertion Labels
and theorem 728:
Theorem (728) [serial 1374] used for:
  substituted Assertions' predicates for  labels  [serial 1372]
 


Theorem (730)                               [serial 1370] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<(((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) )) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) )) and 
(ub-lb) < window_size)^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 729:
Theorem (729) [serial 1372] used for:
    normalization of [serial 1370]
 


Theorem (731)                               [serial 1368] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and (ub-lb) < window_size>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<((GOOD() and GS() and TOTAL_SPO2() and WINDOW()) and (ub-lb) < window_size)^1>>
by Substitution of Assertion Labels
and theorem 730:
Theorem (730) [serial 1370] used for:
  substituted Assertions' predicates for  labels  [serial 1368]
 


Theorem (732)                               [serial 1366] 
P [753] <<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-(ub-1)) and 
      not MotionArtifact^(k-(ub-1))??SpO2^(k-(ub-1)):0)) ) and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))??SpO2^(k-(ub-1)):0)) )) and 
(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-(ub-1)) and 
      not MotionArtifact^(k-(ub-1))) ) and ((ub-lb) < window_size)>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<(((ub-lb) < window_size) and (WINDOW() and TOTAL_SPO2() and GOOD() and 
GS()))^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Associativity: (b.c).a = a.b.c
and theorem 731:
Theorem (731) [serial 1368] used for:
    normalization of [serial 1366]
 


Theorem (733)                               [serial 1036] 
P [753] <<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-(ub-1)) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-(ub-1)) )) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-(ub-1)) and 
      not MotionArtifact^(k-(ub-1))) ) and ((ub-lb) < window_size)>>
S [813] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [751] <<(((ub-lb) < window_size) and INV_AV())^1>>
by Substitution of Assertion Labels
and theorem 732:
Theorem (732) [serial 1366] used for:
  substituted Assertions' predicates for  labels  [serial 1036]
 


Theorem (734)                               [serial 1464] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] ->
Q [762] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
by Identity (id):  P->P is tautology


Theorem (735)                               [serial 1466] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] ->
Q [762] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
by Identity (id):  P->P is tautology


Theorem (736)                               [serial 1462] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] ->
Q [762] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorems 734 735:
Theorem (734) [serial 1464] used for:
    normalization of [serial 1462]
 
Theorem (735) [serial 1466] used for:
    normalization of [serial 1462]
 


Theorem (737)                               [serial 1460] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
by Simultaneous Assignment
and theorem 736:
Theorem (736) [serial 1462] used for:
  applied wp for simultaneous assignment [serial 1460]
 


Theorem (738)                               [serial 1458] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ) and window_size^1 = (ub^1-lb^1)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 737:
Theorem (737) [serial 1460] used for:
    normalization of [serial 1458]
 


Theorem (739)                               [serial 1455] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<window_size^1 = (ub^1-lb^1) and (goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ))>>
by Associativity: (b.c).a = a.b.c
and theorem 738:
Theorem (738) [serial 1458] used for:
  Associativity: (b.c).a = a.b.c [serial 1455]
 


Theorem (740)                               [serial 1453] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<window_size^1 = (ub^1-lb^1) and (goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not (MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not (MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Caret Compostition:  (x^a)^b is x^(a+b)
    Associativity: (b.c).a = a.b.c
and theorem 739:
Theorem (739) [serial 1455] used for:
    normalization of [serial 1453]
 


Theorem (741)                               [serial 1451] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<window_size^1 = (ub^1-lb^1) and (goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and (not MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      (not MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) ))>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 740:
Theorem (740) [serial 1453] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1451]
 


Theorem (742)                               [serial 1449] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<window_size^1 = (ub^1-lb^1) and (goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not (MotionArtifact^(k-ub))^1) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^((k-ub)+1) and (not MotionArtifact^(k-ub))^1)??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = ((SensorConnected^((k-ub)+1) and 
      (not MotionArtifact^(k-ub))^1)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not (MotionArtifact^(k-ub))^1) ))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Caret Compostition:  (x^a)^b is x^(a+b)
    Associativity: (b.c).a = a.b.c
and theorem 741:
Theorem (741) [serial 1451] used for:
    normalization of [serial 1449]
 


Theorem (743)                               [serial 1447] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<window_size^1 = (ub^1-lb^1) and (goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and (not MotionArtifact^(k-ub))^1) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      (not MotionArtifact^(k-ub))^1) ))>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 742:
Theorem (742) [serial 1449] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1447]
 


Theorem (744)                               [serial 1445] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<window_size^1 = (ub^1-lb^1) and (goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((k-ub)+1) and (not MotionArtifact^(k-ub))^1) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1??SpO2^((k-ub)+1):(0)^1) ) and 
(all k:integer
  in lb..ub-1 
  are ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1??SpO2^((k-ub)+1):(0)^1) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((k-ub)+1) and 
      (not MotionArtifact^(k-ub))^1) ))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
    Associativity: (b.c).a = a.b.c
and theorem 743:
Theorem (743) [serial 1447] used for:
    normalization of [serial 1445]
 


Theorem (745)                               [serial 1443] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<window_size^1 = (ub^1-lb^1) and (goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1 ) and totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)^1 ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)^1 = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub))^1 ))>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 744:
Theorem (744) [serial 1445] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1443]
 


Theorem (746)                               [serial 1441] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<window_size^1 = (ub^1-lb^1) and (goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)))^1 ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0))^1 ) and 
(all k:integer
  in lb..ub-1 
  are (((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0))^1 = (spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples])^1) ) and 
(all k:integer
  in lb..ub-1 
  are ((goodSamp[k mod #PulseOx_Properties::Max_Window_Samples])^1 iff (
      SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1) ))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 745:
Theorem (745) [serial 1443] used for:
    normalization of [serial 1441]
 


Theorem (747)                               [serial 1439] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<window_size^1 = (ub^1-lb^1) and (goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )^1 and totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )^1 and 
(all k:integer
  in lb..ub-1 
  are ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples])^1 ) and 
(all k:integer
  in lb..ub-1 
  are (goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)))^1 ))>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 746:
Theorem (746) [serial 1441] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1439]
 


Theorem (748)                               [serial 1437] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<window_size^1 = ((ub)^1-(lb)^1) and (((goodCount)^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )^1) and ((totalSpO2)^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )^1) and 
(all k:integer
  in lb..ub-1 
  are ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples])^1 ) and 
(all k:integer
  in lb..ub-1 
  are (goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)))^1 ))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 747:
Theorem (747) [serial 1439] used for:
    normalization of [serial 1437]
 


Theorem (749)                               [serial 1435] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<window_size^1 = (ub-lb)^1 and ((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))^1 and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))^1 and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] )^1 and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )^1)>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 748:
Theorem (748) [serial 1437] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1435]
 


Theorem (750)                               [serial 1433] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<((window_size)^1 = (ub-lb)^1) and ((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))^1 and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))^1 and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] )^1 and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )^1)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 749:
Theorem (749) [serial 1435] used for:
    normalization of [serial 1433]
 


Theorem (751)                               [serial 1431] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<(window_size = (ub-lb))^1 and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ))^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 750:
Theorem (750) [serial 1433] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1431]
 


Theorem (752)                               [serial 1429] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<((window_size = (ub-lb))^1 and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ))^1)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 751:
Theorem (751) [serial 1431] used for:
    normalization of [serial 1429]
 


Theorem (753)                               [serial 1426] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<(window_size = (ub-lb) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )))^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 752:
Theorem (752) [serial 1429] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1426]
 


Theorem (754)                               [serial 1424] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<(window_size = (ub-lb) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )))^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 753:
Theorem (753) [serial 1426] used for:
    normalization of [serial 1424]
 


Theorem (755)                               [serial 1422] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<(window_size = (ub-lb) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )))^1>>
by Substitution of Assertion Labels
and theorem 754:
Theorem (754) [serial 1424] used for:
  substituted Assertions' predicates for  labels  [serial 1422]
 


Theorem (756)                               [serial 1420] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<(window_size = (ub-lb) and ((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) )) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) )))^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 755:
Theorem (755) [serial 1422] used for:
    normalization of [serial 1420]
 


Theorem (757)                               [serial 1418] 
P [753] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<(window_size = (ub-lb) and (GOOD() and GS() and TOTAL_SPO2() and WINDOW()))^1>>
by Substitution of Assertion Labels
and theorem 756:
Theorem (756) [serial 1420] used for:
  substituted Assertions' predicates for  labels  [serial 1418]
 


Theorem (758)                               [serial 1416] 
P [753] <<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-(ub-1)) and 
      not MotionArtifact^(k-(ub-1))??SpO2^(k-(ub-1)):0)) ) and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))??SpO2^(k-(ub-1)):0)) )) and 
(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-(ub-1)) and 
      not MotionArtifact^(k-(ub-1))) ) and ((ub-lb) = window_size)>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<((WINDOW() and TOTAL_SPO2() and GOOD() and GS()) and ((ub-lb) = window_size))^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Associativity: (b.c).a = a.b.c
and theorem 757:
Theorem (757) [serial 1418] used for:
    normalization of [serial 1416]
 


Theorem (759)                               [serial 1037] 
P [753] <<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-(ub-1)) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-(ub-1)) )) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-(ub-1)) and 
      not MotionArtifact^(k-(ub-1))) ) and ((ub-lb) = window_size)>>
S [816] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [762] <<(INV_AV() and ((ub-lb) = window_size))^1>>
by Substitution of Assertion Labels
and theorem 758:
Theorem (758) [serial 1416] used for:
  substituted Assertions' predicates for  labels  [serial 1037]
 


Theorem (760)                               [serial 1469] 
P [753] <<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-(ub-1)) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-(ub-1)) )) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-(ub-1)) and 
      not MotionArtifact^(k-(ub-1))) ) and ((ub-lb) > window_size)>>
S [819] ->
Q [764] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (761)                               [serial 1038] 
P [753] <<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-(ub-1)) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-(ub-1)) )) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-(ub-1)) and 
      not MotionArtifact^(k-(ub-1))) ) and ((ub-lb) > window_size)>>
S [819] (ub',lb',window_size',totalSpO2',goodCount',goodSamp',spo2_hist' := ub,lb,window_size,totalSpO2,goodCount,goodSamp,spo2_hist)  
Q [764] <<true>>
by Simultaneous Assignment
and theorem 760:
Theorem (760) [serial 1469] used for:
  applied wp for simultaneous assignment [serial 1038]
 


Theorem (762)                               [serial 1730] 
P [762] <<window_size = (ub-lb) and GOOD() and GS() and TOTAL_SPO2() and WINDOW()>>
S [762] ->
Q [822] <<window_size = (ub-lb) and GOOD() and GS() and TOTAL_SPO2() and WINDOW()>>
by Identity (id):  P->P is tautology


Theorem (763)                               [serial 1728] 
P [762] <<window_size = (ub-lb) and GOOD() and GS() and TOTAL_SPO2() and WINDOW()>>
S [762] ->
Q [822] <<WINDOW() and TOTAL_SPO2() and GOOD() and GS() and window_size = (ub-lb)>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 762:
Theorem (762) [serial 1730] used for:
    normalization of [serial 1728]
 


Theorem (764)                               [serial 1727] 
P [762] <<window_size = (ub-lb) and GOOD() and GS() and TOTAL_SPO2() and WINDOW()>>
S [762] ->
Q [822] <<window_size = (ub-lb) and (WINDOW() and TOTAL_SPO2() and GOOD() and GS())>>
by Associativity: (b.c).a = a.b.c
and theorem 763:
Theorem (763) [serial 1728] used for:
  Associativity: (b.c).a = a.b.c [serial 1727]
 


Theorem (765)                               [serial 1626] 
P [762] <<window_size = (ub-lb) and GOOD() and GS() and TOTAL_SPO2() and WINDOW()>>
S [762] ->
Q [822] <<window_size = (ub-lb) and INV_AV()>>
by Substitution of Assertion Labels
and theorem 764:
Theorem (764) [serial 1727] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1626]
 


Theorem (766)                               [serial 1601] 
P [762] <<WINDOW() and TOTAL_SPO2() and GOOD() and GS() and window_size = (ub-lb)>>
S [762] ->
Q [822] <<(INV_AV() and ((ub-lb) = window_size))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 765:
Theorem (765) [serial 1626] used for:
    normalization of [serial 1601]
 


Theorem (767)                               [serial 1587] 
P [762] <<window_size = (ub-lb) and (WINDOW() and TOTAL_SPO2() and GOOD() and GS())>>
S [762] ->
Q [822] <<(INV_AV() and ((ub-lb) = window_size))>>
by Associativity: (b.c).a = a.b.c
and theorem 766:
Theorem (766) [serial 1601] used for:
  Associativity: (b.c).a = a.b.c [serial 1587]
 


Theorem (768)                               [serial 1498] 
P [762] <<window_size = (ub-lb) and INV_AV()>>
S [762] ->
Q [822] <<RUN_AV()>>
by Substitution of Assertion Labels
and theorem 767:
Theorem (767) [serial 1587] used for:
  substituted Assertions' predicates for  labels  [serial 1498]
 


Theorem (769)                               [serial 1470] 
P [762] <<INV_AV() and ((ub-lb) = window_size)>>
S [762] ->
Q [822] <<RUN_AV()>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 768:
Theorem (768) [serial 1498] used for:
    normalization of [serial 1470]
 


Theorem (770)                               [serial 1855] 
P [887] <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [762] ->
Q    <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
by Identity (id):  P->P is tautology


Theorem (771)                               [serial 1853] 
P [887] <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [762] ->
Q    <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not (MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not (MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Caret Compostition:  (x^a)^b is x^(a+b)
    Associativity: (b.c).a = a.b.c
and theorem 770:
Theorem (770) [serial 1855] used for:
    normalization of [serial 1853]
 


Theorem (772)                               [serial 1851] 
P [887] <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [762] ->
Q    <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and (not MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      (not MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 771:
Theorem (771) [serial 1853] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1851]
 


Theorem (773)                               [serial 1849] 
P [887] <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [762] ->
Q    <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not (MotionArtifact^(k-ub))^1) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^((k-ub)+1) and (not MotionArtifact^(k-ub))^1)??SpO2^((1+k)-ub):0) ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = ((SensorConnected^((k-ub)+1) and 
      (not MotionArtifact^(k-ub))^1)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not (MotionArtifact^(k-ub))^1) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Caret Compostition:  (x^a)^b is x^(a+b)
    Associativity: (b.c).a = a.b.c
and theorem 772:
Theorem (772) [serial 1851] used for:
    normalization of [serial 1849]
 


Theorem (774)                               [serial 1847] 
P [887] <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [762] ->
Q    <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and (not MotionArtifact^(k-ub))^1) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub))^1??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      (not MotionArtifact^(k-ub))^1) )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 773:
Theorem (773) [serial 1849] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1847]
 


Theorem (775)                               [serial 1845] 
P [887] <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [762] ->
Q    <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((k-ub)+1) and (not MotionArtifact^(k-ub))^1) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1??SpO2^((k-ub)+1):(0)^1) ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1??SpO2^((k-ub)+1):(0)^1) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((k-ub)+1) and 
      (not MotionArtifact^(k-ub))^1) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
    Associativity: (b.c).a = a.b.c
and theorem 774:
Theorem (774) [serial 1847] used for:
    normalization of [serial 1845]
 


Theorem (776)                               [serial 1843] 
P [887] <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [762] ->
Q    <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1 ) and totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)^1 ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)^1 = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub))^1 )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 775:
Theorem (775) [serial 1845] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1843]
 


Theorem (777)                               [serial 1841] 
P [887] <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [762] ->
Q    <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)))^1 ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0))^1 ) and 
window_size^1 = ((ub)^1-(lb)^1) and (all k:integer
  in lb..ub-1 
  are (((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0))^1 = (spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples])^1) ) and 
(all k:integer
  in lb..ub-1 
  are ((goodSamp[k mod #PulseOx_Properties::Max_Window_Samples])^1 iff (
      SensorConnected^(k-ub) and not MotionArtifact^(k-ub))^1) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 776:
Theorem (776) [serial 1843] used for:
    normalization of [serial 1841]
 


Theorem (778)                               [serial 1839] 
P [887] <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [762] ->
Q    <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )^1 and totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )^1 and 
window_size^1 = (ub-lb)^1 and (all k:integer
  in lb..ub-1 
  are ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples])^1 ) and 
(all k:integer
  in lb..ub-1 
  are (goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)))^1 )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 777:
Theorem (777) [serial 1841] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1839]
 


Theorem (779)                               [serial 1837] 
P [887] <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [762] ->
Q    <<((goodCount)^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )^1) and ((totalSpO2)^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )^1) and 
((window_size)^1 = (ub-lb)^1) and (all k:integer
  in lb..ub-1 
  are ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples])^1 ) and 
(all k:integer
  in lb..ub-1 
  are (goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)))^1 )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 778:
Theorem (778) [serial 1839] used for:
    normalization of [serial 1837]
 


Theorem (780)                               [serial 1835] 
P [887] <<goodCount^1 = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) and 
totalSpO2^1 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and 
window_size^1 = (ub^1-lb^1) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]^1 = (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]^1 iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [762] ->
Q    <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))^1 and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))^1 and 
(window_size = (ub-lb))^1 and (all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] )^1 and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 779:
Theorem (779) [serial 1837] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1835]
 


Theorem (781)                               [serial 1833] 
P [887] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = (goodCount)^1 and 
(sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) = (totalSpO2)^1 and 
(((ub)^1)-((lb)^1)) = (window_size)^1 and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = (spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples])^1 ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) iff (goodSamp[k mod #PulseOx_Properties::Max_Window_Samples])^1 )>>
S [762] ->
Q    <<((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))^1 and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))^1 and 
(window_size = (ub-lb))^1 and (all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] )^1 and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )^1)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 780:
Theorem (780) [serial 1835] used for:
    normalization of [serial 1833]
 


Theorem (782)                               [serial 1830] 
P [887] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) = totalSpO2' and 
((ub')-(lb')) = window_size' and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]' ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) iff goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]' )>>
S [762] ->
Q    <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ))^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 781:
Theorem (781) [serial 1833] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 1830]
 


Theorem (783)                               [serial 1828] 
P [887] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) = totalSpO2' and 
((ub')-(lb')) = window_size' and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]' ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) iff goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]' )>>
S [762] ->
Q    <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ))^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 782:
Theorem (782) [serial 1830] used for:
    normalization of [serial 1828]
 


Theorem (784)                               [serial 1826] 
P [887] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) = totalSpO2' and 
((ub')-(lb')) = window_size' and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]' ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) iff goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]' )>>
S [762] ->
Q    <<(goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ))^1>>
by Substitution of Assertion Labels
and theorem 783:
Theorem (783) [serial 1828] used for:
  substituted Assertions' predicates for  labels  [serial 1826]
 


Theorem (785)                               [serial 1824] 
P [887] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) = totalSpO2' and 
((ub')-(lb')) = window_size' and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]' ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) iff goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]' )>>
S [762] ->
Q    <<(window_size = (ub-lb) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) )) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ))^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 784:
Theorem (784) [serial 1826] used for:
    normalization of [serial 1824]
 


Theorem (786)                               [serial 1638] 
P [887] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) = totalSpO2' and 
((ub')-(lb')) = window_size' and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]' ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) iff goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]' )>>
S [762] ->
Q    <<(window_size = (ub-lb) and GOOD() and GS() and TOTAL_SPO2() and WINDOW())^1>>
by Substitution of Assertion Labels
and theorem 785:
Theorem (785) [serial 1824] used for:
  substituted Assertions' predicates for  labels  [serial 1638]
 


Theorem (787)                               [serial 1607] 
P [887] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of ((SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0)) ) = totalSpO2' and 
((ub')-(lb')) = window_size' and (all k:integer
  in lb..ub-1 
  are ((SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0)) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]' ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) iff goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]' )>>
S [762] ->
Q    <<(WINDOW() and TOTAL_SPO2() and GOOD() and GS() and window_size = (ub-lb))^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 786:
Theorem (786) [serial 1638] used for:
    normalization of [serial 1607]
 


Theorem (788)                               [serial 1597] 
P [887] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of ((SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0)) ) = totalSpO2' and 
((ub')-(lb')) = window_size' and (all k:integer
  in lb..ub-1 
  are ((SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0)) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]' ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) iff goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]' )>>
S [762] ->
Q    <<(window_size = (ub-lb) and (WINDOW() and TOTAL_SPO2() and GOOD() and GS()))^1>>
by Associativity: (b.c).a = a.b.c
and theorem 787:
Theorem (787) [serial 1607] used for:
  Associativity: (b.c).a = a.b.c [serial 1597]
 


Theorem (789)                               [serial 1553] 
P [887] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of C((1+k)-ub) ) = totalSpO2' and ((ub')-(lb')) = window_size' and (all k:integer
  in lb..ub-1 
  are C((1+k)-ub) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]' ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) iff goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]' )>>
S [762] ->
Q    <<(window_size = (ub-lb) and INV_AV())^1>>
by Substitution of Assertion Labels
and theorem 788:
Theorem (788) [serial 1597] used for:
  substituted Assertions' predicates for  labels  [serial 1553]
 


Theorem (790)                               [serial 1500] 
P [887] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of C((1+k)-ub) ) = totalSpO2' and ((1+ub')-(1+lb')) = window_size' and 
(all k:integer
  in lb..ub-1 
  are C((1+k)-ub) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]' ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) iff goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]' )>>
S [762] ->
Q    <<(window_size = (ub-lb) and INV_AV())^1>>
by Add both sides of subtraction:  a-b is (x+a)-(x+b)
and theorem 789:
Theorem (789) [serial 1553] used for:
  Add both sides of subtraction:  a-b is (x+a)-(x+b) [serial 1500]
 


Theorem (791)                               [serial 1471] 
P [887] <<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]' = C(k-(ub-1)) ) and 
(totalSpO2' = (sum k:integer
  in lb..ub-1 
  of C(k-(ub-1)) )) and (((ub'-1)-(lb'-1)) = window_size') and (goodCount' = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]' iff (SensorConnected^(k-(ub-1)) and 
      not MotionArtifact^(k-(ub-1))) )>>
S [762] ->
Q    <<(INV_AV() and ((ub-lb) = window_size))^1>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Associativity: (b.c).a = a.b.c
and theorem 790:
Theorem (790) [serial 1500] used for:
    normalization of [serial 1471]
 


Theorem (792)                               [serial 1669] 
P [822] <<window_size = (ub-lb) and INV_AV()>>
S [823] ->
Q [823] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (793)                               [serial 1667] 
P [822] <<window_size = (ub-lb) and INV_AV()>>
S [823] ->
Q [823] <<not 0 < goodCount or 0 < goodCount>>
by Law of Excluded Middle: P or not P is tautology
and theorem 792:
Theorem (792) [serial 1669] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1667]
 


Theorem (794)                               [serial 1665] 
P [822] <<window_size = (ub-lb) and INV_AV()>>
S [823] ->
Q [823] <<(not (0 < goodCount)) or 0 < goodCount>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 793:
Theorem (793) [serial 1667] used for:
    normalization of [serial 1665]
 


Theorem (795)                               [serial 1612] 
P [822] <<window_size = (ub-lb) and INV_AV()>>
S [823] ->
Q [823] <<goodCount <= 0 or 0 < goodCount>>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 794:
Theorem (794) [serial 1665] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1612]
 


Theorem (796)                               [serial 1588] 
P [822] <<(INV_AV() and ((ub-lb) = window_size))>>
S [823] ->
Q [823] <<goodCount <= 0 or 0 < goodCount>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 795:
Theorem (795) [serial 1612] used for:
    normalization of [serial 1588]
 


Theorem (797)                               [serial 1502] 
P [822] <<RUN_AV()>>
S [823] ->
Q [823] <<goodCount <= 0 or 0 < goodCount>>
by Substitution of Assertion Labels
and theorem 796:
Theorem (796) [serial 1588] used for:
  substituted Assertions' predicates for  labels  [serial 1502]
 


Theorem (798)                               [serial 1476] 
P [822] <<RUN_AV()>>
S [823] ->
Q [823] <<(goodCount > 0) or (goodCount <= 0)>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 797:
Theorem (797) [serial 1502] used for:
    normalization of [serial 1476]
 


Theorem (799)                               [serial 1556] 
P [823] <<RUN_AV() and 0 < goodCount>>
S [823] ->
Q [825] <<RUN_AV() and 0 < goodCount>>
by Identity (id):  P->P is tautology


Theorem (800)                               [serial 1529] 
P [823] <<RUN_AV() and 0 < goodCount>>
S [823] ->
Q [825] <<RUN_AV() and true and 0 < goodCount>>
by Law of And-Simplification:  P and true is P
and theorem 799:
Theorem (799) [serial 1556] used for:
  Law of And-Simplification:  P and true is P [serial 1529]
 


Theorem (801)                               [serial 1493] 
P [823] <<(RUN_AV()) and (goodCount > 0)>>
S [823] ->
Q [825] <<RUN_AV() and (goodCount > 0) and true>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 800:
Theorem (800) [serial 1529] used for:
    normalization of [serial 1493]
 


Theorem (802)                               [serial 1556] 
P [823] <<RUN_AV() and 0 < goodCount>>
S [823] ->
Q [825] <<RUN_AV() and 0 < goodCount>>
by Identity (id):  P->P is tautology


Theorem (803)                               [serial 1529] 
P [823] <<RUN_AV() and 0 < goodCount>>
S [823] ->
Q [825] <<RUN_AV() and true and 0 < goodCount>>
by Law of And-Simplification:  P and true is P
and theorem 802:
Theorem (802) [serial 1556] used for:
  Law of And-Simplification:  P and true is P [serial 1529]
 


Theorem (804)                               [serial 1493] 
P [823] <<(RUN_AV()) and (goodCount > 0)>>
S [823] ->
Q [825] <<RUN_AV() and (goodCount > 0) and true>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 803:
Theorem (803) [serial 1529] used for:
    normalization of [serial 1493]
 


Theorem (805)                               [serial 1477] 
P [823] <<(RUN_AV()) and (goodCount > 0)>>
S [823] ->
Q [825] <<RUN_AV() and (goodCount > 0) and AXIOM_K2I()>>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 804 804:
Theorem (804) [serial 1493] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (804) [serial 1493] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (806)                               [serial 1746] 
P [826] <<(SpO2Avg = (totalSpO2/goodCount))^0 and window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and INV_AV() and 
0 < goodCount>>
S [826] ->
Q [827] <<window_size = (ub-lb) and INV_AV()>>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (807)                               [serial 1742] 
P [826] <<window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and INV_AV() and 
0 < goodCount and (SpO2Avg = (totalSpO2/goodCount))^0>>
S [826] ->
Q [827] <<window_size = (ub-lb) and INV_AV()>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 806:
Theorem (806) [serial 1746] used for:
    normalization of [serial 1742]
 


Theorem (808)                               [serial 1736] 
P [826] <<(SpO2Avg = (totalSpO2/goodCount))^0 and (window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and INV_AV() and 
0 < goodCount)>>
S [826] ->
Q [827] <<window_size = (ub-lb) and INV_AV()>>
by Associativity: (b.c).a = a.b.c
and theorem 807:
Theorem (807) [serial 1742] used for:
  Associativity: (b.c).a = a.b.c [serial 1736]
 


Theorem (809)                               [serial 1732] 
P [826] <<(window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and INV_AV() and 
0 < goodCount) and (SpO2Avg = (totalSpO2/goodCount))^0>>
S [826] ->
Q [827] <<window_size = (ub-lb) and INV_AV()>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 808:
Theorem (808) [serial 1736] used for:
    normalization of [serial 1732]
 


Theorem (810)                               [serial 1772] 
P [826] <<SpO2Avg = (totalSpO2/goodCount) and goodCount = (numberof #0#:integer
  in lb..ub-1 
  that (SensorConnected^(#0#-ub) and not MotionArtifact^(#0#-ub)) ) and 
totalSpO2 = (sum #1#:integer
  in lb..ub-1 
  of (SensorConnected^(#1#-ub) and not MotionArtifact^(#1#-ub)??SpO2^(#1#-ub):0) ) and 
window_size = (ub-lb) and ((sum #2#:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^#2# and not MotionArtifact^#2#??SpO2^#2#:0) )/(numberof #3#:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^#3# and not MotionArtifact^#3#) )) = ((sum #4#:integer
  in lb..ub-1 
  of (SensorConnected^(#4#-ub) and not MotionArtifact^(#4#-ub)??SpO2^(#4#-ub):0) )/(numberof #5#:integer
  in lb..ub-1 
  that (SensorConnected^(#5#-ub) and not MotionArtifact^(#5#-ub)) )) and 
(all #6#:integer
  in lb..ub-1 
  are (SensorConnected^(#6#-ub) and not MotionArtifact^(#6#-ub)??SpO2^(#6#-ub):0) = spo2_hist[#6# mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all #7#:integer
  in lb..ub-1 
  are goodSamp[#7# mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(#7#-ub) and 
      not MotionArtifact^(#7#-ub)) ) and 0 < goodCount>>
S [826] ->
Q [826] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (811)                               [serial 1771] 
P [826] <<SpO2Avg = (totalSpO2/goodCount) and goodCount = (numberof #0#:integer
  in lb..ub-1 
  that (SensorConnected^(#0#-ub) and not MotionArtifact^(#0#-ub)) ) and 
totalSpO2 = (sum #1#:integer
  in lb..ub-1 
  of (SensorConnected^(#1#-ub) and not MotionArtifact^(#1#-ub)??SpO2^(#1#-ub):0) ) and 
window_size = (ub-lb) and ((sum #2#:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^#2# and not MotionArtifact^#2#??SpO2^#2#:0) )/(numberof #3#:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^#3# and not MotionArtifact^#3#) )) = ((sum #4#:integer
  in lb..ub-1 
  of (SensorConnected^(#4#-ub) and not MotionArtifact^(#4#-ub)??SpO2^(#4#-ub):0) )/(numberof #5#:integer
  in lb..ub-1 
  that (SensorConnected^(#5#-ub) and not MotionArtifact^(#5#-ub)) )) and 
(all #6#:integer
  in lb..ub-1 
  are (SensorConnected^(#6#-ub) and not MotionArtifact^(#6#-ub)??SpO2^(#6#-ub):0) = spo2_hist[#6# mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all #7#:integer
  in lb..ub-1 
  are goodSamp[#7# mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(#7#-ub) and 
      not MotionArtifact^(#7#-ub)) ) and 0 < goodCount>>
S [826] ->
Q [826] <<((sum #2#:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^#2# and not MotionArtifact^#2#??SpO2^#2#:0) )/(numberof #3#:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^#3# and not MotionArtifact^#3#) )) = ((sum #8#:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^#8# and not MotionArtifact^#8#??SpO2^#8#:0) )/(numberof #9#:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^#9# and not MotionArtifact^#9#) ))>>
by Equality Law (idistr):  a=a <-> true
and theorem 810:
Theorem (810) [serial 1772] used for:
  Equality Law (idistr):  a=a <-> true [serial 1771]
 


Theorem (812)                               [serial 1770] 
P [826] <<SpO2Avg = (totalSpO2/goodCount) and goodCount = (numberof #0#:integer
  in lb..ub-1 
  that (SensorConnected^(#0#-ub) and not MotionArtifact^(#0#-ub)) ) and 
totalSpO2 = (sum #1#:integer
  in lb..ub-1 
  of (SensorConnected^(#1#-ub) and not MotionArtifact^(#1#-ub)??SpO2^(#1#-ub):0) ) and 
window_size = (ub-lb) and ((sum #2#:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^#2# and not MotionArtifact^#2#??SpO2^#2#:0) )/(numberof #3#:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^#3# and not MotionArtifact^#3#) )) = ((sum #4#:integer
  in lb..ub-1 
  of (SensorConnected^(#4#-ub) and not MotionArtifact^(#4#-ub)??SpO2^(#4#-ub):0) )/(numberof #5#:integer
  in lb..ub-1 
  that (SensorConnected^(#5#-ub) and not MotionArtifact^(#5#-ub)) )) and 
(all #6#:integer
  in lb..ub-1 
  are (SensorConnected^(#6#-ub) and not MotionArtifact^(#6#-ub)??SpO2^(#6#-ub):0) = spo2_hist[#6# mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all #7#:integer
  in lb..ub-1 
  are goodSamp[#7# mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(#7#-ub) and 
      not MotionArtifact^(#7#-ub)) ) and 0 < goodCount>>
S [826] ->
Q [826] <<((sum #10#:integer
  in lb..ub-1 
  of (SensorConnected^(#10#-ub) and not MotionArtifact^(#10#-ub)??SpO2^(#10#-ub):0) )/(numberof #11#:integer
  in lb..ub-1 
  that (SensorConnected^(#11#-ub) and not MotionArtifact^(#11#-ub)) )) = ((sum #8#:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^#8# and not MotionArtifact^#8#??SpO2^#8#:0) )/(numberof #9#:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^#9# and not MotionArtifact^#9#) ))>>
by Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
and theorem 811:
Theorem (811) [serial 1771] used for:
  Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
 replacing "((sum #4#:integer
  in lb..ub-1 
  of (SensorConnected^(#4#-ub) and not MotionArtifact^(#4#-ub)??SpO2^(#4#-ub):0) )/(numberof #5#:integer
  in lb..ub-1 
  that (SensorConnected^(#5#-ub) and not MotionArtifact^(#5#-ub)) ))"
 with its ="
 (((sum #2#:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^#2# and not MotionArtifact^#2#??SpO2^#2#:0) )/(numberof #3#:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^#3# and not MotionArtifact^#3#) )))" [serial 1770]
 


Theorem (813)                               [serial 1768] 
P [826] <<SpO2Avg = (totalSpO2/goodCount) and goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and 0 < goodCount>>
S [826] ->
Q [826] <<((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))>>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 812:
Theorem (812) [serial 1770] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 1768]
 


Theorem (814)                               [serial 1766] 
P [826] <<SpO2Avg = (totalSpO2/goodCount) and goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and 0 < goodCount>>
S [826] ->
Q [826] <<(((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))/((numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))) = ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 813:
Theorem (813) [serial 1768] used for:
    normalization of [serial 1766]
 


Theorem (815)                               [serial 1765] 
P [826] <<SpO2Avg = (totalSpO2/goodCount) and goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and 0 < goodCount>>
S [826] ->
Q [826] <<(((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))/goodCount) = ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))>>
by Guided Substitution of Equals
and theorem 814:
Theorem (814) [serial 1766] used for:
  Guided Substitution of Equals
 replacing "goodCount" with its = "((numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))" in its postcondition [serial 1765]
 


Theorem (816)                               [serial 1764] 
P [826] <<SpO2Avg = (totalSpO2/goodCount) and goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and 0 < goodCount>>
S [826] ->
Q [826] <<(totalSpO2/goodCount) = ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))>>
by Guided Substitution of Equals
and theorem 815:
Theorem (815) [serial 1765] used for:
  Guided Substitution of Equals
 replacing "totalSpO2" with its = "((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))" in its postcondition [serial 1764]
 


Theorem (817)                               [serial 1763] 
P [826] <<SpO2Avg = (totalSpO2/goodCount) and goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and 0 < goodCount>>
S [826] ->
Q [826] <<SpO2Avg = ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))>>
by Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
and theorem 816:
Theorem (816) [serial 1764] used for:
  Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
 replacing "SpO2Avg"
 with its ="
 ((totalSpO2/goodCount))" [serial 1763]
 


Theorem (818)                               [serial 1762] 
P [826] <<(SpO2Avg = (totalSpO2/goodCount))^0 and goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and 
window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and 0 < goodCount>>
S [826] ->
Q [826] <<SpO2Avg = ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))>>
by Assume Present:  P = P@now = P^0 
and theorem 817:
Theorem (817) [serial 1763] used for:
  Assume Present:  P = P@now = P^0  [serial 1762]
 


Theorem (819)                               [serial 1760] 
P [826] <<(SpO2Avg = (totalSpO2/goodCount))^0 and goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and 0 < goodCount>>
S [826] ->
Q [826] <<SpO2Avg = ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))>>
by Substitution of Assertion Labels
and theorem 818:
Theorem (818) [serial 1762] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1760]
 


Theorem (820)                               [serial 1758] 
P [826] <<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) )) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (SpO2Avg = (totalSpO2/goodCount))^0 and 
window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and 0 < goodCount>>
S [826] ->
Q [826] <<SpO2Avg = ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 819:
Theorem (819) [serial 1760] used for:
    normalization of [serial 1758]
 


Theorem (821)                               [serial 1757] 
P [826] <<(SpO2Avg = (totalSpO2/goodCount))^0 and window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and ((all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) )) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and 0 < goodCount>>
S [826] ->
Q [826] <<SpO2Avg = ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))>>
by Associativity: (b.c).a = a.b.c
and theorem 820:
Theorem (820) [serial 1758] used for:
  Associativity: (b.c).a = a.b.c [serial 1757]
 


Theorem (822)                               [serial 1756] 
P [826] <<(SpO2Avg = (totalSpO2/goodCount))^0 and window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (WINDOW() and 
TOTAL_SPO2() and GOOD() and GS()) and 0 < goodCount>>
S [826] ->
Q [826] <<SpO2Avg = ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))>>
by Substitution of Assertion Labels
and theorem 821:
Theorem (821) [serial 1757] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1756]
 


Theorem (823)                               [serial 1748] 
P [826] <<(SpO2Avg = (totalSpO2/goodCount))^0 and window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and INV_AV() and 
0 < goodCount>>
S [826] ->
Q [826] <<SpO2Avg = ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))>>
by Substitution of Assertion Labels
and theorem 822:
Theorem (822) [serial 1756] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1748]
 


Theorem (824)                               [serial 1743] 
P [826] <<window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and INV_AV() and 
0 < goodCount and (SpO2Avg = (totalSpO2/goodCount))^0>>
S [826] ->
Q [826] <<SpO2Avg = ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 823:
Theorem (823) [serial 1748] used for:
    normalization of [serial 1743]
 


Theorem (825)                               [serial 1738] 
P [826] <<(SpO2Avg = (totalSpO2/goodCount))^0 and (window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and INV_AV() and 
0 < goodCount)>>
S [826] ->
Q [826] <<SpO2Avg = ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))>>
by Associativity: (b.c).a = a.b.c
and theorem 824:
Theorem (824) [serial 1743] used for:
  Associativity: (b.c).a = a.b.c [serial 1738]
 


Theorem (826)                               [serial 1733] 
P [826] <<(window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and INV_AV() and 
0 < goodCount) and (SpO2Avg = (totalSpO2/goodCount))^0>>
S [826] ->
Q [826] <<SpO2Avg = ((sum i:integer
  in  -SpO2MovingAvgWindowSamples.. -1 
  of (SensorConnected^(i) and not MotionArtifact^(i)??SpO2^(i):0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples.. -1 
  that (SensorConnected^(i) and not MotionArtifact^(i)) ))>>
by Normalization
  Normalization Axioms:
    Unary Minus:  -(x-y) is (y-x)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 825:
Theorem (825) [serial 1738] used for:
    normalization of [serial 1733]
 


Theorem (827)                               [serial 1754] 
P [825] <<window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and INV_AV() and 
0 < goodCount>>
S [826] ->
Q [826] <<goodCount < 0 or 0 < goodCount>>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (828)                               [serial 1751] 
P [825] <<window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and INV_AV() and 
0 < goodCount>>
S [826] ->
Q [826] <<((0 < goodCount) or (goodCount < 0))>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 827:
Theorem (827) [serial 1754] used for:
    normalization of [serial 1751]
 


Theorem (829)                               [serial 1734] 
P [825] <<window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and INV_AV() and 
0 < goodCount>>
S [826] ->
Q [826] <<goodCount <> 0>>
by Replace inequality with not equality:  a<>b  iff  not(a=b)
and theorem 828:
Theorem (828) [serial 1751] used for:
  Replace inequality with not equality:  a<>b  iff  not(a=b) [serial 1734]
 


Theorem (830)                               [serial 1628] 
P [825] <<window_size = (ub-lb) and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) )) = ((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and INV_AV() and 
0 < goodCount>>
S [826] SpO2Avg!(totalSpO2/goodCount)
Q [827] <<window_size = (ub-lb) and INV_AV()>>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 809 826 829:
Theorem (809) [serial 1732] used for:
  applied port output <<pre and (SpO2Avg=totalSpO2/goodCount)^0>> -> <<post>> [serial 1628]
 
Theorem (826) [serial 1733] used for:
  applied port output <<pre and (SpO2Avg=totalSpO2/goodCount)^0>> -> <<(SpO2Avg=(sum i:integer
  in  -SpO2MovingAvgWindowSamples.. -1 
  of (SensorConnected^(i) and not MotionArtifact^(i)??SpO2^(i):0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples.. -1 
  that (SensorConnected^(i) and not MotionArtifact^(i)) ))^0>> [serial 1628]
 
Theorem (829) [serial 1734] used for:
  applied  <<pre>> -> <<d <> 0>> for <<pre>> SpO2Avg!(totalSpO2/goodCount) <<post>> [serial 1628]
 


Theorem (831)                               [serial 1602] 
P [825] <<INV_AV() and ((ub-lb) = window_size) and (((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) = ((sum i:integer
  in  -SpO2MovingAvgWindowSamples.. -1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples.. -1 
  that (SensorConnected^(i) and not MotionArtifact^(i)) ))) and 0 < goodCount>>
S [826] SpO2Avg!(totalSpO2/goodCount)
Q [827] <<(INV_AV() and ((ub-lb) = window_size))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Unary Minus:  -(x-y) is (y-x)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 830:
Theorem (830) [serial 1628] used for:
    normalization of [serial 1602]
 


Theorem (832)                               [serial 1589] 
P [825] <<(((sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )/(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) = ((sum i:integer
  in  -SpO2MovingAvgWindowSamples.. -1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples.. -1 
  that (SensorConnected^(i) and not MotionArtifact^(i)) ))) and (INV_AV() and 
((ub-lb) = window_size)) and 0 < goodCount>>
S [826] SpO2Avg!(totalSpO2/goodCount)
Q [827] <<(INV_AV() and ((ub-lb) = window_size))>>
by Associativity: (b.c).a = a.b.c
and theorem 831:
Theorem (831) [serial 1602] used for:
  Associativity: (b.c).a = a.b.c [serial 1589]
 


Theorem (833)                               [serial 1504] 
P [825] <<AXIOM_K2I() and RUN_AV() and 0 < goodCount>>
S [826] SpO2Avg!(totalSpO2/goodCount)
Q [827] <<RUN_AV()>>
by Substitution of Assertion Labels
and theorem 832:
Theorem (832) [serial 1589] used for:
  substituted Assertions' predicates for  labels  [serial 1504]
 


Theorem (834)                               [serial 1478] 
P [825] <<RUN_AV() and (goodCount > 0) and AXIOM_K2I()>>
S [826] SpO2Avg!(totalSpO2/goodCount)
Q [827] <<RUN_AV()>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 833:
Theorem (833) [serial 1504] used for:
    normalization of [serial 1478]
 


Theorem (835)                               [serial 1572] 
P [827] <<RUN_AV()>>
S [823] ->
Q [832] <<RUN_AV()>>
by Identity (id):  P->P is tautology


Theorem (836)                               [serial 1551] 
P [827] <<RUN_AV()>>
S [823] ->
Q [832] <<(RUN_AV())>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 835:
Theorem (835) [serial 1572] used for:
    normalization of [serial 1551]
 


Theorem (837)                               [serial 1494] 
P [827] <<RUN_AV()>>
S [823] ->
Q [832] <<RUN_AV() and true>>
by Law of And-Simplification:  P and true is P
and theorem 836:
Theorem (836) [serial 1551] used for:
  Law of And-Simplification:  P and true is P [serial 1494]
 


Theorem (838)                               [serial 1572] 
P [827] <<RUN_AV()>>
S [823] ->
Q [832] <<RUN_AV()>>
by Identity (id):  P->P is tautology


Theorem (839)                               [serial 1551] 
P [827] <<RUN_AV()>>
S [823] ->
Q [832] <<(RUN_AV())>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 838:
Theorem (838) [serial 1572] used for:
    normalization of [serial 1551]
 


Theorem (840)                               [serial 1494] 
P [827] <<RUN_AV()>>
S [823] ->
Q [832] <<RUN_AV() and true>>
by Law of And-Simplification:  P and true is P
and theorem 839:
Theorem (839) [serial 1551] used for:
  Law of And-Simplification:  P and true is P [serial 1494]
 


Theorem (841)                               [serial 1479] 
P [827] <<RUN_AV()>>
S [823] ->
Q [832] <<RUN_AV() and AXIOM_LB()>>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 840 840:
Theorem (840) [serial 1494] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (840) [serial 1494] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (842)                               [serial 1506] 
P [823] <<goodCount <= 0 and RUN_AV()>>
S [823] ->
Q [829] <<RUN_AV()>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (843)                               [serial 1480] 
P [823] <<(RUN_AV()) and (goodCount <= 0)>>
S [823] ->
Q [829] <<RUN_AV()>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 842:
Theorem (842) [serial 1506] used for:
    normalization of [serial 1480]
 


Theorem (844)                               [serial 1664] 
P [829] <<window_size = (ub-lb) and INV_AV()>>
S [829] ->
Q [829] <<window_size = (ub-lb) and INV_AV()>>
by Identity (id):  P->P is tautology


Theorem (845)                               [serial 1610] 
P [829] <<window_size = (ub-lb) and INV_AV()>>
S [829] skip
Q [829] <<window_size = (ub-lb) and INV_AV()>>
by Skip Means Implication:  <<P>> skip <<Q>>  is  <<P>> -> <<Q>> (bl.skip)
and theorem 844:
Theorem (844) [serial 1664] used for:
    <<P>> -> <<Q>>
  for [serial 1610]
 


Theorem (846)                               [serial 1586] 
P [829] <<(INV_AV() and ((ub-lb) = window_size))>>
S [829] skip
Q [829] <<(INV_AV() and ((ub-lb) = window_size))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 845:
Theorem (845) [serial 1610] used for:
    normalization of [serial 1586]
 


Theorem (847)                               [serial 1481] 
P [829] <<RUN_AV()>>
S [829] skip
Q [829] <<RUN_AV()>>
by Substitution of Assertion Labels
and theorem 846:
Theorem (846) [serial 1586] used for:
  substituted Assertions' predicates for  labels  [serial 1481]
 


Theorem (848)                               [serial 1574] 
P [829] <<RUN_AV()>>
S [823] ->
Q [832] <<RUN_AV()>>
by Identity (id):  P->P is tautology


Theorem (849)                               [serial 1552] 
P [829] <<RUN_AV()>>
S [823] ->
Q [832] <<(RUN_AV())>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 848:
Theorem (848) [serial 1574] used for:
    normalization of [serial 1552]
 


Theorem (850)                               [serial 1495] 
P [829] <<RUN_AV()>>
S [823] ->
Q [832] <<RUN_AV() and true>>
by Law of And-Simplification:  P and true is P
and theorem 849:
Theorem (849) [serial 1552] used for:
  Law of And-Simplification:  P and true is P [serial 1495]
 


Theorem (851)                               [serial 1574] 
P [829] <<RUN_AV()>>
S [823] ->
Q [832] <<RUN_AV()>>
by Identity (id):  P->P is tautology


Theorem (852)                               [serial 1552] 
P [829] <<RUN_AV()>>
S [823] ->
Q [832] <<(RUN_AV())>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 851:
Theorem (851) [serial 1574] used for:
    normalization of [serial 1552]
 


Theorem (853)                               [serial 1495] 
P [829] <<RUN_AV()>>
S [823] ->
Q [832] <<RUN_AV() and true>>
by Law of And-Simplification:  P and true is P
and theorem 852:
Theorem (852) [serial 1552] used for:
  Law of And-Simplification:  P and true is P [serial 1495]
 


Theorem (854)                               [serial 1482] 
P [829] <<RUN_AV()>>
S [823] ->
Q [832] <<RUN_AV() and AXIOM_LB()>>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 853 853:
Theorem (853) [serial 1495] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (853) [serial 1495] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (855)                               [serial 1472] 
P [822] <<RUN_AV()>>
S [823] if 
(goodCount > 0)~> 
  <<RUN_AV() and (goodCount > 0) and AXIOM_K2I()>>
  SpO2Avg!(totalSpO2/goodCount)
  <<RUN_AV()>> 
[]
(goodCount <= 0)~> 
  <<RUN_AV()>>
  skip
  <<RUN_AV()>> 
fi
Q [832] <<RUN_AV() and AXIOM_LB()>>
by Alternative Rule:
 <<P>> -> <<B1 or B2 or ... or Bn>>,
 <<P and B1>> -> <<P1>>, <<P and B2>> -> <<P2>>, . . . , <<P and Bn>> -> <<Pn>>,
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>,
 <<Q1>> -> <<Q>>, <<Q2>> -> <<Q>>, . . . <<Qn>> -> <<Q>>
 -------------------------------------------------------------------------
 <<P>> if B1-><<P1>>S1<<Q1>> [] B2-><<P2>>S2<<Q2>> [] . . . [] Bn-><<Pn>>Sn<<Qn>> fi <<Q>> (bl.iffi)
and theorems 798 805 834 841 843 847 854:
Theorem (798) [serial 1476] used for:
    <<P>> -> <<B1 or B2 or ... or Bn>>  in if-[]-fi  for [serial 1472]
 
Theorem (805) [serial 1477] used for:
    <<P and B0>> -> <<P0>>  for [serial 1472]
 
Theorem (834) [serial 1478] used for:
    <<P0>> S0 <<Q0>>  for [serial 1472]
 
Theorem (841) [serial 1479] used for:
    <<Q0>> -> <<Q>>  for [serial 1472]
 
Theorem (843) [serial 1480] used for:
    <<P and B1>> -> <<P1>>  for [serial 1472]
 
Theorem (847) [serial 1481] used for:
    <<P1>> S1 <<Q1>>  for [serial 1472]
 
Theorem (854) [serial 1482] used for:
    <<Q1>> -> <<Q>>  for [serial 1472]
 


Theorem (856)                               [serial 1787] 
P [832] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and window_size = (ub-lb) and lb < (1+
lb)>>
S [834] ->
Q [834] <<all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (857)                               [serial 1786] 
P [832] <<window_size = (ub-lb) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and lb < (1+lb)>>
S [834] ->
Q [834] <<all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] >>
by Associativity: (b.c).a = a.b.c
and theorem 856:
Theorem (856) [serial 1787] used for:
  Associativity: (b.c).a = a.b.c [serial 1786]
 


Theorem (858)                               [serial 1783] 
P [832] <<window_size = (ub-lb) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and lb < (1+lb)>>
S [834] ->
Q [834] <<all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] >>
by Contract Universal Quantification Range
and theorem 857:
Theorem (857) [serial 1786] used for:
  Contract Universal Quantification Range [serial 1783]
 


Theorem (859)                               [serial 1781] 
P [832] <<window_size = (ub-lb) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and 
(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and lb < (1+lb)>>
S [834] ->
Q [834] <<all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 858:
Theorem (858) [serial 1783] used for:
    normalization of [serial 1781]
 


Theorem (860)                               [serial 1779] 
P [832] <<window_size = (ub-lb) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and lb < (1+lb)>>
S [834] ->
Q [834] <<all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] >>
by Substitution of Assertion Labels
and theorem 859:
Theorem (859) [serial 1781] used for:
  substituted Assertions' predicates for  labels  [serial 1779]
 


Theorem (861)                               [serial 1777] 
P [832] <<window_size = (ub-lb) and ((goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) )) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) )) and 
lb < (1+lb)>>
S [834] ->
Q [834] <<all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 860:
Theorem (860) [serial 1779] used for:
    normalization of [serial 1777]
 


Theorem (862)                               [serial 1775] 
P [832] <<window_size = (ub-lb) and (GOOD() and GS() and TOTAL_SPO2() and WINDOW()) and 
lb < (1+lb)>>
S [834] ->
Q [834] <<all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] >>
by Substitution of Assertion Labels
and theorem 861:
Theorem (861) [serial 1777] used for:
  substituted Assertions' predicates for  labels  [serial 1775]
 


Theorem (863)                               [serial 1773] 
P [832] <<window_size = (ub-lb) and (WINDOW() and TOTAL_SPO2() and GOOD() and GS()) and 
lb < (1+lb)>>
S [834] ->
Q [834] <<all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 862:
Theorem (862) [serial 1775] used for:
    normalization of [serial 1773]
 


Theorem (864)                               [serial 1630] 
P [832] <<window_size = (ub-lb) and INV_AV() and lb < (1+lb)>>
S [834] ->
Q [834] <<all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] >>
by Substitution of Assertion Labels
and theorem 863:
Theorem (863) [serial 1773] used for:
  substituted Assertions' predicates for  labels  [serial 1630]
 


Theorem (865)                               [serial 1603] 
P [832] <<INV_AV() and ((ub-lb) = window_size) and (lb < (lb+1))>>
S [834] ->
Q [834] <<all k:integer
  in 1+lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 864:
Theorem (864) [serial 1630] used for:
    normalization of [serial 1603]
 


Theorem (866)                               [serial 1590] 
P [832] <<(lb < (lb+1)) and (INV_AV() and ((ub-lb) = window_size))>>
S [834] ->
Q [834] <<all k:integer
  in 1+lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) >>
by Associativity: (b.c).a = a.b.c
and theorem 865:
Theorem (865) [serial 1603] used for:
  Associativity: (b.c).a = a.b.c [serial 1590]
 


Theorem (867)                               [serial 1509] 
P [832] <<AXIOM_LB() and RUN_AV()>>
S [834] ->
Q [834] <<all k:integer
  in 1+lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) >>
by Substitution of Assertion Labels
and theorem 866:
Theorem (866) [serial 1590] used for:
  substituted Assertions' predicates for  labels  [serial 1509]
 


Theorem (868)                               [serial 1484] 
P [832] <<RUN_AV() and AXIOM_LB()>>
S [834] ->
Q [834] <<all k:integer
  in lb+1..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 867:
Theorem (867) [serial 1509] used for:
    normalization of [serial 1484]
 


Theorem (869)                               [serial 1797] 
P [843] <<(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0) = spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb)>>
S [843] ->
Q [843] <<(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0) = spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] and 
totalSpO2 = (sum k:integer
  in lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb)>>
by Identity (id):  P->P is tautology


Theorem (870)                               [serial 1795] 
REMAINS UNSOLVED!
P [832] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and lb < (1+lb)>>
S [843] ->
Q [843] <<(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0) = spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] and 
totalSpO2 = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+
(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
window_size = (ub-lb)>>
by  ingenuity of whomever proves this unsolved obligation.
and theorem 869:
Theorem (869) [serial 1797] used for:
  No reason [serial 1795]
 


Theorem (871)                               [serial 1793] 
P [832] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and window_size = (ub-lb) and lb < (1+
lb)>>
S [843] ->
Q [843] <<(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0) = spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] and 
totalSpO2 = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+
(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
window_size = (ub-lb)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 870:
Theorem (870) [serial 1795] used for:
    normalization of [serial 1793]
 


Theorem (872)                               [serial 1791] 
P [832] <<window_size = (ub-lb) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and lb < (1+lb)>>
S [843] ->
Q [843] <<(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0) = spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] and 
totalSpO2 = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+
(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
window_size = (ub-lb)>>
by Associativity: (b.c).a = a.b.c
and theorem 871:
Theorem (871) [serial 1793] used for:
  Associativity: (b.c).a = a.b.c [serial 1791]
 


Theorem (873)                               [serial 1789] 
P [832] <<window_size = (ub-lb) and ((all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) )) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and lb < (1+lb)>>
S [843] ->
Q [843] <<(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0) = spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] and 
totalSpO2 = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+
(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
window_size = (ub-lb)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 872:
Theorem (872) [serial 1791] used for:
    normalization of [serial 1789]
 


Theorem (874)                               [serial 1788] 
P [832] <<window_size = (ub-lb) and (WINDOW() and TOTAL_SPO2() and GOOD() and GS()) and 
lb < (1+lb)>>
S [843] ->
Q [843] <<(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0) = spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] and 
totalSpO2 = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+
(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
window_size = (ub-lb)>>
by Substitution of Assertion Labels
and theorem 873:
Theorem (873) [serial 1789] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1788]
 


Theorem (875)                               [serial 1632] 
P [832] <<window_size = (ub-lb) and INV_AV() and lb < (1+lb)>>
S [843] ->
Q [843] <<(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0) = spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] and 
totalSpO2 = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+
(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
window_size = (ub-lb)>>
by Substitution of Assertion Labels
and theorem 874:
Theorem (874) [serial 1788] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1632]
 


Theorem (876)                               [serial 1604] 
P [832] <<INV_AV() and ((ub-lb) = window_size) and (lb < (lb+1))>>
S [843] ->
Q [843] <<spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)) and totalSpO2 = (((SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0))+(sum k:integer
  in 1+lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) )) and 
window_size = (ub-lb)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 875:
Theorem (875) [serial 1632] used for:
    normalization of [serial 1604]
 


Theorem (877)                               [serial 1591] 
P [832] <<(lb < (lb+1)) and (INV_AV() and ((ub-lb) = window_size))>>
S [843] ->
Q [843] <<spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)) and totalSpO2 = (((SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0))+(sum k:integer
  in 1+lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) )) and 
window_size = (ub-lb)>>
by Associativity: (b.c).a = a.b.c
and theorem 876:
Theorem (876) [serial 1604] used for:
  Associativity: (b.c).a = a.b.c [serial 1591]
 


Theorem (878)                               [serial 1511] 
P [832] <<AXIOM_LB() and RUN_AV()>>
S [843] ->
Q [843] <<spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] = C(lb-ub) and 
totalSpO2 = (C(lb-ub)+(sum k:integer
  in 1+lb..ub-1 
  of C(k-ub) )) and window_size = (ub-lb)>>
by Substitution of Assertion Labels
and theorem 877:
Theorem (877) [serial 1591] used for:
  substituted Assertions' predicates for  labels  [serial 1511]
 


Theorem (879)                               [serial 1485] 
P [832] <<RUN_AV() and AXIOM_LB()>>
S [843] ->
Q [843] <<(totalSpO2 = (C(lb-ub)+(sum k:integer
  in lb+1..ub-1 
  of C(k-ub) ))) and (spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] = C(lb-ub)) and 
((ub-lb) = window_size)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 878:
Theorem (878) [serial 1511] used for:
    normalization of [serial 1485]
 


Theorem (880)                               [serial 1813] 
P [832] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and lb < (1+lb)>>
S [850] ->
Q [850] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (881)                               [serial 1807] 
P [832] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and lb < (1+lb)>>
S [850] ->
Q [850] <<goodCount = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0)+
(numberof k:integer
  in 1+lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))>>
by Extend Summation: 
if P(ub)=term -> (sum j:integer in lb..ub of P(j))-term = (sum j:integer in lb..ub-1 of P(j))
if P(lb)=term -> (sum j:integer in lb..ub of P(j))-term = (sum j:integer in lb+1..ub of P(j))
and theorem 880:
Theorem (880) [serial 1813] used for:
  Extend Summation: 
if P(ub)=term -> (sum j:integer in lb..ub of P(j))-term = (sum j:integer in lb..ub-1 of P(j))
if P(lb)=term -> (sum j:integer in lb..ub of P(j))-term = (sum j:integer in lb+1..ub of P(j)) [serial 1807]
 


Theorem (882)                               [serial 1814] 
P [853] <<goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub))>>
S [850] ->
Q [853] <<goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub))>>
by Identity (id):  P->P is tautology


Theorem (883)                               [serial 1811] 
P [832] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and lb < (1+lb)>>
S [850] ->
Q [853] <<goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub))>>
by Member of Universal Quantification: all k:t in l..u are p(k) -> p(l) and p(u)
and theorem 882:
Theorem (882) [serial 1814] used for:
  Member of Universal Quantification: all k:t in l..u are p(k) -> p(l) and p(u) [serial 1811]
 


Theorem (884)                               [serial 1808] 
P [832] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and lb < (1+lb)>>
S [850] ->
Q [853] <<(goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 883:
Theorem (883) [serial 1811] used for:
    normalization of [serial 1808]
 


Theorem (885)                               [serial 1805] 
P [832] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and lb < (1+lb)>>
S [850] ->
Q [850] <<goodCount = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0)+
(numberof k:integer
  in 1+lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))>>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 881 884:
Theorem (881) [serial 1807] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1805]
 
Theorem (884) [serial 1808] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1805]
 


Theorem (886)                               [serial 1803] 
P [832] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and window_size = (ub-lb) and lb < (1+
lb)>>
S [850] ->
Q [850] <<goodCount = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0)+
(numberof k:integer
  in 1+lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 885:
Theorem (885) [serial 1805] used for:
    normalization of [serial 1803]
 


Theorem (887)                               [serial 1801] 
P [832] <<window_size = (ub-lb) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and lb < (1+lb)>>
S [850] ->
Q [850] <<goodCount = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0)+
(numberof k:integer
  in 1+lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))>>
by Associativity: (b.c).a = a.b.c
and theorem 886:
Theorem (886) [serial 1803] used for:
  Associativity: (b.c).a = a.b.c [serial 1801]
 


Theorem (888)                               [serial 1799] 
P [832] <<window_size = (ub-lb) and ((all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) )) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and lb < (1+lb)>>
S [850] ->
Q [850] <<goodCount = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0)+
(numberof k:integer
  in 1+lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 887:
Theorem (887) [serial 1801] used for:
    normalization of [serial 1799]
 


Theorem (889)                               [serial 1798] 
P [832] <<window_size = (ub-lb) and (WINDOW() and TOTAL_SPO2() and GOOD() and GS()) and 
lb < (1+lb)>>
S [850] ->
Q [850] <<goodCount = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0)+
(numberof k:integer
  in 1+lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))>>
by Substitution of Assertion Labels
and theorem 888:
Theorem (888) [serial 1799] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1798]
 


Theorem (890)                               [serial 1634] 
P [832] <<window_size = (ub-lb) and INV_AV() and lb < (1+lb)>>
S [850] ->
Q [850] <<goodCount = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0)+
(numberof k:integer
  in 1+lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))>>
by Substitution of Assertion Labels
and theorem 889:
Theorem (889) [serial 1798] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1634]
 


Theorem (891)                               [serial 1605] 
P [832] <<INV_AV() and ((ub-lb) = window_size) and (lb < (lb+1))>>
S [850] ->
Q [850] <<goodCount = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0)+
(numberof k:integer
  in 1+lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 890:
Theorem (890) [serial 1634] used for:
    normalization of [serial 1605]
 


Theorem (892)                               [serial 1592] 
P [832] <<(lb < (lb+1)) and (INV_AV() and ((ub-lb) = window_size))>>
S [850] ->
Q [850] <<goodCount = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0)+
(numberof k:integer
  in 1+lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))>>
by Associativity: (b.c).a = a.b.c
and theorem 891:
Theorem (891) [serial 1605] used for:
  Associativity: (b.c).a = a.b.c [serial 1592]
 


Theorem (893)                               [serial 1513] 
P [832] <<AXIOM_LB() and RUN_AV()>>
S [850] ->
Q [850] <<goodCount = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0)+
(numberof k:integer
  in 1+lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))>>
by Substitution of Assertion Labels
and theorem 892:
Theorem (892) [serial 1592] used for:
  substituted Assertions' predicates for  labels  [serial 1513]
 


Theorem (894)                               [serial 1486] 
P [832] <<RUN_AV() and AXIOM_LB()>>
S [850] ->
Q [850] <<(goodCount = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0)+
(numberof k:integer
  in lb+1..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))) and ((
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)) iff goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples])>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 893:
Theorem (893) [serial 1513] used for:
    normalization of [serial 1486]
 


Theorem (895)                               [serial 1822] 
P [832] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and lb < (1+lb)>>
S [862] ->
Q [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (896)                               [serial 1820] 
P [832] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and window_size = (ub-lb) and lb < (1+
lb)>>
S [862] ->
Q [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 895:
Theorem (895) [serial 1822] used for:
    normalization of [serial 1820]
 


Theorem (897)                               [serial 1818] 
P [832] <<window_size = (ub-lb) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) ) and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and lb < (1+lb)>>
S [862] ->
Q [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
by Associativity: (b.c).a = a.b.c
and theorem 896:
Theorem (896) [serial 1820] used for:
  Associativity: (b.c).a = a.b.c [serial 1818]
 


Theorem (898)                               [serial 1816] 
P [832] <<window_size = (ub-lb) and ((all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(totalSpO2 = (sum k:integer
  in lb..ub-1 
  of C(k-ub) )) and (goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )) and lb < (1+lb)>>
S [862] ->
Q [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 897:
Theorem (897) [serial 1818] used for:
    normalization of [serial 1816]
 


Theorem (899)                               [serial 1815] 
P [832] <<window_size = (ub-lb) and (WINDOW() and TOTAL_SPO2() and GOOD() and GS()) and 
lb < (1+lb)>>
S [862] ->
Q [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
by Substitution of Assertion Labels
and theorem 898:
Theorem (898) [serial 1816] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1815]
 


Theorem (900)                               [serial 1636] 
P [832] <<window_size = (ub-lb) and INV_AV() and lb < (1+lb)>>
S [862] ->
Q [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
by Substitution of Assertion Labels
and theorem 899:
Theorem (899) [serial 1815] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1636]
 


Theorem (901)                               [serial 1606] 
P [832] <<INV_AV() and ((ub-lb) = window_size) and (lb < (lb+1))>>
S [862] ->
Q [862] <<(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 900:
Theorem (900) [serial 1636] used for:
    normalization of [serial 1606]
 


Theorem (902)                               [serial 1593] 
P [832] <<(lb < (lb+1)) and (INV_AV() and ((ub-lb) = window_size))>>
S [862] ->
Q [862] <<(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Associativity: (b.c).a = a.b.c
and theorem 901:
Theorem (901) [serial 1606] used for:
  Associativity: (b.c).a = a.b.c [serial 1593]
 


Theorem (903)                               [serial 1515] 
P [832] <<AXIOM_LB() and RUN_AV()>>
S [862] ->
Q [862] <<GS()>>
by Substitution of Assertion Labels
and theorem 902:
Theorem (902) [serial 1593] used for:
  substituted Assertions' predicates for  labels  [serial 1515]
 


Theorem (904)                               [serial 1487] 
P [832] <<RUN_AV() and AXIOM_LB()>>
S [862] ->
Q [862] <<GS()>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 903:
Theorem (903) [serial 1515] used for:
    normalization of [serial 1487]
 


Theorem (905)                               [serial 1670] 
P [868] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [839] ->
Q [868] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Identity (id):  P->P is tautology


Theorem (906)                               [serial 1614] 
P [834] <<(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0) = spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] and 
goodCount = (((SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))-(SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??1:0)) and totalSpO2 = ((SensorConnected^0 and 
not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
window_size = (ub-lb) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^0 and 
not MotionArtifact^0)) and lb < (1+lb)>>
S [839] ->
Q [868] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j)
and theorem 905:
Theorem (905) [serial 1670] used for:
  Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j) [serial 1614]
 


Theorem (907)                               [serial 1594] 
P [834] <<goodCount = (((SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))-(SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??1:0)) and spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] = ((
SensorConnected^(0) and not MotionArtifact^(0)??SpO2^(0):0)) and totalSpO2 = (
((SensorConnected^(0) and not MotionArtifact^(0)??SpO2^(0):0))+(sum k:integer
  in 1+lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) )) and 
window_size = (ub-lb) and (lb < (lb+1)) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (all k:integer
  in 1+lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and (goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^0 and not MotionArtifact^0))>>
S [839] ->
Q [868] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and 
window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and (all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 906:
Theorem (906) [serial 1614] used for:
    normalization of [serial 1594]
 


Theorem (908)                               [serial 1517] 
P [834] <<goodCount = (((SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))-(SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??1:0)) and spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] = C(0) and 
totalSpO2 = (C(0)+(sum k:integer
  in 1+lb..ub-1 
  of C(k-ub) )) and window_size = (ub-lb) and AXIOM_LB() and GS() and (all k:integer
  in 1+lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^0 and 
not MotionArtifact^0))>>
S [839] ->
Q [868] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of C(k-ub) ) and window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Substitution of Assertion Labels
and theorem 907:
Theorem (907) [serial 1594] used for:
  substituted Assertions' predicates for  labels  [serial 1517]
 


Theorem (909)                               [serial 1488] 
P [834] <<((all k:integer
  in lb+1..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) )) and 
((spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] = C(0))) and 
((totalSpO2 = (C(0)+(sum k:integer
  in lb+1..ub-1 
  of C(k-ub) )))) and (((ub-lb) = window_size)) and (goodCount = (((SensorConnected^0 and 
not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))-(SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??1:0))) and ((goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^0 and not MotionArtifact^0))) and (GS()) and (AXIOM_LB())>>
S [839] ->
Q [868] <<(all k:integer
  in lb+1..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(totalSpO2 = (sum k:integer
  in lb+1..ub 
  of C(k-ub) )) and ((ub-lb) = window_size) and (goodCount = (numberof k:integer
  in lb+1..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb+1..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 908:
Theorem (908) [serial 1517] used for:
    normalization of [serial 1488]
 


Theorem (910)                               [serial 1678] 
P [834] <<all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] >>
S [837] ->
Q [839] <<all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] >>
by Identity (id):  P->P is tautology


Theorem (911)                               [serial 1676] 
P [834] <<all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] >>
S [837] ->
Q [839] <<((all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 910:
Theorem (910) [serial 1678] used for:
    normalization of [serial 1676]
 


Theorem (912)                               [serial 1675] 
P [834] <<all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] >>
S [837] ->
Q [839] <<true and (all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] )>>
by Law of And-Simplification:  P and true is P
and theorem 911:
Theorem (911) [serial 1676] used for:
  Law of And-Simplification:  P and true is P [serial 1675]
 


Theorem (913)                               [serial 1673] 
P [834] <<all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] >>
S [837] ->
Q [839] <<(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0) = (SensorConnected^0 and 
not MotionArtifact^0??SpO2^0:0) and (all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] )>>
by Equality Law (idistr):  a=a <-> true
and theorem 912:
Theorem (912) [serial 1675] used for:
  Equality Law (idistr):  a=a <-> true [serial 1673]
 


Theorem (914)                               [serial 1671] 
P [834] <<all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] >>
S [837] ->
Q [839] <<(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0) = ((not MotionArtifact^0 and 
SensorConnected^0??SpO2^0:0)) and (all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 913:
Theorem (913) [serial 1673] used for:
    normalization of [serial 1671]
 


Theorem (915)                               [serial 1616] 
P [834] <<all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] >>
S [837] spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] := (not MotionArtifact? and 
SensorConnected? ?? SpO2? : 0)
Q [839] <<(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0) = spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] and 
(all k:integer
  in 1+lb..ub-1 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] )>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 914:
Theorem (914) [serial 1671] used for:
  applied wp for assignment [serial 1616]
 


Theorem (916)                               [serial 1595] 
P [834] <<all k:integer
  in 1+lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) >>
S [837] spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] := (not MotionArtifact? and 
SensorConnected? ?? SpO2? : 0)
Q [839] <<spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(0) and 
not MotionArtifact^(0)??SpO2^(0):0)) and (all k:integer
  in 1+lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 915:
Theorem (915) [serial 1616] used for:
    normalization of [serial 1595]
 


Theorem (917)                               [serial 1519] 
P [834] <<all k:integer
  in 1+lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) >>
S [837] spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] := (not MotionArtifact? and 
SensorConnected? ?? SpO2? : 0)
Q [839] <<spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] = C(0) and (all k:integer
  in 1+lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) )>>
by Substitution of Assertion Labels
and theorem 916:
Theorem (916) [serial 1595] used for:
  substituted Assertions' predicates for  labels  [serial 1519]
 


Theorem (918)                               [serial 1489] 
P [834] <<all k:integer
  in lb+1..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) >>
S [837] spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] := (SensorConnected? and 
not MotionArtifact? ?? SpO2? : 0)
Q [839] <<(all k:integer
  in lb+1..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] = C(0))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 917:
Theorem (917) [serial 1519] used for:
    normalization of [serial 1489]
 


Theorem (919)                               [serial 1692] 
P [848] <<window_size = (ub-lb) and (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) = ((
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))-spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples])>>
S [846] ->
Q [848] <<window_size = (ub-lb) and (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) = ((
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))-spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples])>>
by Identity (id):  P->P is tautology


Theorem (920)                               [serial 1690] 
REMAINS UNSOLVED!
P [843] <<(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0) = spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] and 
totalSpO2 = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+
(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
window_size = (ub-lb)>>
S [846] ->
Q [848] <<window_size = (ub-lb) and (((SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+
(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+
(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))-spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples]) = (
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))>>
by  ingenuity of whomever proves this unsolved obligation.
and theorem 919:
Theorem (919) [serial 1692] used for:
  No reason [serial 1690]
 


Theorem (921)                               [serial 1688] 
P [843] <<(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0) = spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] and 
totalSpO2 = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+
(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
window_size = (ub-lb)>>
S [846] ->
Q [848] <<window_size = (ub-lb) and (((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+
(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )+
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0))-spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples]) = (
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 920:
Theorem (920) [serial 1690] used for:
    normalization of [serial 1688]
 


Theorem (922)                               [serial 1686] 
P [843] <<(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0) = spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] and 
totalSpO2 = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+
(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
window_size = (ub-lb)>>
S [846] ->
Q [848] <<window_size = (ub-lb) and (((SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+
((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+
(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )))-spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples]) = (
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))>>
by Associativity: (b.c).a = a.b.c
and theorem 921:
Theorem (921) [serial 1688] used for:
  Associativity: (b.c).a = a.b.c [serial 1686]
 


Theorem (923)                               [serial 1684] 
P [843] <<(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0) = spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] and 
totalSpO2 = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+
(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
window_size = (ub-lb)>>
S [846] ->
Q [848] <<window_size = (ub-lb) and (((SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+
(((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+
(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))))-spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples]) = (
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 922:
Theorem (922) [serial 1686] used for:
    normalization of [serial 1684]
 


Theorem (924)                               [serial 1682] 
P [843] <<(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0) = spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] and 
totalSpO2 = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+
(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
window_size = (ub-lb)>>
S [846] ->
Q [848] <<window_size = (ub-lb) and (((SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+
totalSpO2)-spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples]) = (
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ))>>
by Guided Substitution of Equals
and theorem 923:
Theorem (923) [serial 1684] used for:
  Guided Substitution of Equals
 replacing "totalSpO2" with its = "(((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+
(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )))" in its postcondition [serial 1682]
 


Theorem (925)                               [serial 1680] 
P [843] <<(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0) = spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] and 
totalSpO2 = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+
(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
window_size = (ub-lb)>>
S [846] ->
Q [848] <<(((not MotionArtifact^0 and SensorConnected^0??SpO2^0:0)+totalSpO2)-spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples]) = (
(SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
window_size = (ub-lb)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 924:
Theorem (924) [serial 1682] used for:
    normalization of [serial 1680]
 


Theorem (926)                               [serial 1618] 
P [843] <<(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0) = spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] and 
totalSpO2 = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)+
(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
window_size = (ub-lb)>>
S [846] totalSpO2 := ((not MotionArtifact? and SensorConnected? ?? SpO2? : 0)+totalSpO2)-spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples]
Q [848] <<totalSpO2 = ((SensorConnected^0 and not MotionArtifact^0??SpO2^0:0)+(sum k:integer
  in 1+lb..ub-1 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) )) and 
window_size = (ub-lb)>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 925:
Theorem (925) [serial 1680] used for:
  applied wp for assignment [serial 1618]
 


Theorem (927)                               [serial 1596] 
P [843] <<spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0)) and totalSpO2 = (((SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??SpO2^(lb-ub):0))+(sum k:integer
  in 1+lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) )) and 
window_size = (ub-lb)>>
S [846] totalSpO2 := ((not MotionArtifact? and SensorConnected? ?? SpO2? : 0)+totalSpO2)-spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples]
Q [848] <<totalSpO2 = (((SensorConnected^(0) and not MotionArtifact^(0)??SpO2^(0):0))+
(sum k:integer
  in 1+lb..ub-1 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) )) and 
window_size = (ub-lb)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 926:
Theorem (926) [serial 1618] used for:
    normalization of [serial 1596]
 


Theorem (928)                               [serial 1521] 
P [843] <<spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] = C(lb-ub) and 
totalSpO2 = (C(lb-ub)+(sum k:integer
  in 1+lb..ub-1 
  of C(k-ub) )) and window_size = (ub-lb)>>
S [846] totalSpO2 := ((not MotionArtifact? and SensorConnected? ?? SpO2? : 0)+totalSpO2)-spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples]
Q [848] <<totalSpO2 = (C(0)+(sum k:integer
  in 1+lb..ub-1 
  of C(k-ub) )) and window_size = (ub-lb)>>
by Substitution of Assertion Labels
and theorem 927:
Theorem (927) [serial 1596] used for:
  substituted Assertions' predicates for  labels  [serial 1521]
 


Theorem (929)                               [serial 1490] 
P [843] <<(totalSpO2 = (C(lb-ub)+(sum k:integer
  in lb+1..ub-1 
  of C(k-ub) ))) and (spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] = C(lb-ub)) and 
((ub-lb) = window_size)>>
S [846] totalSpO2 := (totalSpO2+(SensorConnected? and not MotionArtifact? ?? SpO2? : 0))-spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples]
Q [848] <<(totalSpO2 = (C(0)+(sum k:integer
  in lb+1..ub-1 
  of C(k-ub) ))) and ((ub-lb) = window_size)>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 928:
Theorem (928) [serial 1521] used for:
    normalization of [serial 1490]
 


Theorem (930)                               [serial 1663] 
P [850] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and (goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))>>
S [855] ->
Q [857] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (931)                               [serial 1662] 
P [850] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and (goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))>>
S [855] ->
Q [857] <<(numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )>>
by Equality Law (idistr):  a=a <-> true
and theorem 930:
Theorem (930) [serial 1663] used for:
  Equality Law (idistr):  a=a <-> true [serial 1662]
 


Theorem (932)                               [serial 1661] 
P [850] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and (goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))>>
S [855] ->
Q [857] <<(numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) = ((numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )-(SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??1:0))>>
by Contract Summation
and theorem 931:
Theorem (931) [serial 1662] used for:
  Contract Summation [serial 1661]
 


Theorem (933)                               [serial 1660] 
P [850] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and (goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))>>
S [855] ->
Q [857] <<(numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) = ((numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )-(goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples]??1:0))>>
by Substitution of Equivalents:
  <<...P[a|b] and (a iff b)>> S <<Q>>
  ----------------------
   <<...P and (a iff b)>> S <<Q>>
and theorem 932:
Theorem (932) [serial 1661] used for:
  Substitution of Equivalents:
  <<...P[a|b] and (a iff b)>> S <<Q>>
  ----------------------
   <<...P and (a iff b)>> S <<Q>>
 replacing "
^{goodSamp 
 ^{mod lb 
  ^{# 
   ^{:: PulseOx_Properties Max_Window_Samples}}}}"
 with its iff"
 ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))" [serial 1660]
 


Theorem (934)                               [serial 1659] 
P [850] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and (goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))>>
S [855] ->
Q [857] <<((numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )-(SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??1:0)) = (((SensorConnected^0 and not MotionArtifact^0??1:0)+
(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))-(goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples]??1:0))>>
by Extend Summation: 
if P(ub)=term -> (sum j:integer in lb..ub of P(j))-term = (sum j:integer in lb..ub-1 of P(j))
if P(lb)=term -> (sum j:integer in lb..ub of P(j))-term = (sum j:integer in lb+1..ub of P(j))
and theorem 933:
Theorem (933) [serial 1660] used for:
  Extend Summation: 
if P(ub)=term -> (sum j:integer in lb..ub of P(j))-term = (sum j:integer in lb..ub-1 of P(j))
if P(lb)=term -> (sum j:integer in lb..ub of P(j))-term = (sum j:integer in lb+1..ub of P(j)) [serial 1659]
 


Theorem (935)                               [serial 1658] 
P [850] <<goodCount = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and (goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))>>
S [855] ->
Q [857] <<((numberof k:integer
  in lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )-(SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??1:0)) = (((SensorConnected^0 and not MotionArtifact^0??1:0)+
goodCount)-(goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples]??1:0))>>
by Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
and theorem 934:
Theorem (934) [serial 1659] used for:
  Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
 replacing "goodCount"
 with its ="
 ((numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))" [serial 1658]
 


Theorem (936)                               [serial 1656] 
P [850] <<goodCount = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0)+
(numberof k:integer
  in 1+lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))>>
S [855] ->
Q [857] <<(((SensorConnected^0 and not MotionArtifact^0??1:0)+goodCount)-(goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples]??1:0)) = ((
(SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))-(SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??1:0))>>
by Extend Summation: 
if P(ub)=term -> (sum j:integer in lb..ub of P(j))-term = (sum j:integer in lb..ub-1 of P(j))
if P(lb)=term -> (sum j:integer in lb..ub of P(j))-term = (sum j:integer in lb+1..ub of P(j))
and theorem 935:
Theorem (935) [serial 1658] used for:
  Extend Summation: 
if P(ub)=term -> (sum j:integer in lb..ub of P(j))-term = (sum j:integer in lb..ub-1 of P(j))
if P(lb)=term -> (sum j:integer in lb..ub of P(j))-term = (sum j:integer in lb+1..ub of P(j)) [serial 1656]
 


Theorem (937)                               [serial 1654] 
P [850] <<goodCount = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0)+
(numberof k:integer
  in 1+lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))>>
S [855] ->
Q [857] <<(((not MotionArtifact^0 and SensorConnected^0??1:0)+goodCount)-(goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples]??1:0)) = ((
(SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))-(SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??1:0))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 936:
Theorem (936) [serial 1656] used for:
    normalization of [serial 1654]
 


Theorem (938)                               [serial 1523] 
P [850] <<goodCount = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0)+
(numberof k:integer
  in 1+lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)))>>
S [855] goodCount := ((not MotionArtifact? and SensorConnected? ?? 1 : 0)+goodCount)-(goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] ?? 1 : 0)
Q [857] <<goodCount = (((SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))-(SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??1:0))>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 937:
Theorem (937) [serial 1654] used for:
  applied wp for assignment [serial 1523]
 


Theorem (939)                               [serial 1491] 
P [850] <<(goodCount = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0)+
(numberof k:integer
  in lb+1..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))) and ((
SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)) iff goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples])>>
S [855] goodCount := (goodCount+(SensorConnected? and not MotionArtifact? ?? 1 : 0))-(goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] ?? 1 : 0)
Q [857] <<goodCount = (((SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))-(SensorConnected^(lb-ub) and 
not MotionArtifact^(lb-ub)??1:0))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 938:
Theorem (938) [serial 1523] used for:
    normalization of [serial 1491]
 


Theorem (940)                               [serial 1703] 
P [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
S [863] ->
Q [865] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
by Identity (id):  P->P is tautology


Theorem (941)                               [serial 1701] 
P [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
S [863] ->
Q [865] <<((all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 940:
Theorem (940) [serial 1703] used for:
    normalization of [serial 1701]
 


Theorem (942)                               [serial 1699] 
P [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
S [863] ->
Q [865] <<true and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Law of And-Simplification:  P and true is P
and theorem 941:
Theorem (941) [serial 1701] used for:
  Law of And-Simplification:  P and true is P [serial 1699]
 


Theorem (943)                               [serial 1697] 
P [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
S [863] ->
Q [865] <<(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (true)>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 942:
Theorem (942) [serial 1699] used for:
    normalization of [serial 1697]
 


Theorem (944)                               [serial 1695] 
P [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
S [863] ->
Q [865] <<(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and ((SensorConnected^0 and not MotionArtifact^0) iff (
SensorConnected^0 and not MotionArtifact^0))>>
by Equality Law (idistr):  a=a <-> true
and theorem 943:
Theorem (943) [serial 1697] used for:
  Equality Law (idistr):  a=a <-> true [serial 1695]
 


Theorem (945)                               [serial 1693] 
P [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
S [863] ->
Q [865] <<(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (((not MotionArtifact^0 and SensorConnected^0)) iff (
SensorConnected^0 and not MotionArtifact^0))>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 944:
Theorem (944) [serial 1695] used for:
    normalization of [serial 1693]
 


Theorem (946)                               [serial 1620] 
P [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
S [863] goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] := (not MotionArtifact? and 
SensorConnected?)
Q [865] <<(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^0 and not MotionArtifact^0))>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 945:
Theorem (945) [serial 1693] used for:
  applied wp for assignment [serial 1620]
 


Theorem (947)                               [serial 1598] 
P [862] <<(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [863] goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] := (not MotionArtifact? and 
SensorConnected?)
Q [865] <<(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^0 and not MotionArtifact^0))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 946:
Theorem (946) [serial 1620] used for:
    normalization of [serial 1598]
 


Theorem (948)                               [serial 1557] 
P [862] <<GS()>>
S [863] goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] := (not MotionArtifact? and 
SensorConnected?)
Q [865] <<GS() and (goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^0 and not MotionArtifact^0))>>
by Substitution of Assertion Labels
and theorem 947:
Theorem (947) [serial 1598] used for:
  substituted Assertions' predicates for  labels  [serial 1557]
 


Theorem (949)                               [serial 1533] 
P [862] <<GS()>>
S [863] goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] := (not MotionArtifact? and 
SensorConnected?)
Q [865] <<GS() and true and (goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^0 and not MotionArtifact^0))>>
by Law of And-Simplification:  P and true is P
and theorem 948:
Theorem (948) [serial 1557] used for:
  Law of And-Simplification:  P and true is P [serial 1533]
 


Theorem (950)                               [serial 1496] 
P [862] <<GS()>>
S [863] goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] := (SensorConnected? and 
not MotionArtifact?)
Q [865] <<(goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^0 and 
not MotionArtifact^0)) and GS() and true>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 949:
Theorem (949) [serial 1533] used for:
    normalization of [serial 1496]
 


Theorem (951)                               [serial 1703] 
P [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
S [863] ->
Q [865] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
by Identity (id):  P->P is tautology


Theorem (952)                               [serial 1701] 
P [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
S [863] ->
Q [865] <<((all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 951:
Theorem (951) [serial 1703] used for:
    normalization of [serial 1701]
 


Theorem (953)                               [serial 1699] 
P [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
S [863] ->
Q [865] <<true and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Law of And-Simplification:  P and true is P
and theorem 952:
Theorem (952) [serial 1701] used for:
  Law of And-Simplification:  P and true is P [serial 1699]
 


Theorem (954)                               [serial 1697] 
P [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
S [863] ->
Q [865] <<(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (true)>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 953:
Theorem (953) [serial 1699] used for:
    normalization of [serial 1697]
 


Theorem (955)                               [serial 1695] 
P [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
S [863] ->
Q [865] <<(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and ((SensorConnected^0 and not MotionArtifact^0) iff (
SensorConnected^0 and not MotionArtifact^0))>>
by Equality Law (idistr):  a=a <-> true
and theorem 954:
Theorem (954) [serial 1697] used for:
  Equality Law (idistr):  a=a <-> true [serial 1695]
 


Theorem (956)                               [serial 1693] 
P [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
S [863] ->
Q [865] <<(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (((not MotionArtifact^0 and SensorConnected^0)) iff (
SensorConnected^0 and not MotionArtifact^0))>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 955:
Theorem (955) [serial 1695] used for:
    normalization of [serial 1693]
 


Theorem (957)                               [serial 1620] 
P [862] <<all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) >>
S [863] goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] := (not MotionArtifact? and 
SensorConnected?)
Q [865] <<(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^0 and not MotionArtifact^0))>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 956:
Theorem (956) [serial 1693] used for:
  applied wp for assignment [serial 1620]
 


Theorem (958)                               [serial 1598] 
P [862] <<(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [863] goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] := (not MotionArtifact? and 
SensorConnected?)
Q [865] <<(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) ) and (goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^0 and not MotionArtifact^0))>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 957:
Theorem (957) [serial 1620] used for:
    normalization of [serial 1598]
 


Theorem (959)                               [serial 1557] 
P [862] <<GS()>>
S [863] goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] := (not MotionArtifact? and 
SensorConnected?)
Q [865] <<GS() and (goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^0 and not MotionArtifact^0))>>
by Substitution of Assertion Labels
and theorem 958:
Theorem (958) [serial 1598] used for:
  substituted Assertions' predicates for  labels  [serial 1557]
 


Theorem (960)                               [serial 1533] 
P [862] <<GS()>>
S [863] goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] := (not MotionArtifact? and 
SensorConnected?)
Q [865] <<GS() and true and (goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (
SensorConnected^0 and not MotionArtifact^0))>>
by Law of And-Simplification:  P and true is P
and theorem 959:
Theorem (959) [serial 1557] used for:
  Law of And-Simplification:  P and true is P [serial 1533]
 


Theorem (961)                               [serial 1496] 
P [862] <<GS()>>
S [863] goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] := (SensorConnected? and 
not MotionArtifact?)
Q [865] <<(goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^0 and 
not MotionArtifact^0)) and GS() and true>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 960:
Theorem (960) [serial 1533] used for:
    normalization of [serial 1496]
 


Theorem (962)                               [serial 1492] 
P [862] <<GS()>>
S [863] goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] := (SensorConnected? and 
not MotionArtifact?)
Q [865] <<(goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^0 and 
not MotionArtifact^0)) and GS() and AXIOM_LB()>>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 961 961:
Theorem (961) [serial 1496] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (961) [serial 1496] used for:
   add user-defined axioms to precondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (963)                               [serial 1483] 
P [832] <<RUN_AV() and AXIOM_LB()>>
S [834] <<all k:integer
  in lb+1..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) >>
spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] := (SensorConnected? and not MotionArtifact? ?? SpO2? : 0)
<<(all k:integer
  in lb+1..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and (spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] = C(0))>>
&
<<(totalSpO2 = (C(lb-ub)+(sum k:integer
  in lb+1..ub-1 
  of C(k-ub) ))) and (spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] = C(lb-ub)) and ((ub-lb) = window_size)>>
totalSpO2 := (totalSpO2+(SensorConnected? and not MotionArtifact? ?? SpO2? : 0))-spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples]
<<(totalSpO2 = (C(0)+(sum k:integer
  in lb+1..ub-1 
  of C(k-ub) ))) and ((ub-lb) = window_size)>>
&
<<(goodCount = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0)+(numberof k:integer
  in lb+1..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))) and ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)) iff goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples])>>
goodCount := (goodCount+(SensorConnected? and not MotionArtifact? ?? 1 : 0))-(goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] ?? 1 : 0)
<<goodCount = (((SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))-(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0))>>
&
<<GS()>>
goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] := (SensorConnected? and not MotionArtifact?)
<<(goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^0 and not MotionArtifact^0)) and GS() and AXIOM_LB()>>
Q [868] <<(all k:integer
  in lb+1..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(totalSpO2 = (sum k:integer
  in lb+1..ub 
  of C(k-ub) )) and ((ub-lb) = window_size) and (goodCount = (numberof k:integer
  in lb+1..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb+1..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 868 879 894 904 909 918 929 939 962:
Theorem (868) [serial 1484] used for:
  P -> P1 in concurrent composition for [serial 1483]
 
Theorem (879) [serial 1485] used for:
  P -> P2 in concurrent composition for [serial 1483]
 
Theorem (894) [serial 1486] used for:
  P -> P3 in concurrent composition for [serial 1483]
 
Theorem (904) [serial 1487] used for:
  P -> P4 in concurrent composition for [serial 1483]
 
Theorem (909) [serial 1488] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1483]
 
Theorem (918) [serial 1489] used for:
  <<P1>> S1 <<Q1>> in concurrent composition for [serial 1483]
 
Theorem (929) [serial 1490] used for:
  <<P2>> S2 <<Q2>> in concurrent composition for [serial 1483]
 
Theorem (939) [serial 1491] used for:
  <<P3>> S3 <<Q3>> in concurrent composition for [serial 1483]
 
Theorem (962) [serial 1492] used for:
  <<P4>> S4 <<Q4>> in concurrent composition for [serial 1483]
 


Theorem (964)                               [serial 1473] 
P [832] <<RUN_AV() and AXIOM_LB()>>
S [833] {
<<all k:integer
  in lb+1..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) >>
spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] := (SensorConnected? and not MotionArtifact? ?? SpO2? : 0)
<<(all k:integer
  in lb+1..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and (spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] = C(0))>>
&
<<(totalSpO2 = (C(lb-ub)+(sum k:integer
  in lb+1..ub-1 
  of C(k-ub) ))) and (spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] = C(lb-ub)) and ((ub-lb) = window_size)>>
totalSpO2 := (totalSpO2+(SensorConnected? and not MotionArtifact? ?? SpO2? : 0))-spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples]
<<(totalSpO2 = (C(0)+(sum k:integer
  in lb+1..ub-1 
  of C(k-ub) ))) and ((ub-lb) = window_size)>>
&
<<(goodCount = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0)+(numberof k:integer
  in lb+1..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))) and ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)) iff goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples])>>
goodCount := (goodCount+(SensorConnected? and not MotionArtifact? ?? 1 : 0))-(goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] ?? 1 : 0)
<<goodCount = (((SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))-(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0))>>
&
<<GS()>>
goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] := (SensorConnected? and not MotionArtifact?)
<<(goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^0 and not MotionArtifact^0)) and GS() and AXIOM_LB()>>
} 
Q [868] <<(all k:integer
  in lb+1..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(totalSpO2 = (sum k:integer
  in lb+1..ub 
  of C(k-ub) )) and ((ub-lb) = window_size) and (goodCount = (numberof k:integer
  in lb+1..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb+1..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Introduction of Existential Quantification (bl.elq)
and theorem 963:
Theorem (963) [serial 1483] used for:
  <<P>> T <<Q>> in existential lattice quantification for [serial 1473]
 


Theorem (965)                               [serial 1715] 
P [868] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [877] ->
Q [878] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Identity (id):  P->P is tautology


Theorem (966)                               [serial 1712] 
P [868] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [877] ->
Q [878] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^((k)-(ub)) and not MotionArtifact^((k)-(ub))) ) and 
totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^((k)-(ub)) and not MotionArtifact^((k)-(ub))??SpO2^((k)-(ub)):0) ) and 
window_size = ((ub)-(lb)) and (all k:integer
  in 1+lb..ub 
  are (SensorConnected^((k)-(ub)) and not MotionArtifact^((k)-(ub))??SpO2^((k)-(ub)):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((k)-(ub)) and 
      not MotionArtifact^((k)-(ub))) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 965:
Theorem (965) [serial 1715] used for:
    normalization of [serial 1712]
 


Theorem (967)                               [serial 1707] 
P [868] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [877] ->
Q [878] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^((1+k)-(1+ub)) and not MotionArtifact^((1+k)-(1+ub))) ) and 
totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^((1+k)-(1+ub)) and not MotionArtifact^((1+k)-(1+ub))??SpO2^((1+k)-(1+ub)):0) ) and 
window_size = ((1+ub)-(1+lb)) and (all k:integer
  in 1+lb..ub 
  are (SensorConnected^((1+k)-(1+ub)) and not MotionArtifact^((1+k)-(1+ub))??SpO2^((1+k)-(1+ub)):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-(1+ub)) and 
      not MotionArtifact^((1+k)-(1+ub))) )>>
by Add both sides of subtraction:  a-b is (x+a)-(x+b)
and theorem 966:
Theorem (966) [serial 1712] used for:
  Add both sides of subtraction:  a-b is (x+a)-(x+b) [serial 1707]
 


Theorem (968)                               [serial 1717] 
P [868] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [877] ->
Q [878] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
by Identity (id):  P->P is tautology


Theorem (969)                               [serial 1713] 
P [868] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [877] ->
Q [878] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^((k)-(ub)) and not MotionArtifact^((k)-(ub))) ) and 
totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^((k)-(ub)) and not MotionArtifact^((k)-(ub))??SpO2^((k)-(ub)):0) ) and 
window_size = ((ub)-(lb)) and (all k:integer
  in 1+lb..ub 
  are (SensorConnected^((k)-(ub)) and not MotionArtifact^((k)-(ub))??SpO2^((k)-(ub)):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((k)-(ub)) and 
      not MotionArtifact^((k)-(ub))) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 968:
Theorem (968) [serial 1717] used for:
    normalization of [serial 1713]
 


Theorem (970)                               [serial 1709] 
P [868] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [877] ->
Q [878] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^((1+k)-(1+ub)) and not MotionArtifact^((1+k)-(1+ub))) ) and 
totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^((1+k)-(1+ub)) and not MotionArtifact^((1+k)-(1+ub))??SpO2^((1+k)-(1+ub)):0) ) and 
window_size = ((1+ub)-(1+lb)) and (all k:integer
  in 1+lb..ub 
  are (SensorConnected^((1+k)-(1+ub)) and not MotionArtifact^((1+k)-(1+ub))??SpO2^((1+k)-(1+ub)):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-(1+ub)) and 
      not MotionArtifact^((1+k)-(1+ub))) )>>
by Add both sides of subtraction:  a-b is (x+a)-(x+b)
and theorem 969:
Theorem (969) [serial 1713] used for:
  Add both sides of subtraction:  a-b is (x+a)-(x+b) [serial 1709]
 


Theorem (971)                               [serial 1705] 
P [868] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [877] ->
Q [878] <<(numberof k:integer
  in ((1+lb))..((1+ub))-1 
  that (SensorConnected^((1+k)-((1+ub))) and not MotionArtifact^((1+k)-((1+ub)))) ) = goodCount and 
(sum k:integer
  in ((1+lb))..((1+ub))-1 
  of (SensorConnected^((1+k)-((1+ub))) and not MotionArtifact^((1+k)-((1+ub)))??SpO2^((1+k)-((1+ub))):0) ) = totalSpO2 and 
(((1+ub))-((1+lb))) = window_size and (all k:integer
  in ((1+lb))..((1+ub))-1 
  are (SensorConnected^((1+k)-((1+ub))) and not MotionArtifact^((1+k)-((1+ub)))??SpO2^((1+k)-((1+ub))):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in ((1+lb))..((1+ub))-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-((1+ub))) and 
      not MotionArtifact^((1+k)-((1+ub)))) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Subtaction of Added Value:  (a+b)-a is b
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorems 967 970:
Theorem (967) [serial 1707] used for:
    normalization of [serial 1705]
 
Theorem (970) [serial 1709] used for:
    normalization of [serial 1705]
 


Theorem (972)                               [serial 1622] 
P [868] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) ) and 
window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [877] (ub,lb,window_size',totalSpO2',goodCount' := 1+ub,1+lb,window_size,totalSpO2,goodCount)  
Q [878] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) = totalSpO2' and 
(ub-lb) = window_size' and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
by Simultaneous Assignment
and theorem 971:
Theorem (971) [serial 1705] used for:
  applied wp for simultaneous assignment [serial 1622]
 


Theorem (973)                               [serial 1599] 
P [868] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of ((SensorConnected^(k-ub) and not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and 
window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)??SpO2^(k-ub):0)) ) and (all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [877] (ub,lb,window_size',totalSpO2',goodCount' := 1+ub,1+lb,window_size,totalSpO2,goodCount)  
Q [878] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of ((SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0)) ) = totalSpO2' and 
(ub-lb) = window_size' and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0)) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 972:
Theorem (972) [serial 1622] used for:
    normalization of [serial 1599]
 


Theorem (974)                               [serial 1577] 
P [868] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of C(k-ub) ) and window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [877] (ub,lb,window_size',totalSpO2',goodCount' := 1+ub,1+lb,window_size,totalSpO2,goodCount)  
Q [878] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of C((1+k)-ub) ) = totalSpO2' and (ub-lb) = window_size' and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C((1+k)-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
by Substitution of Assertion Labels
and theorem 973:
Theorem (973) [serial 1599] used for:
  substituted Assertions' predicates for  labels  [serial 1577]
 


Theorem (975)                               [serial 1554] 
P [868] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of C(k-ub) ) and window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [877] (ub,lb,window_size',totalSpO2',goodCount' := 1+ub,1+lb,window_size,totalSpO2,goodCount)  
Q [878] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of C((1+k)-ub) ) = totalSpO2' and ((ub)-(lb)) = window_size' and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C((1+k)-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 974:
Theorem (974) [serial 1577] used for:
    normalization of [serial 1554]
 


Theorem (976)                               [serial 1525] 
P [868] <<goodCount = (numberof k:integer
  in 1+lb..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ) and totalSpO2 = (sum k:integer
  in 1+lb..ub 
  of C(k-ub) ) and window_size = (ub-lb) and (all k:integer
  in 1+lb..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(all k:integer
  in 1+lb..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [877] (ub,lb,window_size',totalSpO2',goodCount' := 1+ub,1+lb,window_size,totalSpO2,goodCount)  
Q [878] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of C((1+k)-ub) ) = totalSpO2' and ((1+ub)-(1+lb)) = window_size' and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C((1+k)-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
by Add both sides of subtraction:  a-b is (x+a)-(x+b)
and theorem 975:
Theorem (975) [serial 1554] used for:
  Add both sides of subtraction:  a-b is (x+a)-(x+b) [serial 1525]
 


Theorem (977)                               [serial 1474] 
P [868] <<(all k:integer
  in lb+1..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and 
(totalSpO2 = (sum k:integer
  in lb+1..ub 
  of C(k-ub) )) and ((ub-lb) = window_size) and (goodCount = (numberof k:integer
  in lb+1..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb+1..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and 
      not MotionArtifact^(k-ub)) )>>
S [877] (ub,lb,window_size',totalSpO2',goodCount' := ub+1,lb+1,window_size,totalSpO2,goodCount)  
Q [878] <<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-(ub-1)) ) and 
(totalSpO2' = (sum k:integer
  in lb..ub-1 
  of C(k-(ub-1)) )) and (((ub-1)-(lb-1)) = window_size') and (goodCount' = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-(ub-1)) and 
      not MotionArtifact^(k-(ub-1))) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Associativity: (b.c).a = a.b.c
and theorem 976:
Theorem (976) [serial 1525] used for:
    normalization of [serial 1474]
 


Theorem (978)                               [serial 1722] 
P [878] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) = totalSpO2' and 
(ub-lb) = window_size' and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [886] ->
Q [887] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) = totalSpO2' and 
(ub-lb) = window_size' and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
by Identity (id):  P->P is tautology


Theorem (979)                               [serial 1724] 
P [878] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) = totalSpO2' and 
(ub-lb) = window_size' and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [886] ->
Q [887] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) = totalSpO2' and 
(ub-lb) = window_size' and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
by Identity (id):  P->P is tautology


Theorem (980)                               [serial 1720] 
P [878] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) = totalSpO2' and 
(ub-lb) = window_size' and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [886] ->
Q [887] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) = totalSpO2' and 
((ub)-(lb)) = window_size' and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) iff goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorems 978 979:
Theorem (978) [serial 1722] used for:
    normalization of [serial 1720]
 
Theorem (979) [serial 1724] used for:
    normalization of [serial 1720]
 


Theorem (981)                               [serial 1624] 
P [878] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) = totalSpO2' and 
(ub-lb) = window_size' and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [886] (spo2_hist',goodSamp',ub',lb' := spo2_hist,goodSamp,ub,lb)  
Q [887] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) ) = totalSpO2' and 
((ub')-(lb')) = window_size' and (all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]' ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) iff goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]' )>>
by Simultaneous Assignment
and theorem 980:
Theorem (980) [serial 1720] used for:
  applied wp for simultaneous assignment [serial 1624]
 


Theorem (982)                               [serial 1600] 
P [878] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of ((SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0)) ) = totalSpO2' and 
(ub-lb) = window_size' and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = ((SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0)) ) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [886] (spo2_hist',goodSamp',ub',lb' := spo2_hist,goodSamp,ub,lb)  
Q [887] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of ((SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0)) ) = totalSpO2' and 
((ub')-(lb')) = window_size' and (all k:integer
  in lb..ub-1 
  are ((SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)??SpO2^((1+k)-ub):0)) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]' ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) iff goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]' )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 981:
Theorem (981) [serial 1624] used for:
    normalization of [serial 1600]
 


Theorem (983)                               [serial 1579] 
P [878] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of C((1+k)-ub) ) = totalSpO2' and (ub-lb) = window_size' and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C((1+k)-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [886] (spo2_hist',goodSamp',ub',lb' := spo2_hist,goodSamp,ub,lb)  
Q [887] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of C((1+k)-ub) ) = totalSpO2' and ((ub')-(lb')) = window_size' and (all k:integer
  in lb..ub-1 
  are C((1+k)-ub) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]' ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) iff goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]' )>>
by Substitution of Assertion Labels
and theorem 982:
Theorem (982) [serial 1600] used for:
  substituted Assertions' predicates for  labels  [serial 1579]
 


Theorem (984)                               [serial 1555] 
P [878] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of C((1+k)-ub) ) = totalSpO2' and ((ub)-(lb)) = window_size' and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C((1+k)-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [886] (spo2_hist',goodSamp',ub',lb' := spo2_hist,goodSamp,ub,lb)  
Q [887] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of C((1+k)-ub) ) = totalSpO2' and ((ub')-(lb')) = window_size' and (all k:integer
  in lb..ub-1 
  are C((1+k)-ub) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]' ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) iff goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]' )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 983:
Theorem (983) [serial 1579] used for:
    normalization of [serial 1555]
 


Theorem (985)                               [serial 1527] 
P [878] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of C((1+k)-ub) ) = totalSpO2' and ((1+ub)-(1+lb)) = window_size' and (all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C((1+k)-ub) ) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^((1+k)-ub) and 
      not MotionArtifact^((1+k)-ub)) )>>
S [886] (spo2_hist',goodSamp',ub',lb' := spo2_hist,goodSamp,ub,lb)  
Q [887] <<(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) ) = goodCount' and 
(sum k:integer
  in lb..ub-1 
  of C((1+k)-ub) ) = totalSpO2' and ((1+ub')-(1+lb')) = window_size' and 
(all k:integer
  in lb..ub-1 
  are C((1+k)-ub) = spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]' ) and 
(all k:integer
  in lb..ub-1 
  are (SensorConnected^((1+k)-ub) and not MotionArtifact^((1+k)-ub)) iff goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]' )>>
by Add both sides of subtraction:  a-b is (x+a)-(x+b)
and theorem 984:
Theorem (984) [serial 1555] used for:
  Add both sides of subtraction:  a-b is (x+a)-(x+b) [serial 1527]
 


Theorem (986)                               [serial 1475] 
P [878] <<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-(ub-1)) ) and 
(totalSpO2' = (sum k:integer
  in lb..ub-1 
  of C(k-(ub-1)) )) and (((ub-1)-(lb-1)) = window_size') and (goodCount' = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-(ub-1)) and 
      not MotionArtifact^(k-(ub-1))) )>>
S [886] (spo2_hist',goodSamp',ub',lb' := spo2_hist,goodSamp,ub,lb)  
Q [887] <<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]' = C(k-(ub-1)) ) and 
(totalSpO2' = (sum k:integer
  in lb..ub-1 
  of C(k-(ub-1)) )) and (((ub'-1)-(lb'-1)) = window_size') and (goodCount' = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )) and 
(all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]' iff (SensorConnected^(k-(ub-1)) and 
      not MotionArtifact^(k-(ub-1))) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Associativity: (b.c).a = a.b.c
and theorem 985:
Theorem (985) [serial 1527] used for:
    normalization of [serial 1475]
 


Theorem (987)                               [serial 1039] 
P [762] <<INV_AV() and ((ub-lb) = window_size)>>
S [822] <<RUN_AV()>>
if 
(goodCount > 0)~> 
  <<RUN_AV() and (goodCount > 0) and AXIOM_K2I()>>
  SpO2Avg!(totalSpO2/goodCount)
  <<RUN_AV()>> 
[]
(goodCount <= 0)~> 
  <<RUN_AV()>>
  skip
  <<RUN_AV()>> 
fi
;
<<RUN_AV() and AXIOM_LB()>>
{
<<all k:integer
  in lb+1..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) >>
spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] := (SensorConnected? and not MotionArtifact? ?? SpO2? : 0)
<<(all k:integer
  in lb+1..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and (spo2_hist[ub mod #PulseOx_Properties::Max_Window_Samples] = C(0))>>
&
<<(totalSpO2 = (C(lb-ub)+(sum k:integer
  in lb+1..ub-1 
  of C(k-ub) ))) and (spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples] = C(lb-ub)) and ((ub-lb) = window_size)>>
totalSpO2 := (totalSpO2+(SensorConnected? and not MotionArtifact? ?? SpO2? : 0))-spo2_hist[lb mod #PulseOx_Properties::Max_Window_Samples]
<<(totalSpO2 = (C(0)+(sum k:integer
  in lb+1..ub-1 
  of C(k-ub) ))) and ((ub-lb) = window_size)>>
&
<<(goodCount = ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0)+(numberof k:integer
  in lb+1..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))) and ((SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)) iff goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples])>>
goodCount := (goodCount+(SensorConnected? and not MotionArtifact? ?? 1 : 0))-(goodSamp[lb mod #PulseOx_Properties::Max_Window_Samples] ?? 1 : 0)
<<goodCount = (((SensorConnected^0 and not MotionArtifact^0??1:0)+(numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) ))-(SensorConnected^(lb-ub) and not MotionArtifact^(lb-ub)??1:0))>>
&
<<GS()>>
goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] := (SensorConnected? and not MotionArtifact?)
<<(goodSamp[ub mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^0 and not MotionArtifact^0)) and GS() and AXIOM_LB()>>
} 
<<(all k:integer
  in lb+1..ub 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-ub) ) and (totalSpO2 = (sum k:integer
  in lb+1..ub 
  of C(k-ub) )) and ((ub-lb) = window_size) and (goodCount = (numberof k:integer
  in lb+1..ub 
  that (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )) and (all k:integer
  in lb+1..ub 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-ub) and not MotionArtifact^(k-ub)) )>>
;
(ub,lb,window_size',totalSpO2',goodCount' := ub+1,lb+1,window_size,totalSpO2,goodCount)  
<<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples] = C(k-(ub-1)) ) and (totalSpO2' = (sum k:integer
  in lb..ub-1 
  of C(k-(ub-1)) )) and (((ub-1)-(lb-1)) = window_size') and (goodCount' = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples] iff (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )>>
;
(spo2_hist',goodSamp',ub',lb' := spo2_hist,goodSamp,ub,lb)  
<<(all k:integer
  in lb..ub-1 
  are spo2_hist[k mod #PulseOx_Properties::Max_Window_Samples]' = C(k-(ub-1)) ) and (totalSpO2' = (sum k:integer
  in lb..ub-1 
  of C(k-(ub-1)) )) and (((ub'-1)-(lb'-1)) = window_size') and (goodCount' = (numberof k:integer
  in lb..ub-1 
  that (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )) and (all k:integer
  in lb..ub-1 
  are goodSamp[k mod #PulseOx_Properties::Max_Window_Samples]' iff (SensorConnected^(k-(ub-1)) and not MotionArtifact^(k-(ub-1))) )>>
Q [762] <<(INV_AV() and ((ub-lb) = window_size))^1>>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 769 791 855 964 977 986:
Theorem (769) [serial 1470] used for:
  P -> P1 in sequential composition for [serial 1039]
 
Theorem (791) [serial 1471] used for:
  Q3 -> Q in sequential composition for [serial 1039]
 
Theorem (855) [serial 1472] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1039]
 
Theorem (964) [serial 1473] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1039]
 
Theorem (977) [serial 1474] used for:
  <<Q1 and P2>> S2 <<Q2 and P3>> in sequential composition for [serial 1039]
 
Theorem (986) [serial 1475] used for:
  <<Q2 and P3>> S3 <<Q3>> in sequential composition for [serial 1039]
 


Theorem (988)                               [serial 1040] 
P [895] <<(((ub-lb) < window_size) and INV_AV()) and stop@now and not (exists u:time
  in tops,,now 
  that true ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [895] ->
Q [763] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (989)                               [serial 1041] 
P [895] <<(INV_AV() and ((ub-lb) = window_size)) and stop@now and not (exists u:time
  in tops,,now 
  that true ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [895] ->
Q [763] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (990)                               [serial 1028] 
P [717] << >>
S [727] ->
Q [717] <<SpO2AverageThread.imp proof obligations>>
by Initial Thread Obligations
and theorems 563 566 569 573 618 620 708 733 759 761 987 988 989:
Theorem (563) [serial 1029] used for:
  <<M(fillingWindow)>> -> <<I>> from invariant I when complete state fillingWindow has Assertion <<M(fillingWindow)>> in its definition.
 
Theorem (566) [serial 1030] used for:
  <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
 
Theorem (569) [serial 1031] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state chooseToRun, <<M(chooseToRun)>> -> <<e1 or e2 or . . . en>>
 
Theorem (573) [serial 1032] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (618) [serial 1033] used for:
   <<M(start) and x>> A <<M(fillingWindow)>> for SpAT0:start-[x]->fillingWindow{A};
 
Theorem (620) [serial 1034] used for:
   <<M(start) and x>> A <<M(fail)>> for SpAT0a:start-[x]->fail{A};
 
Theorem (708) [serial 1035] used for:
   <<M(fillingWindow) and x>> A <<M(chooseToRun)>> for SpAT1:fillingWindow-[x]->chooseToRun{A};
 
Theorem (733) [serial 1036] used for:
   <<M(chooseToRun) and x>> A <<M(fillingWindow)>> for SpAT2:chooseToRun-[x]->fillingWindow{A};
 
Theorem (759) [serial 1037] used for:
   <<M(chooseToRun) and x>> A <<M(run)>> for SpAT3:chooseToRun-[x]->run{A};
 
Theorem (761) [serial 1038] used for:
   <<M(chooseToRun) and x>> A <<M(fail)>> for SpAT3a:chooseToRun-[x]->fail{A};
 
Theorem (987) [serial 1039] used for:
   <<M(run) and x>> A <<M(run)>> for SpAt4:run-[x]->run{A};
 
Theorem (988) [serial 1040] used for:
   <<M(fillingWindow) and x>> -> <<M(halt)>> for SpATstop:fillingWindow-[x]->halt{};
 
Theorem (989) [serial 1041] used for:
   <<M(run) and x>> -> <<M(halt)>> for SpATstop:run-[x]->halt{};
 


Theorem (991)                               [serial 2259] 
P [974] <<num_samples = #PulseOx_Properties::Max_Window_Samples and (all s:integer
  in 1..num_samples 
  are SpO2^(- s) = spo2[s] )>>
S [959] ->
Q [959] <<all s:integer
  in 1..num_samples 
  are SpO2^(- s) = spo2[s] >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (992)                               [serial 2257] 
P [974] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = SpO2^(- s) ) and (num_samples = #PulseOx_Properties::Max_Window_Samples)>>
S [959] ->
Q [959] <<all s:integer
  in 1..num_samples 
  are spo2[s] = SpO2^(- s) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 991:
Theorem (991) [serial 2259] used for:
    normalization of [serial 2257]
 


Theorem (993)                               [serial 1043] 
P [974] <<SpO2_RD() and (num_samples = #PulseOx_Properties::Max_Window_Samples)>>
S [959] ->
Q [959] <<all s:integer
  in 1..num_samples 
  are spo2[s] = SpO2^(- s) >>
by Substitution of Assertion Labels
and theorem 992:
Theorem (992) [serial 2257] used for:
  substituted Assertions' predicates for  labels  [serial 1043]
 


Theorem (994)                               [serial 2264] 
P [970] <<(all s:integer
  in 1..num_samples 
  are SpO2^(- s) = spo2[s] ) and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [959] ->
Q [959] <<all s:integer
  in 1..num_samples 
  are SpO2^(- s) = spo2[s] >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (995)                               [serial 2262] 
P [970] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = SpO2^(- s) ) and (num_samples < #PulseOx_Properties::Max_Window_Samples)>>
S [959] ->
Q [959] <<all s:integer
  in 1..num_samples 
  are spo2[s] = SpO2^(- s) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 994:
Theorem (994) [serial 2264] used for:
    normalization of [serial 2262]
 


Theorem (996)                               [serial 1044] 
P [970] <<SpO2_RD() and (num_samples < #PulseOx_Properties::Max_Window_Samples)>>
S [959] ->
Q [959] <<all s:integer
  in 1..num_samples 
  are spo2[s] = SpO2^(- s) >>
by Substitution of Assertion Labels
and theorem 995:
Theorem (995) [serial 2262] used for:
  substituted Assertions' predicates for  labels  [serial 1044]
 


Theorem (997)                               [serial 1045] 
P [968] <<(num_samples < #PulseOx_Properties::Max_Window_Samples) and (num_samples = 0)>>
S [968] ->
Q [968] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (998)                               [serial 2270] 
P [972] <<HOLD_RD(num_samples)>>
S [972] ->
Q [972] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (999)                               [serial 2268] 
P [972] <<HOLD_RD(num_samples)>>
S [972] ->
Q [972] <<num_samples = #PulseOx_Properties::Max_Window_Samples or num_samples < #PulseOx_Properties::Max_Window_Samples or 
#PulseOx_Properties::Max_Window_Samples < num_samples>>
by Less than, greater than, or equal:  |-a<b or b<a or a=b
and theorem 998:
Theorem (998) [serial 2270] used for:
  Less than, greater than, or equal:  |-a<b or b<a or a=b [serial 2268]
 


Theorem (1000)                               [serial 1046] 
P [972] <<HOLD_RD(num_samples)>>
S [972] ->
Q [972] <<(num_samples < #PulseOx_Properties::Max_Window_Samples) or (num_samples = #PulseOx_Properties::Max_Window_Samples) or 
(num_samples > #PulseOx_Properties::Max_Window_Samples)>>
by Normalization
  Normalization Axioms:
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 999:
Theorem (999) [serial 2268] used for:
    normalization of [serial 1046]
 


Theorem (1001)                               [serial 2297] 
P [968] <<num_samples = 0 and 0 < #PulseOx_Properties::Max_Window_Samples>>
S [977] ->
Q [970] <<0 < #PulseOx_Properties::Max_Window_Samples>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1002)                               [serial 2296] 
P [968] <<num_samples = 0 and 0 < #PulseOx_Properties::Max_Window_Samples>>
S [977] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<0 < #PulseOx_Properties::Max_Window_Samples>>
by Simultaneous Assignment
and theorem 1001:
Theorem (1001) [serial 2297] used for:
  applied wp for simultaneous assignment [serial 2296]
 


Theorem (1003)                               [serial 2294] 
P [968] <<num_samples = 0 and 0 < #PulseOx_Properties::Max_Window_Samples>>
S [977] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<0 < #PulseOx_Properties::Max_Window_Samples>>
by Introduction of Existential Quantification (bl.aanone)
and theorem 1002:
Theorem (1002) [serial 2296] used for:
  as <<P>> S <<Q>> in <<P>> { S } <<Q>> [serial 2294]
 


Theorem (1004)                               [serial 2292] 
P [968] <<(num_samples = 0) and (0 < #PulseOx_Properties::Max_Window_Samples)>>
S [977] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<(0 < #PulseOx_Properties::Max_Window_Samples)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1003:
Theorem (1003) [serial 2294] used for:
    normalization of [serial 2292]
 


Theorem (1005)                               [serial 2291] 
P [968] <<(num_samples = 0) and (0 < #PulseOx_Properties::Max_Window_Samples)>>
S [977] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<true and 0 < #PulseOx_Properties::Max_Window_Samples>>
by Law of And-Simplification:  P and true is P
and theorem 1004:
Theorem (1004) [serial 2292] used for:
  Law of And-Simplification:  P and true is P [serial 2291]
 


Theorem (1006)                               [serial 2289] 
P [968] <<num_samples = 0 and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [977] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<true and 0 < #PulseOx_Properties::Max_Window_Samples>>
by Substituting Equals Within Conjunction
and theorem 1005:
Theorem (1005) [serial 2291] used for:
  Substituting Equals Within Conjunction [serial 2289]
 


Theorem (1007)                               [serial 2287] 
P [968] <<num_samples = 0 and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [977] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<(true) and 0^1 < #PulseOx_Properties::Max_Window_Samples>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 1006:
Theorem (1006) [serial 2289] used for:
    normalization of [serial 2287]
 


Theorem (1008)                               [serial 2286] 
P [968] <<num_samples = 0 and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [977] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<(all s:integer
  in false 
  are SpO2^(1-s) = spo2[s]^1 ) and 0^1 < #PulseOx_Properties::Max_Window_Samples>>
by Empty Range Law All: all a:t in false are V is tautology
and theorem 1007:
Theorem (1007) [serial 2287] used for:
  Empty Range Law All: all a:t in false are V is tautology [serial 2286]
 


Theorem (1009)                               [serial 2285] 
P [968] <<num_samples = 0 and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [977] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<(all s:integer
  in 1..0 
  are SpO2^(1-s) = spo2[s]^1 ) and 0^1 < #PulseOx_Properties::Max_Window_Samples>>
by Empty Range
and theorem 1008:
Theorem (1008) [serial 2286] used for:
  Empty Range [serial 2285]
 


Theorem (1010)                               [serial 2282] 
P [968] <<num_samples = 0 and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [977] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<(all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s]^1 ) and num_samples^1 < #PulseOx_Properties::Max_Window_Samples>>
by Guided Substitution of Equals
and theorem 1009:
Theorem (1009) [serial 2285] used for:
  Guided Substitution of Equals
 replacing "num_samples" with its = "0" in its postcondition [serial 2282]
 


Theorem (1011)                               [serial 2280] 
P [968] <<num_samples = 0 and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [977] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<(all s:integer
  in 1..num_samples 
  are (SpO2^((- s)+1) = (spo2[s])^1) ) and num_samples^1 < #PulseOx_Properties::Max_Window_Samples>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 1010:
Theorem (1010) [serial 2282] used for:
    normalization of [serial 2280]
 


Theorem (1012)                               [serial 2278] 
P [968] <<num_samples = 0 and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [977] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<(all s:integer
  in 1..num_samples 
  are (SpO2^(- s) = spo2[s])^1 ) and num_samples^1 < #PulseOx_Properties::Max_Window_Samples>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1011:
Theorem (1011) [serial 2280] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2278]
 


Theorem (1013)                               [serial 2276] 
P [968] <<num_samples = 0 and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [977] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<(all s:integer
  in 1..num_samples 
  are (SpO2^(- s) = spo2[s])^1 ) and ((num_samples)^1 < (#PulseOx_Properties::Max_Window_Samples)^1)>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 1012:
Theorem (1012) [serial 2278] used for:
    normalization of [serial 2276]
 


Theorem (1014)                               [serial 2274] 
P [968] <<num_samples = 0 and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [977] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<(all s:integer
  in 1..num_samples 
  are SpO2^(- s) = spo2[s] )^1 and (num_samples < #PulseOx_Properties::Max_Window_Samples)^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1013:
Theorem (1013) [serial 2276] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2274]
 


Theorem (1015)                               [serial 2272] 
P [968] <<(num_samples < #PulseOx_Properties::Max_Window_Samples) and (num_samples = 0)>>
S [977] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<((all s:integer
  in 1..num_samples 
  are spo2[s] = SpO2^(- s) )^1 and (num_samples < #PulseOx_Properties::Max_Window_Samples)^1)>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1014:
Theorem (1014) [serial 2274] used for:
    normalization of [serial 2272]
 


Theorem (1016)                               [serial 2271] 
P [968] <<(num_samples < #PulseOx_Properties::Max_Window_Samples) and (num_samples = 0)>>
S [977] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<((all s:integer
  in 1..num_samples 
  are spo2[s] = SpO2^(- s) ) and (num_samples < #PulseOx_Properties::Max_Window_Samples))^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1015:
Theorem (1015) [serial 2272] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2271]
 


Theorem (1017)                               [serial 1047] 
P [968] <<(num_samples < #PulseOx_Properties::Max_Window_Samples) and (num_samples = 0)>>
S [977] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<(SpO2_RD() and (num_samples < #PulseOx_Properties::Max_Window_Samples))^1>>
by Substitution of Assertion Labels
and theorem 1016:
Theorem (1016) [serial 2271] used for:
  substituted Assertions' predicates for  labels  [serial 1047]
 


Theorem (1018)                               [serial 2305] 
P [970] <<SpO2_RD() and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [970] ->
Q [980] <<SpO2_RD() and num_samples < #PulseOx_Properties::Max_Window_Samples>>
by Identity (id):  P->P is tautology


Theorem (1019)                               [serial 2298] 
P [970] <<SpO2_RD() and (num_samples < #PulseOx_Properties::Max_Window_Samples)>>
S [970] ->
Q [980] <<SpO2_RD() and (num_samples < #PulseOx_Properties::Max_Window_Samples)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1018:
Theorem (1018) [serial 2305] used for:
    normalization of [serial 2298]
 


Theorem (1020)                               [serial 2376] 
P [1003] <<all #22#:integer
  in 1..num_samples 
  are SpO2^(1-#22#) = spo2[#22#] >>
S [972] ->
Q [972] <<all #23#:integer
  in 1..num_samples 
  are SpO2^(1-#23#) = spo2[#23#] >>
by Identity (id):  P->P is tautology


Theorem (1021)                               [serial 2361] 
P [1003] <<all i:integer
  in 1..num_samples 
  are SpO2^(1-i) = spo2[i] >>
S [972] ->
Q [972] <<all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 1020:
Theorem (1020) [serial 2376] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2361]
 


Theorem (1022)                               [serial 2357] 
P [1003] <<all i:integer
  in 1..num_samples 
  are SpO2^(1-i) = spo2[i] >>
S [972] ->
Q [972] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = SpO2^(1-s) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1021:
Theorem (1021) [serial 2361] used for:
    normalization of [serial 2357]
 


Theorem (1023)                               [serial 2307] 
P [1003] <<all i:integer
  in 1..num_samples 
  are SpO2^(1-i) = spo2[i] >>
S [972] ->
Q [972] <<HOLD_RD(num_samples)>>
by Substitution of Assertion Labels
and theorem 1022:
Theorem (1022) [serial 2357] used for:
  substituted Assertions' predicates for  labels  [serial 2307]
 


Theorem (1024)                               [serial 2299] 
P [1003] <<all i:integer
  in 1..num_samples 
  are spo2[i] = SpO2^(1-i) >>
S [972] ->
Q [972] <<HOLD_RD(num_samples)>>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 1023:
Theorem (1023) [serial 2307] used for:
    normalization of [serial 2299]
 


Theorem (1025)                               [serial 2344] 
P [983] <<SpO2^(- i) = spo2[i]>>
S [984] ->
Q [985] <<SpO2^(- i) = spo2[i]>>
by Identity (id):  P->P is tautology


Theorem (1026)                               [serial 2338] 
P [983] <<SpO2^(- i) = spo2[i]>>
S [984] ->
Q [985] <<SpO2^(- i) = (spo2[i])>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1025:
Theorem (1025) [serial 2344] used for:
    normalization of [serial 2338]
 


Theorem (1027)                               [serial 2322] 
P [983] <<SpO2^(- i) = spo2[i]>>
S [984] spo2_nxt[1+i] := spo2[i]
Q [985] <<SpO2^(- i) = spo2_nxt[1+i]>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1026:
Theorem (1026) [serial 2338] used for:
  applied wp for assignment [serial 2322]
 


Theorem (1028)                               [serial 2377] 
P [980] <<(all #24#:integer
  in 1..num_samples 
  are SpO2^(- #24#) = spo2[#24#] ) and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [981] ->
Q [987] <<all #25#:integer
  in 1..num_samples 
  are SpO2^(- #25#) = spo2[#25#] >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1029)                               [serial 2363] 
P [980] <<(all s:integer
  in 1..num_samples 
  are SpO2^(- s) = spo2[s] ) and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [981] ->
Q [987] <<all i:integer
  in 1..num_samples 
  are SpO2^(- i) = spo2[i] >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 1028:
Theorem (1028) [serial 2377] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2363]
 


Theorem (1030)                               [serial 2358] 
P [980] <<(all s:integer
  in 1..num_samples 
  are spo2[s] = SpO2^(- s) ) and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [981] ->
Q [987] <<all i:integer
  in 1..num_samples 
  are SpO2^(- i) = spo2[i] >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 1029:
Theorem (1029) [serial 2363] used for:
    normalization of [serial 2358]
 


Theorem (1031)                               [serial 2329] 
P [980] <<SpO2_RD() and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [981] ->
Q [987] <<all i:integer
  in 1..num_samples 
  are SpO2^(- i) = spo2[i] >>
by Substitution of Assertion Labels
and theorem 1030:
Theorem (1030) [serial 2358] used for:
  substituted Assertions' predicates for  labels  [serial 2329]
 


Theorem (1032)                               [serial 2323] 
P [980] <<(SpO2_RD() and num_samples < #PulseOx_Properties::Max_Window_Samples)>>
S [981] ->
Q [987] <<all i:integer
  in 1..num_samples 
  are SpO2^(- i) = spo2[i] >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1031:
Theorem (1031) [serial 2329] used for:
    normalization of [serial 2323]
 


Theorem (1033)                               [serial 2309] 
P [980] <<SpO2_RD() and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [981] forall i in 1..num_samples
  {
  <<SpO2^(- i) = spo2[i]>>
  spo2_nxt[1+i] := spo2[i]
  <<SpO2^(- i) = spo2_nxt[1+i]>>
  }  
Q [987] <<all i:integer
  in 1..num_samples 
  are SpO2^(- i) = spo2_nxt[1+i] >>
by Universal Quantification Rule:
                      <<A>> T <<B>>
       <<P and (z in r) and (x=e) and FAT>> -> <<wp(forall,Q)>>
 --------------------------------------------------------------------
 <<P>> forall z:i in r declare variable x:t:=e; begin <<A>> T <<B>> end <<Q>>
   where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
     (in postcondition Q, replace all occurances of
     "all z:i in r are B" with "all z:i in r are A"
   and FAT are "fetch-add terms", if any (bl.ulq)
and theorems 1027 1032:
Theorem (1027) [serial 2322] used for:
  <<A>> T <<B>> as subject for universal lattice quantification by [serial 2309]
 
Theorem (1032) [serial 2323] used for:
    <<P and (x=e) and FAT>> -> <<wp(forall,Q)>>
 where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
   (in postcondition Q, replace all occurances of
    <<all z:i in r are B>> with <<all z:i in r are A>>)
  for [serial 2309]
 


Theorem (1034)                               [serial 2300] 
P [980] <<SpO2_RD() and (num_samples < #PulseOx_Properties::Max_Window_Samples)>>
S [981] forall i in 1..num_samples
  {
  <<spo2[i] = SpO2^(- i)>>
  spo2_nxt[i+1] := spo2[i]
  <<spo2_nxt[i+1] = SpO2^(- i)>>
  }  
Q [987] <<all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = SpO2^(- i) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1033:
Theorem (1033) [serial 2309] used for:
    normalization of [serial 2300]
 


Theorem (1035)                               [serial 2389] 
P [987] <<all #26#:integer
  in 0..-1+num_samples 
  are SpO2^(-1+- #26#) = spo2_nxt[2+#26#] >>
S [990] ->
Q [991] <<all #27#:integer
  in 0..-1+num_samples 
  are SpO2^(-1+- #27#) = spo2_nxt[2+#27#] >>
by Identity (id):  P->P is tautology


Theorem (1036)                               [serial 2387] 
P [987] <<all #26#:integer
  in 0..-1+num_samples 
  are SpO2^(-1+- #26#) = spo2_nxt[1+#26#+1] >>
S [990] ->
Q [991] <<all #27#:integer
  in 0..-1+num_samples 
  are SpO2^(-1+- #27#) = spo2_nxt[2+#27#] >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
and theorem 1035:
Theorem (1035) [serial 2389] used for:
    normalization of [serial 2387]
 


Theorem (1037)                               [serial 2385] 
P [987] <<all #26#:integer
  in 0..-1+num_samples 
  are SpO2^(-1+- #26#) = spo2_nxt[1+(1+#26#)] >>
S [990] ->
Q [991] <<all #27#:integer
  in 0..-1+num_samples 
  are SpO2^(-1+- #27#) = spo2_nxt[2+#27#] >>
by Associativity: (b.c).a = a.b.c
and theorem 1036:
Theorem (1036) [serial 2387] used for:
  Associativity: (b.c).a = a.b.c [serial 2385]
 


Theorem (1038)                               [serial 2383] 
P [987] <<all #26#:integer
  in 0..num_samples+ -1 
  are SpO2^((- 1+- #26#)) = spo2_nxt[1+(1+#26#)] >>
S [990] ->
Q [991] <<all #27#:integer
  in 0..1+num_samples+ -2 
  are SpO2^(1+- 2+- #27#) = spo2_nxt[2+#27#] >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1037:
Theorem (1037) [serial 2385] used for:
    normalization of [serial 2383]
 


Theorem (1039)                               [serial 2381] 
P [987] <<all #26#:integer
  in 0..num_samples-1 
  are SpO2^(- (1+#26#)) = spo2_nxt[1+(1+#26#)] >>
S [990] ->
Q [991] <<all #27#:integer
  in 0..(1+num_samples)-2 
  are SpO2^(1-(2+#27#)) = spo2_nxt[2+#27#] >>
by Equivlence of negation and subtraction: (a-b) = (a + (-b))
and theorem 1038:
Theorem (1038) [serial 2383] used for:
   changing adding negation to subtraction  [serial 2381]
 


Theorem (1040)                               [serial 2379] 
P [987] <<all #26#:integer
  in 0..(num_samples-1) 
  are SpO2^(- (#26#+1)) = spo2_nxt[1+(#26#+1)] >>
S [990] ->
Q [991] <<all #27#:integer
  in 0..((1+num_samples)-2) 
  are SpO2^(1-(#27#+2)) = spo2_nxt[(#27#+2)] >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1039:
Theorem (1039) [serial 2381] used for:
    normalization of [serial 2379]
 


Theorem (1041)                               [serial 2378] 
P [987] <<all #26#:integer
  in 1..num_samples 
  are SpO2^(- #26#) = spo2_nxt[1+#26#] >>
S [990] ->
Q [991] <<all #27#:integer
  in 2..1+num_samples 
  are SpO2^(1-#27#) = spo2_nxt[#27#] >>
by Shift Quantification Range so Lower Bound is Zero
and theorem 1040:
Theorem (1040) [serial 2379] used for:
  Shift Quantification Range so Lower Bound is Zero [serial 2378]
 


Theorem (1042)                               [serial 2374] 
P [987] <<all i:integer
  in 1..num_samples 
  are SpO2^(- i) = spo2_nxt[1+i] >>
S [990] ->
Q [991] <<all i:integer
  in 2..1+num_samples 
  are SpO2^(1-i) = spo2_nxt[i] >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 1041:
Theorem (1041) [serial 2378] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2374]
 


Theorem (1043)                               [serial 2370] 
P [987] <<all i:integer
  in 1..num_samples 
  are SpO2^(- i) = spo2_nxt[1+i] >>
S [990] ->
Q [991] <<((all i:integer
  in 2..1+num_samples 
  are SpO2^(1-i) = spo2_nxt[i] ))>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1042:
Theorem (1042) [serial 2374] used for:
    normalization of [serial 2370]
 


Theorem (1044)                               [serial 2369] 
P [987] <<all i:integer
  in 1..num_samples 
  are SpO2^(- i) = spo2_nxt[1+i] >>
S [990] ->
Q [991] <<true and (all i:integer
  in 2..1+num_samples 
  are SpO2^(1-i) = spo2_nxt[i] )>>
by Law of And-Simplification:  P and true is P
and theorem 1043:
Theorem (1043) [serial 2370] used for:
  Law of And-Simplification:  P and true is P [serial 2369]
 


Theorem (1045)                               [serial 2346] 
P [987] <<all i:integer
  in 1..num_samples 
  are SpO2^(- i) = spo2_nxt[1+i] >>
S [990] ->
Q [991] <<SpO2^0 = SpO2^0 and (all i:integer
  in 2..1+num_samples 
  are SpO2^(1-i) = spo2_nxt[i] )>>
by Equality Law (idistr):  a=a <-> true
and theorem 1044:
Theorem (1044) [serial 2369] used for:
  Equality Law (idistr):  a=a <-> true [serial 2346]
 


Theorem (1046)                               [serial 2339] 
P [987] <<all i:integer
  in 1..num_samples 
  are SpO2^(- i) = spo2_nxt[1+i] >>
S [990] ->
Q [991] <<SpO2^0 = (SpO2^0) and (all i:integer
  in 2..1+num_samples 
  are SpO2^(1-i) = spo2_nxt[i] )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1045:
Theorem (1045) [serial 2346] used for:
    normalization of [serial 2339]
 


Theorem (1047)                               [serial 2311] 
P [987] <<all i:integer
  in 1..num_samples 
  are SpO2^(- i) = spo2_nxt[1+i] >>
S [990] spo2_nxt[1] := SpO2?
Q [991] <<SpO2^0 = spo2_nxt[1] and (all i:integer
  in 2..1+num_samples 
  are SpO2^(1-i) = spo2_nxt[i] )>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1046:
Theorem (1046) [serial 2339] used for:
  applied wp for assignment [serial 2311]
 


Theorem (1048)                               [serial 2301] 
P [987] <<all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = SpO2^(- i) >>
S [990] spo2_nxt[1] := SpO2?
Q [991] <<(spo2_nxt[1] = SpO2^0) and (all i:integer
  in 2..num_samples+1 
  are spo2_nxt[i] = SpO2^(1-i) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1047:
Theorem (1047) [serial 2311] used for:
    normalization of [serial 2301]
 


Theorem (1049)                               [serial 2356] 
P [995] <<all i:integer
  in 1..1+num_samples 
  are SpO2^(1-i) = spo2_nxt[i] >>
S [994] ->
Q [995] <<all i:integer
  in 1..1+num_samples 
  are SpO2^(1-i) = spo2_nxt[i] >>
by Identity (id):  P->P is tautology


Theorem (1050)                               [serial 2348] 
P [991] <<SpO2^0 = spo2_nxt[1] and (all i:integer
  in 2..1+num_samples 
  are SpO2^(1-i) = spo2_nxt[i] )>>
S [994] ->
Q [995] <<all i:integer
  in 1..1+num_samples 
  are SpO2^(1-i) = spo2_nxt[i] >>
by Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j)
and theorem 1049:
Theorem (1049) [serial 2356] used for:
  Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j) [serial 2348]
 


Theorem (1051)                               [serial 2340] 
P [991] <<SpO2^0 = spo2_nxt[1] and (all i:integer
  in 2..1+num_samples 
  are SpO2^(1-i) = spo2_nxt[i] )>>
S [994] ->
Q [995] <<all i:integer
  in 1..(1+num_samples) 
  are SpO2^(1-i) = spo2_nxt[i] >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
and theorem 1050:
Theorem (1050) [serial 2348] used for:
    normalization of [serial 2340]
 


Theorem (1052)                               [serial 2313] 
P [991] <<SpO2^0 = spo2_nxt[1] and (all i:integer
  in 2..1+num_samples 
  are SpO2^(1-i) = spo2_nxt[i] )>>
S [994] num_samples := 1+num_samples
Q [995] <<all i:integer
  in 1..num_samples 
  are SpO2^(1-i) = spo2_nxt[i] >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1051:
Theorem (1051) [serial 2340] used for:
  applied wp for assignment [serial 2313]
 


Theorem (1053)                               [serial 2302] 
P [991] <<(spo2_nxt[1] = SpO2^0) and (all i:integer
  in 2..num_samples+1 
  are spo2_nxt[i] = SpO2^(1-i) )>>
S [994] num_samples := num_samples+1
Q [995] <<all i:integer
  in 1..num_samples 
  are spo2_nxt[i] = SpO2^(1-i) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1052:
Theorem (1052) [serial 2313] used for:
    normalization of [serial 2302]
 


Theorem (1054)                               [serial 2350] 
P [999] <<SpO2^(1-i) = spo2_nxt[i]>>
S [1000] ->
Q [1001] <<SpO2^(1-i) = spo2_nxt[i]>>
by Identity (id):  P->P is tautology


Theorem (1055)                               [serial 2341] 
P [999] <<SpO2^(1-i) = spo2_nxt[i]>>
S [1000] ->
Q [1001] <<SpO2^(1-i) = (spo2_nxt[i])>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1054:
Theorem (1054) [serial 2350] used for:
    normalization of [serial 2341]
 


Theorem (1056)                               [serial 2324] 
P [999] <<SpO2^(1-i) = spo2_nxt[i]>>
S [1000] spo2[i] := spo2_nxt[i]
Q [1001] <<SpO2^(1-i) = spo2[i]>>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1055:
Theorem (1055) [serial 2341] used for:
  applied wp for assignment [serial 2324]
 


Theorem (1057)                               [serial 2334] 
P [995] <<all i:integer
  in 1..num_samples 
  are SpO2^(1-i) = spo2_nxt[i] >>
S [997] ->
Q [1003] <<all i:integer
  in 1..num_samples 
  are SpO2^(1-i) = spo2_nxt[i] >>
by Identity (id):  P->P is tautology


Theorem (1058)                               [serial 2325] 
P [995] <<(all i:integer
  in 1..num_samples 
  are SpO2^(1-i) = spo2_nxt[i] )>>
S [997] ->
Q [1003] <<all i:integer
  in 1..num_samples 
  are SpO2^(1-i) = spo2_nxt[i] >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1057:
Theorem (1057) [serial 2334] used for:
    normalization of [serial 2325]
 


Theorem (1059)                               [serial 2315] 
P [995] <<all i:integer
  in 1..num_samples 
  are SpO2^(1-i) = spo2_nxt[i] >>
S [997] forall i in 1..num_samples
  {
  <<SpO2^(1-i) = spo2_nxt[i]>>
  spo2[i] := spo2_nxt[i]
  <<SpO2^(1-i) = spo2[i]>>
  }  
Q [1003] <<all i:integer
  in 1..num_samples 
  are SpO2^(1-i) = spo2[i] >>
by Universal Quantification Rule:
                      <<A>> T <<B>>
       <<P and (z in r) and (x=e) and FAT>> -> <<wp(forall,Q)>>
 --------------------------------------------------------------------
 <<P>> forall z:i in r declare variable x:t:=e; begin <<A>> T <<B>> end <<Q>>
   where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
     (in postcondition Q, replace all occurances of
     "all z:i in r are B" with "all z:i in r are A"
   and FAT are "fetch-add terms", if any (bl.ulq)
and theorems 1056 1058:
Theorem (1056) [serial 2324] used for:
  <<A>> T <<B>> as subject for universal lattice quantification by [serial 2315]
 
Theorem (1058) [serial 2325] used for:
    <<P and (x=e) and FAT>> -> <<wp(forall,Q)>>
 where wp = Q[<<all z:i in r are B>>/<<all z:i in r are A>>]
   (in postcondition Q, replace all occurances of
    <<all z:i in r are B>> with <<all z:i in r are A>>)
  for [serial 2315]
 


Theorem (1060)                               [serial 2303] 
P [995] <<all i:integer
  in 1..num_samples 
  are spo2_nxt[i] = SpO2^(1-i) >>
S [997] forall i in 1..num_samples
  {
  <<spo2_nxt[i] = SpO2^(1-i)>>
  spo2[i] := spo2_nxt[i]
  <<spo2[i] = SpO2^(1-i)>>
  }  
Q [1003] <<all i:integer
  in 1..num_samples 
  are spo2[i] = SpO2^(1-i) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 1059:
Theorem (1059) [serial 2315] used for:
    normalization of [serial 2303]
 


Theorem (1061)                               [serial 1048] 
P [970] <<SpO2_RD() and (num_samples < #PulseOx_Properties::Max_Window_Samples)>>
S [980] <<SpO2_RD() and (num_samples < #PulseOx_Properties::Max_Window_Samples)>>
forall i in 1..num_samples
  {
  <<spo2[i] = SpO2^(- i)>>
  spo2_nxt[i+1] := spo2[i]
  <<spo2_nxt[i+1] = SpO2^(- i)>>
  }  
<<SHFT_RD: :all i:integer
  in 1..num_samples 
  are spo2_nxt[i+1] = SpO2^(- i) >>
;
spo2_nxt[1] := SpO2?
<<(spo2_nxt[1] = SpO2^0) and (all i:integer
  in 2..num_samples+1 
  are spo2_nxt[i] = SpO2^(1-i) )>>
;
num_samples := num_samples+1
<<all i:integer
  in 1..num_samples 
  are spo2_nxt[i] = SpO2^(1-i) >>
;
forall i in 1..num_samples
  {
  <<spo2_nxt[i] = SpO2^(1-i)>>
  spo2[i] := spo2_nxt[i]
  <<spo2[i] = SpO2^(1-i)>>
  }  
<<all i:integer
  in 1..num_samples 
  are spo2[i] = SpO2^(1-i) >>
Q [972] <<HOLD_RD(num_samples)>>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1019 1024 1034 1048 1053 1060:
Theorem (1019) [serial 2298] used for:
  P -> P1 in sequential composition for [serial 1048]
 
Theorem (1024) [serial 2299] used for:
  Q3 -> Q in sequential composition for [serial 1048]
 
Theorem (1034) [serial 2300] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1048]
 
Theorem (1048) [serial 2301] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1048]
 
Theorem (1053) [serial 2302] used for:
  <<Q1 and P2>> S2 <<Q2 and P3>> in sequential composition for [serial 1048]
 
Theorem (1060) [serial 2303] used for:
  <<Q2 and P3>> S3 <<Q3>> in sequential composition for [serial 1048]
 


Theorem (1062)                               [serial 2409] 
P [972] <<(all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] ) and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [1006] ->
Q [970] <<(all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] ) and num_samples < #PulseOx_Properties::Max_Window_Samples>>
by Identity (id):  P->P is tautology


Theorem (1063)                               [serial 2406] 
P [972] <<(all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] ) and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [1006] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<(all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s]^1 ) and num_samples^1 < #PulseOx_Properties::Max_Window_Samples>>
by Simultaneous Assignment
and theorem 1062:
Theorem (1062) [serial 2409] used for:
  applied wp for simultaneous assignment [serial 2406]
 


Theorem (1064)                               [serial 2404] 
P [972] <<(all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] ) and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [1006] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<(all s:integer
  in 1..num_samples 
  are (SpO2^((- s)+1) = (spo2[s])^1) ) and num_samples^1 < #PulseOx_Properties::Max_Window_Samples>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 1063:
Theorem (1063) [serial 2406] used for:
    normalization of [serial 2404]
 


Theorem (1065)                               [serial 2402] 
P [972] <<(all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] ) and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [1006] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<(all s:integer
  in 1..num_samples 
  are (SpO2^(- s) = spo2[s])^1 ) and num_samples^1 < #PulseOx_Properties::Max_Window_Samples>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1064:
Theorem (1064) [serial 2404] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2402]
 


Theorem (1066)                               [serial 2400] 
P [972] <<(all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] ) and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [1006] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<(all s:integer
  in 1..num_samples 
  are (SpO2^(- s) = spo2[s])^1 ) and ((num_samples)^1 < (#PulseOx_Properties::Max_Window_Samples)^1)>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 1065:
Theorem (1065) [serial 2402] used for:
    normalization of [serial 2400]
 


Theorem (1067)                               [serial 2398] 
P [972] <<(all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] ) and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [1006] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<(all s:integer
  in 1..num_samples 
  are SpO2^(- s) = spo2[s] )^1 and (num_samples < #PulseOx_Properties::Max_Window_Samples)^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1066:
Theorem (1066) [serial 2400] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2398]
 


Theorem (1068)                               [serial 2396] 
P [972] <<(all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] ) and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [1006] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<((all s:integer
  in 1..num_samples 
  are SpO2^(- s) = spo2[s] )^1 and (num_samples < #PulseOx_Properties::Max_Window_Samples)^1)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1067:
Theorem (1067) [serial 2398] used for:
    normalization of [serial 2396]
 


Theorem (1069)                               [serial 2393] 
P [972] <<(all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] ) and num_samples < #PulseOx_Properties::Max_Window_Samples>>
S [1006] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<((all s:integer
  in 1..num_samples 
  are SpO2^(- s) = spo2[s] ) and num_samples < #PulseOx_Properties::Max_Window_Samples)^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1068:
Theorem (1068) [serial 2396] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2393]
 


Theorem (1070)                               [serial 2391] 
P [972] <<((all s:integer
  in 1..num_samples 
  are spo2[s] = SpO2^(1-s) )) and (num_samples < #PulseOx_Properties::Max_Window_Samples)>>
S [1006] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<((all s:integer
  in 1..num_samples 
  are spo2[s] = SpO2^(- s) ) and (num_samples < #PulseOx_Properties::Max_Window_Samples))^1>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1069:
Theorem (1069) [serial 2393] used for:
    normalization of [serial 2391]
 


Theorem (1071)                               [serial 1049] 
P [972] <<(HOLD_RD(num_samples)) and (num_samples < #PulseOx_Properties::Max_Window_Samples)>>
S [1006] (spo2',num_samples' := spo2,num_samples)  
Q [970] <<(SpO2_RD() and (num_samples < #PulseOx_Properties::Max_Window_Samples))^1>>
by Substitution of Assertion Labels
and theorem 1070:
Theorem (1070) [serial 2391] used for:
  substituted Assertions' predicates for  labels  [serial 1049]
 


Theorem (1072)                               [serial 2428] 
P [972] <<num_samples = #PulseOx_Properties::Max_Window_Samples and (all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] )>>
S [1008] ->
Q [974] <<num_samples = #PulseOx_Properties::Max_Window_Samples and (all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] )>>
by Identity (id):  P->P is tautology


Theorem (1073)                               [serial 2425] 
P [972] <<num_samples = #PulseOx_Properties::Max_Window_Samples and (all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] )>>
S [1008] (spo2',num_samples' := spo2,num_samples)  
Q [974] <<num_samples^1 = #PulseOx_Properties::Max_Window_Samples and (all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s]^1 )>>
by Simultaneous Assignment
and theorem 1072:
Theorem (1072) [serial 2428] used for:
  applied wp for simultaneous assignment [serial 2425]
 


Theorem (1074)                               [serial 2423] 
P [972] <<num_samples = #PulseOx_Properties::Max_Window_Samples and (all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] )>>
S [1008] (spo2',num_samples' := spo2,num_samples)  
Q [974] <<num_samples^1 = #PulseOx_Properties::Max_Window_Samples and (all s:integer
  in 1..num_samples 
  are (SpO2^((- s)+1) = (spo2[s])^1) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 1073:
Theorem (1073) [serial 2425] used for:
    normalization of [serial 2423]
 


Theorem (1075)                               [serial 2421] 
P [972] <<num_samples = #PulseOx_Properties::Max_Window_Samples and (all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] )>>
S [1008] (spo2',num_samples' := spo2,num_samples)  
Q [974] <<num_samples^1 = #PulseOx_Properties::Max_Window_Samples and (all s:integer
  in 1..num_samples 
  are (SpO2^(- s) = spo2[s])^1 )>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1074:
Theorem (1074) [serial 2423] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2421]
 


Theorem (1076)                               [serial 2419] 
P [972] <<num_samples = #PulseOx_Properties::Max_Window_Samples and (all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] )>>
S [1008] (spo2',num_samples' := spo2,num_samples)  
Q [974] <<((num_samples)^1 = (#PulseOx_Properties::Max_Window_Samples)^1) and (all s:integer
  in 1..num_samples 
  are (SpO2^(- s) = spo2[s])^1 )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Constants are always the same
and theorem 1075:
Theorem (1075) [serial 2421] used for:
    normalization of [serial 2419]
 


Theorem (1077)                               [serial 2417] 
P [972] <<num_samples = #PulseOx_Properties::Max_Window_Samples and (all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] )>>
S [1008] (spo2',num_samples' := spo2,num_samples)  
Q [974] <<(num_samples = #PulseOx_Properties::Max_Window_Samples)^1 and (all s:integer
  in 1..num_samples 
  are SpO2^(- s) = spo2[s] )^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1076:
Theorem (1076) [serial 2419] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2417]
 


Theorem (1078)                               [serial 2415] 
P [972] <<num_samples = #PulseOx_Properties::Max_Window_Samples and (all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] )>>
S [1008] (spo2',num_samples' := spo2,num_samples)  
Q [974] <<((num_samples = #PulseOx_Properties::Max_Window_Samples)^1 and (all s:integer
  in 1..num_samples 
  are SpO2^(- s) = spo2[s] )^1)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1077:
Theorem (1077) [serial 2417] used for:
    normalization of [serial 2415]
 


Theorem (1079)                               [serial 2412] 
P [972] <<num_samples = #PulseOx_Properties::Max_Window_Samples and (all s:integer
  in 1..num_samples 
  are SpO2^(1-s) = spo2[s] )>>
S [1008] (spo2',num_samples' := spo2,num_samples)  
Q [974] <<(num_samples = #PulseOx_Properties::Max_Window_Samples and (all s:integer
  in 1..num_samples 
  are SpO2^(- s) = spo2[s] ))^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1078:
Theorem (1078) [serial 2415] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2412]
 


Theorem (1080)                               [serial 2410] 
P [972] <<((all s:integer
  in 1..num_samples 
  are spo2[s] = SpO2^(1-s) )) and (num_samples = #PulseOx_Properties::Max_Window_Samples)>>
S [1008] (spo2',num_samples' := spo2,num_samples)  
Q [974] <<((all s:integer
  in 1..num_samples 
  are spo2[s] = SpO2^(- s) ) and (num_samples = #PulseOx_Properties::Max_Window_Samples))^1>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1079:
Theorem (1079) [serial 2412] used for:
    normalization of [serial 2410]
 


Theorem (1081)                               [serial 1050] 
P [972] <<(HOLD_RD(num_samples)) and (num_samples = #PulseOx_Properties::Max_Window_Samples)>>
S [1008] (spo2',num_samples' := spo2,num_samples)  
Q [974] <<(SpO2_RD() and (num_samples = #PulseOx_Properties::Max_Window_Samples))^1>>
by Substitution of Assertion Labels
and theorem 1080:
Theorem (1080) [serial 2410] used for:
  substituted Assertions' predicates for  labels  [serial 1050]
 


Theorem (1082)                               [serial 1051] 
P [972] <<(HOLD_RD(num_samples)) and (num_samples > #PulseOx_Properties::Max_Window_Samples)>>
S [1009] ->
Q [975] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1083)                               [serial 1042] 
P [955] << >>
S [959] ->
Q [955] <<RapidDeclineThread.imp proof obligations>>
by Initial Thread Obligations
and theorems 993 996 997 1000 1017 1061 1071 1081 1082:
Theorem (993) [serial 1043] used for:
  <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
 
Theorem (996) [serial 1044] used for:
  <<M(fill)>> -> <<I>> from invariant I when complete state fill has Assertion <<M(fill)>> in its definition.
 
Theorem (997) [serial 1045] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (1000) [serial 1046] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check, <<M(check)>> -> <<e1 or e2 or . . . en>>
 
Theorem (1017) [serial 1047] used for:
   <<M(start)>> A <<M(fill)>> for rdt0:start-[ ]->fill{A};
 
Theorem (1061) [serial 1048] used for:
   <<M(fill) and x>> A <<M(check)>> for rdt1:fill-[x]->check{A};
 
Theorem (1071) [serial 1049] used for:
   <<M(check) and x>> A <<M(fill)>> for chk:check-[x]->fill{A};
 
Theorem (1081) [serial 1050] used for:
   <<M(check) and x>> A <<M(run)>> for chk2:check-[x]->run{A};
 
Theorem (1082) [serial 1051] used for:
   <<M(check) and x>> -> <<M(halt)>> for chk3:check-[x]->halt{};
 


Theorem (1084)                               [serial 1053] 
P [921] <<true>>
S [918] ->
Q [918] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1085)                               [serial 1054] 
P [920] <<true>>
S [920] ->
Q [920] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1086)                               [serial 2921] 
P [922] <<true>>
S [922] ->
Q [922] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1087)                               [serial 2919] 
P [922] <<true>>
S [922] ->
Q [922] <<(true)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1086:
Theorem (1086) [serial 2921] used for:
    normalization of [serial 2919]
 


Theorem (1088)                               [serial 2918] 
P [922] <<true>>
S [922] ->
Q [922] <<(true) and (true)>>
by Law of And-Simplification:  P and P is P
and theorem 1087:
Theorem (1087) [serial 2919] used for:
  Law of And-Simplification:  P and P is P [serial 2918]
 


Theorem (1089)                               [serial 2917] 
P [922] <<true>>
S [922] ->
Q [922] <<(SupplOxyAlarmEnabled^0 or not SupplOxyAlarmEnabled^0 or not (SPO2_AVERAGE())^0 < (
SpO2LevelAdj^0+SpO2LowerLimit^0)) and ((SPO2_AVERAGE())^0 < (SpO2LevelAdj^0+
SpO2LowerLimit^0) or not SupplOxyAlarmEnabled^0 or not (SPO2_AVERAGE())^0 < (
SpO2LevelAdj^0+SpO2LowerLimit^0))>>
by Law of Excluded Middle: P or not P is tautology
and theorem 1088:
Theorem (1088) [serial 2918] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2917]
 


Theorem (1090)                               [serial 2914] 
P [922] <<true>>
S [922] ->
Q [922] <<not SupplOxyAlarmEnabled^0 or not (SPO2_AVERAGE())^0 < (SpO2LevelAdj^0+
SpO2LowerLimit^0) or (SupplOxyAlarmEnabled^0 and (SPO2_AVERAGE())^0 < (SpO2LevelAdj^0+
SpO2LowerLimit^0))>>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 1089:
Theorem (1089) [serial 2917] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 2914]
 


Theorem (1091)                               [serial 2912] 
P [922] <<true>>
S [922] ->
Q [922] <<(not ((SPO2_AVERAGE())^0 < (SpO2LevelAdj^0+SpO2LowerLimit^0))) or not SupplOxyAlarmEnabled^0 or 
(SupplOxyAlarmEnabled^0 and (SPO2_AVERAGE())^0 < (SpO2LevelAdj^0+SpO2LowerLimit^0))>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1090:
Theorem (1090) [serial 2914] used for:
    normalization of [serial 2912]
 


Theorem (1092)                               [serial 2911] 
P [922] <<true>>
S [922] ->
Q [922] <<(SpO2LevelAdj^0+SpO2LowerLimit^0) <= (SPO2_AVERAGE())^0 or not SupplOxyAlarmEnabled^0 or 
(SupplOxyAlarmEnabled^0 and (SPO2_AVERAGE())^0 < (SpO2LevelAdj^0+SpO2LowerLimit^0))>>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 1091:
Theorem (1091) [serial 2912] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2911]
 


Theorem (1093)                               [serial 2909] 
P [922] <<true>>
S [922] ->
Q [922] <<(SupplOxyAlarmEnabled^0 and (SPO2_AVERAGE())^0 < (SpO2LevelAdj^0+SpO2LowerLimit^0)) or 
((SpO2LevelAdj^0+SpO2LowerLimit^0) <= (SPO2_AVERAGE())^0 or not SupplOxyAlarmEnabled^0)>>
by Associativity: (b.c).a = a.b.c
and theorem 1092:
Theorem (1092) [serial 2911] used for:
  Associativity: (b.c).a = a.b.c [serial 2909]
 


Theorem (1094)                               [serial 1055] 
P [922] <<true>>
S [922] ->
Q [922] <<(SupplOxyAlarmEnabled^0 and ((SPO2_AVERAGE())^0 < (SpO2LowerLimit^0+SpO2LevelAdj^0))) or 
(not SupplOxyAlarmEnabled^0 or ((SPO2_AVERAGE())^0 >= (SpO2LowerLimit^0+
SpO2LevelAdj^0)))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1093:
Theorem (1093) [serial 2909] used for:
    normalization of [serial 1055]
 


Theorem (1095)                               [serial 2924] 
P [920] <<true>>
S [925] ->
Q [921] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1096)                               [serial 1056] 
P [920] <<true>>
S [925] ->
Q [921] <<(true)^1>>
by Normalization
  Normalization Axiom:
    Constants are always the same
and theorem 1095:
Theorem (1095) [serial 2924] used for:
    normalization of [serial 1056]
 


Theorem (1097)                               [serial 1057] 
P [921] <<true>>
S [926] ->
Q [922] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1098)                               [serial 2955] 
P [927] <<SupplOxyAlarmEnabled^0 and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))^0 < (SpO2LevelAdj^0+
SpO2LowerLimit^0)>>
S [927] ->
Q [928] <<SupplOxyAlarmEnabled^0 and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))^0 < (SpO2LevelAdj^0+
SpO2LowerLimit^0)>>
by Identity (id):  P->P is tautology


Theorem (1099)                               [serial 2950] 
P [927] <<SupplOxyAlarmEnabled^0 and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))^0 < (SpO2LevelAdj^0+
SpO2LowerLimit^0)>>
S [927] ->
Q [928] <<SupplOxyAlarmEnabled^0 and (((sum i:integer
  in  -SpO2MovingAvgWindowSamples.. -1 
  of (SensorConnected^(i) and not MotionArtifact^(i)??SpO2^(i):0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples.. -1 
  that (SensorConnected^(i) and not MotionArtifact^(i)) )))^0 < (SpO2LevelAdj^0+
SpO2LowerLimit^0)>>
by Normalization
  Normalization Axioms:
    Unary Minus:  -(x-y) is (y-x)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1098:
Theorem (1098) [serial 2955] used for:
    normalization of [serial 2950]
 


Theorem (1100)                               [serial 2943] 
P [927] <<SupplOxyAlarmEnabled^0 and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))^0 < (SpO2LevelAdj^0+
SpO2LowerLimit^0)>>
S [927] ->
Q [928] <<SupplOxyAlarmEnabled^0 and (SPO2_AVERAGE())^0 < (SpO2LevelAdj^0+SpO2LowerLimit^0)>>
by Substitution of Assertion Labels
and theorem 1099:
Theorem (1099) [serial 2950] used for:
  substituted Assertions' predicates for  labels  [serial 2943]
 


Theorem (1101)                               [serial 2938] 
P [927] <<SupplOxyAlarmEnabled^0 and (((sum i:integer
  in  -SpO2MovingAvgWindowSamples.. -1 
  of (SensorConnected^(i) and not MotionArtifact^(i)??SpO2^(i):0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples.. -1 
  that (SensorConnected^(i) and not MotionArtifact^(i)) )))^0 < (SpO2LevelAdj^0+
SpO2LowerLimit^0)>>
S [927] ->
Q [928] <<(SupplOxyAlarmEnabled^0 and (SPO2_AVERAGE())^0 < (SpO2LowerLimit^0+SpO2LevelAdj^0))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Unary Minus:  -(x-y) is (y-x)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1100:
Theorem (1100) [serial 2943] used for:
    normalization of [serial 2938]
 


Theorem (1102)                               [serial 2931] 
P [927] <<SupplOxyAlarmEnabled^0 and (SPO2_AVERAGE())^0 < (SpO2LevelAdj^0+SpO2LowerLimit^0)>>
S [927] ->
Q [928] <<SUPPL_O2_ALARM()>>
by Substitution of Assertion Labels
and theorem 1101:
Theorem (1101) [serial 2938] used for:
  substituted Assertions' predicates for  labels  [serial 2931]
 


Theorem (1103)                               [serial 2926] 
P [927] <<SupplOxyAlarmEnabled^0 and ((SPO2_AVERAGE())^0 < (SpO2LowerLimit^0+SpO2LevelAdj^0))>>
S [927] ->
Q [928] <<SUPPL_O2_ALARM()>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1102:
Theorem (1102) [serial 2931] used for:
    normalization of [serial 2926]
 


Theorem (1104)                               [serial 2953] 
P [928] <<SupplOxyAlarmEnabled^0 and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))^0 < (SpO2LevelAdj^0+
SpO2LowerLimit^0)>>
S [928] ->
Q [908] <<SupplOxyAlarmEnabled^0 and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))^0 < (SpO2LevelAdj^0+
SpO2LowerLimit^0)>>
by Identity (id):  P->P is tautology


Theorem (1105)                               [serial 2949] 
P [928] <<SupplOxyAlarmEnabled^0 and (((sum i:integer
  in  -SpO2MovingAvgWindowSamples.. -1 
  of (SensorConnected^(i) and not MotionArtifact^(i)??SpO2^(i):0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples.. -1 
  that (SensorConnected^(i) and not MotionArtifact^(i)) )))^0 < (SpO2LevelAdj^0+
SpO2LowerLimit^0)>>
S [928] ->
Q [908] <<SupplOxyAlarmEnabled^0 and (((sum i:integer
  in  -SpO2MovingAvgWindowSamples.. -1 
  of (SensorConnected^(i) and not MotionArtifact^(i)??SpO2^(i):0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples.. -1 
  that (SensorConnected^(i) and not MotionArtifact^(i)) )))^0 < (SpO2LevelAdj^0+
SpO2LowerLimit^0)>>
by Normalization
  Normalization Axioms:
    Unary Minus:  -(x-y) is (y-x)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1104:
Theorem (1104) [serial 2953] used for:
    normalization of [serial 2949]
 


Theorem (1106)                               [serial 2941] 
P [928] <<SupplOxyAlarmEnabled^0 and (SPO2_AVERAGE())^0 < (SpO2LevelAdj^0+SpO2LowerLimit^0)>>
S [928] ->
Q [908] <<SupplOxyAlarmEnabled^0 and (SPO2_AVERAGE())^0 < (SpO2LevelAdj^0+SpO2LowerLimit^0)>>
by Substitution of Assertion Labels
and theorem 1105:
Theorem (1105) [serial 2949] used for:
  substituted Assertions' predicates for  labels  [serial 2941]
 


Theorem (1107)                               [serial 2937] 
P [928] <<(SupplOxyAlarmEnabled^0 and (SPO2_AVERAGE())^0 < (SpO2LowerLimit^0+SpO2LevelAdj^0))>>
S [928] ->
Q [908] <<(SupplOxyAlarmEnabled^0 and (SPO2_AVERAGE())^0 < (SpO2LowerLimit^0+SpO2LevelAdj^0))>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1106:
Theorem (1106) [serial 2941] used for:
    normalization of [serial 2937]
 


Theorem (1108)                               [serial 2928] 
P [928] <<SUPPL_O2_ALARM()>>
S [928] ->
Q [908] <<SUPPL_O2_ALARM()>>
by Substitution of Assertion Labels
and theorem 1107:
Theorem (1107) [serial 2937] used for:
  substituted Assertions' predicates for  labels  [serial 2928]
 


Theorem (1109)                               [serial 2957] 
P [928] <<SpO2DerivedLowerLimitAlarm^0 and (SupplOxyAlarmEnabled^0 and ((sum i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  of (SensorConnected^i and not MotionArtifact^i??SpO2^i:0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples..-1 
  that (SensorConnected^i and not MotionArtifact^i) ))^0 < (SpO2LevelAdj^0+
SpO2LowerLimit^0))>>
S [928] ->
Q [921] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1110)                               [serial 2951] 
P [928] <<SpO2DerivedLowerLimitAlarm^0 and (SupplOxyAlarmEnabled^0 and (((sum i:integer
  in  -SpO2MovingAvgWindowSamples.. -1 
  of (SensorConnected^(i) and not MotionArtifact^(i)??SpO2^(i):0) )/(numberof i:integer
  in  -SpO2MovingAvgWindowSamples.. -1 
  that (SensorConnected^(i) and not MotionArtifact^(i)) )))^0 < (SpO2LevelAdj^0+
SpO2LowerLimit^0))>>
S [928] ->
Q [921] <<true>>
by Normalization
  Normalization Axioms:
    Unary Minus:  -(x-y) is (y-x)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1109:
Theorem (1109) [serial 2957] used for:
    normalization of [serial 2951]
 


Theorem (1111)                               [serial 2945] 
P [928] <<SpO2DerivedLowerLimitAlarm^0 and (SupplOxyAlarmEnabled^0 and (SPO2_AVERAGE())^0 < (
SpO2LevelAdj^0+SpO2LowerLimit^0))>>
S [928] ->
Q [921] <<true>>
by Substitution of Assertion Labels
and theorem 1110:
Theorem (1110) [serial 2951] used for:
  substituted Assertions' predicates for  labels  [serial 2945]
 


Theorem (1112)                               [serial 2939] 
P [928] <<SpO2DerivedLowerLimitAlarm^0 and (SupplOxyAlarmEnabled^0 and (SPO2_AVERAGE())^0 < (
SpO2LowerLimit^0+SpO2LevelAdj^0))>>
S [928] ->
Q [921] <<true>>
by Normalization
  Normalization Axiom:
    Reflexivity of Addition: a+b=b+a
and theorem 1111:
Theorem (1111) [serial 2945] used for:
    normalization of [serial 2939]
 


Theorem (1113)                               [serial 2934] 
P [928] <<SpO2DerivedLowerLimitAlarm^0 and SUPPL_O2_ALARM()>>
S [928] ->
Q [921] <<true>>
by Substitution of Assertion Labels
and theorem 1112:
Theorem (1112) [serial 2939] used for:
  substituted Assertions' predicates for  labels  [serial 2934]
 


Theorem (1114)                               [serial 2929] 
P [928] <<(SUPPL_O2_ALARM()) and SpO2DerivedLowerLimitAlarm^0>>
S [928] ->
Q [921] <<(true)^1>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Constants are always the same
and theorem 1113:
Theorem (1113) [serial 2934] used for:
    normalization of [serial 2929]
 


Theorem (1115)                               [serial 2927] 
P [928] <<SUPPL_O2_ALARM()>>
S [928] SpO2DerivedLowerLimitAlarm!
Q [921] <<(true)^1>>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 1108 1114:
Theorem (1108) [serial 2928] used for:
  applied port output <<pre>> -> <<M(SpO2DerivedLowerLimitAlarm)>> [serial 2927]
 
Theorem (1114) [serial 2929] used for:
  applied port output <<pre and SpO2DerivedLowerLimitAlarm^0>> -> <<post>> [serial 2927]
 


Theorem (1116)                               [serial 1058] 
P [927] <<SupplOxyAlarmEnabled^0 and ((SPO2_AVERAGE())^0 < (SpO2LowerLimit^0+SpO2LevelAdj^0))>>
S [928] <<SUPPL_O2_ALARM()>>
SpO2DerivedLowerLimitAlarm!
Q [921] <<(true)^1>>
by Introduction of Existential Quantification (bl.aapre)
and theorems 1103 1115:
Theorem (1103) [serial 2926] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1058]
 
Theorem (1115) [serial 2927] used for:
  as <<pre>> S <<Q>> in <<P>> { <<pre>> S  } <<Q>> [serial 1058]
 


Theorem (1117)                               [serial 2965] 
P [929] <<(SpO2LevelAdj^0+SpO2LowerLimit^0) <= (SPO2_AVERAGE())^0 or not SupplOxyAlarmEnabled^0>>
S [929] ->
Q [921] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1118)                               [serial 1059] 
P [929] <<not SupplOxyAlarmEnabled^0 or ((SPO2_AVERAGE())^0 >= (SpO2LowerLimit^0+
SpO2LevelAdj^0))>>
S [929] ->
Q [921] <<(true)^1>>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
    Constants are always the same
and theorem 1117:
Theorem (1117) [serial 2965] used for:
    normalization of [serial 1059]
 


Theorem (1119)                               [serial 1060] 
P [930] <<(true) and stop@now and not (exists u:time
  in tops,,now 
  that true ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [930] ->
Q [923] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1120)                               [serial 1052] 
P [918] << >>
S [918] ->
Q [918] <<SupplemetalOxygenThread.imp proof obligations>>
by Initial Thread Obligations
and theorems 1084 1085 1094 1096 1097 1116 1118 1119:
Theorem (1084) [serial 1053] used for:
  <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
 
Theorem (1085) [serial 1054] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (1094) [serial 1055] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check, <<M(check)>> -> <<e1 or e2 or . . . en>>
 
Theorem (1096) [serial 1056] used for:
   <<M(start)>> -> <<M(run)>> for so0:start-[ ]->run{};
 
Theorem (1097) [serial 1057] used for:
   <<M(run) and x>> -> <<M(check)>> for so1:run-[x]->check{};
 
Theorem (1116) [serial 1058] used for:
   <<M(check) and x>> A <<M(run)>> for so2:check-[x]->run{A};
 
Theorem (1118) [serial 1059] used for:
   <<M(check) and x>> -> <<M(run)>> for so3:check-[x]->run{};
 
Theorem (1119) [serial 1060] used for:
   <<M(run) and x>> -> <<M(halt)>> for so4:run-[x]->halt{};
 


Theorem (1121)                               [serial 2969] 
P [659] <<all j:integer
  in 1..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
S [654] ->
Q [654] <<all j:integer
  in 1..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
by Identity (id):  P->P is tautology


Theorem (1122)                               [serial 2967] 
P [659] <<(all j:integer
  in 1..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) )>>
S [654] ->
Q [654] <<all j:integer
  in 1..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1121:
Theorem (1121) [serial 2969] used for:
    normalization of [serial 2967]
 


Theorem (1123)                               [serial 1062] 
P [659] <<MOINV()>>
S [654] ->
Q [654] <<all j:integer
  in 1..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
by Substitution of Assertion Labels
and theorem 1122:
Theorem (1122) [serial 2967] used for:
  substituted Assertions' predicates for  labels  [serial 1062]
 


Theorem (1124)                               [serial 1063] 
P [658] <<numBadReadings = 0>>
S [658] ->
Q [658] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1125)                               [serial 2992] 
P [658] <<numBadReadings = 0>>
S [662] ->
Q [659] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1126)                               [serial 2991] 
P [658] <<numBadReadings = 0>>
S [662] ->
Q [659] <<all j:integer
  in false 
  are MotionArtifact^(1-j) or not SensorConnected^(1-j) >>
by Empty Range Law All: all a:t in false are V is tautology
and theorem 1125:
Theorem (1125) [serial 2992] used for:
  Empty Range Law All: all a:t in false are V is tautology [serial 2991]
 


Theorem (1127)                               [serial 2990] 
P [658] <<numBadReadings = 0>>
S [662] ->
Q [659] <<all j:integer
  in 1..0 
  are MotionArtifact^(1-j) or not SensorConnected^(1-j) >>
by Empty Range
and theorem 1126:
Theorem (1126) [serial 2991] used for:
  Empty Range [serial 2990]
 


Theorem (1128)                               [serial 2987] 
P [658] <<numBadReadings = 0>>
S [662] ->
Q [659] <<all j:integer
  in 1..numBadReadings 
  are MotionArtifact^(1-j) or not SensorConnected^(1-j) >>
by Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
and theorem 1127:
Theorem (1127) [serial 2990] used for:
  Substitution of Equals (anywhere):
  <<...(P[a/b] and a=b)>> S <<Q>>
  ----------------------
   <<...(P and a=b)>> S <<Q>>
 replacing "numBadReadings"
 with its ="
 (0)" [serial 2987]
 


Theorem (1129)                               [serial 2985] 
P [658] <<numBadReadings = 0>>
S [662] ->
Q [659] <<all j:integer
  in 1..numBadReadings 
  are MotionArtifact^(1-j) or not (SensorConnected^(- j))^1 >>
by Normalization
  Normalization Axioms:
    Caret Compostition:  (x^a)^b is x^(a+b)
    Associativity: (b.c).a = a.b.c
and theorem 1128:
Theorem (1128) [serial 2987] used for:
    normalization of [serial 2985]
 


Theorem (1130)                               [serial 2983] 
P [658] <<numBadReadings = 0>>
S [662] ->
Q [659] <<all j:integer
  in 1..numBadReadings 
  are MotionArtifact^(1-j) or (not SensorConnected^(- j))^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1129:
Theorem (1129) [serial 2985] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2983]
 


Theorem (1131)                               [serial 2981] 
P [658] <<numBadReadings = 0>>
S [662] ->
Q [659] <<all j:integer
  in 1..numBadReadings 
  are (MotionArtifact^((- j)+1) or (not SensorConnected^(- j))^1) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 1130:
Theorem (1130) [serial 2983] used for:
    normalization of [serial 2981]
 


Theorem (1132)                               [serial 2979] 
P [658] <<numBadReadings = 0>>
S [662] ->
Q [659] <<all j:integer
  in 1..numBadReadings 
  are (MotionArtifact^(- j) or not SensorConnected^(- j))^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1131:
Theorem (1131) [serial 2981] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2979]
 


Theorem (1133)                               [serial 2977] 
P [658] <<numBadReadings = 0>>
S [662] ->
Q [659] <<(all j:integer
  in 1..numBadReadings 
  are (MotionArtifact^(- j) or not SensorConnected^(- j))^1 )>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1132:
Theorem (1132) [serial 2979] used for:
    normalization of [serial 2977]
 


Theorem (1134)                               [serial 2974] 
P [658] <<numBadReadings = 0>>
S [662] ->
Q [659] <<(all j:integer
  in 1..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) )^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1133:
Theorem (1133) [serial 2977] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 2974]
 


Theorem (1135)                               [serial 2972] 
P [658] <<numBadReadings = 0>>
S [662] ->
Q [659] <<((all j:integer
  in 1..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) ))^1>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1134:
Theorem (1134) [serial 2974] used for:
    normalization of [serial 2972]
 


Theorem (1136)                               [serial 1064] 
P [658] <<numBadReadings = 0>>
S [662] ->
Q [659] <<(MOINV())^1>>
by Substitution of Assertion Labels
and theorem 1135:
Theorem (1135) [serial 2972] used for:
  substituted Assertions' predicates for  labels  [serial 1064]
 


Theorem (1137)                               [serial 2993] 
P [659] <<MOINV()>>
S [659] ->
Q [664] <<MOINV()>>
by Identity (id):  P->P is tautology


Theorem (1138)                               [serial 3071] 
P [688] <<all j:integer
  in 0..-1+numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
S [659] ->
Q    <<all j:integer
  in 0..-1+numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
by Identity (id):  P->P is tautology


Theorem (1139)                               [serial 3069] 
P [688] <<all j:integer
  in 0..(numBadReadings+ -1+ -0) 
  are MotionArtifact^((- j+- 0)) or not SensorConnected^((- j+- 0)) >>
S [659] ->
Q    <<all j:integer
  in 0..(numBadReadings+ -1) 
  are MotionArtifact^(1+- j+- 1) or not SensorConnected^(1+- j+- 1) >>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1138:
Theorem (1138) [serial 3071] used for:
    normalization of [serial 3069]
 


Theorem (1140)                               [serial 3068] 
P [688] <<all j:integer
  in 0..((numBadReadings-1)-0) 
  are MotionArtifact^(- (j+0)) or not SensorConnected^(- (j+0)) >>
S [659] ->
Q    <<all j:integer
  in 0..(numBadReadings-1) 
  are MotionArtifact^(1-(j+1)) or not SensorConnected^(1-(j+1)) >>
by Equivlence of negation and subtraction: (a-b) = (a + (-b))
and theorem 1139:
Theorem (1139) [serial 3069] used for:
   changing adding negation to subtraction  [serial 3068]
 


Theorem (1141)                               [serial 3065] 
P [688] <<all j:integer
  in 0..numBadReadings-1 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
S [659] ->
Q    <<all j:integer
  in 1..numBadReadings 
  are MotionArtifact^(1-j) or not SensorConnected^(1-j) >>
by Shift Quantification Range so Lower Bound is Zero
and theorem 1140:
Theorem (1140) [serial 3068] used for:
  Shift Quantification Range so Lower Bound is Zero [serial 3065]
 


Theorem (1142)                               [serial 3063] 
P [688] <<all j:integer
  in 0..numBadReadings-1 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
S [659] ->
Q    <<all j:integer
  in 1..numBadReadings 
  are MotionArtifact^(1-j) or not (SensorConnected^(- j))^1 >>
by Normalization
  Normalization Axioms:
    Caret Compostition:  (x^a)^b is x^(a+b)
    Associativity: (b.c).a = a.b.c
and theorem 1141:
Theorem (1141) [serial 3065] used for:
    normalization of [serial 3063]
 


Theorem (1143)                               [serial 3061] 
P [688] <<all j:integer
  in 0..numBadReadings-1 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
S [659] ->
Q    <<all j:integer
  in 1..numBadReadings 
  are MotionArtifact^(1-j) or (not SensorConnected^(- j))^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1142:
Theorem (1142) [serial 3063] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 3061]
 


Theorem (1144)                               [serial 3059] 
P [688] <<all j:integer
  in 0..numBadReadings-1 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
S [659] ->
Q    <<all j:integer
  in 1..numBadReadings 
  are (MotionArtifact^((- j)+1) or (not SensorConnected^(- j))^1) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Associativity: (b.c).a = a.b.c
and theorem 1143:
Theorem (1143) [serial 3061] used for:
    normalization of [serial 3059]
 


Theorem (1145)                               [serial 3057] 
P [688] <<all j:integer
  in 0..numBadReadings-1 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
S [659] ->
Q    <<all j:integer
  in 1..numBadReadings 
  are (MotionArtifact^(- j) or not SensorConnected^(- j))^1 >>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1144:
Theorem (1144) [serial 3059] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 3057]
 


Theorem (1146)                               [serial 3055] 
P [688] <<all j:integer
  in 0..numBadReadings-1 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
S [659] ->
Q    <<(all j:integer
  in 1..numBadReadings 
  are (MotionArtifact^(- j) or not SensorConnected^(- j))^1 )>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1145:
Theorem (1145) [serial 3057] used for:
    normalization of [serial 3055]
 


Theorem (1147)                               [serial 3052] 
P [688] <<all j:integer
  in 0..numBadReadings-1 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
S [659] ->
Q    <<(all j:integer
  in 1..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) )^1>>
by Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k
and theorem 1146:
Theorem (1146) [serial 3055] used for:
  Distribute Carets:  (A^k op B^k or C^k) is (A op B op C)^k [serial 3052]
 


Theorem (1148)                               [serial 3050] 
P [688] <<(all j:integer
  in 0..(numBadReadings-1) 
  are MotionArtifact^(- j) or not SensorConnected^(- j) )>>
S [659] ->
Q    <<((all j:integer
  in 1..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) ))^1>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1147:
Theorem (1147) [serial 3052] used for:
    normalization of [serial 3050]
 


Theorem (1149)                               [serial 2994] 
P [688] <<NUMBAD()>>
S [659] ->
Q    <<(MOINV())^1>>
by Substitution of Assertion Labels
and theorem 1148:
Theorem (1148) [serial 3050] used for:
  substituted Assertions' predicates for  labels  [serial 2994]
 


Theorem (1150)                               [serial 3113] 
P [664] <<MOINV()>>
S [665] ->
Q [665] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1151)                               [serial 3111] 
P [664] <<MOINV()>>
S [665] ->
Q [665] <<(true)>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1150:
Theorem (1150) [serial 3113] used for:
    normalization of [serial 3111]
 


Theorem (1152)                               [serial 3110] 
P [664] <<MOINV()>>
S [665] ->
Q [665] <<(true) and (true)>>
by Law of And-Simplification:  P and P is P
and theorem 1151:
Theorem (1151) [serial 3111] used for:
  Law of And-Simplification:  P and P is P [serial 3110]
 


Theorem (1153)                               [serial 3109] 
P [664] <<MOINV()>>
S [665] ->
Q [665] <<(SensorConnected^0 or MotionArtifact^0 or not SensorConnected^0) and (
not MotionArtifact^0 or MotionArtifact^0 or not SensorConnected^0)>>
by Law of Excluded Middle: P or not P is tautology
and theorem 1152:
Theorem (1152) [serial 3110] used for:
  Law of Excluded Middle: P or not P is tautology [serial 3109]
 


Theorem (1154)                               [serial 3036] 
P [664] <<MOINV()>>
S [665] ->
Q [665] <<MotionArtifact^0 or not SensorConnected^0 or (SensorConnected^0 and not MotionArtifact^0)>>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 1153:
Theorem (1153) [serial 3109] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 3036]
 


Theorem (1155)                               [serial 2997] 
P [664] <<MOINV()>>
S [665] ->
Q [665] <<(SensorConnected^0 and not MotionArtifact^0) or (MotionArtifact^0 or not SensorConnected^0)>>
by Associativity: (b.c).a = a.b.c
and theorem 1154:
Theorem (1154) [serial 3036] used for:
  Associativity: (b.c).a = a.b.c [serial 2997]
 


Theorem (1156)                               [serial 2998] 
P [665] <<(MOINV()) and (SensorConnected^0 and not MotionArtifact^0)>>
S [665] ->
Q [668] <<SensorConnected^0 and not MotionArtifact^0>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1157)                               [serial 3083] 
P [668] <<SensorConnected^0 and not MotionArtifact^0>>
S [669] ->
Q [670] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1158)                               [serial 3082] 
P [668] <<SensorConnected^0 and not MotionArtifact^0>>
S [669] ->
Q [670] <<all j:integer
  in false 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
by Empty Range Law All: all a:t in false are V is tautology
and theorem 1157:
Theorem (1157) [serial 3083] used for:
  Empty Range Law All: all a:t in false are V is tautology [serial 3082]
 


Theorem (1159)                               [serial 3080] 
P [668] <<SensorConnected^0 and not MotionArtifact^0>>
S [669] ->
Q [670] <<all j:integer
  in 0..-1 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
by Empty Range
and theorem 1158:
Theorem (1158) [serial 3082] used for:
  Empty Range [serial 3080]
 


Theorem (1160)                               [serial 3078] 
P [668] <<SensorConnected^0 and not MotionArtifact^0>>
S [669] ->
Q [670] <<all j:integer
  in 0..0-1 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
by Normalization
  Normalization Axiom:
    Unary Minus:  -(x-y) is (y-x)
and theorem 1159:
Theorem (1159) [serial 3080] used for:
    normalization of [serial 3078]
 


Theorem (1161)                               [serial 3075] 
P [668] <<SensorConnected^0 and not MotionArtifact^0>>
S [669] numBadReadings := 0
Q [670] <<all j:integer
  in 0..numBadReadings-1 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1160:
Theorem (1160) [serial 3078] used for:
  applied wp for assignment [serial 3075]
 


Theorem (1162)                               [serial 3073] 
P [668] <<SensorConnected^0 and not MotionArtifact^0>>
S [669] numBadReadings := 0
Q [670] <<(all j:integer
  in 0..(numBadReadings-1) 
  are MotionArtifact^(- j) or not SensorConnected^(- j) )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1161:
Theorem (1161) [serial 3075] used for:
    normalization of [serial 3073]
 


Theorem (1163)                               [serial 2999] 
P [668] <<SensorConnected^0 and not MotionArtifact^0>>
S [669] numBadReadings := 0
Q [670] <<NUMBAD()>>
by Substitution of Assertion Labels
and theorem 1162:
Theorem (1162) [serial 3073] used for:
  substituted Assertions' predicates for  labels  [serial 2999]
 


Theorem (1164)                               [serial 3000] 
P [670] <<NUMBAD()>>
S [665] ->
Q [677] <<NUMBAD()>>
by Identity (id):  P->P is tautology


Theorem (1165)                               [serial 3087] 
P [673] <<all j:integer
  in 0..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
S [665] ->
Q [673] <<all j:integer
  in 0..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
by Identity (id):  P->P is tautology


Theorem (1166)                               [serial 3084] 
P [665] <<(all j:integer
  in 1..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) ) and (MotionArtifact^0 or 
not SensorConnected^0)>>
S [665] ->
Q [673] <<all j:integer
  in 0..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
by Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j)
and theorem 1165:
Theorem (1165) [serial 3087] used for:
  Contract Universal Quantification: 
 (all j:integer in lb..ub are P(j)) and P(ub+1) is all j:integer in lb..ub+1 are P(j) [serial 3084]
 


Theorem (1167)                               [serial 3018] 
P [665] <<MOINV() and (MotionArtifact^0 or not SensorConnected^0)>>
S [665] ->
Q [673] <<all j:integer
  in 0..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
by Substitution of Assertion Labels
and theorem 1166:
Theorem (1166) [serial 3084] used for:
  substituted Assertions' predicates for  labels  [serial 3018]
 


Theorem (1168)                               [serial 3001] 
P [665] <<(MOINV()) and (MotionArtifact^0 or not SensorConnected^0)>>
S [665] ->
Q [673] <<all j:integer
  in 0..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1167:
Theorem (1167) [serial 3018] used for:
    normalization of [serial 3001]
 


Theorem (1169)                               [serial 3095] 
P [673] <<all j:integer
  in 0..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
S [674] ->
Q [675] <<all j:integer
  in 0..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
by Identity (id):  P->P is tautology


Theorem (1170)                               [serial 3093] 
P [673] <<all j:integer
  in 0..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
S [674] ->
Q [675] <<all j:integer
  in 0..(1+numBadReadings)-1 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
by Normalization
  Normalization Axioms:
    Subtaction of Added Value:  (a+b)-a is b
    Reflexivity of Addition: a+b=b+a
and theorem 1169:
Theorem (1169) [serial 3095] used for:
    normalization of [serial 3093]
 


Theorem (1171)                               [serial 3090] 
P [673] <<all j:integer
  in 0..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
S [674] numBadReadings := 1+numBadReadings
Q [675] <<all j:integer
  in 0..numBadReadings-1 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1170:
Theorem (1170) [serial 3093] used for:
  applied wp for assignment [serial 3090]
 


Theorem (1172)                               [serial 3088] 
P [673] <<all j:integer
  in 0..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
S [674] numBadReadings := 1+numBadReadings
Q [675] <<(all j:integer
  in 0..(numBadReadings-1) 
  are MotionArtifact^(- j) or not SensorConnected^(- j) )>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1171:
Theorem (1171) [serial 3090] used for:
    normalization of [serial 3088]
 


Theorem (1173)                               [serial 3020] 
P [673] <<all j:integer
  in 0..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
S [674] numBadReadings := 1+numBadReadings
Q [675] <<NUMBAD()>>
by Substitution of Assertion Labels
and theorem 1172:
Theorem (1172) [serial 3088] used for:
  substituted Assertions' predicates for  labels  [serial 3020]
 


Theorem (1174)                               [serial 3002] 
P [673] <<all j:integer
  in 0..numBadReadings 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
S [674] numBadReadings := numBadReadings+1
Q [675] <<NUMBAD()>>
by Normalization
  Normalization Axioms:
    Literal Arithmetic
    Reflexivity of Addition: a+b=b+a
and theorem 1173:
Theorem (1173) [serial 3020] used for:
    normalization of [serial 3002]
 


Theorem (1175)                               [serial 3003] 
P [675] <<NUMBAD()>>
S [665] ->
Q [677] <<NUMBAD()>>
by Identity (id):  P->P is tautology


Theorem (1176)                               [serial 2995] 
P [664] <<MOINV()>>
S [665] if 
(SensorConnected? and not MotionArtifact?)~> 
  <<SensorConnected^0 and not MotionArtifact^0>>
  numBadReadings := 0
  <<NUMBAD()>> 
[]
(MotionArtifact? or not SensorConnected?)~> 
  <<all j:integer
    in 0..numBadReadings 
    are MotionArtifact^(- j) or not SensorConnected^(- j) >>
  numBadReadings := numBadReadings+1
  <<NUMBAD()>> 
fi
Q [677] <<NUMBAD()>>
by Alternative Rule:
 <<P>> -> <<B1 or B2 or ... or Bn>>,
 <<P and B1>> -> <<P1>>, <<P and B2>> -> <<P2>>, . . . , <<P and Bn>> -> <<Pn>>,
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>,
 <<Q1>> -> <<Q>>, <<Q2>> -> <<Q>>, . . . <<Qn>> -> <<Q>>
 -------------------------------------------------------------------------
 <<P>> if B1-><<P1>>S1<<Q1>> [] B2-><<P2>>S2<<Q2>> [] . . . [] Bn-><<Pn>>Sn<<Qn>> fi <<Q>> (bl.iffi)
and theorems 1155 1156 1163 1164 1168 1174 1175:
Theorem (1155) [serial 2997] used for:
    <<P>> -> <<B1 or B2 or ... or Bn>>  in if-[]-fi  for [serial 2995]
 
Theorem (1156) [serial 2998] used for:
    <<P and B0>> -> <<P0>>  for [serial 2995]
 
Theorem (1163) [serial 2999] used for:
    <<P0>> S0 <<Q0>>  for [serial 2995]
 
Theorem (1164) [serial 3000] used for:
    <<Q0>> -> <<Q>>  for [serial 2995]
 
Theorem (1168) [serial 3001] used for:
    <<P and B1>> -> <<P1>>  for [serial 2995]
 
Theorem (1174) [serial 3002] used for:
    <<P1>> S1 <<Q1>>  for [serial 2995]
 
Theorem (1175) [serial 3003] used for:
    <<Q1>> -> <<Q>>  for [serial 2995]
 


Theorem (1177)                               [serial 3101] 
P [677] <<NUMBAD()>>
S [679] ->
Q [679] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1178)                               [serial 3099] 
P [677] <<NUMBAD()>>
S [679] ->
Q [679] <<not (numBadReadings-1) < #PulseOx_Properties::Motion_Artifact_Sample_Limit or 
(numBadReadings-1) < #PulseOx_Properties::Motion_Artifact_Sample_Limit>>
by Law of Excluded Middle: P or not P is tautology
and theorem 1177:
Theorem (1177) [serial 3101] used for:
  Law of Excluded Middle: P or not P is tautology [serial 3099]
 


Theorem (1179)                               [serial 3097] 
P [677] <<NUMBAD()>>
S [679] ->
Q [679] <<(not ((numBadReadings-1) < #PulseOx_Properties::Motion_Artifact_Sample_Limit)) or 
(numBadReadings-1) < #PulseOx_Properties::Motion_Artifact_Sample_Limit>>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1178:
Theorem (1178) [serial 3099] used for:
    normalization of [serial 3097]
 


Theorem (1180)                               [serial 3022] 
P [677] <<NUMBAD()>>
S [679] ->
Q [679] <<#PulseOx_Properties::Motion_Artifact_Sample_Limit <= (numBadReadings-1) or 
(numBadReadings-1) < #PulseOx_Properties::Motion_Artifact_Sample_Limit>>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 1179:
Theorem (1179) [serial 3097] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 3022]
 


Theorem (1181)                               [serial 3004] 
P [677] <<NUMBAD()>>
S [679] ->
Q [679] <<((numBadReadings-1) < #PulseOx_Properties::Motion_Artifact_Sample_Limit) or 
((numBadReadings-1) >= #PulseOx_Properties::Motion_Artifact_Sample_Limit)>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1180:
Theorem (1180) [serial 3022] used for:
    normalization of [serial 3004]
 


Theorem (1182)                               [serial 3005] 
P [679] <<(NUMBAD()) and ((numBadReadings-1) < #PulseOx_Properties::Motion_Artifact_Sample_Limit)>>
S [679] ->
Q [681] <<NUMBAD()>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1183)                               [serial 3011] 
P [681] <<NUMBAD()>>
S [681] ->
Q [681] <<NUMBAD()>>
by Identity (id):  P->P is tautology


Theorem (1184)                               [serial 3006] 
P [681] <<NUMBAD()>>
S [681] skip
Q [681] <<NUMBAD()>>
by Skip Means Implication:  <<P>> skip <<Q>>  is  <<P>> -> <<Q>> (bl.skip)
and theorem 1183:
Theorem (1183) [serial 3011] used for:
    <<P>> -> <<Q>>
  for [serial 3006]
 


Theorem (1185)                               [serial 3007] 
P [681] <<NUMBAD()>>
S [679] ->
Q [688] <<NUMBAD()>>
by Identity (id):  P->P is tautology


Theorem (1186)                               [serial 3025] 
P [679] <<#PulseOx_Properties::Motion_Artifact_Sample_Limit <= (numBadReadings-1) and 
NUMBAD()>>
S [679] ->
Q [684] <<#PulseOx_Properties::Motion_Artifact_Sample_Limit <= (numBadReadings-1) and 
NUMBAD()>>
by Identity (id):  P->P is tautology


Theorem (1187)                               [serial 3008] 
P [679] <<(NUMBAD()) and ((numBadReadings-1) >= #PulseOx_Properties::Motion_Artifact_Sample_Limit)>>
S [679] ->
Q [684] <<NUMBAD() and ((numBadReadings-1) >= #PulseOx_Properties::Motion_Artifact_Sample_Limit)>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1186:
Theorem (1186) [serial 3025] used for:
    normalization of [serial 3008]
 


Theorem (1188)                               [serial 3107] 
P [684] <<#PulseOx_Properties::Motion_Artifact_Sample_Limit <= (numBadReadings-1) and 
(all j:integer
  in 0..#PulseOx_Properties::Motion_Artifact_Sample_Limit 
  are MotionArtifact^(- j) or not SensorConnected^(- j) )>>
S [685] ->
Q [637] <<all j:integer
  in 0..#PulseOx_Properties::Motion_Artifact_Sample_Limit 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1189)                               [serial 3104] 
P [684] <<#PulseOx_Properties::Motion_Artifact_Sample_Limit <= (numBadReadings-1) and 
(all j:integer
  in 0..numBadReadings-1 
  are MotionArtifact^(- j) or not SensorConnected^(- j) )>>
S [685] ->
Q [637] <<all j:integer
  in 0..#PulseOx_Properties::Motion_Artifact_Sample_Limit 
  are MotionArtifact^(- j) or not SensorConnected^(- j) >>
by Contract Universal Quantification Range
and theorem 1188:
Theorem (1188) [serial 3107] used for:
  Contract Universal Quantification Range [serial 3104]
 


Theorem (1190)                               [serial 3102] 
P [684] <<#PulseOx_Properties::Motion_Artifact_Sample_Limit <= (numBadReadings-1) and 
(all j:integer
  in 0..(numBadReadings-1) 
  are MotionArtifact^(- j) or not SensorConnected^(- j) )>>
S [685] ->
Q [637] <<(all j:integer
  in 0..#PulseOx_Properties::Motion_Artifact_Sample_Limit 
  are (MotionArtifact^(- j) or not SensorConnected^(- j)) )>>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1189:
Theorem (1189) [serial 3104] used for:
    normalization of [serial 3102]
 


Theorem (1191)                               [serial 3027] 
P [684] <<#PulseOx_Properties::Motion_Artifact_Sample_Limit <= (numBadReadings-1) and 
NUMBAD()>>
S [685] ->
Q [637] <<MOTION_ARTIFACT_ALARM()>>
by Substitution of Assertion Labels
and theorem 1190:
Theorem (1190) [serial 3102] used for:
  substituted Assertions' predicates for  labels  [serial 3027]
 


Theorem (1192)                               [serial 3012] 
P [684] <<NUMBAD() and ((numBadReadings-1) >= #PulseOx_Properties::Motion_Artifact_Sample_Limit)>>
S [685] ->
Q [637] <<MOTION_ARTIFACT_ALARM()>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1191:
Theorem (1191) [serial 3027] used for:
    normalization of [serial 3012]
 


Theorem (1193)                               [serial 3048] 
P [685] <<#PulseOx_Properties::Motion_Artifact_Sample_Limit <= (numBadReadings-1) and 
MotionArtifactAlarm^0 and NUMBAD()>>
S [685] ->
Q [686] <<NUMBAD()>>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1194)                               [serial 3037] 
P [685] <<#PulseOx_Properties::Motion_Artifact_Sample_Limit <= (numBadReadings-1) and 
NUMBAD() and MotionArtifactAlarm^0>>
S [685] ->
Q [686] <<NUMBAD()>>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1193:
Theorem (1193) [serial 3048] used for:
    normalization of [serial 3037]
 


Theorem (1195)                               [serial 3029] 
P [685] <<MotionArtifactAlarm^0 and (#PulseOx_Properties::Motion_Artifact_Sample_Limit <= (numBadReadings-1) and 
NUMBAD())>>
S [685] ->
Q [686] <<NUMBAD()>>
by Associativity: (b.c).a = a.b.c
and theorem 1194:
Theorem (1194) [serial 3037] used for:
  Associativity: (b.c).a = a.b.c [serial 3029]
 


Theorem (1196)                               [serial 3013] 
P [685] <<(NUMBAD() and ((numBadReadings-1) >= #PulseOx_Properties::Motion_Artifact_Sample_Limit)) and 
MotionArtifactAlarm^0>>
S [685] ->
Q [686] <<NUMBAD()>>
by Normalization
  Normalization Axioms:
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1195:
Theorem (1195) [serial 3029] used for:
    normalization of [serial 3013]
 


Theorem (1197)                               [serial 3009] 
P [684] <<NUMBAD() and ((numBadReadings-1) >= #PulseOx_Properties::Motion_Artifact_Sample_Limit)>>
S [685] MotionArtifactAlarm!
Q [686] <<NUMBAD()>>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 1192 1196:
Theorem (1192) [serial 3012] used for:
  applied port output <<pre>> -> <<M(MotionArtifactAlarm)>> [serial 3009]
 
Theorem (1196) [serial 3013] used for:
  applied port output <<pre and MotionArtifactAlarm^0>> -> <<post>> [serial 3009]
 


Theorem (1198)                               [serial 3010] 
P [686] <<NUMBAD()>>
S [679] ->
Q [688] <<NUMBAD()>>
by Identity (id):  P->P is tautology


Theorem (1199)                               [serial 2996] 
P [677] <<NUMBAD()>>
S [679] if 
((numBadReadings-1) < #PulseOx_Properties::Motion_Artifact_Sample_Limit)~> 
  <<NUMBAD()>>
  skip
  <<NUMBAD()>> 
[]
((numBadReadings-1) >= #PulseOx_Properties::Motion_Artifact_Sample_Limit)~> 
  <<NUMBAD() and ((numBadReadings-1) >= #PulseOx_Properties::Motion_Artifact_Sample_Limit)>>
  MotionArtifactAlarm!
  <<NUMBAD()>> 
fi
Q [688] <<NUMBAD()>>
by Alternative Rule:
 <<P>> -> <<B1 or B2 or ... or Bn>>,
 <<P and B1>> -> <<P1>>, <<P and B2>> -> <<P2>>, . . . , <<P and Bn>> -> <<Pn>>,
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>,
 <<Q1>> -> <<Q>>, <<Q2>> -> <<Q>>, . . . <<Qn>> -> <<Q>>
 -------------------------------------------------------------------------
 <<P>> if B1-><<P1>>S1<<Q1>> [] B2-><<P2>>S2<<Q2>> [] . . . [] Bn-><<Pn>>Sn<<Qn>> fi <<Q>> (bl.iffi)
and theorems 1181 1182 1184 1185 1187 1197 1198:
Theorem (1181) [serial 3004] used for:
    <<P>> -> <<B1 or B2 or ... or Bn>>  in if-[]-fi  for [serial 2996]
 
Theorem (1182) [serial 3005] used for:
    <<P and B0>> -> <<P0>>  for [serial 2996]
 
Theorem (1184) [serial 3006] used for:
    <<P0>> S0 <<Q0>>  for [serial 2996]
 
Theorem (1185) [serial 3007] used for:
    <<Q0>> -> <<Q>>  for [serial 2996]
 
Theorem (1187) [serial 3008] used for:
    <<P and B1>> -> <<P1>>  for [serial 2996]
 
Theorem (1197) [serial 3009] used for:
    <<P1>> S1 <<Q1>>  for [serial 2996]
 
Theorem (1198) [serial 3010] used for:
    <<Q1>> -> <<Q>>  for [serial 2996]
 


Theorem (1200)                               [serial 1065] 
P [659] <<MOINV()>>
S [664] <<MOINV()>>
if 
(SensorConnected? and not MotionArtifact?)~> 
  <<SensorConnected^0 and not MotionArtifact^0>>
  numBadReadings := 0
  <<NUMBAD()>> 
[]
(MotionArtifact? or not SensorConnected?)~> 
  <<all j:integer
    in 0..numBadReadings 
    are MotionArtifact^(- j) or not SensorConnected^(- j) >>
  numBadReadings := numBadReadings+1
  <<NUMBAD()>> 
fi
<<NUMBAD()>>
;
if 
((numBadReadings-1) < #PulseOx_Properties::Motion_Artifact_Sample_Limit)~> 
  <<NUMBAD()>>
  skip
  <<NUMBAD()>> 
[]
((numBadReadings-1) >= #PulseOx_Properties::Motion_Artifact_Sample_Limit)~> 
  <<NUMBAD() and ((numBadReadings-1) >= #PulseOx_Properties::Motion_Artifact_Sample_Limit)>>
  MotionArtifactAlarm!
  <<NUMBAD()>> 
fi
<<NUMBAD()>>
Q [659] <<(MOINV())^1>>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1137 1149 1176 1199:
Theorem (1137) [serial 2993] used for:
  P -> P1 in sequential composition for [serial 1065]
 
Theorem (1149) [serial 2994] used for:
  Q1 -> Q in sequential composition for [serial 1065]
 
Theorem (1176) [serial 2995] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1065]
 
Theorem (1199) [serial 2996] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1065]
 


Theorem (1201)                               [serial 1066] 
P [690] <<(MOINV()) and stop@now and not (exists u:time
  in tops,,now 
  that true ) and not (exists u:time
  in tops,,now 
  that stop@u )>>
S [690] ->
Q [660] <<true>>
by True Conclusion Schema (tc): P->true


Theorem (1202)                               [serial 1061] 
P [651] << >>
S [654] ->
Q [651] <<MotionArtifactThread.imp proof obligations>>
by Initial Thread Obligations
and theorems 1123 1124 1136 1200 1201:
Theorem (1123) [serial 1062] used for:
  <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
 
Theorem (1124) [serial 1063] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (1136) [serial 1064] used for:
   <<M(start)>> -> <<M(run)>> for mat0:start-[ ]->run{};
 
Theorem (1200) [serial 1065] used for:
   <<M(run) and x>> A <<M(run)>> for mat1:run-[x]->run{A};
 
Theorem (1201) [serial 1066] used for:
   <<M(run) and x>> -> <<M(halt)>> for mat2:run-[x]->halt{};
 


Theorem (1203)                               [serial 1067] 
P [4] <<HEART_RATE_LOWER_LIMIT_ALARM()>>
S [2] ->
Q [5] <<HEART_RATE_LOWER_LIMIT_ALARM()>>
by Identity (id):  P->P is tautology


Theorem (1204)                               [serial 1068] 
P [4] <<HEART_RATE_UPPER_LIMIT_ALARM()>>
S [2] ->
Q [5] <<HEART_RATE_UPPER_LIMIT_ALARM()>>
by Identity (id):  P->P is tautology


Theorem (1205)                               [serial 1069] 
P [4] <<HR_TREND()>>
S [2] ->
Q [5] <<HR_TREND()>>
by Identity (id):  P->P is tautology


Theorem (1206)                               [serial 1070] 
P [4] <<SUPPL_O2_ALARM()>>
S [2] ->
Q [5] <<SUPPL_O2_ALARM()>>
by Identity (id):  P->P is tautology


Theorem (1207)                               [serial 1071] 
P [4] <<RAPID_DECLINE_ALARM()>>
S [2] ->
Q [5] <<RAPID_DECLINE_ALARM()>>
by Identity (id):  P->P is tautology


Theorem (1208)                               [serial 1072] 
P [4] <<MOTION_ARTIFACT_ALARM()>>
S [2] ->
Q [5] <<MOTION_ARTIFACT_ALARM()>>
by Identity (id):  P->P is tautology


Theorem (1209)                               [serial 1073] 
P [4] <<SPO2_TREND()>>
S [2] ->
Q [5] <<SPO2_TREND()>>
by Identity (id):  P->P is tautology


Theorem (1210)                               [serial 1074] 
P [4] <<SPO2_LOWER_LIMIT_ALARM()>>
S [2] ->
Q [5] <<SPO2_LOWER_LIMIT_ALARM()>>
by Identity (id):  P->P is tautology


Theorem (1211)                               [serial 1075] 
P [4] <<HEART_RATE_LOWER_LIMIT_ALARM()>>
S [2] ->
Q [5] <<HEART_RATE_LOWER_LIMIT_ALARM()>>
by Identity (id):  P->P is tautology


Theorem (1212)                               [serial 1076] 
P [4] <<HEART_RATE_UPPER_LIMIT_ALARM()>>
S [2] ->
Q [5] <<HEART_RATE_UPPER_LIMIT_ALARM()>>
by Identity (id):  P->P is tautology


Theorem (1213)                               [serial 1077] 
P [4] <<HR_TREND()>>
S [2] ->
Q [5] <<HR_TREND()>>
by Identity (id):  P->P is tautology


Theorem (1214)                               [serial 1078] 
P [4] <<SUPPL_O2_ALARM()>>
S [2] ->
Q [5] <<SUPPL_O2_ALARM()>>
by Identity (id):  P->P is tautology


Theorem (1215)                               [serial 1079] 
P [4] <<SPO2_AVERAGE()>>
S [2] ->
Q [5] <<SPO2_AVERAGE()>>
by Identity (id):  P->P is tautology


Theorem (1216)                               [serial 1080] 
P [4] <<RAPID_DECLINE_ALARM()>>
S [2] ->
Q [5] <<RAPID_DECLINE_ALARM()>>
by Identity (id):  P->P is tautology


Theorem (1217)                               [serial 1081] 
P [4] <<MOTION_ARTIFACT_ALARM()>>
S [2] ->
Q [5] <<MOTION_ARTIFACT_ALARM()>>
by Identity (id):  P->P is tautology


Theorem (1218)                               [serial 1082] 
P [4] <<SPO2_TREND()>>
S [2] ->
Q [5] <<SPO2_TREND()>>
by Identity (id):  P->P is tautology


Theorem (1219)                               [serial 1083] 
P [4] <<HR_TREND()>>
S [2] ->
Q [5] <<HR_TREND()>>
by Identity (id):  P->P is tautology


Theorem (1220)                               [serial 1084] 
P [4] <<MOTION_ARTIFACT_ALARM()>>
S [2] ->
Q [5] <<MOTION_ARTIFACT_ALARM()>>
by Identity (id):  P->P is tautology


Theorem (1221)                               [serial 1085] 
P [4] <<SUPPL_O2_ALARM()>>
S [2] ->
Q [5] <<SUPPL_O2_ALARM()>>
by Identity (id):  P->P is tautology


Theorem (1222)                               [serial 1086] 
P [4] <<RAPID_DECLINE_ALARM()>>
S [2] ->
Q [5] <<RAPID_DECLINE_ALARM()>>
by Identity (id):  P->P is tautology


Theorem (1223)                               [serial 1087] 
P [4] <<SPO2_TREND()>>
S [2] ->
Q [5] <<SPO2_TREND()>>
by Identity (id):  P->P is tautology


Theorem (1224)                               [serial 1088] 
P [4] <<MOTION_ARTIFACT_ALARM()>>
S [2] ->
Q [5] <<MOTION_ARTIFACT_ALARM()>>
by Identity (id):  P->P is tautology


Theorem (1225)                               [serial 1089] 
P [4] <<avout = (SPO2_AVERAGE())>>
S [2] ->
Q [5] <<avout = (SPO2_AVERAGE())>>
by Identity (id):  P->P is tautology


Theorem (1226)                               [serial 1090] 
P [4] <<avso = (SPO2_AVERAGE())>>
S [2] ->
Q [5] <<avso = (SPO2_AVERAGE())>>
by Identity (id):  P->P is tautology


Theorem (1227)                               [serial 1091] 
P [4] <<SUPPL_O2_ALARM()>>
S [2] ->
Q [5] <<SUPPL_O2_ALARM()>>
by Identity (id):  P->P is tautology


Theorem (1228)                               [serial 1092] 
P [4] <<RAPID_DECLINE_ALARM()>>
S [2] ->
Q [5] <<RAPID_DECLINE_ALARM()>>
by Identity (id):  P->P is tautology


Theorem (1229)                               [serial 3117] 
P [4] <<all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = SpO2Trend[s] >>
S [2] ->
Q [5] <<all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) = SpO2Trend[s] >>
by Identity (id):  P->P is tautology


Theorem (1230)                               [serial 3115] 
P [4] <<all s:integer
  in 1..num_samples 
  are SpO2Trend[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) >>
S [2] ->
Q [5] <<(all s:integer
  in 1..num_samples 
  are SpO2Trend[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1229:
Theorem (1229) [serial 3117] used for:
    normalization of [serial 3115]
 


Theorem (1231)                               [serial 1093] 
P [4] <<all s:integer
  in 1..num_samples 
  are SpO2Trend[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:SpO2^(- s)) >>
S [2] ->
Q [5] <<SPO2_TREND()>>
by Substitution of Assertion Labels
and theorem 1230:
Theorem (1230) [serial 3115] used for:
  substituted Assertions' predicates for  labels  [serial 1093]
 


Theorem (1232)                               [serial 3122] 
P [4] <<all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = HeartRateTrend[s] >>
S [2] ->
Q [5] <<all s:integer
  in 1..num_samples 
  are (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) = HeartRateTrend[s] >>
by Identity (id):  P->P is tautology


Theorem (1233)                               [serial 3120] 
P [4] <<all s:integer
  in 1..num_samples 
  are HeartRateTrend[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) >>
S [2] ->
Q [5] <<(all s:integer
  in 1..num_samples 
  are HeartRateTrend[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) )>>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1232:
Theorem (1232) [serial 3122] used for:
    normalization of [serial 3120]
 


Theorem (1234)                               [serial 1094] 
P [4] <<all s:integer
  in 1..num_samples 
  are HeartRateTrend[s] = (MotionArtifact^(- s) or not SensorConnected^(- s)??0:HeartRate^(- s)) >>
S [2] ->
Q [5] <<HR_TREND()>>
by Substitution of Assertion Labels
and theorem 1233:
Theorem (1233) [serial 3120] used for:
  substituted Assertions' predicates for  labels  [serial 1094]
 


Theorem (1235)                               [serial 1095] 
P [4] <<new_connection2 = (SPO2_AVERAGE())>>
S [2] ->
Q [5] <<new_connection2 = (SPO2_AVERAGE())>>
by Identity (id):  P->P is tautology


Theorem (1236)                               [serial 1001] 
P     
S     
Q     
by Initial Thread Obligations
and theorems 294 560 990 1083 1120 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1231 1234 1235:
Theorem (294) [serial 1002] used for:
  Initial proof obligations for SpO2TrendThread.imp
 
Theorem (560) [serial 1015] used for:
  Initial proof obligations for HeartRateTrendThread.imp
 
Theorem (990) [serial 1028] used for:
  Initial proof obligations for SpO2AverageThread.imp
 
Theorem (1083) [serial 1042] used for:
  Initial proof obligations for RapidDeclineThread.imp
 
Theorem (1120) [serial 1052] used for:
  Initial proof obligations for SupplemetalOxygenThread.imp
 
Theorem (1202) [serial 1061] used for:
  Initial proof obligations for MotionArtifactThread.imp
 
Theorem (1203) [serial 1067] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoSystem.imp.heart_rate_lower_limit_violated:
 PO::ICEpoInterface.HeartRateLowerLimitViolated -> PO::ICEpoUIprocess.HeartRateLowerLimitViolated
 
Theorem (1204) [serial 1068] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoSystem.imp.heart_rate_upper_limit_violated:
 PO::ICEpoInterface.HeartRateUpperLimitViolated -> PO::ICEpoUIprocess.HeartRateUpperLimitViolated
 
Theorem (1205) [serial 1069] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoSystem.imp.heart_rate_trend:
 PO::ICEpoAppProcess.HeartRateTrend -> PO::ICEpoUIprocess.HeartRateTrend
 
Theorem (1206) [serial 1070] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoSystem.imp.supplemental_oxygen_alarm:
 PO::ICEpoAppProcess.SpO2DerivedLowerLimitAlarm -> PO::ICEpoUIprocess.SpO2DerivedLowerLimitAlarm
 
Theorem (1207) [serial 1071] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoSystem.imp.rapid_spo2_decline_alarm:
 PO::ICEpoAppProcess.RapidSpO2DeclineAlarm -> PO::ICEpoUIprocess.RapidSpO2DeclineAlarm
 
Theorem (1208) [serial 1072] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoSystem.imp.motion_artifact_alarm:
 PO::ICEpoAppProcess.MotionArtifactAlarm -> PO::ICEpoUIprocess.MotionArtifactAlarm
 
Theorem (1209) [serial 1073] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoSystem.imp.spO2_Trend:
 PO::ICEpoAppProcess.SpO2Trend -> PO::ICEpoUIprocess.SpO2Trend
 
Theorem (1210) [serial 1074] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoUIprocess.imp.ui_spo2_llv:
 PO::ICEpoUIprocess.SpO2LowerLimitViolated -> PO::ICEpoUI.SpO2LowerLimitViolated
 
Theorem (1211) [serial 1075] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoUIprocess.imp.ui_heartrate_llv:
 PO::ICEpoUIprocess.HeartRateLowerLimitViolated -> PO::ICEpoUI.HeartRateLowerLimitViolated
 
Theorem (1212) [serial 1076] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoUIprocess.imp.ui_heartrate_ulv:
 PO::ICEpoUIprocess.HeartRateUpperLimitViolated -> PO::ICEpoUI.HeartRateUpperLimitViolated
 
Theorem (1213) [serial 1077] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoUIprocess.imp.ui_heartrate_trend:
 PO::ICEpoUIprocess.HeartRateTrend -> PO::ICEpoUI.HeartRateTrend
 
Theorem (1214) [serial 1078] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoUIprocess.imp.ui_spo2derived_lla:
 PO::ICEpoUIprocess.SpO2DerivedLowerLimitAlarm -> PO::ICEpoUI.SpO2DerivedLowerLimitAlarm
 
Theorem (1215) [serial 1079] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoUIprocess.imp.ui_spo2avg:
 PO::ICEpoUIprocess.SpO2Avg -> PO::ICEpoUI.SpO2Avg
 
Theorem (1216) [serial 1080] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoUIprocess.imp.ui_rapiddeclinealarm:
 PO::ICEpoUIprocess.RapidSpO2DeclineAlarm -> PO::ICEpoUI.RapidSpO2DeclineAlarm
 
Theorem (1217) [serial 1081] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoUIprocess.imp.ui_motionartifactalarm:
 PO::ICEpoUIprocess.MotionArtifactAlarm -> PO::ICEpoUI.MotionArtifactAlarm
 
Theorem (1218) [serial 1082] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoUIprocess.imp.ui_spo2trend:
 PO::ICEpoUIprocess.SpO2Trend -> PO::ICEpoUI.SpO2Trend
 
Theorem (1219) [serial 1083] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoAppProcess.imp.ap_heartrate_trend:
 PO::ICEpoApp.HeartRateTrend -> PO::ICEpoAppProcess.HeartRateTrend
 
Theorem (1220) [serial 1084] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoAppProcess.imp.ap_maa:
 PO::ICEpoApp.MotionArtifactAlarm -> PO::ICEpoAppProcess.MotionArtifactAlarm
 
Theorem (1221) [serial 1085] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoAppProcess.imp.ap_spo2derived_lla:
 PO::ICEpoApp.SpO2DerivedLowerLimitAlarm -> PO::ICEpoAppProcess.SpO2DerivedLowerLimitAlarm
 
Theorem (1222) [serial 1086] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoAppProcess.imp.ap_rda:
 PO::ICEpoApp.RapidSpO2DeclineAlarm -> PO::ICEpoAppProcess.RapidSpO2DeclineAlarm
 
Theorem (1223) [serial 1087] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoAppProcess.imp.ap_spo2trend:
 PO::ICEpoApp.SpO2Trend -> PO::ICEpoAppProcess.SpO2Trend
 
Theorem (1224) [serial 1088] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoApp.imp.maa:
 PO::MotionArtifactThread.MotionArtifactAlarm -> PO::ICEpoApp.MotionArtifactAlarm
 
Theorem (1225) [serial 1089] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoApp.imp.avout:
 PO::SpO2AverageThread.SpO2Avg -> PO::ICEpoApp.SpO2Avg
 
Theorem (1226) [serial 1090] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoApp.imp.avso:
 PO::SpO2AverageThread.SpO2Avg -> PO::SupplemetalOxygenThread.SpO2Avg
 
Theorem (1227) [serial 1091] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoApp.imp.soalarm:
 PO::SupplemetalOxygenThread.SpO2DerivedLowerLimitAlarm -> PO::ICEpoApp.SpO2DerivedLowerLimitAlarm
 
Theorem (1228) [serial 1092] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoApp.imp.rdalarm:
 PO::RapidDeclineThread.RapidSpO2DeclineAlarm -> PO::ICEpoApp.RapidSpO2DeclineAlarm
 
Theorem (1231) [serial 1093] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoApp.imp.sptrend:
 PO::SpO2TrendThread.SpO2Trend -> PO::ICEpoApp.SpO2Trend
 
Theorem (1234) [serial 1094] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoApp.imp.hrtr:
 PO::HeartRateTrendThread.HeartRateTrend -> PO::ICEpoApp.HeartRateTrend
 
Theorem (1235) [serial 1095] used for:
  Composition of Subcomponents via Directional Connection PO::ICEpoApp.imp.new_connection2:
 PO::SpO2AverageThread.SpO2Avg -> PO::RapidDeclineThread.AverageSpO2
 


proof duration:  32.4 seconds 
