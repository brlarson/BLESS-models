# mat.ps
push
sort-by-component[MA::MotionArtifactThread.imp]
#MA::MotionArtifactThread.imp
#[serial 1030] <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definitio
make-an
substitute-pre
normalize
tautologies
#[serial 1031] Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
tautologies
#[serial 1032]  <<M(start)>> -> <<M(run)>> for mat0: start-[ ]->run{};
substitute-post
normalize
sub-equals
laws
quant
normalize
tautologies
#[serial 1033]  <<M(run) and x>> A <<M(run)>> for mat1: run-[x]->run{A};
reduce
reduce
normalize
laws
normalize
tautologies
substitute-post
atomic
normalize
laws
quant
tautologies
substitute-both
normalize
tautologies
push
#MA::MotionArtifactThread.imp
#[serial 2104]   normalization of [serial 209
make-an
qtiming
tautologies
#[serial 2106]   normalization of [serial 2097]
replace<=
laws
tautologies
#[serial 2108]   normalization of [serial 2098]
and-over-or-post
laws
normalize
laws
tautologies
#[serial 2110]   normalization of [serial 2099]
alldist^
zeroquantlb
elim-subtract
normalize
laws
normalize
tautologies
#[serial 2112]   normalization of [serial 2100]
contract-uqr
tautologies