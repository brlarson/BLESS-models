#  You chose proof script: /Users/brianlarson/git/BLESS-models/PO-SA/proof script/subscripts/rd.ps
push
sort-by-component[RD::RapidDeclineThread]
#RD::RapidDeclineThread.imp
#[serial 1003] <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definitio
make-an
substitute-pre
normalize
axioms
#[serial 1004] <<M(fill)>> -> <<I>> from invariant I when complete state fill has Assertion <<M(fill)>> in its definition.
substitute-pre
axioms
#[serial 1005] Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
axioms
#[serial 1006] Serban's Theorem:  disjunction of execute conditions leaving execution state check, <<M(check)>> -> <<e1 or e2 or . . . en>>
normalize
laws
axioms
#[serial 1007]  <<M(start)>> A <<M(fill)>> for rdt0: start-[ ]->fill{A};
substitute-post
alldist^
atomic
split-post
axioms
guided-sub-equals[num_samples]
laws
quant
normalize
axioms
#[serial 1008]  <<M(fill) and x>> A <<M(check)>> for rdt1: fill-[x]->check{A};
reduce
reduce
axioms
normalize
atomic
normalize
axioms
substitute-both
normalize
push
#RD::RapidDeclineThread.imp
#[serial 1172] applied wp for assignment [serial 116
make-an
qtiming
axioms
#[serial 1178]   normalization of [serial 1171]
replace-port-value
now
laws
zeroquantlb
elim-subtract
normalize
laws
normalize
elim-subtract
normalize
axioms
#[serial 1187]   normalization of [serial 1182]
replace-qv
axioms
#[serial 1189]   normalization of [serial 1183]
replace-qv
axioms
#[serial 1009]  <<M(check) and x>> A <<M(fill)>> for chk: check-[x]->fill{A};
substitute-both
normalize
alldist^
atomic
axioms
#[serial 1010]  <<M(check) and x>> A <<M(run)>> for chk2: check-[x]->run{A};
substitute-both
normalize
alldist^
atomic
axioms
#[serial 1011]  <<M(check) and x>> -> <<M(halt)>> for chk3: check-[x]->halt{};
axioms