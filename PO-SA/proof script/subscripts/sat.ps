#sat.ps
push
sort-by-component SPA::SpO2AverageThread.imp
#[serial 1009] <<M(fillingWindow)>> -> <<I>> from invariant I when complete state fillingWindow has Assertion <<M(fillingWindow)>> in its definition
make-an
substitute-pre
laws
normalize
axioms
#[serial 1010] <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
substitute-pre
laws
normalize
axioms
#[serial 1011] Serban's Theorem:  disjunction of execute conditions leaving execution state chooseToRun, <<M(chooseToRun)>> -> <<e1 or e2 or . . . en>>
normalize
laws
axioms
#[serial 1012] Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
normalize
replace<=
laws
axioms
#[serial 1013]  <<M(start) and x>> A <<M(fillingWindow)>> for SpAT0:start-[x]->fillingWindow{A};
completesub
laws
alldist^
atomic
split-post
axioms
normalize
guided-sub-equals[lb]
guided-sub-equals[ub]
normalize
laws
quant
axioms
normalize
axioms
#[serial 1014]  <<M(start) and x>> A <<M(fail)>> for SpAT0a:start-[x]->fail{A};
atomic
axioms
#[serial 1015]  <<M(fillingWindow) and x>> A <<M(chooseToRun)>> for SpAT1:fillingWindow-[x]->chooseToRun{A};
reduce
reduce
reduce
atomic
normalize
laws
normalize
axioms
laws
normalize
push
#SPA::SpO2AverageThread.imp
#[serial 1248]   normalization of [serial 1231
make-an
substitute-both
normalize
split-post
axioms
substitute-post
normalize
laws
axioms
#[serial 1255]   normalization of [serial 1242]
split-post
push
#SPA::SpO2AverageThread.imp
#[serial 1313] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1255
make-an
substitute-pre
substitute-pre
substitute-both
laws
normalize
laws
axioms
#[serial 1314] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1255]
substitute-pre
substitute-pre
laws
normalize
axioms
#[serial 1257]   normalization of [serial 1243]
substitute-post
substitute-pre
substitute-pre
substitute-pre
normalize
laws
normalize
substitute-pre
normalize
axioms
#[serial 1282]   normalization of [serial 1272]
substitute-pre
substitute-pre
normalize
substitute-post
normalize
split-post
normalize
qtiming
axioms
#[serial 1284]   normalization of [serial 1273]
substitute-pre
substitute-pre
substitute-pre
normalize
laws
axioms
#[serial 1300]   normalization of [serial 1293]
substitute-pre
substitute-pre
laws
normalize
axioms
#[serial 1016]  <<M(chooseToRun) and x>> A <<M(fillingWindow)>> for SpAT2:chooseToRun-[x]->fillingWindow{A};
completesub
laws
alldist^
atomic
normalize
axioms
#[serial 1017]  <<M(chooseToRun) and x>> A <<M(run)>> for SpAT3:chooseToRun-[x]->run{A};
completesub
laws
normalize
alldist^
atomic
normalize
axioms
#[serial 1018]  <<M(chooseToRun) and x>> A <<M(fail)>> for SpAT3a:chooseToRun-[x]->fail{A};
atomic
axioms
#[serial 1019]  <<M(run) and x>> A <<M(run)>> for SpAt4:run-[x]->run{A};
reduce
reduce
reduce
remove-axioms-post
normalize
laws
normalize
axioms
substitute-both
laws
normalize
push
#SPA::SpO2AverageThread.imp
#[serial 1532]   normalization of [serial 1500
make-an
atomic
normalize
qtiming
sub-equals
qtiming
sub-equals
qtiming
laws
axioms
#[serial 1626]   normalization of [serial 1602]
atomic
axioms
#[serial 1628]   normalization of [serial 1604]
replace<=
normalize
laws
axioms
#[serial 1630]   normalization of [serial 1610]
atomic
normalize
laws
normalize
axioms
#[serial 1632]   normalization of [serial 1611]
atomic
normalize
split-post
axioms
qtiming
axioms
#[serial 1634]   normalization of [serial 1613]
atomic
normalize
laws
normalize
laws
normalize
axioms
#[serial 1636]   normalization of [serial 1614]
qtiming
axioms
#[serial 1638]   normalization of [serial 1615]
atomic
normalize
laws
normalize
axioms
#[serial 1640]   normalization of [serial 1616]
atomic
normalize
axioms
#[serial 1642]   normalization of [serial 1617]
substitute-post
laws
axioms
#[serial 1644]   normalization of [serial 1618]
atomic
replaceNEwithLTorGT
normalize
axioms
now
guided-sub-equals[SpO2Avg]
substitute-pre
substitute-pre
normalize
laws
normalize
guided-sub-equals[totalSpO2]
guided-sub-equals[goodCount]
normalize
substitute-both
normalize
axioms
laws
split-post
axioms
substitute-post
normalize
axioms
substitute-post
normalize
axioms
#[serial 1646]   normalization of [serial 1619]
substitute-pre
substitute-pre
substitute-pre
normalize
laws
normalize
contract-uqr
axioms
#[serial 1648]   normalization of [serial 1620]
substitute-both
substitute-pre
substitute-pre
normalize
laws
normalize
qtiming
axioms
#[serial 1650]   normalization of [serial 1621]
split-post
normalize
substitute-pre
substitute-pre
substitute-pre
normalize
laws
normalize
qtiming
axioms
#[serial 1652]   normalization of [serial 1622]
substitute-pre
substitute-pre
substitute-pre
normalize
laws
normalize
axioms
#[serial 1654]   normalization of [serial 1623]
substitute-post
substitute-post
normalize
alldist^
axioms
#[serial 1020]  <<M(fillingWindow) and x>> -> <<M(halt)>> for SpATstop:fillingWindow-[x]->halt{};
axioms
#[serial 1021]  <<M(run) and x>> -> <<M(halt)>> for SpATstop:run-[x]->halt{};
axioms