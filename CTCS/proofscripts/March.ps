#This file, script.txt, was produced the BLESS Proof Assistant v3.1
#  at Sat Apr 16 01:23:20 AST 2022 by ehsanahmad
#  You chose proof script: /Users/ehsanahmad/git/BLESS-models/CTCS/proofscripts/March.ps
#MovAuth::Controller.impl
#[serial 1003] <<M(CSB)>> -> <<I>> from invariant I when complete state CSB has Assertion <<M(CSB)>> in its definition
make-an
axioms
#[serial 1004] <<M(MFR)>> -> <<I>> from invariant I when complete state MFR has Assertion <<M(MFR)>> in its definition.
axioms
#[serial 1005] <<M(GMA)>> -> <<I>> from invariant I when complete state GMA has Assertion <<M(GMA)>> in its definition.
axioms
#[serial 1006] <<M(SBI)>> -> <<I>> from invariant I when complete state SBI has Assertion <<M(SBI)>> in its definition.
axioms
#[serial 1007] <<M(EBI)>> -> <<I>> from invariant I when complete state EBI has Assertion <<M(EBI)>> in its definition.
axioms
#[serial 1008] Serban's Theorem:  disjunction of execute conditions leaving execution state READY, <<M(READY)>> -> <<e1 or e2 or . . . en>>
axioms
#[serial 1009] Serban's Theorem:  disjunction of execute conditions leaving execution state CMA, <<M(CMA)>> -> <<e1 or e2 or . . . en>>
normalize
laws
axioms
#[serial 1010] Serban's Theorem:  disjunction of execute conditions leaving execution state RETRY, <<M(RETRY)>> -> <<e1 or e2 or . . . en>>
axioms
#[serial 1011] Serban's Theorem:  disjunction of execute conditions leaving execution state CMF, <<M(CMF)>> -> <<e1 or e2 or . . . en>>
normalize
DeMorgan
normalize
laws
cnf
normalize
laws
normalize
axioms
#[serial 1012]  <<M(READY)>> A <<M(GMA)>> for T0_Go:READY-[ ]->GMA{A};
reduce
normalize
alldist^
axioms
atomic
axioms
normalize
axioms
#[serial 1013]  <<M(GMA) and x>> A <<M(CMA)>> for T1_MA_Check:GMA-[x]->CMA{A};
reduce
normalize
atomic
laws
normalize
axioms
#[serial 1014]  <<M(CMA) and x>> A <<M(MFR)>> for T2_MA_Ok:CMA-[x]->MFR{A};
reduce
normalize
laws
reduce
push
make-an
#MovAuth::Controller.impl
#[serial 1120]   normalization of [serial 1114]
 
axioms
#[serial 1134]   <<P>> -> <<B1 or B2 or ... or Bn>> in alternative for [serial 1122]
replace<=
normalize
laws
axioms
#[serial 1135]   <<P and B0>> S0 <<Q>> in alternative for [serial 1122]
reduce
reduce
normalize
push
make-an
#MovAuth::Controller.impl
#[serial 1146] <<Q1>> -> <<Q>> in sequential composition for [serial 1144]
 
split-post
axioms
normalize
axioms
#[serial 1147] <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1144]
atomic
normalize
laws
axioms
#[serial 1148] <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1144]
atomic
normalize
laws
axioms
#[serial 1150]   normalization of [serial 1145]
laws
axioms
#[serial 1136]   <<P and B1>> -> <<P1>> in alternative for [serial 1122]
normalize
laws
axioms
#[serial 1137]   <<P1>> S1 <<Q1>> in alternative for [serial 1122]
atomic
axioms
#[serial 1138]   <<Q1>> -> <<Q>> in alternative  for [serial 1122]
split-post
axioms
normalize
axioms
#[serial 1124]   normalization of [serial 1116]
substitute-both
normalize
alldist^
atomic
axioms
#[serial 1129] Associativity: (b.c).a = a.b.c [serial 1118]
substitute-post
normalize
split-post
normalize
axioms
#[serial 1015]  <<M(MFR) and x>> A <<M(CMF)>> for T3_Move_Check:MFR-[x]->CMF{A};
reduce
push
#MovAuth::Controller.impl
#[serial 1213] <<P>> -> <<P1>> in sequential composition for [serial 1015
make-an
axioms
#[serial 1214] <<Q1>> -> <<Q>> in sequential composition for [serial 1015]
normalize
and-over-or-pre
laws
normalize
axioms
#[serial 1215] <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1015]
reduce
reduce
normalize
laws
axioms
atomic
normalize
laws
normalize
axioms
#[serial 1216] <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1015]
reduce
normalize
laws
axioms
atomic
laws
axioms
normalize
axioms
#[serial 1016]  <<M(CMF) and x>> A <<M(SBI)>> for T4_SBI_Point:CMF-[x]->SBI{A};
substitute-both
normalize
laws
alldist^
reduce
laws
normalize
atomic
axioms
substitute-post
normalize
axioms
laws
axioms
#[serial 1017]  <<M(CMF) and x>> A <<M(MFR)>> for T5_Move_Ok:CMF-[x]->MFR{A};
reduce
reduce
push
#MovAuth::Controller.impl
#[serial 1341] as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1017
make-an
normalize
axioms
#[serial 1342] as <<post>> -> <<Q>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1017]
normalize
and-over-or-pre
normalize
laws
axioms
#[serial 1344]   <<P>> -> <<B1 or B2 or ... or Bn>> in alternative for [serial 1343]
substitute-pre
normalize
laws
axioms
#[serial 1345]   <<P and B0>> S0 <<Q>> in alternative for [serial 1343]
reduce
reduce
normalize
laws
normalize
axioms
push
make-an
#[serial 1375]   normalization of [serial 1367]
atomic
normalize
axioms
#[serial 1377]   normalization of [serial 1368]
atomic