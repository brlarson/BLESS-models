push
sort-by-component[IoMTwin::Supervise_PCA_Thread.echo]
#IoMTwin::Supervise_PCA_Thread.echo
#[serial 1027] <<M(check_echo)>> -> <<I>> from invariant I when complete state check_echo has Assertion <<M(check_echo)>> in its definitio
make-an
substitute-pre
normalize
tautologies
#[serial 1028] <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
substitute-pre
normalize
tautologies
#[serial 1029] Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
tautologies
#[serial 1030]  <<M(start)>> -> <<M(run)>> for go: start-[ ]->run{};
tautologies
#[serial 1031]  <<M(run) and x>> A <<M(check_echo)>> for got_po: run-[x]->check_echo{A};
reduce
normalize
push
#IoMTwin::Supervise_PCA_Thread.echo
#[serial 1087] <<Q3 and P4>> S4 <<Q4>> in sequential composition for [serial 103
make-an
atomic
normalize
tautologies
substitute-pre
substitute-pre
normalize
tautologies
#[serial 1089]   normalization of [serial 1083]
substitute-pre
laws
tautologies
#[serial 1091]   normalization of [serial 1084]
atomic
normalize
laws
tautologies
#[serial 1093]   normalization of [serial 1085]
atomic
tautologies
laws
split-post
tautologies
substitute-post
normalize
tautologies
#[serial 1095]   normalization of [serial 1086]
substitute-post
substitute-post
atomic
substitute-pre
normalize
split-post
tautologies
guided-sub-equals[po_alarm_active]
guided-sub-equals[rm_alarm_active]
laws
normalize
tautologies
#[serial 1032]  <<M(run) and x>> A <<M(check_echo)>> for got_rm: run-[x]->check_echo{A};
normalize
reduce
push
#IoMTwin::Supervise_PCA_Thread.echo
#[serial 1138] <<P>> -> <<P1>> in sequential composition for [serial 113
make-an
substitute-pre
laws
tautologies
#[serial 1139] <<P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1137]
atomic
normalize
laws
tautologies
#[serial 1140] <<Q1 and P2>> S2 <<Q2 and P3>> in sequential composition for [serial 1137]
atomic
tautologies
split-post
laws
tautologies
substitute-post
normalize
tautologies
#[serial 1141] <<Q2 and P3>> S3 <<Q3 and P4>> in sequential composition for [serial 1137]
substitute-post
substitute-post
atomic
substitute-pre
normalize
split-post
tautologies
guided-sub-equals[rm_alarm_active]
guided-sub-equals[po_alarm_active]
laws
normalize
tautologies
#[serial 1142] <<Q3 and P4>> S4 <<Q4>> in sequential composition for [serial 1137]
atomic
normalize
tautologies
substitute-pre
substitute-pre
normalize
tautologies
#[serial 1033]  <<M(check_echo) and x>> A <<M(run)>> for got_echo: check_echo-[x]->run{A};
reduce
reduce
reduce
reduce
tautologies
normalize
laws
push
#IoMTwin::Supervise_PCA_Thread.echo
#[serial 1202] laws applied to [serial 119
make-an
normalize
now
normalize
tautologies
#[serial 1203] laws applied to [serial 1197]
tautologies
#[serial 1204] laws applied to [serial 1199]
atomic
tautologies
#[serial 1205] laws applied to [serial 1201]
atomic
normalize
tautologies
laws
normalize
tautologies
#[serial 1034]  <<M(check_echo) and x>> A <<M(run)>> for late_echo: check_echo-[x]->run{A};
atomic
now
normalize
laws
tautologies
normalize
laws
tautologies