#This file, script.txt, was produced the BLESS Proof Assistant v3.2.2
#  at Sat Jan 27 21:39:50 CST 2024 by brianlarson
#  You chose proof script: /Users/brianlarson/git3/BLESS-models/IoMT/proofscripts/proofscript
push
sort-by-component[IoMT::Supervise_PCA_Thread.simple]
#IoMT::cc_app.impl
#[serial 1003] <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definitio
make-an
substitute-pre
normalize
axioms
#[serial 1004] Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
axioms
#[serial 1005] Serban's Theorem:  disjunction of execute conditions leaving execution state check, <<M(check)>> -> <<e1 or e2 or . . . en>>
and-over-or-post
laws
normalize
laws
tautologies
#[serial 1006]  <<M(start)>> -> <<M(run)>> for go: start-[ ]->run{};
tautologies
#[serial 1007]  <<M(run) and x>> -> <<M(check)>> for op: run-[x]->check{};
tautologies
#[serial 1008]  <<M(check) and x>> A <<M(run)>> for alarm: check-[x]->run{A};
reduce
atomic
now
laws
normalize
laws
tautologies
#[serial 1009]  <<M(check) and x>> A <<M(run)>> for ok: check-[x]->run{A};
reduce
atomic
normalize
laws
tautologies
DeMorgan
normalize
now
tautologies
#[serial 1010] Conjunction of Subcomponents' Invariants imply SysIoMT.impl's Invariant
sub-equals-and
substitute-post
substitute-both
normalize
laws
normalize
tautologies
#[serial 1011] Subcomponent's Invariant implies Control_Application.impl's Invariant
normalize
tautologies