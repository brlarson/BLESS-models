#This file, script.txt, was produced the BLESS Proof Assistant v3.2.3
#  at Fri Feb 16 15:56:38 AST 2024 by ehsanahmad
push
sort-by-component-name[IoMTwin::Respiration_Monitor_Thread.impl]
#IoMTwin::Respiration_Monitor_Thread.impl
#[serial 1003] <<M(check_echo)>> -> <<I>> from invariant I when complete state check_echo has Assertion <<M(check_echo)>> in its definitio
make-an
tautologies
#[serial 1004] <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definition.
tautologies
#[serial 1005] Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
tautologies
#[serial 1006]  <<M(start)>> -> <<M(run)>> for go: start-[ ]->run{};
tautologies
#[serial 1007]  <<M(run) and x>> A <<M(check_echo)>> for got_rp: run-[x]->check_echo{A};
reduce
reduce
reduce
reduce
normalize
laws
tautologies
push
#  You chose proof script: /
#IoMTwin::Respiration_Monitor_Thread.impl
#[serial 1085]   normalization of [serial 106
make-an
atomic
laws
normalize
tautologies
#[serial 1087]   normalization of [serial 1071]
replace<=
normalize
laws
tautologies
#[serial 1093]   normalization of [serial 1078]
substitute-post
substitute-post
atomic
substitute-pre
normalize
laws
guided-sub-equals[MINIMUM_RESPIRATION_RATE]
guided-sub-equals[RESPIRATION_RATE]
replace<=
laws
laws
normalize
tautologies
#[serial 1101]   normalization of [serial 1082]
