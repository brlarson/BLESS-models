This file, proof.txt, was produced the BLESS Proof Assistant v3.2.1
  at Thu Dec 07 11:06:04 CST 2023 by brianlarson

Theorem (1)                               [serial 1022] 
P [61] << exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t or p@t  >>
S [61] ->
Q [27] << exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t or p@t  >>
Why created:    normalization of [serial 1020]
Solved by:  Identity (id):  P->P is tautology


Theorem (2)                               [serial 1020] 
P [61] << exists t ~ time 
   in ( now - lrl ) .. now 
   that ( n@t or p@t )  >>
S [61] ->
Q [27] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that ( n@t or p@t )  ) >>
Why created:  Substituted assertions' predicates for labels in postconditions [serial 1003]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 1:
Theorem (1) [serial 1022] used for:
    normalization of [serial 1020] 


Theorem (3)                               [serial 1003] 
P [61] << exists t ~ time 
   in ( now - lrl ) .. now 
   that ( n@t or p@t )  >>
S [61] ->
Q [27] << LRL() >>
Why created:  <<I>> -> BLESS::Invariant of thread VVI.i
Solved by:  Substitution of Assertion Labels
and theorem 2:
Theorem (2) [serial 1020] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1003] 


Theorem (4)                               [serial 1028] 
P [78] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  )
  and p@last_beat >>
S [61] ->
Q [61] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  ) or ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  ) >>
Why created:  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)  [serial 1026]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (5)                               [serial 1026] 
P [78] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  )
  and p@last_beat >>
S [61] ->
Q [61] << exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t or p@t  >>
Why created:    normalization of [serial 1024]
Solved by:  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 4:
Theorem (4) [serial 1028] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)  [serial 1026] 


Theorem (6)                               [serial 1024] 
P [78] << ( p@last_beat
  and ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  ) ) >>
S [61] ->
Q [61] << exists t ~ time 
   in ( now - lrl ) .. now 
   that ( n@t or p@t )  >>
Why created:  Substituted assertions' predicates for labels in preconditions [serial 1004]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 5:
Theorem (5) [serial 1026] used for:
    normalization of [serial 1024] 


Theorem (7)                               [serial 1004] 
P [78] << PACE(now) >>
S [61] ->
Q [61] << exists t ~ time 
   in ( now - lrl ) .. now 
   that ( n@t or p@t )  >>
Why created:  <<M(pace)>> -> <<I>> from invariant I when complete state pace has Assertion <<M(pace)>> in its definition.
Solved by:  Substitution of Assertion Labels
and theorem 6:
Theorem (6) [serial 1024] used for:
  Substituted assertions' predicates for labels in preconditions [serial 1004] 


Theorem (8)                               [serial 1033] 
P [82] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  )
  and n@last_beat >>
S [61] ->
Q [61] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  ) or ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  ) >>
Why created:  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)  [serial 1031]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (9)                               [serial 1031] 
P [82] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  )
  and n@last_beat >>
S [61] ->
Q [61] << exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t or p@t  >>
Why created:    normalization of [serial 1029]
Solved by:  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 8:
Theorem (8) [serial 1033] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)  [serial 1031] 


Theorem (10)                               [serial 1029] 
P [82] << ( n@last_beat
  and ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  ) ) >>
S [61] ->
Q [61] << exists t ~ time 
   in ( now - lrl ) .. now 
   that ( n@t or p@t )  >>
Why created:  Substituted assertions' predicates for labels in preconditions [serial 1005]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 9:
Theorem (9) [serial 1031] used for:
    normalization of [serial 1029] 


Theorem (11)                               [serial 1005] 
P [82] << SENSE(now) >>
S [61] ->
Q [61] << exists t ~ time 
   in ( now - lrl ) .. now 
   that ( n@t or p@t )  >>
Why created:  <<M(sense)>> -> <<I>> from invariant I when complete state sense has Assertion <<M(sense)>> in its definition.
Solved by:  Substitution of Assertion Labels
and theorem 10:
Theorem (10) [serial 1029] used for:
  Substituted assertions' predicates for labels in preconditions [serial 1005] 


Theorem (12)                               [serial 1006] 
P [74] << now = 0.0 s >>
S [74] ->
Q [74] << true >>
Why created:  Serban's Theorem:  disjunction of execute conditions leaving execution state power_on, <<M(power_on)>> -> <<e1 or e2 or . . . en>>
Solved by:  True Conclusion Schema (tc): P->true


Theorem (13)                               [serial 1038] 
P [85] << s@now
  and PACE(now) >>
S [85] ->
Q [85] << true >>
Why created:  Law of Excluded Middle: P or not P is tautology [serial 1037]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (14)                               [serial 1037] 
P [85] << s@now
  and PACE(now) >>
S [85] ->
Q [85] << now - last_beat < vrp@now or ( not ( now - last_beat < vrp@now ) ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1035]
Solved by:  Law of Excluded Middle: P or not P is tautology
and theorem 13:
Theorem (13) [serial 1038] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1037] 


Theorem (15)                               [serial 1035] 
P [85] << s@now
  and PACE(now) >>
S [85] ->
Q [85] << now - last_beat < vrp@now or vrp@now <= now - last_beat >>
Why created:    normalization of [serial 1007]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 14:
Theorem (14) [serial 1037] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1035] 


Theorem (16)                               [serial 1007] 
P [85] << s@now
  and PACE(now) >>
S [85] ->
Q [85] << ( now - last_beat < vrp@now ) or ( now - last_beat >= vrp@now ) >>
Why created:  Serban's Theorem:  disjunction of execute conditions leaving execution state check_pace_vrp, <<M(check_pace_vrp)>> -> <<e1 or e2 or . . . en>>
Solved by:  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 15:
Theorem (15) [serial 1035] used for:
    normalization of [serial 1007] 


Theorem (17)                               [serial 1043] 
P [88] << s@now
  and SENSE(now) >>
S [88] ->
Q [88] << true >>
Why created:  Law of Excluded Middle: P or not P is tautology [serial 1042]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (18)                               [serial 1042] 
P [88] << s@now
  and SENSE(now) >>
S [88] ->
Q [88] << now - last_beat < vrp@now or ( not ( now - last_beat < vrp@now ) ) >>
Why created:  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1040]
Solved by:  Law of Excluded Middle: P or not P is tautology
and theorem 17:
Theorem (17) [serial 1043] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1042] 


Theorem (19)                               [serial 1040] 
P [88] << s@now
  and SENSE(now) >>
S [88] ->
Q [88] << now - last_beat < vrp@now or vrp@now <= now - last_beat >>
Why created:    normalization of [serial 1008]
Solved by:  At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 18:
Theorem (18) [serial 1042] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a)  [serial 1040] 


Theorem (20)                               [serial 1008] 
P [88] << s@now
  and SENSE(now) >>
S [88] ->
Q [88] << ( now - last_beat < vrp@now ) or ( now - last_beat >= vrp@now ) >>
Why created:  Serban's Theorem:  disjunction of execute conditions leaving execution state check_sense_vrp, <<M(check_sense_vrp)>> -> <<e1 or e2 or . . . en>>
Solved by:  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 19:
Theorem (19) [serial 1040] used for:
    normalization of [serial 1008] 


Theorem (21)                               [serial 1044] 
P [74] << now = 0.0 s >>
S [95] ->
Q [95] << now = 0.0 s >>
Why created:  P -> P1 in concurrent composition for [serial 1009]
Solved by:  Identity (id):  P->P is tautology


Theorem (22)                               [serial 1063] 
P [95] << last_beat = now
  and n@now >>
S [96] ->
Q [56] << n@now >>
Why created:  replace exististential quantification with predicate [serial 1059]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (23)                               [serial 1059] 
P [95] << last_beat = now
  and n@now >>
S [96] ->
Q [56] << exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  >>
Why created:    normalization of [serial 1056]
Solved by:  Guided Substitution of Equals
  Introduction of Existential Quantification
and theorem 22:
Theorem (22) [serial 1063] used for:
  replace exististential quantification with predicate [serial 1059] 


Theorem (24)                               [serial 1056] 
P [95] << last_beat = now
  and n@now >>
S [96] ->
Q [56] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  ) >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1054]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 23:
Theorem (23) [serial 1059] used for:
    normalization of [serial 1056] 


Theorem (25)                               [serial 1062] 
P [95] << last_beat = now
  and n@now >>
S [96] ->
Q [55] << n@now >>
Why created:  Guided Substitution of Equals 
 replacing "last_beat" with its = "now" in its postcondition [serial 1057]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (26)                               [serial 1057] 
P [95] << last_beat = now
  and n@now >>
S [96] ->
Q [55] << n@last_beat >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1054]
Solved by:  Guided Substitution of Equals
and theorem 25:
Theorem (25) [serial 1062] used for:
  Guided Substitution of Equals 
 replacing "last_beat" with its = "now" in its postcondition [serial 1057] 


Theorem (27)                               [serial 1054] 
P [95] << last_beat = now
  and n@now >>
S [96] ->
Q [82] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  )
  and n@last_beat >>
Why created:    normalization of [serial 1052]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 24 26:
Theorem (24) [serial 1056] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1054] 
Theorem (26) [serial 1057] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1054] 


Theorem (28)                               [serial 1052] 
P [95] << n@now
  and ( last_beat = now ) >>
S [96] ->
Q [82] << ( n@last_beat
  and ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  ) ) >>
Why created:  Substituted assertions' predicates for labels in postconditions [serial 1045]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 27:
Theorem (27) [serial 1054] used for:
    normalization of [serial 1052] 


Theorem (29)                               [serial 1045] 
P [95] << n@now
  and ( last_beat = now ) >>
S [96] ->
Q [82] << SENSE(now) >>
Why created:  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1009]
Solved by:  Substitution of Assertion Labels
and theorem 28:
Theorem (28) [serial 1052] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1045] 


Theorem (30)                               [serial 1048] 
P [95] << now = 0.0 s >>
S [96] ->
Q [22] << ( now = 0.0 s ) or VS() >>
Why created:  applied port output <<pre>> -> <<M[n]>> [serial 1046]
Solved by:  Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (31)                               [serial 1083] 
P [96] << ( 0.0 s = now or VS()@now )
  and 0.0 s = now >>
S [96] ->
Q [96] << 0.0 s = now or VS()@now >>
Why created:    normalization of [serial 1081]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (32)                               [serial 1081] 
P [96] << ( 0.0 s = now or VS()@now )
  and 0.0 s = now >>
S [96] ->
Q [96] << ( ( 0.0 s )@now = ( now )@now ) or VS()@now >>
Why created:  Distribute @  [serial 1079]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Constants are always the same
  Associativity: a.(b.c) = a.b.c
and theorem 31:
Theorem (31) [serial 1083] used for:
    normalization of [serial 1081] 


Theorem (33)                               [serial 1079] 
P [96] << ( 0.0 s = now or VS()@now )
  and 0.0 s = now >>
S [96] ->
Q [96] << ( 0.0 s = now )@now or VS()@now >>
Why created:    normalization of [serial 1077]
Solved by:  Distribute @
and theorem 32:
Theorem (32) [serial 1081] used for:
  Distribute @  [serial 1079] 


Theorem (34)                               [serial 1077] 
P [96] << ( 0.0 s = now or VS()@now )
  and 0.0 s = now >>
S [96] ->
Q [96] << ( ( 0.0 s = now )@now or ( VS() )@now ) >>
Why created:  Distribute @  [serial 1075]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 33:
Theorem (33) [serial 1079] used for:
    normalization of [serial 1077] 


Theorem (35)                               [serial 1075] 
P [96] << ( 0.0 s = now or VS()@now )
  and 0.0 s = now >>
S [96] ->
Q [96] << ( 0.0 s = now or VS() )@now >>
Why created:    normalization of [serial 1073]
Solved by:  Distribute @
and theorem 34:
Theorem (34) [serial 1077] used for:
  Distribute @  [serial 1075] 


Theorem (36)                               [serial 1073] 
P [96] << ( 0.0 s = now or VS()@now )
  and 0.0 s = now >>
S [96] ->
Q [96] << ( ( now = 0.0 s ) or VS() )@now >>
Why created:  Replacing port names with BLESS::Assertion properties  [serial 1070]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 35:
Theorem (35) [serial 1075] used for:
    normalization of [serial 1073] 


Theorem (37)                               [serial 1070] 
P [96] << ( 0.0 s = now or VS()@now )
  and 0.0 s = now >>
S [96] ->
Q [96] << n@now >>
Why created:    normalization of [serial 1068]
Solved by:  Replacing port names with BLESS::Assertion properties
and theorem 36:
Theorem (36) [serial 1073] used for:
  Replacing port names with BLESS::Assertion properties  [serial 1070] 


Theorem (38)                               [serial 1068] 
P [96] << ( ( ( 0.0 s )@now = ( now )@now ) or VS()@now )
  and 0.0 s = now >>
S [96] ->
Q [96] << n@now >>
Why created:  Distribute @  [serial 1066]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Constants are always the same
  Associativity: a.(b.c) = a.b.c
and theorem 37:
Theorem (37) [serial 1070] used for:
    normalization of [serial 1068] 


Theorem (39)                               [serial 1066] 
P [96] << ( ( 0.0 s = now )@now or VS()@now )
  and 0.0 s = now >>
S [96] ->
Q [96] << n@now >>
Why created:    normalization of [serial 1064]
Solved by:  Distribute @
and theorem 38:
Theorem (38) [serial 1068] used for:
  Distribute @  [serial 1066] 


Theorem (40)                               [serial 1064] 
P [96] << ( now = 0.0 s )
  and ( ( now = 0.0 s )@now or ( VS() )@now ) >>
S [96] ->
Q [96] << n@now >>
Why created:  Distribute @  [serial 1049]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 39:
Theorem (39) [serial 1066] used for:
    normalization of [serial 1064] 


Theorem (41)                               [serial 1049] 
P [96] << ( now = 0.0 s )
  and ( ( now = 0.0 s ) or VS() )@now >>
S [96] ->
Q [96] << n@now >>
Why created:  applied port output <<pre and M[n]@now>> -> <<post>> [serial 1046]
Solved by:  Distribute @
and theorem 40:
Theorem (40) [serial 1064] used for:
  Distribute @  [serial 1049] 


Theorem (42)                               [serial 1046] 
P [95] << now = 0.0 s >>
S [96] n!
Q [96] << n@now >>
Why created:  <<P1>> S1 <<Q1>> in concurrent composition for [serial 1009]
Solved by:  Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 30 41:
Theorem (30) [serial 1048] used for:
  applied port output <<pre>> -> <<M[n]>> [serial 1046] 
Theorem (41) [serial 1049] used for:
  applied port output <<pre and M[n]@now>> -> <<post>> [serial 1046] 


Theorem (43)                               [serial 1051] 
P [74] << now = 0.0 s >>
S [98] ->
Q [99] << true >>
Why created:  Equality Law (idistr):  a=a <-> true [serial 1050]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (44)                               [serial 1050] 
P [74] << now = 0.0 s >>
S [98] ->
Q [99] << now = now >>
Why created:  applied wp for assignment [serial 1047]
Solved by:  Equality Law (idistr):  a=a <-> true
and theorem 43:
Theorem (43) [serial 1051] used for:
  Equality Law (idistr):  a=a <-> true [serial 1050] 


Theorem (45)                               [serial 1047] 
P [74] << now = 0.0 s >>
S [98] last_beat := now
Q [99] << last_beat = now >>
Why created:  <<P>> S2 <<Q2>> in concurrent composition for [serial 1009]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 44:
Theorem (44) [serial 1050] used for:
  applied wp for assignment [serial 1047] 


Theorem (46)                               [serial 1009] 
P [74] << now = 0.0 s >>
S [95]   << now = 0.0 s >>
  n!
  << n@now >>
  &
  last_beat := now
  << last_beat = now >> 
Q [82] << SENSE(now) >>
Why created:   <<M(power_on)>> A <<M(sense)>> for T1_POWER_ON: power_on-[ ]->sense{A};
Solved by:  Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>>
and theorems 21 29 42 45:
Theorem (21) [serial 1044] used for:
  P -> P1 in concurrent composition for [serial 1009] 
Theorem (29) [serial 1045] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1009] 
Theorem (42) [serial 1046] used for:
  <<P1>> S1 <<Q1>> in concurrent composition for [serial 1009] 
Theorem (45) [serial 1047] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1009] 


Theorem (47)                               [serial 1087] 
P [103] << h@now
  and PACE(now)
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  ) >>
S [102] ->
Q [89] << true >>
Why created:    normalization of [serial 1010]
Solved by:  True Conclusion Schema (tc): P->true


Theorem (48)                               [serial 1010] 
P [103] << ( PACE(now) )
  and ( h@now )
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  ) >>
S [102] ->
Q [89] << true >>
Why created:   <<M(pace) and x>> -> <<M(off)>> for T2_STOP_pace: pace-[x]->off{};
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 47:
Theorem (47) [serial 1087] used for:
    normalization of [serial 1010] 


Theorem (49)                               [serial 1011] 
P [106] << ( SENSE(now) )
  and ( h@now )
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  ) >>
S [105] ->
Q [89] << true >>
Why created:   <<M(sense) and x>> -> <<M(off)>> for T2_STOP_sense: sense-[x]->off{};
Solved by:  True Conclusion Schema (tc): P->true


Theorem (50)                               [serial 1131] 
P [109] << ( n or p )@( now - lrl )
  and PACE(now)
  and not ( exists t ~ time 
   in ( now - lrl ) ,, now 
   that ( n or p )@t  )
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  ) >>
S [109] ->
Q [110] << ( n or p )@( now - lrl )
  and not ( exists t ~ time 
   in ( now - lrl ) ,, now 
   that ( n or p )@t  ) >>
Why created:    normalization of [serial 1129]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (51)                               [serial 1129] 
P [109] << ( n or p )@( now - lrl )
  and PACE(now)
  and not ( exists t ~ time 
   in ( now - lrl ) ,, now 
   that ( n or p )@t  )
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  ) >>
S [109] ->
Q [110] << ( ( n or p )@( now - lrl )
  and not ( exists t ~ time 
   in ( now - lrl ) ,, now 
   that ( n or p )@t  ) ) >>
Why created:  Substituted assertions' predicates for labels in postconditions [serial 1110]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 50:
Theorem (50) [serial 1131] used for:
    normalization of [serial 1129] 


Theorem (52)                               [serial 1110] 
P [109] << ( n or p )@( now - lrl )
  and PACE(now)
  and not ( exists t ~ time 
   in ( now - lrl ) ,, now 
   that ( n or p )@t  )
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  ) >>
S [109] ->
Q [110] << VP() >>
Why created:    normalization of [serial 1103]
Solved by:  Substitution of Assertion Labels
and theorem 51:
Theorem (51) [serial 1129] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1110] 


Theorem (53)                               [serial 1103] 
P [109] << ( n or p )@( now - lrl )
  and not ( exists t ~ time 
   in ( now - lrl ) ,, now 
   that ( n or p )@t  )
  and PACE(now)
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  ) >>
S [109] ->
Q [110] << VP() >>
Why created:  Associativity: a.(b.c) = a.b.c [serial 1094]
Solved by:  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 52:
Theorem (52) [serial 1110] used for:
    normalization of [serial 1103] 


Theorem (54)                               [serial 1094] 
P [109] << ( ( n or p )@( now - lrl )
  and not ( exists t ~ time 
   in ( now - lrl ) ,, now 
   that ( n or p )@t  ) )
  and PACE(now)
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  ) >>
S [109] ->
Q [110] << VP() >>
Why created:    normalization of [serial 1089]
Solved by:  Associativity: a.(b.c) = a.b.c
and theorem 53:
Theorem (53) [serial 1103] used for:
  Associativity: a.(b.c) = a.b.c [serial 1094] 


Theorem (55)                               [serial 1089] 
P [109] << ( PACE(now) )
  and ( ( n or p )@( now - lrl )
  and not ( exists t ~ time 
   in ( now - lrl ) ,, now 
   that ( n or p )@t  ) )
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  ) >>
S [109] ->
Q [110] << VP() >>
Why created:  <<P>> -> <<P1>> in sequential composition for [serial 1012]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 54:
Theorem (54) [serial 1094] used for:
    normalization of [serial 1089] 


Theorem (56)                               [serial 1125] 
P [115] << last_beat = now
  and p@now >>
S [78] ->
Q [51] << p@now >>
Why created:    normalization of [serial 1122]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (57)                               [serial 1122] 
P [115] << last_beat = now
  and p@now >>
S [78] ->
Q [51] << ( p@now ) >>
Why created:  replace exististential quantification with predicate [serial 1120]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 56:
Theorem (56) [serial 1125] used for:
    normalization of [serial 1122] 


Theorem (58)                               [serial 1120] 
P [115] << last_beat = now
  and p@now >>
S [78] ->
Q [51] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  ) >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1118]
Solved by:  Introduction of Existential Quantification
and theorem 57:
Theorem (57) [serial 1122] used for:
  replace exististential quantification with predicate [serial 1120] 


Theorem (59)                               [serial 1127] 
P [115] << last_beat = now
  and p@now >>
S [78] ->
Q [50] << p@now >>
Why created:  Guided Substitution of Equals 
 replacing "last_beat" with its = "now" in its postcondition [serial 1121]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (60)                               [serial 1121] 
P [115] << last_beat = now
  and p@now >>
S [78] ->
Q [50] << p@last_beat >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1118]
Solved by:  Guided Substitution of Equals
and theorem 59:
Theorem (59) [serial 1127] used for:
  Guided Substitution of Equals 
 replacing "last_beat" with its = "now" in its postcondition [serial 1121] 


Theorem (61)                               [serial 1118] 
P [115] << last_beat = now
  and p@now >>
S [78] ->
Q [78] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  )
  and p@last_beat >>
Why created:    normalization of [serial 1116]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 58 60:
Theorem (58) [serial 1120] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1118] 
Theorem (60) [serial 1121] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1118] 


Theorem (62)                               [serial 1116] 
P [115] << last_beat = now
  and p@now >>
S [78] ->
Q [78] << ( p@last_beat
  and ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  ) ) >>
Why created:  Substituted assertions' predicates for labels in postconditions [serial 1090]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 61:
Theorem (61) [serial 1118] used for:
    normalization of [serial 1116] 


Theorem (63)                               [serial 1090] 
P [115] << last_beat = now
  and p@now >>
S [78] ->
Q [78] << PACE(now) >>
Why created:  <<Q2>> -> <<Q>> in sequential composition for [serial 1012]
Solved by:  Substitution of Assertion Labels
and theorem 62:
Theorem (62) [serial 1116] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1090] 


Theorem (64)                               [serial 1099] 
P [110] << VP() >>
S [111] ->
Q [20] << VP() >>
Why created:  applied port output <<pre>> -> <<M[p]>> [serial 1091]
Solved by:  Identity (id):  P->P is tautology


Theorem (65)                               [serial 1128] 
P [111] << VP()@now
  and VP() >>
S [111] ->
Q [112] << VP()@now >>
Why created:  Replacing port names with BLESS::Assertion properties  [serial 1108]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (66)                               [serial 1108] 
P [111] << VP()@now
  and VP() >>
S [111] ->
Q [112] << p@now >>
Why created:    normalization of [serial 1100]
Solved by:  Replacing port names with BLESS::Assertion properties
and theorem 65:
Theorem (65) [serial 1128] used for:
  Replacing port names with BLESS::Assertion properties  [serial 1108] 


Theorem (67)                               [serial 1100] 
P [111] << ( VP() )
  and VP()@now >>
S [111] ->
Q [112] << p@now >>
Why created:  applied port output <<pre and M[p]@now>> -> <<post>> [serial 1091]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 66:
Theorem (66) [serial 1108] used for:
    normalization of [serial 1100] 


Theorem (68)                               [serial 1091] 
P [110] << VP() >>
S [111] p!
Q [112] << p@now >>
Why created:  <<P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1012]
Solved by:  Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 64 67:
Theorem (64) [serial 1099] used for:
  applied port output <<pre>> -> <<M[p]>> [serial 1091] 
Theorem (67) [serial 1100] used for:
  applied port output <<pre and M[p]@now>> -> <<post>> [serial 1091] 


Theorem (69)                               [serial 1112] 
P [112] << p@now >>
S [114] ->
Q [115] << p@now >>
Why created:    normalization of [serial 1104]
Solved by:  Identity (id):  P->P is tautology


Theorem (70)                               [serial 1104] 
P [112] << p@now >>
S [114] ->
Q [115] << ( p@now ) >>
Why created:  Law of And-Simplification:  P and true is P [serial 1102]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 69:
Theorem (69) [serial 1112] used for:
    normalization of [serial 1104] 


Theorem (71)                               [serial 1102] 
P [112] << p@now >>
S [114] ->
Q [115] << true
  and p@now >>
Why created:  Equality Law (idistr):  a=a <-> true [serial 1101]
Solved by:  Law of And-Simplification:  P and true is P
and theorem 70:
Theorem (70) [serial 1104] used for:
  Law of And-Simplification:  P and true is P [serial 1102] 


Theorem (72)                               [serial 1101] 
P [112] << p@now >>
S [114] ->
Q [115] << now = now
  and p@now >>
Why created:  applied wp for assignment [serial 1092]
Solved by:  Equality Law (idistr):  a=a <-> true
and theorem 71:
Theorem (71) [serial 1102] used for:
  Equality Law (idistr):  a=a <-> true [serial 1101] 


Theorem (73)                               [serial 1092] 
P [112] << p@now >>
S [114] last_beat := now
Q [115] << last_beat = now
  and p@now >>
Why created:  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 1012]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 72:
Theorem (72) [serial 1101] used for:
  applied wp for assignment [serial 1092] 


Theorem (74)                               [serial 1012] 
P [109] << ( PACE(now) )
  and ( ( n or p )@( now - lrl )
  and not ( exists t ~ time 
   in ( now - lrl ) ,, now 
   that ( n or p )@t  ) )
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  ) >>
S [110]   << VP() >>
  p!
  << p@now >>
  ;
  last_beat := now
  << last_beat = now
    and p@now >> 
Q [78] << PACE(now) >>
Why created:   <<M(pace) and x>> A <<M(pace)>> for T3_PACE_LRL_AFTER_VP: pace-[x]->pace{A};
Solved by:  Sequential Composition Rule:
   <<P1>> S1 <<Q1 and P2>>
   <<Q1 and P2>> S2 <<Q2 and P3>>
   . . .
   <<Qk-1 and Pk>> Sk <<Qk>>
   P=>P1, Qk=>Q
   _____________________________________________
   <<P>> S <<Q>>
   where S is <<P1>> S1 <<Q1>> ; . . . ; <<Pk>> Sk <<Qk>>
and theorems 55 63 68 73:
Theorem (55) [serial 1089] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 1012] 
Theorem (63) [serial 1090] used for:
  <<Q2>> -> <<Q>> in sequential composition for [serial 1012] 
Theorem (68) [serial 1091] used for:
  <<P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1012] 
Theorem (73) [serial 1092] used for:
  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 1012] 


Theorem (75)                               [serial 1133] 
P [118] << ( PACE(now) )
  and ( s@now )
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( ( ( now = 0.0 s ) or VS() ) or VP() )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( ( ( now = 0.0 s ) or VS() ) or VP() )@t  )  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  ) >>
S [117] ->
Q [85] << s@now
  and PACE(now) >>
Why created:  Replacing port names with BLESS::Assertion properties  [serial 1013]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (76)                               [serial 1013] 
P [118] << ( PACE(now) )
  and ( s@now )
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  ) >>
S [117] ->
Q [85] << s@now
  and PACE(now) >>
Why created:   <<M(pace) and x>> -> <<M(check_pace_vrp)>> for T4_VS_AFTER_VP: pace-[x]->check_pace_vrp{};
Solved by:  Replacing port names with BLESS::Assertion properties
and theorem 75:
Theorem (75) [serial 1133] used for:
  Replacing port names with BLESS::Assertion properties  [serial 1013] 


Theorem (77)                               [serial 1135] 
P [85] << now - last_beat < vrp@now
  and s@now
  and PACE(now) >>
S [120] ->
Q [78] << PACE(now) >>
Why created:    normalization of [serial 1014]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (78)                               [serial 1014] 
P [85] << s@now
  and PACE(now)
  and ( now - last_beat < vrp@now ) >>
S [120] ->
Q [78] << PACE(now) >>
Why created:   <<M(check_pace_vrp) and x>> -> <<M(pace)>> for T5_VS_AFTER_VP_IN_VRP: check_pace_vrp-[x]->pace{};
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 77:
Theorem (77) [serial 1135] used for:
    normalization of [serial 1014] 


Theorem (79)                               [serial 1164] 
P [85] << vrp@now <= now - last_beat
  and s@now
  and PACE(now) >>
S [85] ->
Q [42] << s@now >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1162]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (80)                               [serial 1181] 
P [85] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  )
  and vrp <= now - last_beat
  and p@last_beat
  and s >>
S [85] ->
Q [1] << vrp <= now - last_beat >>
Why created:  Assume Present:  P = P@now = P^0   [serial 1176]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (81)                               [serial 1176] 
P [85] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  )
  and vrp@now <= now - last_beat
  and p@last_beat
  and s@now >>
S [85] ->
Q [1] << vrp <= now - last_beat >>
Why created:    normalization of [serial 1172]
Solved by:  Assume Present:  P = P@now = P^0 
and theorem 80:
Theorem (80) [serial 1181] used for:
  Assume Present:  P = P@now = P^0   [serial 1176] 


Theorem (82)                               [serial 1172] 
P [85] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  )
  and p@last_beat
  and vrp@now <= now - last_beat
  and s@now >>
S [85] ->
Q [1] << vrp <= now - last_beat >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1171]
Solved by:  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 81:
Theorem (81) [serial 1176] used for:
    normalization of [serial 1172] 


Theorem (83)                               [serial 1178] 
P [85] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  )
  and vrp@now <= now - last_beat
  and p@last_beat
  and s@now >>
S [85] ->
Q [34] << n@last_beat or p@last_beat >>
Why created:    normalization of [serial 1174]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (84)                               [serial 1174] 
P [85] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  )
  and p@last_beat
  and vrp@now <= now - last_beat
  and s@now >>
S [85] ->
Q [34] << ( n@last_beat or p@last_beat ) >>
Why created:  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)  [serial 1173]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 83:
Theorem (83) [serial 1178] used for:
    normalization of [serial 1174] 


Theorem (85)                               [serial 1173] 
P [85] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  )
  and p@last_beat
  and vrp@now <= now - last_beat
  and s@now >>
S [85] ->
Q [34] << ( n or p )@last_beat >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1171]
Solved by:  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 84:
Theorem (84) [serial 1174] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)  [serial 1173] 


Theorem (86)                               [serial 1171] 
P [85] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  )
  and p@last_beat
  and vrp@now <= now - last_beat
  and s@now >>
S [85] ->
Q [42] << vrp <= now - last_beat
  and ( n or p )@last_beat >>
Why created:  Associativity: a.(b.c) = a.b.c [serial 1169]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 82 85:
Theorem (82) [serial 1172] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1171] 
Theorem (85) [serial 1173] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1171] 


Theorem (87)                               [serial 1169] 
P [85] << ( ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  )
  and p@last_beat )
  and vrp@now <= now - last_beat
  and s@now >>
S [85] ->
Q [42] << vrp <= now - last_beat
  and ( n or p )@last_beat >>
Why created:    normalization of [serial 1167]
Solved by:  Associativity: a.(b.c) = a.b.c
and theorem 86:
Theorem (86) [serial 1171] used for:
  Associativity: a.(b.c) = a.b.c [serial 1169] 


Theorem (88)                               [serial 1167] 
P [85] << vrp@now <= now - last_beat
  and s@now
  and ( p@last_beat
  and ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  ) ) >>
S [85] ->
Q [42] << ( ( n or p )@last_beat
  and ( ( now - last_beat ) >= vrp ) ) >>
Why created:  Substituted assertions' predicates for labels in postconditions [serial 1166]
Solved by:  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 87:
Theorem (87) [serial 1169] used for:
    normalization of [serial 1167] 


Theorem (89)                               [serial 1166] 
P [85] << vrp@now <= now - last_beat
  and s@now
  and ( p@last_beat
  and ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  ) ) >>
S [85] ->
Q [42] << notVRP() >>
Why created:  Substituted assertions' predicates for labels in preconditions [serial 1165]
Solved by:  Substitution of Assertion Labels
and theorem 88:
Theorem (88) [serial 1167] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1166] 


Theorem (90)                               [serial 1165] 
P [85] << vrp@now <= now - last_beat
  and s@now
  and PACE(now) >>
S [85] ->
Q [42] << notVRP() >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1162]
Solved by:  Substitution of Assertion Labels
and theorem 89:
Theorem (89) [serial 1166] used for:
  Substituted assertions' predicates for labels in preconditions [serial 1165] 


Theorem (91)                               [serial 1162] 
P [85] << vrp@now <= now - last_beat
  and s@now
  and PACE(now) >>
S [85] ->
Q [125] << s@now
  and notVRP() >>
Why created:    normalization of [serial 1160]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 79 90:
Theorem (79) [serial 1164] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1162] 
Theorem (90) [serial 1165] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1162] 


Theorem (92)                               [serial 1160] 
P [85] << vrp@now <= now - last_beat
  and s@now
  and PACE(now) >>
S [85] ->
Q [125] << ( s@now
  and notVRP() ) >>
Why created:  Substituted assertions' predicates for labels in postconditions [serial 1140]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 91:
Theorem (91) [serial 1162] used for:
    normalization of [serial 1160] 


Theorem (93)                               [serial 1140] 
P [85] << vrp@now <= now - last_beat
  and s@now
  and PACE(now) >>
S [85] ->
Q [125] << VS() >>
Why created:  <<P>> -> <<P1>> in sequential composition for [serial 1138]
Solved by:  Substitution of Assertion Labels
and theorem 92:
Theorem (92) [serial 1160] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1140] 


Theorem (94)                               [serial 1189] 
P [130] << last_beat = now
  and n@now >>
S [82] ->
Q [56] << ( n@now ) >>
Why created:  replace exististential quantification with predicate [serial 1186]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (95)                               [serial 1186] 
P [130] << last_beat = now
  and n@now >>
S [82] ->
Q [56] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  ) >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1184]
Solved by:  Guided Substitution of Equals
  Introduction of Existential Quantification
and theorem 94:
Theorem (94) [serial 1189] used for:
  replace exististential quantification with predicate [serial 1186] 


Theorem (96)                               [serial 1188] 
P [130] << last_beat = now
  and n@now >>
S [82] ->
Q [55] << n@now >>
Why created:  Guided Substitution of Equals 
 replacing "last_beat" with its = "now" in its postcondition [serial 1187]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (97)                               [serial 1187] 
P [130] << last_beat = now
  and n@now >>
S [82] ->
Q [55] << n@last_beat >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1184]
Solved by:  Guided Substitution of Equals
and theorem 96:
Theorem (96) [serial 1188] used for:
  Guided Substitution of Equals 
 replacing "last_beat" with its = "now" in its postcondition [serial 1187] 


Theorem (98)                               [serial 1184] 
P [130] << last_beat = now
  and n@now >>
S [82] ->
Q [82] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  )
  and n@last_beat >>
Why created:    normalization of [serial 1182]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 95 97:
Theorem (95) [serial 1186] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1184] 
Theorem (97) [serial 1187] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1184] 


Theorem (99)                               [serial 1182] 
P [130] << last_beat = now
  and n@now >>
S [82] ->
Q [82] << ( n@last_beat
  and ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  ) ) >>
Why created:  Substituted assertions' predicates for labels in postconditions [serial 1141]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 98:
Theorem (98) [serial 1184] used for:
    normalization of [serial 1182] 


Theorem (100)                               [serial 1141] 
P [130] << last_beat = now
  and n@now >>
S [82] ->
Q [82] << SENSE(now) >>
Why created:  <<Q2>> -> <<Q>> in sequential composition for [serial 1138]
Solved by:  Substitution of Assertion Labels
and theorem 99:
Theorem (99) [serial 1182] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1141] 


Theorem (101)                               [serial 1152] 
P [125] << VS() >>
S [126] ->
Q [22] << 0.0 s = now or VS() >>
Why created:    normalization of [serial 1144]
Solved by:  Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (102)                               [serial 1144] 
P [125] << VS() >>
S [126] ->
Q [22] << ( now = 0.0 s ) or VS() >>
Why created:  applied port output <<pre>> -> <<M[n]>> [serial 1142]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 101:
Theorem (101) [serial 1152] used for:
    normalization of [serial 1144] 


Theorem (103)                               [serial 1192] 
P [126] << ( 0.0 s = now or VS() )@now
  and VS() >>
S [126] ->
Q [127] << ( 0.0 s = now or VS() )@now >>
Why created:    normalization of [serial 1190]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (104)                               [serial 1190] 
P [126] << ( 0.0 s = now or VS() )@now
  and VS() >>
S [126] ->
Q [127] << ( ( now = 0.0 s ) or VS() )@now >>
Why created:  Replacing port names with BLESS::Assertion properties  [serial 1154]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 103:
Theorem (103) [serial 1192] used for:
    normalization of [serial 1190] 


Theorem (105)                               [serial 1154] 
P [126] << ( 0.0 s = now or VS() )@now
  and VS() >>
S [126] ->
Q [127] << n@now >>
Why created:    normalization of [serial 1145]
Solved by:  Replacing port names with BLESS::Assertion properties
and theorem 104:
Theorem (104) [serial 1190] used for:
  Replacing port names with BLESS::Assertion properties  [serial 1154] 


Theorem (106)                               [serial 1145] 
P [126] << ( VS() )
  and ( ( now = 0.0 s ) or VS() )@now >>
S [126] ->
Q [127] << n@now >>
Why created:  applied port output <<pre and M[n]@now>> -> <<post>> [serial 1142]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 105:
Theorem (105) [serial 1154] used for:
    normalization of [serial 1145] 


Theorem (107)                               [serial 1142] 
P [125] << VS() >>
S [126] n!
Q [127] << n@now >>
Why created:  <<P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1138]
Solved by:  Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 102 106:
Theorem (102) [serial 1144] used for:
  applied port output <<pre>> -> <<M[n]>> [serial 1142] 
Theorem (106) [serial 1145] used for:
  applied port output <<pre and M[n]@now>> -> <<post>> [serial 1142] 


Theorem (108)                               [serial 1156] 
P [127] << n@now >>
S [129] ->
Q [130] << n@now >>
Why created:    normalization of [serial 1148]
Solved by:  Identity (id):  P->P is tautology


Theorem (109)                               [serial 1148] 
P [127] << n@now >>
S [129] ->
Q [130] << ( n@now ) >>
Why created:  Law of And-Simplification:  P and true is P [serial 1147]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 108:
Theorem (108) [serial 1156] used for:
    normalization of [serial 1148] 


Theorem (110)                               [serial 1147] 
P [127] << n@now >>
S [129] ->
Q [130] << true
  and n@now >>
Why created:  Equality Law (idistr):  a=a <-> true [serial 1146]
Solved by:  Law of And-Simplification:  P and true is P
and theorem 109:
Theorem (109) [serial 1148] used for:
  Law of And-Simplification:  P and true is P [serial 1147] 


Theorem (111)                               [serial 1146] 
P [127] << n@now >>
S [129] ->
Q [130] << now = now
  and n@now >>
Why created:  applied wp for assignment [serial 1143]
Solved by:  Equality Law (idistr):  a=a <-> true
and theorem 110:
Theorem (110) [serial 1147] used for:
  Equality Law (idistr):  a=a <-> true [serial 1146] 


Theorem (112)                               [serial 1143] 
P [127] << n@now >>
S [129] last_beat := now
Q [130] << last_beat = now
  and n@now >>
Why created:  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 1138]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 111:
Theorem (111) [serial 1146] used for:
  applied wp for assignment [serial 1143] 


Theorem (113)                               [serial 1138] 
P [85] << vrp@now <= now - last_beat
  and s@now
  and PACE(now) >>
S [125]   << VS() >>
  n!
  << n@now >>
  ;
  last_beat := now
  << last_beat = now
    and n@now >> 
Q [82] << SENSE(now) >>
Why created:    normalization of [serial 1015]
Solved by:  Sequential Composition Rule:
   <<P1>> S1 <<Q1 and P2>>
   <<Q1 and P2>> S2 <<Q2 and P3>>
   . . .
   <<Qk-1 and Pk>> Sk <<Qk>>
   P=>P1, Qk=>Q
   _____________________________________________
   <<P>> S <<Q>>
   where S is <<P1>> S1 <<Q1>> ; . . . ; <<Pk>> Sk <<Qk>>
and theorems 93 100 107 112:
Theorem (93) [serial 1140] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 1138] 
Theorem (100) [serial 1141] used for:
  <<Q2>> -> <<Q>> in sequential composition for [serial 1138] 
Theorem (107) [serial 1142] used for:
  <<P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1138] 
Theorem (112) [serial 1143] used for:
  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 1138] 


Theorem (114)                               [serial 1015] 
P [85] << s@now
  and PACE(now)
  and ( now - last_beat >= vrp@now ) >>
S [125]   << VS() >>
  n!
  << n@now >>
  ;
  last_beat := now
  << last_beat = now
    and n@now >> 
Q [82] << SENSE(now) >>
Why created:   <<M(check_pace_vrp) and x>> A <<M(sense)>> for T6_VS_AFTER_VP_IS_NR: check_pace_vrp-[x]->sense{A};
Solved by:  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 113:
Theorem (113) [serial 1138] used for:
    normalization of [serial 1015] 


Theorem (115)                               [serial 1235] 
P [133] << ( n or p )@( now - lrl )
  and SENSE(now)
  and not ( exists t ~ time 
   in ( now - lrl ) ,, now 
   that ( n or p )@t  )
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  ) >>
S [133] ->
Q [134] << ( n or p )@( now - lrl )
  and not ( exists t ~ time 
   in ( now - lrl ) ,, now 
   that ( n or p )@t  ) >>
Why created:    normalization of [serial 1233]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (116)                               [serial 1233] 
P [133] << ( n or p )@( now - lrl )
  and SENSE(now)
  and not ( exists t ~ time 
   in ( now - lrl ) ,, now 
   that ( n or p )@t  )
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  ) >>
S [133] ->
Q [134] << ( ( n or p )@( now - lrl )
  and not ( exists t ~ time 
   in ( now - lrl ) ,, now 
   that ( n or p )@t  ) ) >>
Why created:  Substituted assertions' predicates for labels in postconditions [serial 1215]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 115:
Theorem (115) [serial 1235] used for:
    normalization of [serial 1233] 


Theorem (117)                               [serial 1215] 
P [133] << ( n or p )@( now - lrl )
  and SENSE(now)
  and not ( exists t ~ time 
   in ( now - lrl ) ,, now 
   that ( n or p )@t  )
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  ) >>
S [133] ->
Q [134] << VP() >>
Why created:    normalization of [serial 1204]
Solved by:  Substitution of Assertion Labels
and theorem 116:
Theorem (116) [serial 1233] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1215] 


Theorem (118)                               [serial 1204] 
P [133] << ( n or p )@( now - lrl )
  and not ( exists t ~ time 
   in ( now - lrl ) ,, now 
   that ( n or p )@t  )
  and SENSE(now)
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  ) >>
S [133] ->
Q [134] << VP() >>
Why created:  Associativity: a.(b.c) = a.b.c [serial 1199]
Solved by:  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 117:
Theorem (117) [serial 1215] used for:
    normalization of [serial 1204] 


Theorem (119)                               [serial 1199] 
P [133] << ( ( n or p )@( now - lrl )
  and not ( exists t ~ time 
   in ( now - lrl ) ,, now 
   that ( n or p )@t  ) )
  and SENSE(now)
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  ) >>
S [133] ->
Q [134] << VP() >>
Why created:    normalization of [serial 1194]
Solved by:  Associativity: a.(b.c) = a.b.c
and theorem 118:
Theorem (118) [serial 1204] used for:
  Associativity: a.(b.c) = a.b.c [serial 1199] 


Theorem (120)                               [serial 1194] 
P [133] << ( SENSE(now) )
  and ( ( n or p )@( now - lrl )
  and not ( exists t ~ time 
   in ( now - lrl ) ,, now 
   that ( n or p )@t  ) )
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  ) >>
S [133] ->
Q [134] << VP() >>
Why created:  <<P>> -> <<P1>> in sequential composition for [serial 1016]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 119:
Theorem (119) [serial 1199] used for:
    normalization of [serial 1194] 


Theorem (121)                               [serial 1231] 
P [139] << last_beat = now
  and p@now >>
S [78] ->
Q [51] << p@now >>
Why created:  replace exististential quantification with predicate [serial 1229]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (122)                               [serial 1229] 
P [139] << last_beat = now
  and p@now >>
S [78] ->
Q [51] << exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  >>
Why created:    normalization of [serial 1225]
Solved by:  Introduction of Existential Quantification
and theorem 121:
Theorem (121) [serial 1231] used for:
  replace exististential quantification with predicate [serial 1229] 


Theorem (123)                               [serial 1225] 
P [139] << last_beat = now
  and p@now >>
S [78] ->
Q [51] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  ) >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1223]
Solved by:  Guided Substitution of Equals
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 122:
Theorem (122) [serial 1229] used for:
    normalization of [serial 1225] 


Theorem (124)                               [serial 1227] 
P [139] << last_beat = now
  and p@now >>
S [78] ->
Q [50] << p@now >>
Why created:  Guided Substitution of Equals 
 replacing "last_beat" with its = "now" in its postcondition [serial 1226]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (125)                               [serial 1226] 
P [139] << last_beat = now
  and p@now >>
S [78] ->
Q [50] << p@last_beat >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1223]
Solved by:  Guided Substitution of Equals
and theorem 124:
Theorem (124) [serial 1227] used for:
  Guided Substitution of Equals 
 replacing "last_beat" with its = "now" in its postcondition [serial 1226] 


Theorem (126)                               [serial 1223] 
P [139] << last_beat = now
  and p@now >>
S [78] ->
Q [78] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  )
  and p@last_beat >>
Why created:    normalization of [serial 1221]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 123 125:
Theorem (123) [serial 1225] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1223] 
Theorem (125) [serial 1226] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1223] 


Theorem (127)                               [serial 1221] 
P [139] << last_beat = now
  and p@now >>
S [78] ->
Q [78] << ( p@last_beat
  and ( exists t ~ time 
   in ( now - lrl ) .. now 
   that p@t  ) ) >>
Why created:  Substituted assertions' predicates for labels in postconditions [serial 1195]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 126:
Theorem (126) [serial 1223] used for:
    normalization of [serial 1221] 


Theorem (128)                               [serial 1195] 
P [139] << last_beat = now
  and p@now >>
S [78] ->
Q [78] << PACE(now) >>
Why created:  <<Q2>> -> <<Q>> in sequential composition for [serial 1016]
Solved by:  Substitution of Assertion Labels
and theorem 127:
Theorem (127) [serial 1221] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1195] 


Theorem (129)                               [serial 1205] 
P [134] << VP() >>
S [135] ->
Q [20] << VP() >>
Why created:  applied port output <<pre>> -> <<M[p]>> [serial 1196]
Solved by:  Identity (id):  P->P is tautology


Theorem (130)                               [serial 1232] 
P [135] << VP()@now
  and VP() >>
S [135] ->
Q [136] << VP()@now >>
Why created:  Replacing port names with BLESS::Assertion properties  [serial 1213]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (131)                               [serial 1213] 
P [135] << VP()@now
  and VP() >>
S [135] ->
Q [136] << p@now >>
Why created:    normalization of [serial 1206]
Solved by:  Replacing port names with BLESS::Assertion properties
and theorem 130:
Theorem (130) [serial 1232] used for:
  Replacing port names with BLESS::Assertion properties  [serial 1213] 


Theorem (132)                               [serial 1206] 
P [135] << ( VP() )
  and VP()@now >>
S [135] ->
Q [136] << p@now >>
Why created:  applied port output <<pre and M[p]@now>> -> <<post>> [serial 1196]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 131:
Theorem (131) [serial 1213] used for:
    normalization of [serial 1206] 


Theorem (133)                               [serial 1196] 
P [134] << VP() >>
S [135] p!
Q [136] << p@now >>
Why created:  <<P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1016]
Solved by:  Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 129 132:
Theorem (129) [serial 1205] used for:
  applied port output <<pre>> -> <<M[p]>> [serial 1196] 
Theorem (132) [serial 1206] used for:
  applied port output <<pre and M[p]@now>> -> <<post>> [serial 1196] 


Theorem (134)                               [serial 1217] 
P [136] << p@now >>
S [138] ->
Q [139] << p@now >>
Why created:    normalization of [serial 1209]
Solved by:  Identity (id):  P->P is tautology


Theorem (135)                               [serial 1209] 
P [136] << p@now >>
S [138] ->
Q [139] << ( p@now ) >>
Why created:  Law of And-Simplification:  P and true is P [serial 1208]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 134:
Theorem (134) [serial 1217] used for:
    normalization of [serial 1209] 


Theorem (136)                               [serial 1208] 
P [136] << p@now >>
S [138] ->
Q [139] << true
  and p@now >>
Why created:  Equality Law (idistr):  a=a <-> true [serial 1207]
Solved by:  Law of And-Simplification:  P and true is P
and theorem 135:
Theorem (135) [serial 1209] used for:
  Law of And-Simplification:  P and true is P [serial 1208] 


Theorem (137)                               [serial 1207] 
P [136] << p@now >>
S [138] ->
Q [139] << now = now
  and p@now >>
Why created:  applied wp for assignment [serial 1197]
Solved by:  Equality Law (idistr):  a=a <-> true
and theorem 136:
Theorem (136) [serial 1208] used for:
  Equality Law (idistr):  a=a <-> true [serial 1207] 


Theorem (138)                               [serial 1197] 
P [136] << p@now >>
S [138] last_beat := now
Q [139] << last_beat = now
  and p@now >>
Why created:  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 1016]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 137:
Theorem (137) [serial 1207] used for:
  applied wp for assignment [serial 1197] 


Theorem (139)                               [serial 1016] 
P [133] << ( SENSE(now) )
  and ( ( n or p )@( now - lrl )
  and not ( exists t ~ time 
   in ( now - lrl ) ,, now 
   that ( n or p )@t  ) )
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  ) >>
S [134]   << VP() >>
  p!
  << p@now >>
  ;
  last_beat := now
  << last_beat = now
    and p@now >> 
Q [78] << PACE(now) >>
Why created:   <<M(sense) and x>> A <<M(pace)>> for T7_PACE_LRL_AFTER_VS: sense-[x]->pace{A};
Solved by:  Sequential Composition Rule:
   <<P1>> S1 <<Q1 and P2>>
   <<Q1 and P2>> S2 <<Q2 and P3>>
   . . .
   <<Qk-1 and Pk>> Sk <<Qk>>
   P=>P1, Qk=>Q
   _____________________________________________
   <<P>> S <<Q>>
   where S is <<P1>> S1 <<Q1>> ; . . . ; <<Pk>> Sk <<Qk>>
and theorems 120 128 133 138:
Theorem (120) [serial 1194] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 1016] 
Theorem (128) [serial 1195] used for:
  <<Q2>> -> <<Q>> in sequential composition for [serial 1016] 
Theorem (133) [serial 1196] used for:
  <<P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1016] 
Theorem (138) [serial 1197] used for:
  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 1016] 


Theorem (140)                               [serial 1238] 
P [142] << s@now
  and SENSE(now)
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  ) >>
S [141] ->
Q [88] << s@now
  and SENSE(now) >>
Why created:    normalization of [serial 1017]
Solved by:  And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (141)                               [serial 1017] 
P [142] << ( SENSE(now) )
  and ( s@now )
  and not ( exists u ~ time 
   in tops ,, now 
   that h@u  )
  and not ( exists u ~ time 
   in tops ,, now 
   that ( n or p )@( u - lrl )
  and not ( exists t ~ time 
   in ( u - lrl ) ,, u 
   that ( n or p )@t  )  )
  and not ( exists u ~ time 
   in tops ,, now 
   that s@u  ) >>
S [141] ->
Q [88] << s@now
  and SENSE(now) >>
Why created:   <<M(sense) and x>> -> <<M(check_sense_vrp)>> for T8_VS_AFTER_VS: sense-[x]->check_sense_vrp{};
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 140:
Theorem (140) [serial 1238] used for:
    normalization of [serial 1017] 


Theorem (142)                               [serial 1018] 
P [88] << s@now
  and SENSE(now)
  and ( now - last_beat < vrp@now ) >>
S [144] ->
Q [82] << SENSE(now) >>
Why created:   <<M(check_sense_vrp) and x>> -> <<M(sense)>> for T9_VS_AFTER_VS_IN_VRP: check_sense_vrp-[x]->sense{};
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (143)                               [serial 1278] 
P [88] << vrp@now <= now - last_beat
  and s@now
  and SENSE(now) >>
S [88] ->
Q [42] << s@now >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1276]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (144)                               [serial 1307] 
P [88] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  )
  and vrp <= now - last_beat
  and n@last_beat
  and s >>
S [88] ->
Q [1] << vrp <= now - last_beat >>
Why created:  Assume Present:  P = P@now = P^0   [serial 1302]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (145)                               [serial 1302] 
P [88] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  )
  and vrp@now <= now - last_beat
  and n@last_beat
  and s@now >>
S [88] ->
Q [1] << vrp <= now - last_beat >>
Why created:    normalization of [serial 1299]
Solved by:  Assume Present:  P = P@now = P^0 
and theorem 144:
Theorem (144) [serial 1307] used for:
  Assume Present:  P = P@now = P^0   [serial 1302] 


Theorem (146)                               [serial 1299] 
P [88] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  )
  and n@last_beat
  and vrp@now <= now - last_beat
  and s@now >>
S [88] ->
Q [1] << vrp <= now - last_beat >>
Why created:  Associativity: a.(b.c) = a.b.c [serial 1289]
Solved by:  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 145:
Theorem (145) [serial 1302] used for:
    normalization of [serial 1299] 


Theorem (147)                               [serial 1289] 
P [88] << ( ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  )
  and n@last_beat )
  and vrp@now <= now - last_beat
  and s@now >>
S [88] ->
Q [1] << vrp <= now - last_beat >>
Why created:    normalization of [serial 1286]
Solved by:  Associativity: a.(b.c) = a.b.c
and theorem 146:
Theorem (146) [serial 1299] used for:
  Associativity: a.(b.c) = a.b.c [serial 1289] 


Theorem (148)                               [serial 1286] 
P [88] << vrp@now <= now - last_beat
  and s@now
  and ( n@last_beat
  and ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  ) ) >>
S [88] ->
Q [1] << vrp <= now - last_beat >>
Why created:  Substituted assertions' predicates for labels in preconditions [serial 1284]
Solved by:  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 147:
Theorem (147) [serial 1289] used for:
    normalization of [serial 1286] 


Theorem (149)                               [serial 1284] 
P [88] << vrp@now <= now - last_beat
  and s@now
  and SENSE(now) >>
S [88] ->
Q [1] << vrp <= now - last_beat >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1282]
Solved by:  Substitution of Assertion Labels
and theorem 148:
Theorem (148) [serial 1286] used for:
  Substituted assertions' predicates for labels in preconditions [serial 1284] 


Theorem (150)                               [serial 1304] 
P [88] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  )
  and vrp@now <= now - last_beat
  and n@last_beat
  and s@now >>
S [88] ->
Q [34] << n@last_beat or p@last_beat >>
Why created:    normalization of [serial 1300]
Solved by:  And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (151)                               [serial 1300] 
P [88] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  )
  and n@last_beat
  and vrp@now <= now - last_beat
  and s@now >>
S [88] ->
Q [34] << n@last_beat or p@last_beat >>
Why created:  Associativity: a.(b.c) = a.b.c [serial 1297]
Solved by:  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 150:
Theorem (150) [serial 1304] used for:
    normalization of [serial 1300] 


Theorem (152)                               [serial 1297] 
P [88] << ( ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  )
  and n@last_beat )
  and vrp@now <= now - last_beat
  and s@now >>
S [88] ->
Q [34] << n@last_beat or p@last_beat >>
Why created:    normalization of [serial 1294]
Solved by:  Associativity: a.(b.c) = a.b.c
and theorem 151:
Theorem (151) [serial 1300] used for:
  Associativity: a.(b.c) = a.b.c [serial 1297] 


Theorem (153)                               [serial 1294] 
P [88] << ( ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  )
  and n@last_beat )
  and vrp@now <= now - last_beat
  and s@now >>
S [88] ->
Q [34] << ( n@last_beat or p@last_beat ) >>
Why created:  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)  [serial 1291]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 152:
Theorem (152) [serial 1297] used for:
    normalization of [serial 1294] 


Theorem (154)                               [serial 1291] 
P [88] << ( ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  )
  and n@last_beat )
  and vrp@now <= now - last_beat
  and s@now >>
S [88] ->
Q [34] << ( n or p )@last_beat >>
Why created:    normalization of [serial 1287]
Solved by:  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 153:
Theorem (153) [serial 1294] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)  [serial 1291] 


Theorem (155)                               [serial 1287] 
P [88] << vrp@now <= now - last_beat
  and s@now
  and ( n@last_beat
  and ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  ) ) >>
S [88] ->
Q [34] << ( n or p )@last_beat >>
Why created:  Substituted assertions' predicates for labels in preconditions [serial 1285]
Solved by:  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 154:
Theorem (154) [serial 1291] used for:
    normalization of [serial 1287] 


Theorem (156)                               [serial 1285] 
P [88] << vrp@now <= now - last_beat
  and s@now
  and SENSE(now) >>
S [88] ->
Q [34] << ( n or p )@last_beat >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1282]
Solved by:  Substitution of Assertion Labels
and theorem 155:
Theorem (155) [serial 1287] used for:
  Substituted assertions' predicates for labels in preconditions [serial 1285] 


Theorem (157)                               [serial 1282] 
P [88] << vrp@now <= now - last_beat
  and s@now
  and SENSE(now) >>
S [88] ->
Q [42] << vrp <= now - last_beat
  and ( n or p )@last_beat >>
Why created:    normalization of [serial 1280]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 149 156:
Theorem (149) [serial 1284] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1282] 
Theorem (156) [serial 1285] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1282] 


Theorem (158)                               [serial 1280] 
P [88] << vrp@now <= now - last_beat
  and s@now
  and SENSE(now) >>
S [88] ->
Q [42] << ( ( n or p )@last_beat
  and ( ( now - last_beat ) >= vrp ) ) >>
Why created:  Substituted assertions' predicates for labels in postconditions [serial 1279]
Solved by:  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 157:
Theorem (157) [serial 1282] used for:
    normalization of [serial 1280] 


Theorem (159)                               [serial 1279] 
P [88] << vrp@now <= now - last_beat
  and s@now
  and SENSE(now) >>
S [88] ->
Q [42] << notVRP() >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1276]
Solved by:  Substitution of Assertion Labels
and theorem 158:
Theorem (158) [serial 1280] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1279] 


Theorem (160)                               [serial 1276] 
P [88] << vrp@now <= now - last_beat
  and s@now
  and SENSE(now) >>
S [88] ->
Q [149] << s@now
  and notVRP() >>
Why created:    normalization of [serial 1274]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 143 159:
Theorem (143) [serial 1278] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1276] 
Theorem (159) [serial 1279] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1276] 


Theorem (161)                               [serial 1274] 
P [88] << vrp@now <= now - last_beat
  and s@now
  and SENSE(now) >>
S [88] ->
Q [149] << ( s@now
  and notVRP() ) >>
Why created:  Substituted assertions' predicates for labels in postconditions [serial 1250]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 160:
Theorem (160) [serial 1276] used for:
    normalization of [serial 1274] 


Theorem (162)                               [serial 1250] 
P [88] << vrp@now <= now - last_beat
  and s@now
  and SENSE(now) >>
S [88] ->
Q [149] << VS() >>
Why created:    normalization of [serial 1240]
Solved by:  Substitution of Assertion Labels
and theorem 161:
Theorem (161) [serial 1274] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1250] 


Theorem (163)                               [serial 1240] 
P [88] << s@now
  and SENSE(now)
  and ( now - last_beat >= vrp@now ) >>
S [88] ->
Q [149] << VS() >>
Why created:  <<P>> -> <<P1>> in sequential composition for [serial 1019]
Solved by:  Irreflexivity of At Least: (a>=b) = (b<=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 162:
Theorem (162) [serial 1250] used for:
    normalization of [serial 1240] 


Theorem (164)                               [serial 1273] 
P [154] << last_beat = now
  and n@now >>
S [82] ->
Q [56] << n@now >>
Why created:  replace exististential quantification with predicate [serial 1269]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (165)                               [serial 1269] 
P [154] << last_beat = now
  and n@now >>
S [82] ->
Q [56] << exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  >>
Why created:    normalization of [serial 1266]
Solved by:  Guided Substitution of Equals
  Introduction of Existential Quantification
and theorem 164:
Theorem (164) [serial 1273] used for:
  replace exististential quantification with predicate [serial 1269] 


Theorem (166)                               [serial 1266] 
P [154] << last_beat = now
  and n@now >>
S [82] ->
Q [56] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  ) >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1264]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 165:
Theorem (165) [serial 1269] used for:
    normalization of [serial 1266] 


Theorem (167)                               [serial 1272] 
P [154] << last_beat = now
  and n@now >>
S [82] ->
Q [55] << n@now >>
Why created:  Guided Substitution of Equals 
 replacing "last_beat" with its = "now" in its postcondition [serial 1267]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (168)                               [serial 1267] 
P [154] << last_beat = now
  and n@now >>
S [82] ->
Q [55] << n@last_beat >>
Why created:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1264]
Solved by:  Guided Substitution of Equals
and theorem 167:
Theorem (167) [serial 1272] used for:
  Guided Substitution of Equals 
 replacing "last_beat" with its = "now" in its postcondition [serial 1267] 


Theorem (169)                               [serial 1264] 
P [154] << last_beat = now
  and n@now >>
S [82] ->
Q [82] << ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  )
  and n@last_beat >>
Why created:    normalization of [serial 1262]
Solved by:  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 166 168:
Theorem (166) [serial 1266] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1264] 
Theorem (168) [serial 1267] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1264] 


Theorem (170)                               [serial 1262] 
P [154] << last_beat = now
  and n@now >>
S [82] ->
Q [82] << ( n@last_beat
  and ( exists t ~ time 
   in ( now - lrl ) .. now 
   that n@t  ) ) >>
Why created:  Substituted assertions' predicates for labels in postconditions [serial 1241]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 169:
Theorem (169) [serial 1264] used for:
    normalization of [serial 1262] 


Theorem (171)                               [serial 1241] 
P [154] << last_beat = now
  and n@now >>
S [82] ->
Q [82] << SENSE(now) >>
Why created:  <<Q2>> -> <<Q>> in sequential composition for [serial 1019]
Solved by:  Substitution of Assertion Labels
and theorem 170:
Theorem (170) [serial 1262] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1241] 


Theorem (172)                               [serial 1253] 
P [149] << VS() >>
S [150] ->
Q [22] << 0.0 s = now or VS() >>
Why created:    normalization of [serial 1244]
Solved by:  Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (173)                               [serial 1244] 
P [149] << VS() >>
S [150] ->
Q [22] << ( now = 0.0 s ) or VS() >>
Why created:  applied port output <<pre>> -> <<M[n]>> [serial 1242]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 172:
Theorem (172) [serial 1253] used for:
    normalization of [serial 1244] 


Theorem (174)                               [serial 1310] 
P [150] << ( 0.0 s = now or VS() )@now
  and VS() >>
S [150] ->
Q [151] << ( 0.0 s = now or VS() )@now >>
Why created:    normalization of [serial 1308]
Solved by:  And Introduction Schema (aisph):  (X and Y)->X


Theorem (175)                               [serial 1308] 
P [150] << ( 0.0 s = now or VS() )@now
  and VS() >>
S [150] ->
Q [151] << ( ( now = 0.0 s ) or VS() )@now >>
Why created:  Replacing port names with BLESS::Assertion properties  [serial 1255]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 174:
Theorem (174) [serial 1310] used for:
    normalization of [serial 1308] 


Theorem (176)                               [serial 1255] 
P [150] << ( 0.0 s = now or VS() )@now
  and VS() >>
S [150] ->
Q [151] << n@now >>
Why created:    normalization of [serial 1245]
Solved by:  Replacing port names with BLESS::Assertion properties
and theorem 175:
Theorem (175) [serial 1308] used for:
  Replacing port names with BLESS::Assertion properties  [serial 1255] 


Theorem (177)                               [serial 1245] 
P [150] << ( VS() )
  and ( ( now = 0.0 s ) or VS() )@now >>
S [150] ->
Q [151] << n@now >>
Why created:  applied port output <<pre and M[n]@now>> -> <<post>> [serial 1242]
Solved by:  Reflexivity of Equality: (a=b) = (b=a)
  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Reflexivity of Conjunction: (m and k) = (k and m)
  Associativity: a.(b.c) = a.b.c
and theorem 176:
Theorem (176) [serial 1255] used for:
    normalization of [serial 1245] 


Theorem (178)                               [serial 1242] 
P [149] << VS() >>
S [150] n!
Q [151] << n@now >>
Why created:  <<P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1019]
Solved by:  Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 173 177:
Theorem (173) [serial 1244] used for:
  applied port output <<pre>> -> <<M[n]>> [serial 1242] 
Theorem (177) [serial 1245] used for:
  applied port output <<pre and M[n]@now>> -> <<post>> [serial 1242] 


Theorem (179)                               [serial 1257] 
P [151] << n@now >>
S [153] ->
Q [154] << n@now >>
Why created:    normalization of [serial 1248]
Solved by:  Identity (id):  P->P is tautology


Theorem (180)                               [serial 1248] 
P [151] << n@now >>
S [153] ->
Q [154] << ( n@now ) >>
Why created:  Law of And-Simplification:  P and true is P [serial 1247]
Solved by:  Add Unnecessary Parentheses For No Good Reason: a = (a)
  Associativity: a.(b.c) = a.b.c
and theorem 179:
Theorem (179) [serial 1257] used for:
    normalization of [serial 1248] 


Theorem (181)                               [serial 1247] 
P [151] << n@now >>
S [153] ->
Q [154] << true
  and n@now >>
Why created:  Equality Law (idistr):  a=a <-> true [serial 1246]
Solved by:  Law of And-Simplification:  P and true is P
and theorem 180:
Theorem (180) [serial 1248] used for:
  Law of And-Simplification:  P and true is P [serial 1247] 


Theorem (182)                               [serial 1246] 
P [151] << n@now >>
S [153] ->
Q [154] << now = now
  and n@now >>
Why created:  applied wp for assignment [serial 1243]
Solved by:  Equality Law (idistr):  a=a <-> true
and theorem 181:
Theorem (181) [serial 1247] used for:
  Equality Law (idistr):  a=a <-> true [serial 1246] 


Theorem (183)                               [serial 1243] 
P [151] << n@now >>
S [153] last_beat := now
Q [154] << last_beat = now
  and n@now >>
Why created:  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 1019]
Solved by:  Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>>
and theorem 182:
Theorem (182) [serial 1246] used for:
  applied wp for assignment [serial 1243] 


Theorem (184)                               [serial 1019] 
P [88] << s@now
  and SENSE(now)
  and ( now - last_beat >= vrp@now ) >>
S [149]   << VS() >>
  n!
  << n@now >>
  ;
  last_beat := now
  << last_beat = now
    and n@now >> 
Q [82] << SENSE(now) >>
Why created:   <<M(check_sense_vrp) and x>> A <<M(sense)>> for T10_VS_AFTER_VS_IS_NR: check_sense_vrp-[x]->sense{A};
Solved by:  Sequential Composition Rule:
   <<P1>> S1 <<Q1 and P2>>
   <<Q1 and P2>> S2 <<Q2 and P3>>
   . . .
   <<Qk-1 and Pk>> Sk <<Qk>>
   P=>P1, Qk=>Q
   _____________________________________________
   <<P>> S <<Q>>
   where S is <<P1>> S1 <<Q1>> ; . . . ; <<Pk>> Sk <<Qk>>
and theorems 163 171 178 183:
Theorem (163) [serial 1240] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 1019] 
Theorem (171) [serial 1241] used for:
  <<Q2>> -> <<Q>> in sequential composition for [serial 1019] 
Theorem (178) [serial 1242] used for:
  <<P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1019] 
Theorem (183) [serial 1243] used for:
  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 1019] 


Theorem (185)                               [serial 1002] 
P [32] <<   >>
S [61] ->
Q [32] << VVI.i proof obligations >>
Why created:  Initial proof obligations for VVI.i
Solved by:  Component verification conditions
and theorems 3 7 11 12 16 20 46 48 49 74 76 78 114 139 141 142 184:
Theorem (3) [serial 1003] used for:
  <<I>> -> BLESS::Invariant of thread VVI.i 
Theorem (7) [serial 1004] used for:
  <<M(pace)>> -> <<I>> from invariant I when complete state pace has Assertion <<M(pace)>> in its definition. 
Theorem (11) [serial 1005] used for:
  <<M(sense)>> -> <<I>> from invariant I when complete state sense has Assertion <<M(sense)>> in its definition. 
Theorem (12) [serial 1006] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state power_on, <<M(power_on)>> -> <<e1 or e2 or . . . en>> 
Theorem (16) [serial 1007] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_pace_vrp, <<M(check_pace_vrp)>> -> <<e1 or e2 or . . . en>> 
Theorem (20) [serial 1008] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_sense_vrp, <<M(check_sense_vrp)>> -> <<e1 or e2 or . . . en>> 
Theorem (46) [serial 1009] used for:
   <<M(power_on)>> A <<M(sense)>> for T1_POWER_ON: power_on-[ ]->sense{A}; 
Theorem (48) [serial 1010] used for:
   <<M(pace) and x>> -> <<M(off)>> for T2_STOP_pace: pace-[x]->off{}; 
Theorem (49) [serial 1011] used for:
   <<M(sense) and x>> -> <<M(off)>> for T2_STOP_sense: sense-[x]->off{}; 
Theorem (74) [serial 1012] used for:
   <<M(pace) and x>> A <<M(pace)>> for T3_PACE_LRL_AFTER_VP: pace-[x]->pace{A}; 
Theorem (76) [serial 1013] used for:
   <<M(pace) and x>> -> <<M(check_pace_vrp)>> for T4_VS_AFTER_VP: pace-[x]->check_pace_vrp{}; 
Theorem (78) [serial 1014] used for:
   <<M(check_pace_vrp) and x>> -> <<M(pace)>> for T5_VS_AFTER_VP_IN_VRP: check_pace_vrp-[x]->pace{}; 
Theorem (114) [serial 1015] used for:
   <<M(check_pace_vrp) and x>> A <<M(sense)>> for T6_VS_AFTER_VP_IS_NR: check_pace_vrp-[x]->sense{A}; 
Theorem (139) [serial 1016] used for:
   <<M(sense) and x>> A <<M(pace)>> for T7_PACE_LRL_AFTER_VS: sense-[x]->pace{A}; 
Theorem (141) [serial 1017] used for:
   <<M(sense) and x>> -> <<M(check_sense_vrp)>> for T8_VS_AFTER_VS: sense-[x]->check_sense_vrp{}; 
Theorem (142) [serial 1018] used for:
   <<M(check_sense_vrp) and x>> -> <<M(sense)>> for T9_VS_AFTER_VS_IN_VRP: check_sense_vrp-[x]->sense{}; 
Theorem (184) [serial 1019] used for:
   <<M(check_sense_vrp) and x>> A <<M(sense)>> for T10_VS_AFTER_VS_IS_NR: check_sense_vrp-[x]->sense{A}; 


Theorem (186)                               [serial 1001] 
Why created:  All verification conditions have been proved correct. 
Solved by:  Component and Connection Proofs
and theorem 185:
Theorem (185) [serial 1002] used for:
  Initial proof obligations for VVI.i 


closing proof.txt file 