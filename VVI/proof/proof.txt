This file, proof.txt, was produced the BLESS Proof Assistant v3.1.5
  at Thu Feb 23 11:40:56 CST 2023 by brianlarson

Theorem (1)                               [serial 1023] 
P [55] << exists t~time
  in now - lrl .. now 
  that n@t or p@t  >>
S [55] ->
Q [27] << exists t~time
  in now - lrl .. now 
  that n@t or p@t  >>
by Identity (id):  P->P is tautology


Theorem (2)                               [serial 1020] 
P [55] << exists t~time
  in ((now - lrl)) .. now 
  that ((n@t or p@t))  >>
S [55] ->
Q [27] << (exists t~time
  in ((now - lrl)) .. now 
  that ((n@t or p@t)) ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1:
Theorem (1) [serial 1023] used for:
    normalization of [serial 1020]
 


Theorem (3)                               [serial 1003] 
P [55] << exists t~time
  in ((now - lrl)) .. now 
  that ((n@t or p@t))  >>
S [55] ->
Q [27] << LRL() >>
by Substitution of Assertion Labels
and theorem 2:
Theorem (2) [serial 1020] used for:
  Substituted assertions' predicates for labels  [serial 1003]
 


Theorem (4)                               [serial 1028] 
P [71] << p@last_beat
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
S [55] ->
Q [55] << (exists t~time
  in now - lrl .. now 
  that n@t ) or (exists t~time
  in now - lrl .. now 
  that p@t ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (5)                               [serial 1025] 
P [71] << p@last_beat
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
S [55] ->
Q [55] << exists t~time
  in now - lrl .. now 
  that n@t or p@t  >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 4:
Theorem (4) [serial 1028] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 1025]
 


Theorem (6)                               [serial 1021] 
P [71] << ((p@last_beat
 and (exists t~time
  in ((now - lrl)) .. now 
  that p@t ))) >>
S [55] ->
Q [55] << exists t~time
  in ((now - lrl)) .. now 
  that ((n@t or p@t))  >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 5:
Theorem (5) [serial 1025] used for:
    normalization of [serial 1021]
 


Theorem (7)                               [serial 1004] 
P [71] << PACE(now) >>
S [55] ->
Q [55] << exists t~time
  in ((now - lrl)) .. now 
  that ((n@t or p@t))  >>
by Substitution of Assertion Labels
and theorem 6:
Theorem (6) [serial 1021] used for:
  Substituted assertions' predicates for labels  [serial 1004]
 


Theorem (8)                               [serial 1033] 
P [75] << n@last_beat
 and (exists t~time
  in now - lrl .. now 
  that n@t ) >>
S [55] ->
Q [55] << (exists t~time
  in now - lrl .. now 
  that n@t ) or (exists t~time
  in now - lrl .. now 
  that p@t ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (9)                               [serial 1031] 
P [75] << n@last_beat
 and (exists t~time
  in now - lrl .. now 
  that n@t ) >>
S [55] ->
Q [55] << exists t~time
  in now - lrl .. now 
  that n@t or p@t  >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 8:
Theorem (8) [serial 1033] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 1031]
 


Theorem (10)                               [serial 1029] 
P [75] << ((n@last_beat
 and (exists t~time
  in ((now - lrl)) .. now 
  that n@t ))) >>
S [55] ->
Q [55] << exists t~time
  in ((now - lrl)) .. now 
  that ((n@t or p@t))  >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 9:
Theorem (9) [serial 1031] used for:
    normalization of [serial 1029]
 


Theorem (11)                               [serial 1005] 
P [75] << SENSE(now) >>
S [55] ->
Q [55] << exists t~time
  in ((now - lrl)) .. now 
  that ((n@t or p@t))  >>
by Substitution of Assertion Labels
and theorem 10:
Theorem (10) [serial 1029] used for:
  Substituted assertions' predicates for labels in preconditions [serial 1005]
 


Theorem (12)                               [serial 1006] 
P [67] << (now = 0) >>
S [67] ->
Q [67] << true >>
by True Conclusion Schema (tc): P->true


Theorem (13)                               [serial 1038] 
P [78] << s@now
 and PACE(now) >>
S [78] ->
Q [78] << true >>
by True Conclusion Schema (tc): P->true


Theorem (14)                               [serial 1037] 
P [78] << s@now
 and PACE(now) >>
S [78] ->
Q [78] << (not ((now - last_beat) < vrp@now)) or (now - last_beat) < vrp@now >>
by Law of Excluded Middle: P or not P is tautology
and theorem 13:
Theorem (13) [serial 1038] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1037]
 


Theorem (15)                               [serial 1035] 
P [78] << s@now
 and PACE(now) >>
S [78] ->
Q [78] << vrp@now <= (now - last_beat) or (now - last_beat) < vrp@now >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 14:
Theorem (14) [serial 1037] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1035]
 


Theorem (16)                               [serial 1007] 
P [78] << (s@now
 and PACE(now)) >>
S [78] ->
Q [78] << (((now - last_beat) < vrp@now)) or (((now - last_beat) >= vrp@now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 15:
Theorem (15) [serial 1035] used for:
    normalization of [serial 1007]
 


Theorem (17)                               [serial 1046] 
P [81] << s@now
 and SENSE(now) >>
S [81] ->
Q [81] << true >>
by True Conclusion Schema (tc): P->true


Theorem (18)                               [serial 1044] 
P [81] << s@now
 and SENSE(now) >>
S [81] ->
Q [81] << not (now - last_beat) < vrp@now or (now - last_beat) < vrp@now >>
by Law of Excluded Middle: P or not P is tautology
and theorem 17:
Theorem (17) [serial 1046] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1044]
 


Theorem (19)                               [serial 1042] 
P [81] << s@now
 and SENSE(now) >>
S [81] ->
Q [81] << (not ((now - last_beat) < vrp@now)) or (now - last_beat) < vrp@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 18:
Theorem (18) [serial 1044] used for:
    normalization of [serial 1042]
 


Theorem (20)                               [serial 1040] 
P [81] << s@now
 and SENSE(now) >>
S [81] ->
Q [81] << vrp@now <= (now - last_beat) or (now - last_beat) < vrp@now >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 19:
Theorem (19) [serial 1042] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1040]
 


Theorem (21)                               [serial 1008] 
P [81] << (s@now
 and SENSE(now)) >>
S [81] ->
Q [81] << (((now - last_beat) < vrp@now)) or (((now - last_beat) >= vrp@now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 20:
Theorem (20) [serial 1040] used for:
    normalization of [serial 1008]
 


Theorem (22)                               [serial 1047] 
P [67] << (now = 0) >>
S [88] ->
Q [88] << (now = 0) >>
by Identity (id):  P->P is tautology


Theorem (23)                               [serial 1073] 
P [88] << n@now
 and last_beat = now >>
S [89] ->
Q [49] << n@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (24)                               [serial 1071] 
P [88] << n@now
 and last_beat = now >>
S [89] ->
Q [49] << n@last_beat >>
by Guided Substitution of Equals
and theorem 23:
Theorem (23) [serial 1073] used for:
  Guided Substitution of Equals
 replacing "last_beat" with its = "now" in its postcondition [serial 1071]
 


Theorem (25)                               [serial 1077] 
P [88] << n@now
 and last_beat = now >>
S [89] ->
Q [50] << n@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (26)                               [serial 1075] 
P [88] << n@now
 and last_beat = now >>
S [89] ->
Q [50] << exists t~time
  in now - lrl .. now 
  that n@t  >>
by Introduction of Existential Quantification
and theorem 25:
Theorem (25) [serial 1077] used for:
  replace exististential quantification with predicate [serial 1075]
 


Theorem (27)                               [serial 1072] 
P [88] << n@now
 and last_beat = now >>
S [89] ->
Q [50] << (exists t~time
  in now - lrl .. now 
  that n@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 26:
Theorem (26) [serial 1075] used for:
    normalization of [serial 1072]
 


Theorem (28)                               [serial 1069] 
P [88] << n@now
 and last_beat = now >>
S [89] ->
Q [75] << n@last_beat
 and (exists t~time
  in now - lrl .. now 
  that n@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 24 27:
Theorem (24) [serial 1071] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1069]
 
Theorem (27) [serial 1072] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1069]
 


Theorem (29)                               [serial 1067] 
P [88] << n@now
 and last_beat = now >>
S [89] ->
Q [75] << ((n@last_beat
 and (exists t~time
  in ((now - lrl)) .. now 
  that n@t ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 28:
Theorem (28) [serial 1069] used for:
    normalization of [serial 1067]
 


Theorem (30)                               [serial 1056] 
P [88] << n@now
 and last_beat = now >>
S [89] ->
Q [75] << SENSE(now) >>
by Substitution of Assertion Labels
and theorem 29:
Theorem (29) [serial 1067] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1056]
 


Theorem (31)                               [serial 1048] 
P [88] << n@now
 and ((last_beat = now)) >>
S [89] ->
Q [75] << SENSE(now) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 30:
Theorem (30) [serial 1056] used for:
    normalization of [serial 1048]
 


Theorem (32)                               [serial 1058] 
P [88] << 0 = now >>
S [89] ->
Q [22] << 0 = now or VS() >>
by Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (33)                               [serial 1051] 
P [88] << (now = 0) >>
S [89] ->
Q [22] << (now = 0) or VS() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 32:
Theorem (32) [serial 1058] used for:
    normalization of [serial 1051]
 


Theorem (34)                               [serial 1080] 
P [89] << (0 = now or VS())@now
 and 0 = now >>
S [89] ->
Q [89] << (0 = now or VS())@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (35)                               [serial 1078] 
P [89] << (0 = now or VS())@now
 and 0 = now >>
S [89] ->
Q [89] << ((now = 0) or VS())@now >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 34:
Theorem (34) [serial 1080] used for:
    normalization of [serial 1078]
 


Theorem (36)                               [serial 1060] 
P [89] << (0 = now or VS())@now
 and 0 = now >>
S [89] ->
Q [89] << n@now >>
by Replacing port names with BLESS::Assertion properties
and theorem 35:
Theorem (35) [serial 1078] used for:
  Replacing port names with BLESS::Assertion properties [serial 1060]
 


Theorem (37)                               [serial 1052] 
P [89] << ((now = 0))
 and ((now = 0) or VS())@now >>
S [89] ->
Q [89] << n@now >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 36:
Theorem (36) [serial 1060] used for:
    normalization of [serial 1052]
 


Theorem (38)                               [serial 1049] 
P [88] << (now = 0) >>
S [89] n!
Q [89] << n@now >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 33 37:
Theorem (33) [serial 1051] used for:
  applied port output <<pre>> -> <<M[n]>> [serial 1049]
 
Theorem (37) [serial 1052] used for:
  applied port output <<pre and M[n]@now>> -> <<post>> [serial 1049]
 


Theorem (39)                               [serial 1062] 
P [67] << 0 = now >>
S [91] ->
Q [92] << true >>
by True Conclusion Schema (tc): P->true


Theorem (40)                               [serial 1054] 
P [67] << (now = 0) >>
S [91] ->
Q [92] << (true) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 39:
Theorem (39) [serial 1062] used for:
    normalization of [serial 1054]
 


Theorem (41)                               [serial 1053] 
P [67] << (now = 0) >>
S [91] ->
Q [92] << (now = now) >>
by Equality Law (idistr):  a=a <-> true
and theorem 40:
Theorem (40) [serial 1054] used for:
  Equality Law (idistr):  a=a <-> true [serial 1053]
 


Theorem (42)                               [serial 1050] 
P [67] << (now = 0) >>
S [91] last_beat := now
Q [92] << (last_beat = now) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 41:
Theorem (41) [serial 1053] used for:
  applied wp for assignment [serial 1050]
 


Theorem (43)                               [serial 1009] 
P [67] << (now = 0) >>
S [88] << (now = 0) >>
n!
<< n@now >>
&
last_beat := now
<< (last_beat = now) >>
Q [75] << SENSE(now) >>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 22 31 38 42:
Theorem (22) [serial 1047] used for:
  P -> P1 in concurrent composition for [serial 1009]
 
Theorem (31) [serial 1048] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1009]
 
Theorem (38) [serial 1049] used for:
  <<P1>> S1 <<Q1>> in concurrent composition for [serial 1009]
 
Theorem (42) [serial 1050] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1009]
 


Theorem (44)                               [serial 1010] 
P [96] << (PACE(now))
 and h@now
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that (((n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that s@u ) >>
S [95] ->
Q [82] << true >>
by True Conclusion Schema (tc): P->true


Theorem (45)                               [serial 1011] 
P [99] << (SENSE(now))
 and h@now
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that (((n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that s@u ) >>
S [98] ->
Q [82] << true >>
by True Conclusion Schema (tc): P->true


Theorem (46)                               [serial 1115] 
P [102] << p@last_beat
 and (n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that s@u )
 and not (exists u~time
  in tops ,, now 
  that (n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ) )
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
S [103] ->
Q [103] << (n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t ) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (47)                               [serial 1113] 
P [102] << p@last_beat
 and (n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that s@u )
 and not (exists u~time
  in tops ,, now 
  that (n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ) )
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
S [103] ->
Q [103] << ((((n or p))@((now-lrl))
 and not (exists t~time
  in ((now - lrl)) ,, now 
  that ((n or p))@t ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 46:
Theorem (46) [serial 1115] used for:
    normalization of [serial 1113]
 


Theorem (48)                               [serial 1090] 
P [102] << p@last_beat
 and (n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that s@u )
 and not (exists u~time
  in tops ,, now 
  that (n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ) )
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
S [103] ->
Q [103] << VP() >>
by Substitution of Assertion Labels
and theorem 47:
Theorem (47) [serial 1113] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1090]
 


Theorem (49)                               [serial 1118] 
P [103] << p@now
 and last_beat = now >>
S [104] ->
Q [44] << p@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (50)                               [serial 1105] 
P [103] << p@now
 and last_beat = now >>
S [104] ->
Q [44] << p@last_beat >>
by Guided Substitution of Equals
and theorem 49:
Theorem (49) [serial 1118] used for:
  Guided Substitution of Equals
 replacing "last_beat" with its = "now" in its postcondition [serial 1105]
 


Theorem (51)                               [serial 1119] 
P [103] << p@now
 and last_beat = now >>
S [104] ->
Q [45] << p@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (52)                               [serial 1111] 
P [103] << p@now
 and last_beat = now >>
S [104] ->
Q [45] << exists t~time
  in now - lrl .. now 
  that p@t  >>
by Introduction of Existential Quantification
and theorem 51:
Theorem (51) [serial 1119] used for:
  replace exististential quantification with predicate [serial 1111]
 


Theorem (53)                               [serial 1106] 
P [103] << p@now
 and last_beat = now >>
S [104] ->
Q [45] << (exists t~time
  in now - lrl .. now 
  that p@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 52:
Theorem (52) [serial 1111] used for:
    normalization of [serial 1106]
 


Theorem (54)                               [serial 1100] 
P [103] << p@now
 and last_beat = now >>
S [104] ->
Q [71] << p@last_beat
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 50 53:
Theorem (50) [serial 1105] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1100]
 
Theorem (53) [serial 1106] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1100]
 


Theorem (55)                               [serial 1091] 
P [103] << p@now
 and (last_beat = now) >>
S [104] ->
Q [71] << p@last_beat
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 54:
Theorem (54) [serial 1100] used for:
    normalization of [serial 1091]
 


Theorem (56)                               [serial 1094] 
P [103] << VP() >>
S [104] ->
Q [20] << VP() >>
by Identity (id):  P->P is tautology


Theorem (57)                               [serial 1117] 
P [104] << VP()@now
 and VP() >>
S [104] ->
Q [104] << VP()@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (58)                               [serial 1102] 
P [104] << VP()@now
 and VP() >>
S [104] ->
Q [104] << p@now >>
by Replacing port names with BLESS::Assertion properties
and theorem 57:
Theorem (57) [serial 1117] used for:
  Replacing port names with BLESS::Assertion properties [serial 1102]
 


Theorem (59)                               [serial 1095] 
P [104] << (VP())
 and VP()@now >>
S [104] ->
Q [104] << p@now >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 58:
Theorem (58) [serial 1102] used for:
    normalization of [serial 1095]
 


Theorem (60)                               [serial 1092] 
P [103] << VP() >>
S [104] p!
Q [104] << p@now >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 56 59:
Theorem (56) [serial 1094] used for:
  applied port output <<pre>> -> <<M[p]>> [serial 1092]
 
Theorem (59) [serial 1095] used for:
  applied port output <<pre and M[p]@now>> -> <<post>> [serial 1092]
 


Theorem (61)                               [serial 1097] 
P [102] << p@last_beat
 and (n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that s@u )
 and not (exists u~time
  in tops ,, now 
  that (n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ) )
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
S [105] ->
Q [105] << true >>
by True Conclusion Schema (tc): P->true


Theorem (62)                               [serial 1096] 
P [102] << p@last_beat
 and (n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that s@u )
 and not (exists u~time
  in tops ,, now 
  that (n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ) )
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
S [105] ->
Q [105] << now = now >>
by Equality Law (idistr):  a=a <-> true
and theorem 61:
Theorem (61) [serial 1097] used for:
  Equality Law (idistr):  a=a <-> true [serial 1096]
 


Theorem (63)                               [serial 1093] 
P [102] << p@last_beat
 and (n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that s@u )
 and not (exists u~time
  in tops ,, now 
  that (n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ) )
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
S [105] last_beat := now
Q [105] << last_beat = now >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 62:
Theorem (62) [serial 1096] used for:
  applied wp for assignment [serial 1093]
 


Theorem (64)                               [serial 1088] 
P [102] << p@last_beat
 and (n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that s@u )
 and not (exists u~time
  in tops ,, now 
  that (n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ) )
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
S [103] << VP() >>
p!
<< p@now >>
&
last_beat := now
<< last_beat = now >>
Q [71] << p@last_beat
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 48 55 60 63:
Theorem (48) [serial 1090] used for:
  P -> P1 in concurrent composition for [serial 1088]
 
Theorem (55) [serial 1091] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1088]
 
Theorem (60) [serial 1092] used for:
  <<P1>> S1 <<Q1>> in concurrent composition for [serial 1088]
 
Theorem (63) [serial 1093] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1088]
 


Theorem (65)                               [serial 1086] 
P [102] << p@last_beat
 and (exists t~time
  in now - lrl .. now 
  that p@t )
 and (n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that s@u )
 and not (exists u~time
  in tops ,, now 
  that (n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ) ) >>
S [103] << VP() >>
p!
<< p@now >>
&
last_beat := now
<< last_beat = now >>
Q [71] << p@last_beat
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 64:
Theorem (64) [serial 1088] used for:
    normalization of [serial 1086]
 


Theorem (66)                               [serial 1084] 
P [102] << not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that s@u )
 and not (exists u~time
  in tops ,, now 
  that (n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ) )
 and (p@last_beat
 and (exists t~time
  in now - lrl .. now 
  that p@t ))
 and ((n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )) >>
S [103] << VP() >>
p!
<< p@now >>
&
last_beat := now
<< last_beat = now >>
Q [71] << p@last_beat
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 65:
Theorem (65) [serial 1086] used for:
  Associativity: (b.c).a = a.b.c [serial 1084]
 


Theorem (67)                               [serial 1082] 
P [102] << (((p@last_beat
 and (exists t~time
  in ((now - lrl)) .. now 
  that p@t ))))
 and (((n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )))
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that (((n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that s@u ) >>
S [103] << VP() >>
p!
<< p@now >>
&
last_beat := now
<< (last_beat = now) >>
Q [71] << ((p@last_beat
 and (exists t~time
  in ((now - lrl)) .. now 
  that p@t ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 66:
Theorem (66) [serial 1084] used for:
    normalization of [serial 1082]
 


Theorem (68)                               [serial 1012] 
P [102] << (PACE(now))
 and (((n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )))
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that (((n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that s@u ) >>
S [103] << VP() >>
p!
<< p@now >>
&
last_beat := now
<< (last_beat = now) >>
Q [71] << PACE(now) >>
by Substitution of Assertion Labels
and theorem 67:
Theorem (67) [serial 1082] used for:
  Substituted assertions' predicates for labels  [serial 1012]
 


Theorem (69)                               [serial 1121] 
P [108] << s@now
 and PACE(now)
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that s@u )
 and not (exists u~time
  in tops ,, now 
  that (n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ) ) >>
S [107] ->
Q [78] << s@now
 and PACE(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (70)                               [serial 1013] 
P [108] << (PACE(now))
 and s@now
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that (((n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that s@u ) >>
S [107] ->
Q [78] << (s@now
 and PACE(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 69:
Theorem (69) [serial 1121] used for:
    normalization of [serial 1013]
 


Theorem (71)                               [serial 1126] 
P [78] << s@now
 and PACE(now)
 and (now - last_beat) < vrp@now >>
S [110] ->
Q [71] << PACE(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (72)                               [serial 1124] 
P [78] << (s@now
 and PACE(now))
 and (now - last_beat) < vrp@now >>
S [110] ->
Q [71] << PACE(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 71:
Theorem (71) [serial 1126] used for:
  Associativity: (b.c).a = a.b.c [serial 1124]
 


Theorem (73)                               [serial 1014] 
P [78] << ((s@now
 and PACE(now)))
 and (((now - last_beat) < vrp@now)) >>
S [110] ->
Q [71] << PACE(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 72:
Theorem (72) [serial 1124] used for:
    normalization of [serial 1014]
 


Theorem (74)                               [serial 1169] 
P [78] << vrp <= (now - last_beat)
 and p@last_beat
 and s
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
S [116] ->
Q [1] << vrp <= (now - last_beat) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (75)                               [serial 1161] 
P [78] << vrp@now <= (now - last_beat)
 and p@last_beat
 and s@now
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
S [116] ->
Q [1] << vrp <= (now - last_beat) >>
by Assume Present:  P = P@now = P^0 
and theorem 74:
Theorem (74) [serial 1169] used for:
  Assume Present:  P = P@now = P^0  [serial 1161]
 


Theorem (76)                               [serial 1167] 
P [78] << vrp@now <= (now - last_beat)
 and p@last_beat
 and s@now
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
S [116] ->
Q [33] << n@last_beat or p@last_beat >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (77)                               [serial 1164] 
P [78] << vrp@now <= (now - last_beat)
 and p@last_beat
 and s@now
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
S [116] ->
Q [33] << (n@last_beat or p@last_beat) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 76:
Theorem (76) [serial 1167] used for:
    normalization of [serial 1164]
 


Theorem (78)                               [serial 1162] 
P [78] << vrp@now <= (now - last_beat)
 and p@last_beat
 and s@now
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
S [116] ->
Q [33] << (n or p)@last_beat >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 77:
Theorem (77) [serial 1164] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 1162]
 


Theorem (79)                               [serial 1163] 
P [78] << vrp@now <= (now - last_beat)
 and p@last_beat
 and s@now
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
S [116] ->
Q [36] << s@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (80)                               [serial 1160] 
P [78] << vrp@now <= (now - last_beat)
 and p@last_beat
 and s@now
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
S [116] ->
Q [116] << vrp <= (now - last_beat)
 and (n or p)@last_beat
 and s@now >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 75 78 79:
Theorem (75) [serial 1161] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1160]
 
Theorem (78) [serial 1162] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1160]
 
Theorem (79) [serial 1163] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1160]
 


Theorem (81)                               [serial 1158] 
P [78] << vrp@now <= (now - last_beat)
 and p@last_beat
 and s@now
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
S [116] ->
Q [116] << s@now
 and (vrp <= (now - last_beat)
 and (n or p)@last_beat) >>
by Associativity: (b.c).a = a.b.c
and theorem 80:
Theorem (80) [serial 1160] used for:
  Associativity: (b.c).a = a.b.c [serial 1158]
 


Theorem (82)                               [serial 1156] 
P [78] << p@last_beat
 and (exists t~time
  in now - lrl .. now 
  that p@t )
 and s@now
 and vrp@now <= (now - last_beat) >>
S [116] ->
Q [116] << s@now
 and ((((n or p))@last_beat
 and ((((now - last_beat)) >= vrp)))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 81:
Theorem (81) [serial 1158] used for:
    normalization of [serial 1156]
 


Theorem (83)                               [serial 1155] 
P [78] << p@last_beat
 and (exists t~time
  in now - lrl .. now 
  that p@t )
 and s@now
 and vrp@now <= (now - last_beat) >>
S [116] ->
Q [116] << s@now
 and notVRP() >>
by Substitution of Assertion Labels
and theorem 82:
Theorem (82) [serial 1156] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1155]
 


Theorem (84)                               [serial 1154] 
P [78] << s@now
 and (p@last_beat
 and (exists t~time
  in now - lrl .. now 
  that p@t ))
 and vrp@now <= (now - last_beat) >>
S [116] ->
Q [116] << s@now
 and notVRP() >>
by Associativity: (b.c).a = a.b.c
and theorem 83:
Theorem (83) [serial 1155] used for:
  Associativity: (b.c).a = a.b.c [serial 1154]
 


Theorem (85)                               [serial 1152] 
P [78] << vrp@now <= (now - last_beat)
 and (s@now
 and (p@last_beat
 and (exists t~time
  in now - lrl .. now 
  that p@t ))) >>
S [116] ->
Q [116] << s@now
 and notVRP() >>
by Associativity: (b.c).a = a.b.c
and theorem 84:
Theorem (84) [serial 1154] used for:
  Associativity: (b.c).a = a.b.c [serial 1152]
 


Theorem (86)                               [serial 1150] 
P [78] << vrp@now <= (now - last_beat)
 and (s@now
 and ((p@last_beat
 and (exists t~time
  in ((now - lrl)) .. now 
  that p@t )))) >>
S [116] ->
Q [116] << ((s@now
 and notVRP())) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 85:
Theorem (85) [serial 1152] used for:
    normalization of [serial 1150]
 


Theorem (87)                               [serial 1136] 
P [78] << vrp@now <= (now - last_beat)
 and (s@now
 and PACE(now)) >>
S [116] ->
Q [116] << VS() >>
by Substitution of Assertion Labels
and theorem 86:
Theorem (86) [serial 1150] used for:
  Substituted assertions' predicates for labels  [serial 1136]
 


Theorem (88)                               [serial 1127] 
P [78] << ((s@now
 and PACE(now)))
 and (((now - last_beat) >= vrp@now)) >>
S [116] ->
Q [116] << VS() >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 87:
Theorem (87) [serial 1136] used for:
    normalization of [serial 1127]
 


Theorem (89)                               [serial 1176] 
P [116] << n@now
 and last_beat = now >>
S [117] ->
Q [49] << n@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (90)                               [serial 1174] 
P [116] << n@now
 and last_beat = now >>
S [117] ->
Q [49] << n@last_beat >>
by Guided Substitution of Equals
and theorem 89:
Theorem (89) [serial 1176] used for:
  Guided Substitution of Equals
 replacing "last_beat" with its = "now" in its postcondition [serial 1174]
 


Theorem (91)                               [serial 1180] 
P [116] << n@now
 and last_beat = now >>
S [117] ->
Q [50] << n@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (92)                               [serial 1178] 
P [116] << n@now
 and last_beat = now >>
S [117] ->
Q [50] << exists t~time
  in now - lrl .. now 
  that n@t  >>
by Introduction of Existential Quantification
and theorem 91:
Theorem (91) [serial 1180] used for:
  replace exististential quantification with predicate [serial 1178]
 


Theorem (93)                               [serial 1175] 
P [116] << n@now
 and last_beat = now >>
S [117] ->
Q [50] << (exists t~time
  in now - lrl .. now 
  that n@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 92:
Theorem (92) [serial 1178] used for:
    normalization of [serial 1175]
 


Theorem (94)                               [serial 1172] 
P [116] << n@now
 and last_beat = now >>
S [117] ->
Q [75] << n@last_beat
 and (exists t~time
  in now - lrl .. now 
  that n@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 90 93:
Theorem (90) [serial 1174] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1172]
 
Theorem (93) [serial 1175] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1172]
 


Theorem (95)                               [serial 1170] 
P [116] << n@now
 and last_beat = now >>
S [117] ->
Q [75] << ((n@last_beat
 and (exists t~time
  in ((now - lrl)) .. now 
  that n@t ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 94:
Theorem (94) [serial 1172] used for:
    normalization of [serial 1170]
 


Theorem (96)                               [serial 1138] 
P [116] << n@now
 and last_beat = now >>
S [117] ->
Q [75] << SENSE(now) >>
by Substitution of Assertion Labels
and theorem 95:
Theorem (95) [serial 1170] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1138]
 


Theorem (97)                               [serial 1128] 
P [116] << n@now
 and ((last_beat = now)) >>
S [117] ->
Q [75] << SENSE(now) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 96:
Theorem (96) [serial 1138] used for:
    normalization of [serial 1128]
 


Theorem (98)                               [serial 1140] 
P [116] << VS() >>
S [117] ->
Q [22] << 0 = now or VS() >>
by Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (99)                               [serial 1131] 
P [116] << VS() >>
S [117] ->
Q [22] << (now = 0) or VS() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 98:
Theorem (98) [serial 1140] used for:
    normalization of [serial 1131]
 


Theorem (100)                               [serial 1183] 
P [117] << (0 = now or VS())@now
 and VS() >>
S [117] ->
Q [117] << (0 = now or VS())@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (101)                               [serial 1181] 
P [117] << (0 = now or VS())@now
 and VS() >>
S [117] ->
Q [117] << ((now = 0) or VS())@now >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 100:
Theorem (100) [serial 1183] used for:
    normalization of [serial 1181]
 


Theorem (102)                               [serial 1142] 
P [117] << (0 = now or VS())@now
 and VS() >>
S [117] ->
Q [117] << n@now >>
by Replacing port names with BLESS::Assertion properties
and theorem 101:
Theorem (101) [serial 1181] used for:
  Replacing port names with BLESS::Assertion properties [serial 1142]
 


Theorem (103)                               [serial 1132] 
P [117] << (VS())
 and ((now = 0) or VS())@now >>
S [117] ->
Q [117] << n@now >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 102:
Theorem (102) [serial 1142] used for:
    normalization of [serial 1132]
 


Theorem (104)                               [serial 1129] 
P [116] << VS() >>
S [117] n!
Q [117] << n@now >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 99 103:
Theorem (99) [serial 1131] used for:
  applied port output <<pre>> -> <<M[n]>> [serial 1129]
 
Theorem (103) [serial 1132] used for:
  applied port output <<pre and M[n]@now>> -> <<post>> [serial 1129]
 


Theorem (105)                               [serial 1144] 
P [78] << vrp@now <= (now - last_beat)
 and (s@now
 and PACE(now)) >>
S [118] ->
Q [118] << true >>
by True Conclusion Schema (tc): P->true


Theorem (106)                               [serial 1134] 
P [78] << ((s@now
 and PACE(now)))
 and (((now - last_beat) >= vrp@now)) >>
S [118] ->
Q [118] << (true) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 105:
Theorem (105) [serial 1144] used for:
    normalization of [serial 1134]
 


Theorem (107)                               [serial 1133] 
P [78] << ((s@now
 and PACE(now)))
 and (((now - last_beat) >= vrp@now)) >>
S [118] ->
Q [118] << (now = now) >>
by Equality Law (idistr):  a=a <-> true
and theorem 106:
Theorem (106) [serial 1134] used for:
  Equality Law (idistr):  a=a <-> true [serial 1133]
 


Theorem (108)                               [serial 1130] 
P [78] << ((s@now
 and PACE(now)))
 and (((now - last_beat) >= vrp@now)) >>
S [118] last_beat := now
Q [118] << (last_beat = now) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 107:
Theorem (107) [serial 1133] used for:
  applied wp for assignment [serial 1130]
 


Theorem (109)                               [serial 1015] 
P [78] << ((s@now
 and PACE(now)))
 and (((now - last_beat) >= vrp@now)) >>
S [116] << VS() >>
n!
<< n@now >>
&
last_beat := now
<< (last_beat = now) >>
Q [75] << SENSE(now) >>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 88 97 104 108:
Theorem (88) [serial 1127] used for:
  P -> P1 in concurrent composition for [serial 1015]
 
Theorem (97) [serial 1128] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1015]
 
Theorem (104) [serial 1129] used for:
  <<P1>> S1 <<Q1>> in concurrent composition for [serial 1015]
 
Theorem (108) [serial 1130] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1015]
 


Theorem (110)                               [serial 1209] 
P [121] << (n or p)@(now-lrl)
 and SENSE(now)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that s@u )
 and not (exists u~time
  in tops ,, now 
  that (n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ) ) >>
S [122] ->
Q [122] << (n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t ) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (111)                               [serial 1207] 
P [121] << (n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )
 and SENSE(now)
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that s@u )
 and not (exists u~time
  in tops ,, now 
  that (n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ) ) >>
S [122] ->
Q [122] << ((((n or p))@((now-lrl))
 and not (exists t~time
  in ((now - lrl)) ,, now 
  that ((n or p))@t ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 110:
Theorem (110) [serial 1209] used for:
    normalization of [serial 1207]
 


Theorem (112)                               [serial 1206] 
P [121] << SENSE(now)
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that s@u )
 and not (exists u~time
  in tops ,, now 
  that (n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ) )
 and ((n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )) >>
S [122] ->
Q [122] << ((((n or p))@((now-lrl))
 and not (exists t~time
  in ((now - lrl)) ,, now 
  that ((n or p))@t ))) >>
by Associativity: (b.c).a = a.b.c
and theorem 111:
Theorem (111) [serial 1207] used for:
  Associativity: (b.c).a = a.b.c [serial 1206]
 


Theorem (113)                               [serial 1194] 
P [121] << SENSE(now)
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that s@u )
 and not (exists u~time
  in tops ,, now 
  that (n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ) )
 and ((n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )) >>
S [122] ->
Q [122] << VP() >>
by Substitution of Assertion Labels
and theorem 112:
Theorem (112) [serial 1206] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1194]
 


Theorem (114)                               [serial 1185] 
P [121] << (SENSE(now))
 and (((n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )))
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that (((n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that s@u ) >>
S [122] ->
Q [122] << VP() >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 113:
Theorem (113) [serial 1194] used for:
    normalization of [serial 1185]
 


Theorem (115)                               [serial 1217] 
P [122] << p@now
 and last_beat = now >>
S [123] ->
Q [44] << p@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (116)                               [serial 1215] 
P [122] << p@now
 and last_beat = now >>
S [123] ->
Q [44] << p@last_beat >>
by Guided Substitution of Equals
and theorem 115:
Theorem (115) [serial 1217] used for:
  Guided Substitution of Equals
 replacing "last_beat" with its = "now" in its postcondition [serial 1215]
 


Theorem (117)                               [serial 1221] 
P [122] << p@now
 and last_beat = now >>
S [123] ->
Q [45] << p@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (118)                               [serial 1219] 
P [122] << p@now
 and last_beat = now >>
S [123] ->
Q [45] << exists t~time
  in now - lrl .. now 
  that p@t  >>
by Introduction of Existential Quantification
and theorem 117:
Theorem (117) [serial 1221] used for:
  replace exististential quantification with predicate [serial 1219]
 


Theorem (119)                               [serial 1216] 
P [122] << p@now
 and last_beat = now >>
S [123] ->
Q [45] << (exists t~time
  in now - lrl .. now 
  that p@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 118:
Theorem (118) [serial 1219] used for:
    normalization of [serial 1216]
 


Theorem (120)                               [serial 1213] 
P [122] << p@now
 and last_beat = now >>
S [123] ->
Q [71] << p@last_beat
 and (exists t~time
  in now - lrl .. now 
  that p@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 116 119:
Theorem (116) [serial 1215] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1213]
 
Theorem (119) [serial 1216] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1213]
 


Theorem (121)                               [serial 1211] 
P [122] << p@now
 and last_beat = now >>
S [123] ->
Q [71] << ((p@last_beat
 and (exists t~time
  in ((now - lrl)) .. now 
  that p@t ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 120:
Theorem (120) [serial 1213] used for:
    normalization of [serial 1211]
 


Theorem (122)                               [serial 1196] 
P [122] << p@now
 and last_beat = now >>
S [123] ->
Q [71] << PACE(now) >>
by Substitution of Assertion Labels
and theorem 121:
Theorem (121) [serial 1211] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1196]
 


Theorem (123)                               [serial 1186] 
P [122] << p@now
 and ((last_beat = now)) >>
S [123] ->
Q [71] << PACE(now) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 122:
Theorem (122) [serial 1196] used for:
    normalization of [serial 1186]
 


Theorem (124)                               [serial 1189] 
P [122] << VP() >>
S [123] ->
Q [20] << VP() >>
by Identity (id):  P->P is tautology


Theorem (125)                               [serial 1222] 
P [123] << VP()@now
 and VP() >>
S [123] ->
Q [123] << VP()@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (126)                               [serial 1199] 
P [123] << VP()@now
 and VP() >>
S [123] ->
Q [123] << p@now >>
by Replacing port names with BLESS::Assertion properties
and theorem 125:
Theorem (125) [serial 1222] used for:
  Replacing port names with BLESS::Assertion properties [serial 1199]
 


Theorem (127)                               [serial 1190] 
P [123] << (VP())
 and VP()@now >>
S [123] ->
Q [123] << p@now >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 126:
Theorem (126) [serial 1199] used for:
    normalization of [serial 1190]
 


Theorem (128)                               [serial 1187] 
P [122] << VP() >>
S [123] p!
Q [123] << p@now >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 124 127:
Theorem (124) [serial 1189] used for:
  applied port output <<pre>> -> <<M[p]>> [serial 1187]
 
Theorem (127) [serial 1190] used for:
  applied port output <<pre and M[p]@now>> -> <<post>> [serial 1187]
 


Theorem (129)                               [serial 1201] 
P [121] << SENSE(now)
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that s@u )
 and not (exists u~time
  in tops ,, now 
  that (n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ) )
 and ((n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )) >>
S [124] ->
Q [124] << true >>
by True Conclusion Schema (tc): P->true


Theorem (130)                               [serial 1192] 
P [121] << (SENSE(now))
 and (((n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )))
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that (((n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that s@u ) >>
S [124] ->
Q [124] << (true) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 129:
Theorem (129) [serial 1201] used for:
    normalization of [serial 1192]
 


Theorem (131)                               [serial 1191] 
P [121] << (SENSE(now))
 and (((n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )))
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that (((n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that s@u ) >>
S [124] ->
Q [124] << (now = now) >>
by Equality Law (idistr):  a=a <-> true
and theorem 130:
Theorem (130) [serial 1192] used for:
  Equality Law (idistr):  a=a <-> true [serial 1191]
 


Theorem (132)                               [serial 1188] 
P [121] << (SENSE(now))
 and (((n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )))
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that (((n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that s@u ) >>
S [124] last_beat := now
Q [124] << (last_beat = now) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 131:
Theorem (131) [serial 1191] used for:
  applied wp for assignment [serial 1188]
 


Theorem (133)                               [serial 1016] 
P [121] << (SENSE(now))
 and (((n or p)@(now-lrl)
 and not (exists t~time
  in now - lrl ,, now 
  that (n or p)@t )))
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that (((n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that s@u ) >>
S [122] << VP() >>
p!
<< p@now >>
&
last_beat := now
<< (last_beat = now) >>
Q [71] << PACE(now) >>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 114 123 128 132:
Theorem (114) [serial 1185] used for:
  P -> P1 in concurrent composition for [serial 1016]
 
Theorem (123) [serial 1186] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1016]
 
Theorem (128) [serial 1187] used for:
  <<P1>> S1 <<Q1>> in concurrent composition for [serial 1016]
 
Theorem (132) [serial 1188] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1016]
 


Theorem (134)                               [serial 1224] 
P [127] << s@now
 and SENSE(now)
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that s@u )
 and not (exists u~time
  in tops ,, now 
  that (n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ) ) >>
S [126] ->
Q [81] << s@now
 and SENSE(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (135)                               [serial 1017] 
P [127] << (SENSE(now))
 and s@now
 and not (exists u~time
  in tops ,, now 
  that h@u )
 and not (exists u~time
  in tops ,, now 
  that (((n or p)@(u-lrl)
        and not (exists t~time
         in u - lrl ,, u 
         that (n or p)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that s@u ) >>
S [126] ->
Q [81] << (s@now
 and SENSE(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 134:
Theorem (134) [serial 1224] used for:
    normalization of [serial 1017]
 


Theorem (136)                               [serial 1229] 
P [81] << s@now
 and SENSE(now)
 and (now - last_beat) < vrp@now >>
S [129] ->
Q [75] << SENSE(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (137)                               [serial 1227] 
P [81] << (s@now
 and SENSE(now))
 and (now - last_beat) < vrp@now >>
S [129] ->
Q [75] << SENSE(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 136:
Theorem (136) [serial 1229] used for:
  Associativity: (b.c).a = a.b.c [serial 1227]
 


Theorem (138)                               [serial 1018] 
P [81] << ((s@now
 and SENSE(now)))
 and (((now - last_beat) < vrp@now)) >>
S [129] ->
Q [75] << SENSE(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 137:
Theorem (137) [serial 1227] used for:
    normalization of [serial 1018]
 


Theorem (139)                               [serial 1259] 
P [81] << s@now
 and SENSE(now)
 and vrp@now <= (now - last_beat) >>
S [135] ->
Q [36] << s@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (140)                               [serial 1257] 
P [81] << vrp@now <= (now - last_beat)
 and (s@now
 and SENSE(now)) >>
S [135] ->
Q [36] << s@now >>
by Associativity: (b.c).a = a.b.c
and theorem 139:
Theorem (139) [serial 1259] used for:
  Associativity: (b.c).a = a.b.c [serial 1257]
 


Theorem (141)                               [serial 1267] 
P [81] << vrp <= (now - last_beat)
 and s
 and SENSE(now) >>
S [135] ->
Q [1] << vrp <= (now - last_beat) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (142)                               [serial 1265] 
P [81] << vrp@now <= (now - last_beat)
 and s@now
 and SENSE(now) >>
S [135] ->
Q [1] << vrp <= (now - last_beat) >>
by Assume Present:  P = P@now = P^0 
and theorem 141:
Theorem (141) [serial 1267] used for:
  Assume Present:  P = P@now = P^0  [serial 1265]
 


Theorem (143)                               [serial 1274] 
P [81] << n@last_beat
 and (exists t~time
  in now - lrl .. now 
  that n@t )
 and vrp <= (now - last_beat)
 and s >>
S [135] ->
Q [33] << n@last_beat or p@last_beat >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (144)                               [serial 1272] 
P [81] << vrp <= (now - last_beat)
 and s
 and (n@last_beat
 and (exists t~time
  in now - lrl .. now 
  that n@t )) >>
S [135] ->
Q [33] << n@last_beat or p@last_beat >>
by Associativity: (b.c).a = a.b.c
and theorem 143:
Theorem (143) [serial 1274] used for:
  Associativity: (b.c).a = a.b.c [serial 1272]
 


Theorem (145)                               [serial 1270] 
P [81] << vrp <= (now - last_beat)
 and s
 and ((n@last_beat
 and (exists t~time
  in ((now - lrl)) .. now 
  that n@t ))) >>
S [135] ->
Q [33] << (n@last_beat or p@last_beat) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 144:
Theorem (144) [serial 1272] used for:
    normalization of [serial 1270]
 


Theorem (146)                               [serial 1269] 
P [81] << vrp <= (now - last_beat)
 and s
 and ((n@last_beat
 and (exists t~time
  in ((now - lrl)) .. now 
  that n@t ))) >>
S [135] ->
Q [33] << (n or p)@last_beat >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 145:
Theorem (145) [serial 1270] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 1269]
 


Theorem (147)                               [serial 1268] 
P [81] << vrp <= (now - last_beat)
 and s
 and SENSE(now) >>
S [135] ->
Q [33] << (n or p)@last_beat >>
by Substitution of Assertion Labels
and theorem 146:
Theorem (146) [serial 1269] used for:
  Substituted assertions' predicates for labels in preconditions [serial 1268]
 


Theorem (148)                               [serial 1266] 
P [81] << vrp@now <= (now - last_beat)
 and s@now
 and SENSE(now) >>
S [135] ->
Q [33] << (n or p)@last_beat >>
by Assume Present:  P = P@now = P^0 
and theorem 147:
Theorem (147) [serial 1268] used for:
  Assume Present:  P = P@now = P^0  [serial 1266]
 


Theorem (149)                               [serial 1263] 
P [81] << vrp@now <= (now - last_beat)
 and s@now
 and SENSE(now) >>
S [135] ->
Q [36] << vrp <= (now - last_beat)
 and (n or p)@last_beat >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 142 148:
Theorem (142) [serial 1265] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1263]
 
Theorem (148) [serial 1266] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1263]
 


Theorem (150)                               [serial 1261] 
P [81] << s@now
 and SENSE(now)
 and vrp@now <= (now - last_beat) >>
S [135] ->
Q [36] << ((((n or p))@last_beat
 and ((((now - last_beat)) >= vrp)))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 149:
Theorem (149) [serial 1263] used for:
    normalization of [serial 1261]
 


Theorem (151)                               [serial 1260] 
P [81] << s@now
 and SENSE(now)
 and vrp@now <= (now - last_beat) >>
S [135] ->
Q [36] << notVRP() >>
by Substitution of Assertion Labels
and theorem 150:
Theorem (150) [serial 1261] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1260]
 


Theorem (152)                               [serial 1258] 
P [81] << vrp@now <= (now - last_beat)
 and (s@now
 and SENSE(now)) >>
S [135] ->
Q [36] << notVRP() >>
by Associativity: (b.c).a = a.b.c
and theorem 151:
Theorem (151) [serial 1260] used for:
  Associativity: (b.c).a = a.b.c [serial 1258]
 


Theorem (153)                               [serial 1255] 
P [81] << vrp@now <= (now - last_beat)
 and (s@now
 and SENSE(now)) >>
S [135] ->
Q [135] << s@now
 and notVRP() >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 140 152:
Theorem (140) [serial 1257] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1255]
 
Theorem (152) [serial 1258] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1255]
 


Theorem (154)                               [serial 1253] 
P [81] << vrp@now <= (now - last_beat)
 and (s@now
 and SENSE(now)) >>
S [135] ->
Q [135] << ((s@now
 and notVRP())) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 153:
Theorem (153) [serial 1255] used for:
    normalization of [serial 1253]
 


Theorem (155)                               [serial 1239] 
P [81] << vrp@now <= (now - last_beat)
 and (s@now
 and SENSE(now)) >>
S [135] ->
Q [135] << VS() >>
by Substitution of Assertion Labels
and theorem 154:
Theorem (154) [serial 1253] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1239]
 


Theorem (156)                               [serial 1230] 
P [81] << ((s@now
 and SENSE(now)))
 and (((now - last_beat) >= vrp@now)) >>
S [135] ->
Q [135] << VS() >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 155:
Theorem (155) [serial 1239] used for:
    normalization of [serial 1230]
 


Theorem (157)                               [serial 1281] 
P [135] << n@now
 and last_beat = now >>
S [136] ->
Q [49] << n@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (158)                               [serial 1279] 
P [135] << n@now
 and last_beat = now >>
S [136] ->
Q [49] << n@last_beat >>
by Guided Substitution of Equals
and theorem 157:
Theorem (157) [serial 1281] used for:
  Guided Substitution of Equals
 replacing "last_beat" with its = "now" in its postcondition [serial 1279]
 


Theorem (159)                               [serial 1285] 
P [135] << n@now
 and last_beat = now >>
S [136] ->
Q [50] << n@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (160)                               [serial 1283] 
P [135] << n@now
 and last_beat = now >>
S [136] ->
Q [50] << exists t~time
  in now - lrl .. now 
  that n@t  >>
by Introduction of Existential Quantification
and theorem 159:
Theorem (159) [serial 1285] used for:
  replace exististential quantification with predicate [serial 1283]
 


Theorem (161)                               [serial 1280] 
P [135] << n@now
 and last_beat = now >>
S [136] ->
Q [50] << (exists t~time
  in now - lrl .. now 
  that n@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 160:
Theorem (160) [serial 1283] used for:
    normalization of [serial 1280]
 


Theorem (162)                               [serial 1277] 
P [135] << n@now
 and last_beat = now >>
S [136] ->
Q [75] << n@last_beat
 and (exists t~time
  in now - lrl .. now 
  that n@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 158 161:
Theorem (158) [serial 1279] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1277]
 
Theorem (161) [serial 1280] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1277]
 


Theorem (163)                               [serial 1275] 
P [135] << n@now
 and last_beat = now >>
S [136] ->
Q [75] << ((n@last_beat
 and (exists t~time
  in ((now - lrl)) .. now 
  that n@t ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 162:
Theorem (162) [serial 1277] used for:
    normalization of [serial 1275]
 


Theorem (164)                               [serial 1241] 
P [135] << n@now
 and last_beat = now >>
S [136] ->
Q [75] << SENSE(now) >>
by Substitution of Assertion Labels
and theorem 163:
Theorem (163) [serial 1275] used for:
  Substituted assertions' predicates for labels in postconditions [serial 1241]
 


Theorem (165)                               [serial 1231] 
P [135] << n@now
 and ((last_beat = now)) >>
S [136] ->
Q [75] << SENSE(now) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 164:
Theorem (164) [serial 1241] used for:
    normalization of [serial 1231]
 


Theorem (166)                               [serial 1243] 
P [135] << VS() >>
S [136] ->
Q [22] << 0 = now or VS() >>
by Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (167)                               [serial 1234] 
P [135] << VS() >>
S [136] ->
Q [22] << (now = 0) or VS() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 166:
Theorem (166) [serial 1243] used for:
    normalization of [serial 1234]
 


Theorem (168)                               [serial 1288] 
P [136] << (0 = now or VS())@now
 and VS() >>
S [136] ->
Q [136] << (0 = now or VS())@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (169)                               [serial 1286] 
P [136] << (0 = now or VS())@now
 and VS() >>
S [136] ->
Q [136] << ((now = 0) or VS())@now >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 168:
Theorem (168) [serial 1288] used for:
    normalization of [serial 1286]
 


Theorem (170)                               [serial 1245] 
P [136] << (0 = now or VS())@now
 and VS() >>
S [136] ->
Q [136] << n@now >>
by Replacing port names with BLESS::Assertion properties
and theorem 169:
Theorem (169) [serial 1286] used for:
  Replacing port names with BLESS::Assertion properties [serial 1245]
 


Theorem (171)                               [serial 1235] 
P [136] << (VS())
 and ((now = 0) or VS())@now >>
S [136] ->
Q [136] << n@now >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 170:
Theorem (170) [serial 1245] used for:
    normalization of [serial 1235]
 


Theorem (172)                               [serial 1232] 
P [135] << VS() >>
S [136] n!
Q [136] << n@now >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 167 171:
Theorem (167) [serial 1234] used for:
  applied port output <<pre>> -> <<M[n]>> [serial 1232]
 
Theorem (171) [serial 1235] used for:
  applied port output <<pre and M[n]@now>> -> <<post>> [serial 1232]
 


Theorem (173)                               [serial 1247] 
P [81] << vrp@now <= (now - last_beat)
 and (s@now
 and SENSE(now)) >>
S [137] ->
Q [137] << true >>
by True Conclusion Schema (tc): P->true


Theorem (174)                               [serial 1237] 
P [81] << ((s@now
 and SENSE(now)))
 and (((now - last_beat) >= vrp@now)) >>
S [137] ->
Q [137] << (true) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 173:
Theorem (173) [serial 1247] used for:
    normalization of [serial 1237]
 


Theorem (175)                               [serial 1236] 
P [81] << ((s@now
 and SENSE(now)))
 and (((now - last_beat) >= vrp@now)) >>
S [137] ->
Q [137] << (now = now) >>
by Equality Law (idistr):  a=a <-> true
and theorem 174:
Theorem (174) [serial 1237] used for:
  Equality Law (idistr):  a=a <-> true [serial 1236]
 


Theorem (176)                               [serial 1233] 
P [81] << ((s@now
 and SENSE(now)))
 and (((now - last_beat) >= vrp@now)) >>
S [137] last_beat := now
Q [137] << (last_beat = now) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 175:
Theorem (175) [serial 1236] used for:
  applied wp for assignment [serial 1233]
 


Theorem (177)                               [serial 1019] 
P [81] << ((s@now
 and SENSE(now)))
 and (((now - last_beat) >= vrp@now)) >>
S [135] << VS() >>
n!
<< n@now >>
&
last_beat := now
<< (last_beat = now) >>
Q [75] << SENSE(now) >>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 156 165 172 176:
Theorem (156) [serial 1230] used for:
  P -> P1 in concurrent composition for [serial 1019]
 
Theorem (165) [serial 1231] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1019]
 
Theorem (172) [serial 1232] used for:
  <<P1>> S1 <<Q1>> in concurrent composition for [serial 1019]
 
Theorem (176) [serial 1233] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1019]
 


Theorem (178)                               [serial 1002] 
P [31] <<   >>
S [55] ->
Q [31] << VVI.i proof obligations >>
by Initial Thread Obligations
and theorems 3 7 11 12 16 21 43 44 45 68 70 73 109 133 135 138 177:
Theorem (3) [serial 1003] used for:
  <<I>> -> BLESS::Invariant of thread VVI.i
 
Theorem (7) [serial 1004] used for:
  <<M(pace)>> -> <<I>> from invariant I when complete state pace has Assertion <<M(pace)>> in its definition.
 
Theorem (11) [serial 1005] used for:
  <<M(sense)>> -> <<I>> from invariant I when complete state sense has Assertion <<M(sense)>> in its definition.
 
Theorem (12) [serial 1006] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state power_on, <<M(power_on)>> -> <<e1 or e2 or . . . en>>
 
Theorem (16) [serial 1007] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_pace_vrp, <<M(check_pace_vrp)>> -> <<e1 or e2 or . . . en>>
 
Theorem (21) [serial 1008] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_sense_vrp, <<M(check_sense_vrp)>> -> <<e1 or e2 or . . . en>>
 
Theorem (43) [serial 1009] used for:
   <<M(power_on)>> A <<M(sense)>> for T1_POWER_ON:power_on-[ ]->sense{A};
 
Theorem (44) [serial 1010] used for:
   <<M(pace) and x>> -> <<M(off)>> for T2_STOP_pace:pace-[x]->off{};
 
Theorem (45) [serial 1011] used for:
   <<M(sense) and x>> -> <<M(off)>> for T2_STOP_sense:sense-[x]->off{};
 
Theorem (68) [serial 1012] used for:
   <<M(pace) and x>> A <<M(pace)>> for T3_PACE_LRL_AFTER_VP:pace-[x]->pace{A};
 
Theorem (70) [serial 1013] used for:
   <<M(pace) and x>> -> <<M(check_pace_vrp)>> for T4_VS_AFTER_VP:pace-[x]->check_pace_vrp{};
 
Theorem (73) [serial 1014] used for:
   <<M(check_pace_vrp) and x>> -> <<M(pace)>> for T5_VS_AFTER_VP_IN_VRP:check_pace_vrp-[x]->pace{};
 
Theorem (109) [serial 1015] used for:
   <<M(check_pace_vrp) and x>> A <<M(sense)>> for T6_VS_AFTER_VP_IS_NR:check_pace_vrp-[x]->sense{A};
 
Theorem (133) [serial 1016] used for:
   <<M(sense) and x>> A <<M(pace)>> for T7_PACE_LRL_AFTER_VS:sense-[x]->pace{A};
 
Theorem (135) [serial 1017] used for:
   <<M(sense) and x>> -> <<M(check_sense_vrp)>> for T8_VS_AFTER_VS:sense-[x]->check_sense_vrp{};
 
Theorem (138) [serial 1018] used for:
   <<M(check_sense_vrp) and x>> -> <<M(sense)>> for T9_VS_AFTER_VS_IN_VRP:check_sense_vrp-[x]->sense{};
 
Theorem (177) [serial 1019] used for:
   <<M(check_sense_vrp) and x>> A <<M(sense)>> for T10_VS_AFTER_VS_IS_NR:check_sense_vrp-[x]->sense{A};
 


Theorem (179)                               [serial 1001] 
P     
S     
Q     
by Initial Thread Obligations
and theorem 178:
Theorem (178) [serial 1002] used for:
  Initial proof obligations for VVI.i
 


closing proof.txt file 