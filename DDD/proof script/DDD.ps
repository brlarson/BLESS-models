#This file, script.txt, was produced the BLESS Proof Assistant v3.1
#  at Sun Feb 07 13:26:59 CST 2021 by brianlarson
#  You chose proof script: /Users/brianlarson/git/BLESS-models/DDD/proof script/DDD.ps
#ddd_mode::DDD.i
#[serial 1003] <<I>> -> BLESS::Invariant of thread DDD.
make-an
axioms
#[serial 1004] <<M(pav)>> -> <<I>> from invariant I when complete state pav has Assertion <<M(pav)>> in its definition.
substitute-pre
axioms
#[serial 1005] <<M(sav)>> -> <<I>> from invariant I when complete state sav has Assertion <<M(sav)>> in its definition.
substitute-pre
axioms
#[serial 1006] <<M(va)>> -> <<I>> from invariant I when complete state va has Assertion <<M(va)>> in its definition.
substitute-pre
normalize
axioms
#[serial 1007] Serban's Theorem:  disjunction of execute conditions leaving execution state pav_check_vrp, <<M(pav_check_vrp)>> -> <<e1 or e2 or . . . en>>
normalize
replace<=
normalize
laws
axioms
#[serial 1008] Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
axioms
#[serial 1009] Serban's Theorem:  disjunction of execute conditions leaving execution state sav_check_vrp, <<M(sav_check_vrp)>> -> <<e1 or e2 or . . . en>>
normalize
replace<=
laws
axioms
#[serial 1010] Serban's Theorem:  disjunction of execute conditions leaving execution state check_atrial_refractories, <<M(check_atrial_refractories)>> -> <<e1 or e2 or . . . en>>
normalize
replace<=
normalize
and-over-or-post
laws
normalize
axioms
#[serial 1011] Serban's Theorem:  disjunction of execute conditions leaving execution state check_vrp, <<M(check_vrp)>> -> <<e1 or e2 or . . . en>>
normalize
replace<=
normalize
laws
axioms
#[serial 1012] Serban's Theorem:  disjunction of execute conditions leaving execution state sav_check_url, <<M(sav_check_url)>> -> <<e1 or e2 or . . . en>>
normalize
replace<=
normalize
laws
axioms
#[serial 1013]  <<M(start)>> A <<M(va)>> for T0_GO:start-[ ]->va{A};
reduce
atomic
normalize
laws
axioms
push
make-an
#[serial 1099]   normalization of [serial 1086]
substitute-post
substitute-post
substitute-post
normalize
laws
normalize
split-post
normalize
push
make-an
#[serial 1130] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1128]
guided-sub-equals[last_ap_or_as]
laws
normalize
axioms
#[serial 1131] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1128]
guided-sub-equals[last_vp_or_vs]
laws
normalize
axioms
#[serial 1138]   normalization of [serial 1132]
split@
normalize
split-quant
quant
normalize
axioms
#[serial 1140]   normalization of [serial 1133]
equivalent
axioms
#[serial 1142]   normalization of [serial 1134]
equivalent
axioms
#[serial 1115] Associativity: (b.c).a = a.b.c [serial 1102]
replace-port
axioms
#[serial 1117] Associativity: (b.c).a = a.b.c [serial 1107]
replace-port
axioms
#[serial 1014]  <<M(va) and x>> A <<M(va)>> for T1_PACE_AFTER_LRL:va-[x]->va{A};
reduce
atomic
remove-axioms-post
laws
normalize
laws
normalize
push
make-an
#[serial 1185]   normalization of [serial 1171]
substitute-pre
substitute-post
substitute-post
substitute-post
normalize
laws
normalize
split-post
normalize
axioms
guided-sub-equals[last_vp_or_vs]
laws
normalize
axioms
split@
normalize
split-quant
quant
normalize
axioms
#[serial 1187]   normalization of [serial 1174]
substitute-post
split-post
normalize
push
make-an
#[serial 1255]   normalization of [serial 1252]
substitute-pre
normalize
extend-eqr
replace-qv
axioms
#[serial 1257]   normalization of [serial 1253]
substitute-post
normalize
axioms
#[serial 1193]   normalization of [serial 1183]
split-post
axioms
dist^
laws
normalize
replace-port
dist^
normalize
axioms
#[serial 1200] Law of And-Simplification:  P and true is P [serial 1191]
axioms
#[serial 1205]   normalization of [serial 1199]
split-post
axioms
substitute-pre
substitute-pre
laws
axioms
#[serial 1015]  <<M(sav) and x>> A <<M(va)>> for T1_PACE_AFTER_LRL:sav-[x]->va{A};
reduce
atomic
normalize
laws
axioms
remove-axioms-post
laws
normalize
push
make-an
#[serial 1307]   normalization of [serial 1298]
substitute-post
substitute-post
laws
normalize
split-post
normalize
axioms
split@
split-quant
quant
normalize
axioms
substitute-post
normalize
split-post
normalize
axioms
guided-sub-equals[last_vp_or_vs]
laws
normalize
axioms
#[serial 1309]   normalization of [serial 1301]
substitute-post
normalize
split-post
normalize
push
make-an
#[serial 1377] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1375]
substitute-pre
normalize
extend-eqr
replace-qv
axioms
#[serial 1381]   normalization of [serial 1378]
substitute-post
normalize
axioms
#[serial 1330]   normalization of [serial 1325]
split-post
axioms
substitute-pre
substitute-pre
laws
axioms
#[serial 1332]   normalization of [serial 1326]
split-post
axioms
replace-port
normalize
axioms
#[serial 1016]  <<M(pav) and x>> A <<M(va)>> for T1_PACE_AFTER_LRL:pav-[x]->va{A};
reduce
atomic
laws
normalize
laws
axioms
push
make-an
#[serial 1420]   normalization of [serial 1409]
substitute-post
substitute-post
normalize
laws
split-post
normalize
axioms
split@
normalize
split-quant
quant
normalize
axioms
substitute-post
normalize
split-post
normalize
axioms
guided-sub-equals[last_vp_or_vs]
laws
normalize
axioms
#[serial 1422]   normalization of [serial 1412]
substitute-post
normalize
split-post
normalize
push
make-an
#[serial 1481] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1479]
substitute-pre
normalize
laws
normalize
extend-eqr
replace-qv
axioms
#[serial 1485]   normalization of [serial 1482]
substitute-post
normalize
axioms
#[serial 1426]   normalization of [serial 1416]
remove-axioms-post
laws
split-post
axioms
replace-port
normalize
axioms
#[serial 1434] Associativity: (b.c).a = a.b.c [serial 1424]
remove-axioms-post
laws
normalize
split-post
axioms
substitute-pre
substitute-pre
laws
axioms
#[serial 1017]  <<M(sav) and x>> -> <<M(sav_check_vrp)>> for T2_VS_AFTER_AS:sav-[x]->sav_check_vrp{};
laws
axioms
#[serial 1018]  <<M(sav_check_vrp) and x>> -> <<M(sav)>> for T3_VS_AFTER_AS_IN_VRP:sav_check_vrp-[x]->sav{};
axioms
#[serial 1019]  <<M(sav_check_vrp) and x>> A <<M(va)>> for T4_VS_AFTER_AS_AFTER_VRP:sav_check_vrp-[x]->va{A};
reduce
atomic
laws
normalize
axioms
push
make-an
#[serial 1534]   normalization of [serial 1524]
substitute-post
laws
normalize
split-post
normalize
axioms
push
make-an
#[serial 1554] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1551]
substitute-post
substitute-pre
substitute-pre
substitute-pre
normalize
laws
normalize
extend-eqr
replace-qv
axioms
#[serial 1555] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1551]
substitute-pre
substitute-pre
substitute-pre
laws
normalize
axioms
#[serial 1561]   normalization of [serial 1556]
substitute-pre
substitute-pre
substitute-pre
laws
axioms
#[serial 1536]   normalization of [serial 1525]
substitute-post
substitute-post
laws
normalize
split-post
normalize
axioms
split@
normalize
split-quant
quant
normalize
axioms
substitute-post
normalize
split-post
guided-sub-equals[last_vp_or_vs]
laws
normalize
axioms
#[serial 1540]   normalization of [serial 1531]
split-post
axioms
replace-port
axioms
#[serial 1020]  <<M(sav) and x>> -> <<M(sav_check_url)>> for T5a_EXPIRED_SENSED_AV_DELAY:sav-[x]->sav_check_url{};
laws
normalize
laws
axioms
#[serial 1021]  <<M(sav_check_url) and x>> -> <<M(sav)>> for T5b_TRACKED_VP_TOO_SOON_AFTER_PREVIOUS_VS_OR_VP:sav_check_url-[x]->sav{};
axioms
#[serial 1022]  <<M(sav_check_url) and x>> A <<M(va)>> for T5c_TRACKED_VP_AFTER_AS:sav_check_url-[x]->va{A};
reduce
atomic
laws
normalize
axioms
remove-axioms-post
laws
push
make-an
#[serial 1648]   normalization of [serial 1638]
split-post
axioms
substitute-pre
laws
axioms
substitute-post
normalize
split-post
axioms
substitute-pre
substitute-pre
normalize
laws
normalize
extend-eqr
replace-qv
axioms
#[serial 1650]   normalization of [serial 1639]
substitute-post
normalize
split-post
axioms
substitute-post
split@
replace-qv
split-quant
quant
normalize
axioms
#[serial 1652]   normalization of [serial 1642]
completesub
laws
normalize
split-post
axioms
normalize
axioms
#[serial 1663] Law of And-Simplification:  P and true is P [serial 1662]
split-post
axioms
replace-port
normalize
axioms
#[serial 1023]  <<M(pav) and x>> -> <<M(pav_check_vrp)>> for T6_VS_AFTER_AP:pav-[x]->pav_check_vrp{};
laws
axioms
#[serial 1024]  <<M(pav_check_vrp) and x>> -> <<M(pav)>> for T7_VS_AFTER_AP_IN_VRP:pav_check_vrp-[x]->pav{};
axioms
#[serial 1025]  <<M(pav_check_vrp) and x>> A <<M(va)>> for T8_VS_AFTER_AP_AFTER_VRP:pav_check_vrp-[x]->va{A};
reduce
reduce
reduce
remove-axioms-post
normalize
atomic
normalize
laws
axioms
split-post
normalize
axioms
push
make-an
#[serial 1742]   normalization of [serial 1731]
substitute-post
substitute-post
normalize
laws
split-post
axioms
normalize
split@
normalize
split-quant
quant
normalize
axioms
#[serial 1772] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1740]
substitute-pre
laws
axioms
#[serial 1773] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1740]
substitute-post
normalize
split-post
axioms
substitute-post
substitute-pre
substitute-pre
substitute-pre
normalize
laws
normalize
extend-eqr
replace-qv
axioms
#[serial 1774] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1744]
substitute-pre
laws
axioms
#[serial 1779] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1746]
substitute-post
normalize
split-post
guided-sub-equals[last_vp_or_vs]
laws
normalize
axioms
#[serial 1792]   normalization of [serial 1780]
replace-port
axioms
#[serial 1026]  <<M(va) and x>> -> <<M(check_atrial_refractories)>> for T10_AS_AFTER_VS_OR_VP:va-[x]->check_atrial_refractories{};
normalize
axioms
#[serial 1027]  <<M(check_atrial_refractories) and x>> A <<M(sav)>> for T11_PVARP_EXPIRED:check_atrial_refractories-[x]->sav{A};
reduce
atomic
remove-axioms-post
laws
normalize
laws
normalize
axioms
split-post
axioms
push
make-an
#[serial 1895]   normalization of [serial 1889]
substitute-post
substitute-pre
substitute-pre
substitute-pre
normalize
laws
axioms
#[serial 1897] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1875]
substitute-post
normalize
split-post
axioms
substitute-post
normalize
axioms
#[serial 1898] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1875]
completesub
quant
axioms
#[serial 1899] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1879]
substitute-post
normalize
split-post
axioms
substitute-post
substitute-pre
substitute-pre
substitute-pre
normalize
laws
normalize
push
make-an
#[serial 1967]   normalization of [serial 1964]
extend-eqr
replace-qv
axioms
#[serial 1969]   normalization of [serial 1965]
extend-eqr
replace-qv
axioms
#[serial 1900] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1879]
substitute-pre
substitute-pre
laws
axioms
#[serial 1901] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1879]
substitute-pre
substitute-pre
laws
axioms
#[serial 1902] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1879]
substitute-pre
laws
axioms
#[serial 1903] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1883]
replace-port
axioms
#[serial 1028]  <<M(check_atrial_refractories) and x>> -> <<M(va)>> for T12_STILL_IN_PVARP:check_atrial_refractories-[x]->va{};
axioms
#[serial 1029]  <<M(va) and x>> -> <<M(check_vrp)>> for T13_VS_AFTER_VS_OR_VP:va-[x]->check_vrp{};
normalize
axioms
#[serial 1030]  <<M(check_vrp) and x>> -> <<M(va)>> for T14_STILL_IN_VRP:check_vrp-[x]->va{};
axioms
#[serial 1031]  <<M(check_vrp) and x>> A <<M(va)>> for T15_VRP_EXPIRED:check_vrp-[x]->va{A};
reduce
atomic
laws
normalize
laws
normalize
axioms
split-post
axioms
push
make-an
#[serial 2002]   normalization of [serial 1991]
substitute-post
substitute-post
normalize
laws
split-post
axioms
normalize
split@
normalize
split-quant
quant
normalize
axioms
#[serial 2020]   normalization of [serial 2014]
substitute-pre
substitute-pre
laws
axioms
#[serial 2022] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2000]
substitute-pre
substitute-pre
laws
axioms
#[serial 2023] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2000]
substitute-pre
substitute-pre
laws
axioms
#[serial 2024] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2000]
substitute-post
normalize
split-post
axioms
substitute-post
substitute-pre
substitute-pre
substitute-pre
normalize
laws
normalize
extend-eqr
replace-qv
axioms
#[serial 2025] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2006]
replace-port
axioms
#[serial 1032]  <<M(va) and x>> A <<M(pav)>> for T16_AP_AFTER_TIMEOUT_VS_OR_VP:va-[x]->pav{A};
reduce
reduce
reduce
atomic
laws
normalize
laws
normalize
axioms
split-post
axioms
push
make-an
#[serial 2110]   normalization of [serial 2096]
completesub
laws
normalize
split-post
axioms
split@
normalize
split-quant
DeMorgan
normalize
laws
normalize
split-post
axioms
extend-eqr
replace-qv
axioms
#[serial 2132]   normalization of [serial 2123]
substitute-pre
laws
axioms
#[serial 2138] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2102]
substitute-post
normalize
split-post
axioms
substitute-post
normalize
axioms
#[serial 2139] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2102]
substitute-post
normalize
quant
axioms
#[serial 2145] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2108]
replace-qv
axioms
#[serial 2146] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2112]
replace-port
axioms
#[serial 2149] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2112]
replace-qv
axioms
#[serial 2151] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2130]
remove-axioms-post
axioms
#[serial 2152] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2130]
substitute-pre
substitute-pre
laws
axioms
#[serial 2153] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2130]
substitute-pre
substitute-pre
laws
axioms
#[serial 2154] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2130]
replace-qv
axioms
#[serial 1033]  <<M(sav) and x>> -> <<M(off)>> for T17_STOP:sav-[x]->off{};
axioms
#[serial 1034]  <<M(pav) and x>> -> <<M(off)>> for T17_STOP:pav-[x]->off{};
axioms
#[serial 1035]  <<M(va) and x>> -> <<M(off)>> for T17_STOP:va-[x]->off{};
axioms