This file, proof.txt, was produced the BLESS Proof Assistant v3.1.5
  at Fri Oct 28 11:26:24 CDT 2022 by brianlarson

Theorem (1)                               [serial 1003] 
P [167] << true >>
S [162] ->
Q [162] << true >>
by True Conclusion Schema (tc): P->true


Theorem (2)                               [serial 1004] 
P [166] << true >>
S [166] ->
Q [166] << true >>
by True Conclusion Schema (tc): P->true


Theorem (3)                               [serial 1919] 
P [168] << true >>
S [168] ->
Q [168] << true >>
by True Conclusion Schema (tc): P->true


Theorem (4)                               [serial 1917] 
P [168] << true >>
S [168] ->
Q [168] << not fb_time < (now - dur_met) or 
fb_time < (now - dur_met) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 3:
Theorem (3) [serial 1919] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1917]
 


Theorem (5)                               [serial 1915] 
P [168] << true >>
S [168] ->
Q [168] << ((((now - dur_met)) > fb_time)) or 
(((not (fb_time < ((now - dur_met)))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 4:
Theorem (4) [serial 1917] used for:
    normalization of [serial 1915]
 


Theorem (6)                               [serial 1005] 
P [168] << true >>
S [168] ->
Q [168] << ((((now - dur_met)) > fb_time)) or 
((((now - dur_met)) <= fb_time)) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 5:
Theorem (5) [serial 1915] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1005]
 


Theorem (7)                               [serial 1920] 
P [175] << (dur_met = now) >>
S [167] ->
Q [167] << true >>
by True Conclusion Schema (tc): P->true


Theorem (8)                               [serial 1925] 
P [166] << true >>
S [174] ->
Q [175] << true >>
by True Conclusion Schema (tc): P->true


Theorem (9)                               [serial 1923] 
P [166] << true >>
S [174] ->
Q [175] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 8:
Theorem (8) [serial 1925] used for:
    normalization of [serial 1923]
 


Theorem (10)                               [serial 1922] 
P [166] << true >>
S [174] ->
Q [175] << (now = now) >>
by Equality Law (idistr):  a=a <-> true
and theorem 9:
Theorem (9) [serial 1923] used for:
  Equality Law (idistr):  a=a <-> true [serial 1922]
 


Theorem (11)                               [serial 1921] 
P [166] << true >>
S [174] dur_met := now
Q [175] << (dur_met = now) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 10:
Theorem (10) [serial 1922] used for:
  applied wp for assignment [serial 1921]
 


Theorem (12)                               [serial 1006] 
P [166] << true >>
S [174] dur_met := now
<< (dur_met = now) >>
Q [167] << true >>
by Introduction of Existential Quantification (bl.aapost)
and theorems 7 11:
Theorem (7) [serial 1920] used for:
  as <<post>> -> <<Q>> in <<P>> {  S <<post>> } <<Q>> [serial 1006]
 
Theorem (11) [serial 1921] used for:
  as <<P>> S <<post>> in <<P>> {  S <<post>> } <<Q>> [serial 1006]
 


Theorem (13)                               [serial 1007] 
P [178] << (true)
 and cci@now
 and not (exists u~time
  in tops ,, now 
  that cci@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [178] ->
Q [168] << true >>
by True Conclusion Schema (tc): P->true


Theorem (14)                               [serial 1932] 
P [180] << fb_time < (now - dur_met) >>
S [180] ->
Q [181] << fb_time < (now - dur_met) >>
by Identity (id):  P->P is tautology


Theorem (15)                               [serial 1927] 
P [180] << (((now - dur_met)) > fb_time) >>
S [180] ->
Q [181] << (((now - dur_met)) > fb_time) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 14:
Theorem (14) [serial 1932] used for:
    normalization of [serial 1927]
 


Theorem (16)                               [serial 1940] 
P [182] << atr_max_cci = lrl
 and fb_time < (now - dur_met) >>
S [182] ->
Q [167] << true >>
by True Conclusion Schema (tc): P->true


Theorem (17)                               [serial 1934] 
P [182] << (atr_max_cci = lrl)@now
 and fb_time < (now - dur_met) >>
S [182] ->
Q [167] << true >>
by Assume Present:  P = P@now = P^0 
and theorem 16:
Theorem (16) [serial 1940] used for:
  Assume Present:  P = P@now = P^0  [serial 1934]
 


Theorem (18)                               [serial 1929] 
P [182] << ((((now - dur_met)) > fb_time))
 and (atr_max_cci = lrl)@now >>
S [182] ->
Q [167] << true >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 17:
Theorem (17) [serial 1934] used for:
    normalization of [serial 1929]
 


Theorem (19)                               [serial 1949] 
P [182] << LRL = FB_MaxCCI()
 and FBT < (now - dur_met) >>
S [182] ->
Q [182] << LRL = FB_MaxCCI() >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (20)                               [serial 1948] 
P [182] << FB_MaxCCI() = LRL
 and FBT < (now - dur_met) >>
S [182] ->
Q [182] << (if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = FB_MaxCCI() >>
by Conditional True Expression:  b and x=e  iff  b and x=(b??e:g) 
and theorem 19:
Theorem (19) [serial 1949] used for:
   Conditional True Expression:  b and x=e  iff  b and x=(b??e:g)  [serial 1948]
 


Theorem (21)                               [serial 1946] 
P [182] << atr_max_cci = lrl
 and fb_time < (now - dur_met) >>
S [182] ->
Q [182] << (if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = atr_max_cci >>
by Replacing port names with BLESS::Assertion properties
and theorem 20:
Theorem (20) [serial 1948] used for:
  Replacing port names with BLESS::Assertion properties [serial 1946]
 


Theorem (22)                               [serial 1942] 
P [182] << atr_max_cci = lrl
 and fb_time < (now - dur_met) >>
S [182] ->
Q [182] << atr_max_cci = ((if ((((now - dur_met)) > FBT)) then LRL else (URL + ((((
((now - dur_met)) * ((LRL - URL)))) / FBT))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Multiplication: a*b=b*a
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 21:
Theorem (21) [serial 1946] used for:
    normalization of [serial 1942]
 


Theorem (23)                               [serial 1941] 
P [182] << atr_max_cci = lrl
 and fb_time < (now - dur_met) >>
S [182] ->
Q [182] << atr_max_cci = FallBack_MaxCCI(dur_met:dur_met, x:now) >>
by Substitution of Assertion Labels
and theorem 22:
Theorem (22) [serial 1942] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1941]
 


Theorem (24)                               [serial 1936] 
P [182] << (atr_max_cci = lrl)@now
 and fb_time < (now - dur_met) >>
S [182] ->
Q [182] << (atr_max_cci = FallBack_MaxCCI(dur_met:dur_met, x:now))@now >>
by Assume Present:  P = P@now = P^0 
and theorem 23:
Theorem (23) [serial 1941] used for:
  Assume Present:  P = P@now = P^0  [serial 1936]
 


Theorem (25)                               [serial 1930] 
P [182] << ((((now - dur_met)) > fb_time))
 and (atr_max_cci = lrl)@now >>
S [182] ->
Q [182] << (atr_max_cci = FallBack_MaxCCI(dur_met:dur_met, x:now))@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 24:
Theorem (24) [serial 1936] used for:
    normalization of [serial 1930]
 


Theorem (26)                               [serial 1928] 
P [181] << (((now - dur_met)) > fb_time) >>
S [182] atr_max_cci!(lrl)
Q [167] << true >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 18 25:
Theorem (18) [serial 1929] used for:
  applied port output <<pre and (atr_max_cci=lrl)@now>> -> <<post>> [serial 1928]
 
Theorem (25) [serial 1930] used for:
  applied port output <<pre and (atr_max_cci=lrl)@now>> -> <<(atr_max_cci=FallBack_MaxCCI(dur_met:dur_met, x:now))@now>> [serial 1928]
 


Theorem (27)                               [serial 1008] 
P [180] << (((now - dur_met)) > fb_time) >>
S [181] << (((now - dur_met)) > fb_time) >>
atr_max_cci!(lrl)
Q [167] << true >>
by Introduction of Existential Quantification (bl.aapre)
and theorems 15 26:
Theorem (15) [serial 1927] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1008]
 
Theorem (26) [serial 1928] used for:
  as <<pre>> S <<Q>> in <<P>> { <<pre>> S  } <<Q>> [serial 1008]
 


Theorem (28)                               [serial 1969] 
P [184] << (now - dur_met) <= fb_time >>
S [184] ->
Q [185] << (now - dur_met) <= fb_time >>
by Identity (id):  P->P is tautology


Theorem (29)                               [serial 1961] 
P [184] << (((now - dur_met)) <= fb_time) >>
S [184] ->
Q [185] << (((((now - dur_met)) <= fb_time))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 28:
Theorem (28) [serial 1969] used for:
    normalization of [serial 1961]
 


Theorem (30)                               [serial 1955] 
P [184] << (((now - dur_met)) <= fb_time) >>
S [184] ->
Q [185] << ((((now - dur_met)) <= fb_time)
 and true) >>
by Law of And-Simplification:  P and true is P
and theorem 29:
Theorem (29) [serial 1961] used for:
  Law of And-Simplification:  P and true is P [serial 1955]
 


Theorem (31)                               [serial 1969] 
P [184] << (now - dur_met) <= fb_time >>
S [184] ->
Q [185] << (now - dur_met) <= fb_time >>
by Identity (id):  P->P is tautology


Theorem (32)                               [serial 1961] 
P [184] << (((now - dur_met)) <= fb_time) >>
S [184] ->
Q [185] << (((((now - dur_met)) <= fb_time))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 31:
Theorem (31) [serial 1969] used for:
    normalization of [serial 1961]
 


Theorem (33)                               [serial 1955] 
P [184] << (((now - dur_met)) <= fb_time) >>
S [184] ->
Q [185] << ((((now - dur_met)) <= fb_time)
 and true) >>
by Law of And-Simplification:  P and true is P
and theorem 32:
Theorem (32) [serial 1961] used for:
  Law of And-Simplification:  P and true is P [serial 1955]
 


Theorem (34)                               [serial 1950] 
P [184] << (((now - dur_met)) <= fb_time) >>
S [184] ->
Q [185] << ((((now - dur_met)) <= fb_time)
 and AXIOM_FB_NONZERO()) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 33 33:
Theorem (33) [serial 1955] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (33) [serial 1955] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (35)                               [serial 2005] 
P [185] << fallback_rate = (URL + (((LRL - URL) * (now - dur_met)) / FBT))
 and not FBT < (now - dur_met)
 and 0 <> FBT >>
S [189] ->
Q [189] << fallback_rate = (URL + (((LRL - URL) * (now - dur_met)) / FBT))
 and not FBT < (now - dur_met) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (36)                               [serial 2004] 
P [185] << fallback_rate = (URL + (((LRL - URL) * (now - dur_met)) / FBT))
 and not FBT < (now - dur_met)
 and 0 <> FBT >>
S [189] ->
Q [189] << (if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = fallback_rate
 and not FBT < (now - dur_met) >>
by Conditional False Expression:  not b and x=g  iff  not b and x=(b??e:g) 
and theorem 35:
Theorem (35) [serial 2005] used for:
   Conditional False Expression:  not b and x=g  iff  not b and x=(b??e:g)  [serial 2004]
 


Theorem (37)                               [serial 2002] 
P [185] << fallback_rate = (url + (((lrl - url) * (now - dur_met)) / fb_time))
 and not fb_time < (now - dur_met)
 and 0 <> FBT >>
S [189] ->
Q [189] << (if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = fallback_rate
 and not fb_time < (now - dur_met) >>
by Replacing port names with BLESS::Assertion properties
and theorem 36:
Theorem (36) [serial 2004] used for:
  Replacing port names with BLESS::Assertion properties [serial 2002]
 


Theorem (38)                               [serial 2000] 
P [185] << (not (fb_time < (now - dur_met)))
 and fallback_rate = (url + (((lrl - url) * (now - dur_met)) / fb_time))
 and 0 <> FBT >>
S [189] ->
Q [189] << (not (fb_time < (now - dur_met)))
 and (if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = fallback_rate >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 37:
Theorem (37) [serial 2002] used for:
    normalization of [serial 2000]
 


Theorem (39)                               [serial 1996] 
P [185] << (now - dur_met) <= fb_time
 and fallback_rate = (url + (((lrl - url) * (now - dur_met)) / fb_time))
 and 0 <> FBT >>
S [189] ->
Q [189] << (now - dur_met) <= fb_time
 and (if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = fallback_rate >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 38:
Theorem (38) [serial 2000] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 1996]
 


Theorem (40)                               [serial 1992] 
P [185] << (now - dur_met) <= fb_time
 and 0 <> FBT
 and fallback_rate = (url + (((lrl - url) * (now - dur_met)) / fb_time)) >>
S [189] ->
Q [189] << (now - dur_met) <= fb_time
 and (if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = fallback_rate >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 39:
Theorem (39) [serial 1996] used for:
    normalization of [serial 1992]
 


Theorem (41)                               [serial 1978] 
P [185] << fallback_rate = (url + (((lrl - url) * (now - dur_met)) / fb_time))
 and ((now - dur_met) <= fb_time
 and 0 <> FBT) >>
S [189] ->
Q [189] << (now - dur_met) <= fb_time
 and (if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = fallback_rate >>
by Associativity: (b.c).a = a.b.c
and theorem 40:
Theorem (40) [serial 1992] used for:
  Associativity: (b.c).a = a.b.c [serial 1978]
 


Theorem (42)                               [serial 1974] 
P [185] << fallback_rate = (url + (((lrl - url) * (now - dur_met)) / fb_time))
 and ((now - dur_met) <= fb_time
 and ((FBT <> 0))) >>
S [189] ->
Q [189] << (now - dur_met) <= fb_time
 and fallback_rate = ((if ((((now - dur_met)) > FBT)) then LRL else (URL + 
((((((now - dur_met)) * ((LRL - URL)))) / FBT))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Multiplication: a*b=b*a
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 41:
Theorem (41) [serial 1978] used for:
    normalization of [serial 1974]
 


Theorem (43)                               [serial 1963] 
P [185] << fallback_rate = (url + (((lrl - url) * (now - dur_met)) / fb_time))
 and ((now - dur_met) <= fb_time
 and AXIOM_FB_NONZERO()) >>
S [189] ->
Q [189] << (now - dur_met) <= fb_time
 and fallback_rate = FB_MaxCCI() >>
by Substitution of Assertion Labels
and theorem 42:
Theorem (42) [serial 1974] used for:
  substituted Assertions' predicates for  labels  [serial 1963]
 


Theorem (44)                               [serial 1952] 
P [185] << (((((now - dur_met)) <= fb_time)
 and AXIOM_FB_NONZERO()))
 and fallback_rate = ((url + ((((((now - dur_met)) * ((lrl - url)))) / fb_time)))) >>
S [189] ->
Q [189] << ((fallback_rate = FB_MaxCCI())
 and (((now - dur_met)) <= fb_time)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Multiplication: a*b=b*a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 43:
Theorem (43) [serial 1963] used for:
    normalization of [serial 1952]
 


Theorem (45)                               [serial 1956] 
P [189] << ((fallback_rate = FB_MaxCCI())
 and (((now - dur_met)) <= fb_time)) >>
S [189] ->
Q [189] << ((fallback_rate = FB_MaxCCI())
 and (((now - dur_met)) <= fb_time)) >>
by Identity (id):  P->P is tautology


Theorem (46)                               [serial 1957] 
P [191] << (((now - dur_met)) <= fb_time) >>
S [191] ->
Q [191] << (((now - dur_met)) <= fb_time) >>
by Identity (id):  P->P is tautology


Theorem (47)                               [serial 1993] 
P [190] << (now - dur_met) <= fb_time
 and (if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = fallback_rate
 and atr_max_cci = fallback_rate >>
S [190] ->
Q [191] << (now - dur_met) <= fb_time >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (48)                               [serial 1989] 
P [190] << atr_max_cci = fallback_rate
 and ((now - dur_met) <= fb_time
 and (if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = fallback_rate) >>
S [190] ->
Q [191] << (now - dur_met) <= fb_time >>
by Associativity: (b.c).a = a.b.c
and theorem 47:
Theorem (47) [serial 1993] used for:
  Associativity: (b.c).a = a.b.c [serial 1989]
 


Theorem (49)                               [serial 1980] 
P [190] << (atr_max_cci = fallback_rate)@now
 and ((now - dur_met) <= fb_time
 and (if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = fallback_rate) >>
S [190] ->
Q [191] << (now - dur_met) <= fb_time >>
by Assume Present:  P = P@now = P^0 
and theorem 48:
Theorem (48) [serial 1989] used for:
  Assume Present:  P = P@now = P^0  [serial 1980]
 


Theorem (50)                               [serial 1975] 
P [190] << (atr_max_cci = fallback_rate)@now
 and ((now - dur_met) <= fb_time
 and fallback_rate = ((if ((((now - dur_met)) > FBT)) then LRL else (URL + 
((((((now - dur_met)) * ((LRL - URL)))) / FBT)))))) >>
S [190] ->
Q [191] << (now - dur_met) <= fb_time >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Multiplication: a*b=b*a
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 49:
Theorem (49) [serial 1980] used for:
    normalization of [serial 1975]
 


Theorem (51)                               [serial 1965] 
P [190] << (atr_max_cci = fallback_rate)@now
 and ((now - dur_met) <= fb_time
 and fallback_rate = FB_MaxCCI()) >>
S [190] ->
Q [191] << (now - dur_met) <= fb_time >>
by Substitution of Assertion Labels
and theorem 50:
Theorem (50) [serial 1975] used for:
  substituted Assertions' predicates for  labels  [serial 1965]
 


Theorem (52)                               [serial 1959] 
P [190] << (((fallback_rate = FB_MaxCCI())
 and (((now - dur_met)) <= fb_time)))
 and (atr_max_cci = fallback_rate)@now >>
S [190] ->
Q [191] << (((now - dur_met)) <= fb_time) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 51:
Theorem (51) [serial 1965] used for:
    normalization of [serial 1959]
 


Theorem (53)                               [serial 1994] 
P [190] << (now - dur_met) <= fb_time
 and (if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = fallback_rate
 and atr_max_cci = fallback_rate >>
S [190] ->
Q [190] << (if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = fallback_rate >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (54)                               [serial 1991] 
P [190] << atr_max_cci = fallback_rate
 and ((now - dur_met) <= fb_time
 and (if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = fallback_rate) >>
S [190] ->
Q [190] << (if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = fallback_rate >>
by Associativity: (b.c).a = a.b.c
and theorem 53:
Theorem (53) [serial 1994] used for:
  Associativity: (b.c).a = a.b.c [serial 1991]
 


Theorem (55)                               [serial 1990] 
P [190] << atr_max_cci = fallback_rate
 and ((now - dur_met) <= fb_time
 and (if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = fallback_rate) >>
S [190] ->
Q [190] << (if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = atr_max_cci >>
by Guided Substitution of Equals
and theorem 54:
Theorem (54) [serial 1991] used for:
  Guided Substitution of Equals
 replacing "atr_max_cci" with its = "fallback_rate" in its postcondition [serial 1990]
 


Theorem (56)                               [serial 1982] 
P [190] << (atr_max_cci = fallback_rate)@now
 and ((now - dur_met) <= fb_time
 and (if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = fallback_rate) >>
S [190] ->
Q [190] << ((if FBT < (now - dur_met) then LRL else URL + (((LRL - URL) * (now - dur_met)) / FBT)) = atr_max_cci)@now >>
by Assume Present:  P = P@now = P^0 
and theorem 55:
Theorem (55) [serial 1990] used for:
  Assume Present:  P = P@now = P^0  [serial 1982]
 


Theorem (57)                               [serial 1976] 
P [190] << (atr_max_cci = fallback_rate)@now
 and ((now - dur_met) <= fb_time
 and fallback_rate = ((if ((((now - dur_met)) > FBT)) then LRL else (URL + 
((((((now - dur_met)) * ((LRL - URL)))) / FBT)))))) >>
S [190] ->
Q [190] << (atr_max_cci = ((if ((((now - dur_met)) > FBT)) then LRL else (URL + 
((((((now - dur_met)) * ((LRL - URL)))) / FBT))))))@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Multiplication: a*b=b*a
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 56:
Theorem (56) [serial 1982] used for:
    normalization of [serial 1976]
 


Theorem (58)                               [serial 1967] 
P [190] << (atr_max_cci = fallback_rate)@now
 and ((now - dur_met) <= fb_time
 and fallback_rate = FB_MaxCCI()) >>
S [190] ->
Q [190] << (atr_max_cci = FallBack_MaxCCI(dur_met:dur_met, x:now))@now >>
by Substitution of Assertion Labels
and theorem 57:
Theorem (57) [serial 1976] used for:
  substituted Assertions' predicates for  labels  [serial 1967]
 


Theorem (59)                               [serial 1960] 
P [190] << (((fallback_rate = FB_MaxCCI())
 and (((now - dur_met)) <= fb_time)))
 and (atr_max_cci = fallback_rate)@now >>
S [190] ->
Q [190] << (atr_max_cci = FallBack_MaxCCI(dur_met:dur_met, x:now))@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 58:
Theorem (58) [serial 1967] used for:
    normalization of [serial 1960]
 


Theorem (60)                               [serial 1958] 
P [189] << ((fallback_rate = FB_MaxCCI())
 and (((now - dur_met)) <= fb_time)) >>
S [190] atr_max_cci!(fallback_rate)
Q [191] << (((now - dur_met)) <= fb_time) >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 52 59:
Theorem (52) [serial 1959] used for:
  applied port output <<pre and (atr_max_cci=fallback_rate)@now>> -> <<post>> [serial 1958]
 
Theorem (59) [serial 1960] used for:
  applied port output <<pre and (atr_max_cci=fallback_rate)@now>> -> <<(atr_max_cci=FallBack_MaxCCI(dur_met:dur_met, x:now))@now>> [serial 1958]
 


Theorem (61)                               [serial 1953] 
P [189] << ((fallback_rate = FB_MaxCCI())
 and (((now - dur_met)) <= fb_time)) >>
S [189] << ((fallback_rate = FB_MaxCCI())
 and (((now - dur_met)) <= fb_time)) >>
atr_max_cci!(fallback_rate)
<< (((now - dur_met)) <= fb_time) >>
Q [191] << (((now - dur_met)) <= fb_time) >>
by Introduction of Existential Quantification (bl.aab)
and theorems 45 46 60:
Theorem (45) [serial 1956] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1953]
 
Theorem (46) [serial 1957] used for:
  as <<post>> -> <<Q>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1953]
 
Theorem (60) [serial 1958] used for:
  as <<pre>> S <<post>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1953]
 


Theorem (62)                               [serial 1954] 
P [191] << (((now - dur_met)) <= fb_time) >>
S [186] ->
Q [167] << true >>
by True Conclusion Schema (tc): P->true


Theorem (63)                               [serial 1951] 
P [185] << ((((now - dur_met)) <= fb_time)
 and AXIOM_FB_NONZERO()) >>
S [186] declare 
  fallback_rate ~  time:=(url + ((((((now - dur_met)) * ((lrl - url)))) / fb_time)));
  {
  << ((fallback_rate = FB_MaxCCI())
   and (((now - dur_met)) <= fb_time)) >>
  atr_max_cci!(fallback_rate)
  << (((now - dur_met)) <= fb_time) >>
  } 
Q [167] << true >>
by Introduction of Existential Quantification (bl.elq)
and theorems 44 61 62:
Theorem (44) [serial 1952] used for:
  <<P and x=e>> -> <<A>> in existential lattice quantification for [serial 1951]
 
Theorem (61) [serial 1953] used for:
  <<A>> T <<B>> in existential lattice quantification for [serial 1951]
 
Theorem (62) [serial 1954] used for:
  <<B>> -> <<Q>> in existential lattice quantification for [serial 1951]
 


Theorem (64)                               [serial 1009] 
P [184] << (((now - dur_met)) <= fb_time) >>
S [185] << ((((now - dur_met)) <= fb_time)
 and AXIOM_FB_NONZERO()) >>
declare 
  fallback_rate ~  time:=(url + ((((((now - dur_met)) * ((lrl - url)))) / fb_time)));
  {
  << ((fallback_rate = FB_MaxCCI())
   and (((now - dur_met)) <= fb_time)) >>
  atr_max_cci!(fallback_rate)
  << (((now - dur_met)) <= fb_time) >>
  } 
Q [167] << true >>
by Introduction of Existential Quantification (bl.aapre)
and theorems 34 63:
Theorem (34) [serial 1950] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1009]
 
Theorem (63) [serial 1951] used for:
  as <<pre>> S <<Q>> in <<P>> { <<pre>> S  } <<Q>> [serial 1009]
 


Theorem (65)                               [serial 1010] 
P [195] << (true)
 and stop@now
 and not (exists u~time
  in tops ,, now 
  that cci@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [195] ->
Q [169] << true >>
by True Conclusion Schema (tc): P->true


Theorem (66)                               [serial 1002] 
P [156] <<   >>
S [162] ->
Q [156] << RateController.atr proof obligations >>
by Initial Thread Obligations
and theorems 1 2 6 12 13 27 64 65:
Theorem (1) [serial 1003] used for:
  <<M(atr_fallback)>> -> <<I>> from invariant I when complete state atr_fallback has Assertion <<M(atr_fallback)>> in its definition.
 
Theorem (2) [serial 1004] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start_atr, <<M(start_atr)>> -> <<e1 or e2 or . . . en>>
 
Theorem (6) [serial 1005] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_atr, <<M(check_atr)>> -> <<e1 or e2 or . . . en>>
 
Theorem (12) [serial 1006] used for:
   <<M(start_atr)>> A <<M(atr_fallback)>> for ATR_RC1_start_fallback:start_atr-[ ]->atr_fallback{A};
 
Theorem (13) [serial 1007] used for:
   <<M(atr_fallback) and x>> -> <<M(check_atr)>> for ATR_RC5_atr_cci:atr_fallback-[x]->check_atr{};
 
Theorem (27) [serial 1008] used for:
   <<M(check_atr) and x>> A <<M(atr_fallback)>> for ATR_RC6_continure_atr:check_atr-[x]->atr_fallback{A};
 
Theorem (64) [serial 1009] used for:
   <<M(check_atr) and x>> A <<M(atr_fallback)>> for ATR_RC_fallback:check_atr-[x]->atr_fallback{A};
 
Theorem (65) [serial 1010] used for:
   <<M(atr_fallback) and x>> -> <<M(done)>> for RCX:atr_fallback-[x]->done{};
 


Theorem (67)                               [serial 1012] 
P [85] << true >>
S [78] ->
Q [78] << true >>
by True Conclusion Schema (tc): P->true


Theorem (68)                               [serial 1013] 
P [84] << true >>
S [84] ->
Q [84] << true >>
by True Conclusion Schema (tc): P->true


Theorem (69)                               [serial 1670] 
P [86] << true >>
S [86] ->
Q [86] << true >>
by True Conclusion Schema (tc): P->true


Theorem (70)                               [serial 1668] 
P [86] << true >>
S [86] ->
Q [86] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 69:
Theorem (69) [serial 1670] used for:
    normalization of [serial 1668]
 


Theorem (71)                               [serial 1667] 
P [86] << true >>
S [86] ->
Q [86] << (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 70:
Theorem (70) [serial 1668] used for:
  Law of And-Simplification:  P and P is P [serial 1667]
 


Theorem (72)                               [serial 1666] 
P [86] << true >>
S [86] ->
Q [86] << (true)
 and (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 71:
Theorem (71) [serial 1667] used for:
  Law of And-Simplification:  P and P is P [serial 1666]
 


Theorem (73)                               [serial 1665] 
P [86] << true >>
S [86] ->
Q [86] << (0.0 = (LRL@now - URL@now) or 
0.0 = (2.0 * (REACTION_TIME@now - LRL@now)) or 
0.0 = (2.0 * (RECOVERY_TIME@now - LRL@now)) or 
not 0.0 = (LRL@now - URL@now))
 and (0.0 = (LRL@now - URL@now) or 
0.0 = (2.0 * (REACTION_TIME@now - LRL@now)) or 
0.0 = (2.0 * (RECOVERY_TIME@now - LRL@now)) or 
not 0.0 = (2.0 * (REACTION_TIME@now - LRL@now)))
 and (0.0 = (LRL@now - URL@now) or 
0.0 = (2.0 * (REACTION_TIME@now - LRL@now)) or 
0.0 = (2.0 * (RECOVERY_TIME@now - LRL@now)) or 
not 0.0 = (2.0 * (RECOVERY_TIME@now - LRL@now))) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 72:
Theorem (72) [serial 1666] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1665]
 


Theorem (74)                               [serial 1664] 
P [86] << true >>
S [86] ->
Q [86] << (not 0.0 = (LRL@now - URL@now) or 
(0.0 = (LRL@now - URL@now) or 
0.0 = (2.0 * (REACTION_TIME@now - LRL@now)) or 
0.0 = (2.0 * (RECOVERY_TIME@now - LRL@now))))
 and (not 0.0 = (2.0 * (REACTION_TIME@now - LRL@now)) or 
(0.0 = (LRL@now - URL@now) or 
0.0 = (2.0 * (REACTION_TIME@now - LRL@now)) or 
0.0 = (2.0 * (RECOVERY_TIME@now - LRL@now))))
 and (not 0.0 = (2.0 * (RECOVERY_TIME@now - LRL@now)) or 
(0.0 = (LRL@now - URL@now) or 
0.0 = (2.0 * (REACTION_TIME@now - LRL@now)) or 
0.0 = (2.0 * (RECOVERY_TIME@now - LRL@now)))) >>
by Associativity: (b.c).a = a.b.c
and theorem 73:
Theorem (73) [serial 1665] used for:
  Associativity: (b.c).a = a.b.c [serial 1664]
 


Theorem (75)                               [serial 1662] 
P [86] << true >>
S [86] ->
Q [86] << (not 0.0 = (LRL@now - URL@now)
 and not 0.0 = (2.0 * (REACTION_TIME@now - LRL@now))
 and not 0.0 = (2.0 * (RECOVERY_TIME@now - LRL@now))) or 
(0.0 = (LRL@now - URL@now) or 
0.0 = (2.0 * (REACTION_TIME@now - LRL@now)) or 
0.0 = (2.0 * (RECOVERY_TIME@now - LRL@now))) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 74:
Theorem (74) [serial 1664] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 1662]
 


Theorem (76)                               [serial 1660] 
P [86] << true >>
S [86] ->
Q [86] << ((((((2.0 * (((REACTION_TIME)@now - (LRL)@now)))) = 0.0)) or 
((((2.0 * (((RECOVERY_TIME)@now - (LRL)@now)))) = 0.0)) or 
(((((LRL)@now - (URL)@now)) = 0.0)))) or 
(((((not (0.0 = ((2.0 * (((REACTION_TIME)@now - (LRL)@now))))))))
 and (((not (0.0 = ((2.0 * (((RECOVERY_TIME)@now - (LRL)@now))))))))
 and (((not (0.0 = (((LRL)@now - (URL)@now)))))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 75:
Theorem (75) [serial 1662] used for:
    normalization of [serial 1660]
 


Theorem (77)                               [serial 1014] 
P [86] << true >>
S [86] ->
Q [86] << ((((((2.0 * (((REACTION_TIME)@now - (LRL)@now)))) = 0.0)) or 
((((2.0 * (((RECOVERY_TIME)@now - (LRL)@now)))) = 0.0)) or 
(((((LRL)@now - (URL)@now)) = 0.0)))) or 
((((((2.0 * (((REACTION_TIME)@now - (LRL)@now)))) <> 0.0))
 and ((((2.0 * (((RECOVERY_TIME)@now - (LRL)@now)))) <> 0.0))
 and (((((LRL)@now - (URL)@now)) <> 0.0)))) >>
by Replace not equality with inequality:  a<>b  iff  not(a=b)
and theorem 76:
Theorem (76) [serial 1660] used for:
  Replace not equality with inequality:  a<>b  iff  not(a=b) [serial 1014]
 


Theorem (78)                               [serial 1015] 
P [84] << true >>
S [91] ->
Q [85] << true >>
by True Conclusion Schema (tc): P->true


Theorem (79)                               [serial 1016] 
P [93] << (true)
 and cci@now
 and not (exists u~time
  in tops ,, now 
  that cci@u ) >>
S [93] ->
Q [86] << true >>
by True Conclusion Schema (tc): P->true


Theorem (80)                               [serial 1017] 
P [96] << (((((2.0 * (((REACTION_TIME)@now - (LRL)@now)))) = 0.0)) or 
((((2.0 * (((RECOVERY_TIME)@now - (LRL)@now)))) = 0.0)) or 
(((((LRL)@now - (URL)@now)) = 0.0))) >>
S [95] ->
Q [87] << true >>
by True Conclusion Schema (tc): P->true


Theorem (81)                               [serial 1816] 
P [102] << 0.0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [102] ->
Q    << 0 <> (LRL - URL) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (82)                               [serial 1817] 
P [102] << 0.0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [102] ->
Q    << 0.0 <> (2.0 * (REACTION_TIME - LRL)) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (83)                               [serial 1818] 
P [102] << 0.0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [102] ->
Q    << 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (84)                               [serial 1806] 
P [102] << 0.0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [102] ->
Q [107] << 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 81 82 83:
Theorem (81) [serial 1816] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1806]
 
Theorem (82) [serial 1817] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1806]
 
Theorem (83) [serial 1818] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1806]
 


Theorem (85)                               [serial 1706] 
P [102] << 0.0 <> (LRL@now - URL@now)
 and 0.0 <> (2.0 * (REACTION_TIME@now - LRL@now))
 and 0.0 <> (2.0 * (RECOVERY_TIME@now - LRL@now)) >>
S [102] ->
Q [107] << 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
by Assume Present:  P = P@now = P^0 
and theorem 84:
Theorem (84) [serial 1806] used for:
  Assume Present:  P = P@now = P^0  [serial 1706]
 


Theorem (86)                               [serial 1672] 
P [102] << (((((2.0 * (((REACTION_TIME)@now - (LRL)@now)))) <> 0.0))
 and ((((2.0 * (((RECOVERY_TIME)@now - (LRL)@now)))) <> 0.0))
 and (((((LRL)@now - (URL)@now)) <> 0.0))) >>
S [102] ->
Q [107] << (((((2.0 * ((REACTION_TIME - LRL)))) <> 0.0))
 and ((((2.0 * ((RECOVERY_TIME - LRL)))) <> 0.0))
 and ((((LRL - URL)) <> 0))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 85:
Theorem (85) [serial 1706] used for:
    normalization of [serial 1672]
 


Theorem (87)                               [serial 1865] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << true >>
by True Conclusion Schema (tc): P->true


Theorem (88)                               [serial 1863] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << (if (CCI + (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))) <= (if (LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) then CCI + (((LRL - MSR) * 
(LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL))) else (if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD)))) = (if (CCI + (((LRL - MSR) * (LRL + MSR)) / (
2.0 * (RECOVERY_TIME - LRL)))) <= (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) then CCI + (((LRL - MSR) * 
(LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL))) else (if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD)))) >>
by Equality Law (idistr):  a=a <-> true
and theorem 87:
Theorem (87) [serial 1865] used for:
  Equality Law (idistr):  a=a <-> true [serial 1863]
 


Theorem (89)                               [serial 1861] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << ((if (CCI + ((((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL))))) <= ((if (LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD)))) then CCI + ((((LRL - MSR) * 
(LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))) else ((if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD)))))) = ((if ((((CCI + ((((((LRL - MSR)) * ((LRL + 
MSR)))) / ((2.0 * ((RECOVERY_TIME - LRL))))))))) <= ((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))))) then (((CCI + ((((
((LRL - MSR)) * ((LRL + MSR)))) / ((2.0 * ((RECOVERY_TIME - LRL))))))))) else ((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD))))))))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 88:
Theorem (88) [serial 1863] used for:
    normalization of [serial 1861]
 


Theorem (90)                               [serial 1860] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << ((if (CCI + ((((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL))))) <= siri then 
CCI + ((((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))) else siri)) = ((if ((((
CCI + ((((((LRL - MSR)) * ((LRL + MSR)))) / ((2.0 * ((RECOVERY_TIME - LRL))))))))) <= ((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))))) then (((CCI + ((((
((LRL - MSR)) * ((LRL + MSR)))) / ((2.0 * ((RECOVERY_TIME - LRL))))))))) else ((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD))))))))))) >>
by Guided Substitution of Equals
and theorem 89:
Theorem (89) [serial 1861] used for:
  Guided Substitution of Equals
 replacing "siri" with its = "((if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))))" in its postcondition [serial 1860]
 


Theorem (91)                               [serial 1859] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << ((if (CCI + y) <= siri then CCI + y else siri)) = ((if ((((CCI + ((((
((LRL - MSR)) * ((LRL + MSR)))) / ((2.0 * ((RECOVERY_TIME - LRL))))))))) <= ((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))))) then (((CCI + ((((
((LRL - MSR)) * ((LRL + MSR)))) / ((2.0 * ((RECOVERY_TIME - LRL))))))))) else ((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD))))))))))) >>
by Guided Substitution of Equals
and theorem 90:
Theorem (90) [serial 1860] used for:
  Guided Substitution of Equals
 replacing "y" with its = "((((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL))))" in its postcondition [serial 1859]
 


Theorem (92)                               [serial 1858] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << dn_siri = ((if ((((CCI + ((((((LRL - MSR)) * ((LRL + MSR)))) / ((2.0 * 
((RECOVERY_TIME - LRL))))))))) <= ((if (MSR >= (((LRL - ((RESPONSE_FACTOR * 
((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((RESPONSE_FACTOR * 
((XL - ACTIVITY_THRESHOLD)))))))))) then (((CCI + ((((((LRL - MSR)) * ((
LRL + MSR)))) / ((2.0 * ((RECOVERY_TIME - LRL))))))))) else ((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD))))))))))) >>
by Guided Substitution of Equals
and theorem 91:
Theorem (91) [serial 1859] used for:
  Guided Substitution of Equals
 replacing "dn_siri" with its = "((if (CCI + y) <= siri then CCI + y else siri))" in its postcondition [serial 1858]
 


Theorem (93)                               [serial 1857] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << dn_siri = ((if ((((CCI + Y_A()))) <= SIRi_A()) then (((CCI + Y_A()))) else SIRi_A())) >>
by Substitution of Assertion Labels
and theorem 92:
Theorem (92) [serial 1858] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1857]
 


Theorem (94)                               [serial 1819] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << dn_siri = DN_SIRi_A() >>
by Substitution of Assertion Labels
and theorem 93:
Theorem (93) [serial 1857] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1819]
 


Theorem (95)                               [serial 1871] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << true >>
by True Conclusion Schema (tc): P->true


Theorem (96)                               [serial 1869] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << (CCI * (1.0 + (DRS / 100.0))) = (CCI * (1.0 + (DRS / 100.0))) >>
by Equality Law (idistr):  a=a <-> true
and theorem 95:
Theorem (95) [serial 1871] used for:
  Equality Law (idistr):  a=a <-> true [serial 1869]
 


Theorem (97)                               [serial 1867] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << ((CCI * (1.0 + (DRS / 100.0)))) = ((CCI * ((1.0 + ((DRS / 100.0)))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 96:
Theorem (96) [serial 1869] used for:
    normalization of [serial 1867]
 


Theorem (98)                               [serial 1866] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << ((CCI * (1.0 + (DRS / 100.0)))) = DOWN_A() >>
by Substitution of Assertion Labels
and theorem 97:
Theorem (97) [serial 1867] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1866]
 


Theorem (99)                               [serial 1820] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << down = DOWN_A() >>
by Guided Substitution of Equals
and theorem 98:
Theorem (98) [serial 1866] used for:
  Guided Substitution of Equals
 replacing "down" with its = "((CCI * (1.0 + (DRS / 100.0))))" in its postcondition [serial 1820]
 


Theorem (100)                               [serial 1878] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << true >>
by True Conclusion Schema (tc): P->true


Theorem (101)                               [serial 1876] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << (if exists t~time
  in now - MAX_CCI .. now 
  that VS@t
        and not (exists t2~time
         in t ,, now 
         that VP@t2 or 
              VS@t2 )  then HY + LRL else LRL) = (if exists t~time
  in now - MAX_CCI .. now 
  that VS@t
        and not (exists t2~time
         in t ,, now 
         that VP@t2 or 
              VS@t2 )  then HY + LRL else LRL) >>
by Equality Law (idistr):  a=a <-> true
and theorem 100:
Theorem (100) [serial 1878] used for:
  Equality Law (idistr):  a=a <-> true [serial 1876]
 


Theorem (102)                               [serial 1874] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << ((if (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t
        and not (exists t2~time
         in t ,, now 
         that ((VS@t2 or 
              VP@t2)) ))) ) then HY + LRL else LRL)) = ((if (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t
        and not (exists t2~time
         in t ,, now 
         that ((VS@t2 or 
              VP@t2)) ))) ) then (LRL + HY) else LRL)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 101:
Theorem (101) [serial 1876] used for:
    normalization of [serial 1874]
 


Theorem (103)                               [serial 1873] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << ((if (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t
        and not (exists t2~time
         in t ,, now 
         that ((VS@t2 or 
              VP@t2)) ))) ) then HY + LRL else LRL)) = ((if LAST_V_WAS_VS(now) then (
LRL + HY) else LRL)) >>
by Substitution of Assertion Labels
and theorem 102:
Theorem (102) [serial 1874] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1873]
 


Theorem (104)                               [serial 1872] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << ((if LAST_V_WAS_VS(now) then HY + LRL else LRL)) = HyLRL(now) >>
by Substitution of Assertion Labels
and theorem 103:
Theorem (103) [serial 1873] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1872]
 


Theorem (105)                               [serial 1821] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << hylrl = HyLRL(now) >>
by Guided Substitution of Equals
and theorem 104:
Theorem (104) [serial 1872] used for:
  Guided Substitution of Equals
 replacing "hylrl" with its = "((if LAST_V_WAS_VS(now) then HY + LRL else LRL))" in its postcondition [serial 1821]
 


Theorem (106)                               [serial 1884] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << true >>
by True Conclusion Schema (tc): P->true


Theorem (107)                               [serial 1882] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = (if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) >>
by Equality Law (idistr):  a=a <-> true
and theorem 106:
Theorem (106) [serial 1884] used for:
  Equality Law (idistr):  a=a <-> true [serial 1882]
 


Theorem (108)                               [serial 1880] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << ((if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD)))) = ((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD))))))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 107:
Theorem (107) [serial 1882] used for:
    normalization of [serial 1880]
 


Theorem (109)                               [serial 1879] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << siri = ((if (MSR >= (((LRL - ((RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD))))))))) >>
by Guided Substitution of Equals
and theorem 108:
Theorem (108) [serial 1880] used for:
  Guided Substitution of Equals
 replacing "siri" with its = "((if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))))" in its postcondition [serial 1879]
 


Theorem (110)                               [serial 1822] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << siri = SIRi_A() >>
by Substitution of Assertion Labels
and theorem 109:
Theorem (109) [serial 1879] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1822]
 


Theorem (111)                               [serial 1890] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << true >>
by True Conclusion Schema (tc): P->true


Theorem (112)                               [serial 1888] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << (CCI * (1.0 - (URS / 100.0))) = (CCI * (1.0 - (URS / 100.0))) >>
by Equality Law (idistr):  a=a <-> true
and theorem 111:
Theorem (111) [serial 1890] used for:
  Equality Law (idistr):  a=a <-> true [serial 1888]
 


Theorem (113)                               [serial 1886] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << ((CCI * (1.0 - (URS / 100.0)))) = ((CCI * ((1.0 - ((URS / 100.0)))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 112:
Theorem (112) [serial 1888] used for:
    normalization of [serial 1886]
 


Theorem (114)                               [serial 1885] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << ((CCI * (1.0 - (URS / 100.0)))) = UP_A() >>
by Substitution of Assertion Labels
and theorem 113:
Theorem (113) [serial 1886] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1885]
 


Theorem (115)                               [serial 1823] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << up = UP_A() >>
by Guided Substitution of Equals
and theorem 114:
Theorem (114) [serial 1885] used for:
  Guided Substitution of Equals
 replacing "up" with its = "((CCI * (1.0 - (URS / 100.0))))" in its postcondition [serial 1823]
 


Theorem (116)                               [serial 1902] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << true >>
by True Conclusion Schema (tc): P->true


Theorem (117)                               [serial 1900] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << (if (CCI - (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))) <= (if (LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) then (if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) else CCI - (((LRL - MSR) * (LRL + MSR)) / (2.0 * 
(REACTION_TIME - LRL)))) = (if (CCI - (((LRL - MSR) * (LRL + MSR)) / (2.0 * 
(REACTION_TIME - LRL)))) <= (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) then (if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) else CCI - (((LRL - MSR) * (LRL + MSR)) / (2.0 * 
(REACTION_TIME - LRL)))) >>
by Equality Law (idistr):  a=a <-> true
and theorem 116:
Theorem (116) [serial 1902] used for:
  Equality Law (idistr):  a=a <-> true [serial 1900]
 


Theorem (118)                               [serial 1898] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << (if (CCI - ((((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL))))) <= ((if (LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD)))) then ((if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD)))) else CCI - ((((LRL - MSR) * (LRL + MSR)) / (
2.0 * (REACTION_TIME - LRL))))) = (if (CCI - (((LRL - MSR) * (LRL + MSR)) / (
2.0 * (REACTION_TIME - LRL)))) <= (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) then (if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) else CCI - (((LRL - MSR) * (LRL + MSR)) / (2.0 * 
(REACTION_TIME - LRL)))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 117:
Theorem (117) [serial 1900] used for:
    normalization of [serial 1898]
 


Theorem (119)                               [serial 1897] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << (if (CCI - z) <= ((if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD)))) then ((if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD)))) else CCI - z) = (if (CCI - (((LRL - MSR) * 
(LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))) <= (if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) then (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) else CCI - (((LRL - MSR) * 
(LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))) >>
by Guided Substitution of Equals
and theorem 118:
Theorem (118) [serial 1898] used for:
  Guided Substitution of Equals
 replacing "z" with its = "((((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL))))" in its postcondition [serial 1897]
 


Theorem (120)                               [serial 1895] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << (if (CCI - z) <= siri then siri else CCI - z) = (if (CCI - (((LRL - MSR) * 
(LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))) <= (if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) then (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) else CCI - (((LRL - MSR) * 
(LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))) >>
by Guided Substitution of Equals
and theorem 119:
Theorem (119) [serial 1897] used for:
  Guided Substitution of Equals
 replacing "siri" with its = "((if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))))" in its postcondition [serial 1895]
 


Theorem (121)                               [serial 1893] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << ((if (CCI - z) <= siri then siri else CCI - z)) = ((if (((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD))))))))) >= (((CCI - ((((((LRL - MSR)) * 
((LRL + MSR)))) / ((2.0 * ((REACTION_TIME - LRL)))))))))) then ((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD))))))))) else (((CCI - ((((((LRL - MSR)) * 
((LRL + MSR)))) / ((2.0 * ((REACTION_TIME - LRL))))))))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 120:
Theorem (120) [serial 1895] used for:
    normalization of [serial 1893]
 


Theorem (122)                               [serial 1892] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << ((if (CCI - z) <= siri then siri else CCI - z)) = ((if (SIRi_A() >= (((CCI - Z_A())))) then SIRi_A() else (((CCI - Z_A()))))) >>
by Substitution of Assertion Labels
and theorem 121:
Theorem (121) [serial 1893] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1892]
 


Theorem (123)                               [serial 1891] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << ((if (CCI - z) <= siri then siri else CCI - z)) = UP_SIRi_A() >>
by Substitution of Assertion Labels
and theorem 122:
Theorem (122) [serial 1892] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1891]
 


Theorem (124)                               [serial 1824] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << up_siri = UP_SIRi_A() >>
by Guided Substitution of Equals
and theorem 123:
Theorem (123) [serial 1891] used for:
  Guided Substitution of Equals
 replacing "up_siri" with its = "((if (CCI - z) <= siri then siri else CCI - z))" in its postcondition [serial 1824]
 


Theorem (125)                               [serial 1908] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << true >>
by True Conclusion Schema (tc): P->true


Theorem (126)                               [serial 1906] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL))) = (((LRL - MSR) * 
(LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL))) >>
by Equality Law (idistr):  a=a <-> true
and theorem 125:
Theorem (125) [serial 1908] used for:
  Equality Law (idistr):  a=a <-> true [serial 1906]
 


Theorem (127)                               [serial 1904] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << ((((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))) = ((((
((LRL - MSR)) * ((LRL + MSR)))) / ((2.0 * ((RECOVERY_TIME - LRL)))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 126:
Theorem (126) [serial 1906] used for:
    normalization of [serial 1904]
 


Theorem (128)                               [serial 1903] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << ((((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))) = Y_A() >>
by Substitution of Assertion Labels
and theorem 127:
Theorem (127) [serial 1904] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1903]
 


Theorem (129)                               [serial 1825] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << y = Y_A() >>
by Guided Substitution of Equals
and theorem 128:
Theorem (128) [serial 1903] used for:
  Guided Substitution of Equals
 replacing "y" with its = "((((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL))))" in its postcondition [serial 1825]
 


Theorem (130)                               [serial 1914] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << true >>
by True Conclusion Schema (tc): P->true


Theorem (131)                               [serial 1912] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL))) = (((LRL - MSR) * 
(LRL + MSR)) / (2.0 * (REACTION_TIME - LRL))) >>
by Equality Law (idistr):  a=a <-> true
and theorem 130:
Theorem (130) [serial 1914] used for:
  Equality Law (idistr):  a=a <-> true [serial 1912]
 


Theorem (132)                               [serial 1910] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << ((((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))) = ((((
((LRL - MSR)) * ((LRL + MSR)))) / ((2.0 * ((REACTION_TIME - LRL)))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 131:
Theorem (131) [serial 1912] used for:
    normalization of [serial 1910]
 


Theorem (133)                               [serial 1909] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << ((((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))) = Z_A() >>
by Substitution of Assertion Labels
and theorem 132:
Theorem (132) [serial 1910] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1909]
 


Theorem (134)                               [serial 1826] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << z = Z_A() >>
by Guided Substitution of Equals
and theorem 133:
Theorem (133) [serial 1909] used for:
  Guided Substitution of Equals
 replacing "z" with its = "((((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL))))" in its postcondition [serial 1826]
 


Theorem (135)                               [serial 1827] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q    << 0.0 <> (LRL - URL) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (136)                               [serial 1815] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and 0.0 <> (LRL - URL) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 94 99 105 110 115 124 129 134 135:
Theorem (94) [serial 1819] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1815]
 
Theorem (99) [serial 1820] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1815]
 
Theorem (105) [serial 1821] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1815]
 
Theorem (110) [serial 1822] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1815]
 
Theorem (115) [serial 1823] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1815]
 
Theorem (124) [serial 1824] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1815]
 
Theorem (129) [serial 1825] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1815]
 
Theorem (134) [serial 1826] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1815]
 
Theorem (135) [serial 1827] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1815]
 


Theorem (137)                               [serial 1797] 
P [107] << (if (CCI@now - z) <= siri then siri else CCI@now - z) = up_siri
 and (if (LRL@now - (RESPONSE_FACTOR@now * (XL@now - ACTIVITY_THRESHOLD@now))) <= MSR@now then MSR@now else LRL@now - (
RESPONSE_FACTOR@now * (XL@now - ACTIVITY_THRESHOLD@now))) = siri
 and (if (CCI@now + y) <= siri then CCI@now + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now)@now then HY@now + LRL@now else LRL@now) = hylrl
 and down = (CCI@now * (1.0 + (DRS@now / 100.0)))
 and up = (CCI@now * (1.0 - (URS@now / 100.0)))
 and y = (((LRL@now - MSR@now) * (LRL@now + MSR@now)) / (2.0 * (RECOVERY_TIME@now - LRL@now)))
 and z = (((LRL@now - MSR@now) * (LRL@now + MSR@now)) / (2.0 * (REACTION_TIME@now - LRL@now)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and 0.0 <> (LRL - URL) >>
by Assume Present:  P = P@now = P^0 
and theorem 136:
Theorem (136) [serial 1815] used for:
  Assume Present:  P = P@now = P^0  [serial 1797]
 


Theorem (138)                               [serial 1777] 
P [107] << 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL))
 and (if (CCI@now - z) <= siri then siri else CCI@now - z) = up_siri
 and (if (LRL@now - (RESPONSE_FACTOR@now * (XL@now - ACTIVITY_THRESHOLD@now))) <= MSR@now then MSR@now else LRL@now - (
RESPONSE_FACTOR@now * (XL@now - ACTIVITY_THRESHOLD@now))) = siri
 and (if (CCI@now + y) <= siri then CCI@now + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now)@now then HY@now + LRL@now else LRL@now) = hylrl
 and down = (CCI@now * (1.0 + (DRS@now / 100.0)))
 and up = (CCI@now * (1.0 - (URS@now / 100.0)))
 and y = (((LRL@now - MSR@now) * (LRL@now + MSR@now)) / (2.0 * (RECOVERY_TIME@now - LRL@now)))
 and z = (((LRL@now - MSR@now) * (LRL@now + MSR@now)) / (2.0 * (REACTION_TIME@now - LRL@now))) >>
S [120] ->
Q [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and 0.0 <> (LRL - URL) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 137:
Theorem (137) [serial 1797] used for:
    normalization of [serial 1777]
 


Theorem (139)                               [serial 1770] 
P [107] << (if (CCI@now - z) <= siri then siri else CCI@now - z) = up_siri
 and (if (LRL@now - (RESPONSE_FACTOR@now * (XL@now - ACTIVITY_THRESHOLD@now))) <= MSR@now then MSR@now else LRL@now - (
RESPONSE_FACTOR@now * (XL@now - ACTIVITY_THRESHOLD@now))) = siri
 and (if (CCI@now + y) <= siri then CCI@now + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now)@now then HY@now + LRL@now else LRL@now) = hylrl
 and down = (CCI@now * (1.0 + (DRS@now / 100.0)))
 and up = (CCI@now * (1.0 - (URS@now / 100.0)))
 and y = (((LRL@now - MSR@now) * (LRL@now + MSR@now)) / (2.0 * (RECOVERY_TIME@now - LRL@now)))
 and z = (((LRL@now - MSR@now) * (LRL@now + MSR@now)) / (2.0 * (REACTION_TIME@now - LRL@now)))
 and (0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL))) >>
S [120] ->
Q [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and 0.0 <> (LRL - URL) >>
by Associativity: (b.c).a = a.b.c
and theorem 138:
Theorem (138) [serial 1777] used for:
  Associativity: (b.c).a = a.b.c [serial 1770]
 


Theorem (140)                               [serial 1762] 
P [107] << (if (CCI@now - z) <= siri then siri else CCI@now - z) = up_siri
 and (if (LRL@now - (RESPONSE_FACTOR@now * (XL@now - ACTIVITY_THRESHOLD@now))) <= MSR@now then MSR@now else LRL@now - (
RESPONSE_FACTOR@now * (XL@now - ACTIVITY_THRESHOLD@now))) = siri
 and (if (CCI@now + y) <= siri then CCI@now + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now)@now then HY@now + LRL@now else LRL@now) = hylrl
 and down = (CCI@now * (1.0 + (DRS@now / 100.0)))
 and up = (CCI@now * (1.0 - (URS@now / 100.0)))
 and y = (((LRL@now - MSR@now) * (LRL@now + MSR@now)) / (2.0 * (RECOVERY_TIME@now - LRL@now)))
 and z = (((LRL@now - MSR@now) * (LRL@now + MSR@now)) / (2.0 * (REACTION_TIME@now - LRL@now)))
 and (0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL))) >>
S [120] ->
Q [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and true
 and true
 and 0.0 <> (LRL - URL) >>
by Law of And-Simplification:  P and true is P
and theorem 139:
Theorem (139) [serial 1770] used for:
  Law of And-Simplification:  P and true is P [serial 1762]
 


Theorem (141)                               [serial 1865] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << true >>
by True Conclusion Schema (tc): P->true


Theorem (142)                               [serial 1863] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << (if (CCI + (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))) <= (if (LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) then CCI + (((LRL - MSR) * 
(LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL))) else (if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD)))) = (if (CCI + (((LRL - MSR) * (LRL + MSR)) / (
2.0 * (RECOVERY_TIME - LRL)))) <= (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) then CCI + (((LRL - MSR) * 
(LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL))) else (if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD)))) >>
by Equality Law (idistr):  a=a <-> true
and theorem 141:
Theorem (141) [serial 1865] used for:
  Equality Law (idistr):  a=a <-> true [serial 1863]
 


Theorem (143)                               [serial 1861] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << ((if (CCI + ((((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL))))) <= ((if (LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD)))) then CCI + ((((LRL - MSR) * 
(LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))) else ((if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD)))))) = ((if ((((CCI + ((((((LRL - MSR)) * ((LRL + 
MSR)))) / ((2.0 * ((RECOVERY_TIME - LRL))))))))) <= ((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))))) then (((CCI + ((((
((LRL - MSR)) * ((LRL + MSR)))) / ((2.0 * ((RECOVERY_TIME - LRL))))))))) else ((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD))))))))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 142:
Theorem (142) [serial 1863] used for:
    normalization of [serial 1861]
 


Theorem (144)                               [serial 1860] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << ((if (CCI + ((((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL))))) <= siri then 
CCI + ((((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))) else siri)) = ((if ((((
CCI + ((((((LRL - MSR)) * ((LRL + MSR)))) / ((2.0 * ((RECOVERY_TIME - LRL))))))))) <= ((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))))) then (((CCI + ((((
((LRL - MSR)) * ((LRL + MSR)))) / ((2.0 * ((RECOVERY_TIME - LRL))))))))) else ((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD))))))))))) >>
by Guided Substitution of Equals
and theorem 143:
Theorem (143) [serial 1861] used for:
  Guided Substitution of Equals
 replacing "siri" with its = "((if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))))" in its postcondition [serial 1860]
 


Theorem (145)                               [serial 1859] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << ((if (CCI + y) <= siri then CCI + y else siri)) = ((if ((((CCI + ((((
((LRL - MSR)) * ((LRL + MSR)))) / ((2.0 * ((RECOVERY_TIME - LRL))))))))) <= ((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))))) then (((CCI + ((((
((LRL - MSR)) * ((LRL + MSR)))) / ((2.0 * ((RECOVERY_TIME - LRL))))))))) else ((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD))))))))))) >>
by Guided Substitution of Equals
and theorem 144:
Theorem (144) [serial 1860] used for:
  Guided Substitution of Equals
 replacing "y" with its = "((((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL))))" in its postcondition [serial 1859]
 


Theorem (146)                               [serial 1858] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << dn_siri = ((if ((((CCI + ((((((LRL - MSR)) * ((LRL + MSR)))) / ((2.0 * 
((RECOVERY_TIME - LRL))))))))) <= ((if (MSR >= (((LRL - ((RESPONSE_FACTOR * 
((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((RESPONSE_FACTOR * 
((XL - ACTIVITY_THRESHOLD)))))))))) then (((CCI + ((((((LRL - MSR)) * ((
LRL + MSR)))) / ((2.0 * ((RECOVERY_TIME - LRL))))))))) else ((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD))))))))))) >>
by Guided Substitution of Equals
and theorem 145:
Theorem (145) [serial 1859] used for:
  Guided Substitution of Equals
 replacing "dn_siri" with its = "((if (CCI + y) <= siri then CCI + y else siri))" in its postcondition [serial 1858]
 


Theorem (147)                               [serial 1857] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << dn_siri = ((if ((((CCI + Y_A()))) <= SIRi_A()) then (((CCI + Y_A()))) else SIRi_A())) >>
by Substitution of Assertion Labels
and theorem 146:
Theorem (146) [serial 1858] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1857]
 


Theorem (148)                               [serial 1819] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << dn_siri = DN_SIRi_A() >>
by Substitution of Assertion Labels
and theorem 147:
Theorem (147) [serial 1857] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1819]
 


Theorem (149)                               [serial 1871] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << true >>
by True Conclusion Schema (tc): P->true


Theorem (150)                               [serial 1869] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << (CCI * (1.0 + (DRS / 100.0))) = (CCI * (1.0 + (DRS / 100.0))) >>
by Equality Law (idistr):  a=a <-> true
and theorem 149:
Theorem (149) [serial 1871] used for:
  Equality Law (idistr):  a=a <-> true [serial 1869]
 


Theorem (151)                               [serial 1867] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << ((CCI * (1.0 + (DRS / 100.0)))) = ((CCI * ((1.0 + ((DRS / 100.0)))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 150:
Theorem (150) [serial 1869] used for:
    normalization of [serial 1867]
 


Theorem (152)                               [serial 1866] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << ((CCI * (1.0 + (DRS / 100.0)))) = DOWN_A() >>
by Substitution of Assertion Labels
and theorem 151:
Theorem (151) [serial 1867] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1866]
 


Theorem (153)                               [serial 1820] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << down = DOWN_A() >>
by Guided Substitution of Equals
and theorem 152:
Theorem (152) [serial 1866] used for:
  Guided Substitution of Equals
 replacing "down" with its = "((CCI * (1.0 + (DRS / 100.0))))" in its postcondition [serial 1820]
 


Theorem (154)                               [serial 1878] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << true >>
by True Conclusion Schema (tc): P->true


Theorem (155)                               [serial 1876] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << (if exists t~time
  in now - MAX_CCI .. now 
  that VS@t
        and not (exists t2~time
         in t ,, now 
         that VP@t2 or 
              VS@t2 )  then HY + LRL else LRL) = (if exists t~time
  in now - MAX_CCI .. now 
  that VS@t
        and not (exists t2~time
         in t ,, now 
         that VP@t2 or 
              VS@t2 )  then HY + LRL else LRL) >>
by Equality Law (idistr):  a=a <-> true
and theorem 154:
Theorem (154) [serial 1878] used for:
  Equality Law (idistr):  a=a <-> true [serial 1876]
 


Theorem (156)                               [serial 1874] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << ((if (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t
        and not (exists t2~time
         in t ,, now 
         that ((VS@t2 or 
              VP@t2)) ))) ) then HY + LRL else LRL)) = ((if (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t
        and not (exists t2~time
         in t ,, now 
         that ((VS@t2 or 
              VP@t2)) ))) ) then (LRL + HY) else LRL)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 155:
Theorem (155) [serial 1876] used for:
    normalization of [serial 1874]
 


Theorem (157)                               [serial 1873] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << ((if (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t
        and not (exists t2~time
         in t ,, now 
         that ((VS@t2 or 
              VP@t2)) ))) ) then HY + LRL else LRL)) = ((if LAST_V_WAS_VS(now) then (
LRL + HY) else LRL)) >>
by Substitution of Assertion Labels
and theorem 156:
Theorem (156) [serial 1874] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1873]
 


Theorem (158)                               [serial 1872] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << ((if LAST_V_WAS_VS(now) then HY + LRL else LRL)) = HyLRL(now) >>
by Substitution of Assertion Labels
and theorem 157:
Theorem (157) [serial 1873] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1872]
 


Theorem (159)                               [serial 1821] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << hylrl = HyLRL(now) >>
by Guided Substitution of Equals
and theorem 158:
Theorem (158) [serial 1872] used for:
  Guided Substitution of Equals
 replacing "hylrl" with its = "((if LAST_V_WAS_VS(now) then HY + LRL else LRL))" in its postcondition [serial 1821]
 


Theorem (160)                               [serial 1884] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << true >>
by True Conclusion Schema (tc): P->true


Theorem (161)                               [serial 1882] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = (if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) >>
by Equality Law (idistr):  a=a <-> true
and theorem 160:
Theorem (160) [serial 1884] used for:
  Equality Law (idistr):  a=a <-> true [serial 1882]
 


Theorem (162)                               [serial 1880] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << ((if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD)))) = ((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD))))))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 161:
Theorem (161) [serial 1882] used for:
    normalization of [serial 1880]
 


Theorem (163)                               [serial 1879] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << siri = ((if (MSR >= (((LRL - ((RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD))))))))) >>
by Guided Substitution of Equals
and theorem 162:
Theorem (162) [serial 1880] used for:
  Guided Substitution of Equals
 replacing "siri" with its = "((if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))))" in its postcondition [serial 1879]
 


Theorem (164)                               [serial 1822] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << siri = SIRi_A() >>
by Substitution of Assertion Labels
and theorem 163:
Theorem (163) [serial 1879] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1822]
 


Theorem (165)                               [serial 1890] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << true >>
by True Conclusion Schema (tc): P->true


Theorem (166)                               [serial 1888] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << (CCI * (1.0 - (URS / 100.0))) = (CCI * (1.0 - (URS / 100.0))) >>
by Equality Law (idistr):  a=a <-> true
and theorem 165:
Theorem (165) [serial 1890] used for:
  Equality Law (idistr):  a=a <-> true [serial 1888]
 


Theorem (167)                               [serial 1886] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << ((CCI * (1.0 - (URS / 100.0)))) = ((CCI * ((1.0 - ((URS / 100.0)))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 166:
Theorem (166) [serial 1888] used for:
    normalization of [serial 1886]
 


Theorem (168)                               [serial 1885] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << ((CCI * (1.0 - (URS / 100.0)))) = UP_A() >>
by Substitution of Assertion Labels
and theorem 167:
Theorem (167) [serial 1886] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1885]
 


Theorem (169)                               [serial 1823] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [122] << up = UP_A() >>
by Guided Substitution of Equals
and theorem 168:
Theorem (168) [serial 1885] used for:
  Guided Substitution of Equals
 replacing "up" with its = "((CCI * (1.0 - (URS / 100.0))))" in its postcondition [serial 1823]
 


Theorem (170)                               [serial 1902] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << true >>
by True Conclusion Schema (tc): P->true


Theorem (171)                               [serial 1900] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << (if (CCI - (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))) <= (if (LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) then (if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) else CCI - (((LRL - MSR) * (LRL + MSR)) / (2.0 * 
(REACTION_TIME - LRL)))) = (if (CCI - (((LRL - MSR) * (LRL + MSR)) / (2.0 * 
(REACTION_TIME - LRL)))) <= (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) then (if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) else CCI - (((LRL - MSR) * (LRL + MSR)) / (2.0 * 
(REACTION_TIME - LRL)))) >>
by Equality Law (idistr):  a=a <-> true
and theorem 170:
Theorem (170) [serial 1902] used for:
  Equality Law (idistr):  a=a <-> true [serial 1900]
 


Theorem (172)                               [serial 1898] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << (if (CCI - ((((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL))))) <= ((if (LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD)))) then ((if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD)))) else CCI - ((((LRL - MSR) * (LRL + MSR)) / (
2.0 * (REACTION_TIME - LRL))))) = (if (CCI - (((LRL - MSR) * (LRL + MSR)) / (
2.0 * (REACTION_TIME - LRL)))) <= (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) then (if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) else CCI - (((LRL - MSR) * (LRL + MSR)) / (2.0 * 
(REACTION_TIME - LRL)))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 171:
Theorem (171) [serial 1900] used for:
    normalization of [serial 1898]
 


Theorem (173)                               [serial 1897] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << (if (CCI - z) <= ((if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD)))) then ((if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD)))) else CCI - z) = (if (CCI - (((LRL - MSR) * 
(LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))) <= (if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) then (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) else CCI - (((LRL - MSR) * 
(LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))) >>
by Guided Substitution of Equals
and theorem 172:
Theorem (172) [serial 1898] used for:
  Guided Substitution of Equals
 replacing "z" with its = "((((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL))))" in its postcondition [serial 1897]
 


Theorem (174)                               [serial 1895] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << (if (CCI - z) <= siri then siri else CCI - z) = (if (CCI - (((LRL - MSR) * 
(LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))) <= (if (LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (RESPONSE_FACTOR * 
(XL - ACTIVITY_THRESHOLD))) then (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) else CCI - (((LRL - MSR) * 
(LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))) >>
by Guided Substitution of Equals
and theorem 173:
Theorem (173) [serial 1897] used for:
  Guided Substitution of Equals
 replacing "siri" with its = "((if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))))" in its postcondition [serial 1895]
 


Theorem (175)                               [serial 1893] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << ((if (CCI - z) <= siri then siri else CCI - z)) = ((if (((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD))))))))) >= (((CCI - ((((((LRL - MSR)) * 
((LRL + MSR)))) / ((2.0 * ((REACTION_TIME - LRL)))))))))) then ((if (MSR >= (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD)))))))) then MSR else (((LRL - ((
RESPONSE_FACTOR * ((XL - ACTIVITY_THRESHOLD))))))))) else (((CCI - ((((((LRL - MSR)) * 
((LRL + MSR)))) / ((2.0 * ((REACTION_TIME - LRL))))))))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 174:
Theorem (174) [serial 1895] used for:
    normalization of [serial 1893]
 


Theorem (176)                               [serial 1892] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << ((if (CCI - z) <= siri then siri else CCI - z)) = ((if (SIRi_A() >= (((CCI - Z_A())))) then SIRi_A() else (((CCI - Z_A()))))) >>
by Substitution of Assertion Labels
and theorem 175:
Theorem (175) [serial 1893] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1892]
 


Theorem (177)                               [serial 1891] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << ((if (CCI - z) <= siri then siri else CCI - z)) = UP_SIRi_A() >>
by Substitution of Assertion Labels
and theorem 176:
Theorem (176) [serial 1892] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1891]
 


Theorem (178)                               [serial 1824] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [121] << up_siri = UP_SIRi_A() >>
by Guided Substitution of Equals
and theorem 177:
Theorem (177) [serial 1891] used for:
  Guided Substitution of Equals
 replacing "up_siri" with its = "((if (CCI - z) <= siri then siri else CCI - z))" in its postcondition [serial 1824]
 


Theorem (179)                               [serial 1908] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << true >>
by True Conclusion Schema (tc): P->true


Theorem (180)                               [serial 1906] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL))) = (((LRL - MSR) * 
(LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL))) >>
by Equality Law (idistr):  a=a <-> true
and theorem 179:
Theorem (179) [serial 1908] used for:
  Equality Law (idistr):  a=a <-> true [serial 1906]
 


Theorem (181)                               [serial 1904] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << ((((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))) = ((((
((LRL - MSR)) * ((LRL + MSR)))) / ((2.0 * ((RECOVERY_TIME - LRL)))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 180:
Theorem (180) [serial 1906] used for:
    normalization of [serial 1904]
 


Theorem (182)                               [serial 1903] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << ((((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))) = Y_A() >>
by Substitution of Assertion Labels
and theorem 181:
Theorem (181) [serial 1904] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1903]
 


Theorem (183)                               [serial 1825] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << y = Y_A() >>
by Guided Substitution of Equals
and theorem 182:
Theorem (182) [serial 1903] used for:
  Guided Substitution of Equals
 replacing "y" with its = "((((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL))))" in its postcondition [serial 1825]
 


Theorem (184)                               [serial 1914] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << true >>
by True Conclusion Schema (tc): P->true


Theorem (185)                               [serial 1912] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL))) = (((LRL - MSR) * 
(LRL + MSR)) / (2.0 * (REACTION_TIME - LRL))) >>
by Equality Law (idistr):  a=a <-> true
and theorem 184:
Theorem (184) [serial 1914] used for:
  Equality Law (idistr):  a=a <-> true [serial 1912]
 


Theorem (186)                               [serial 1910] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << ((((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))) = ((((
((LRL - MSR)) * ((LRL + MSR)))) / ((2.0 * ((REACTION_TIME - LRL)))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 185:
Theorem (185) [serial 1912] used for:
    normalization of [serial 1910]
 


Theorem (187)                               [serial 1909] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << ((((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))) = Z_A() >>
by Substitution of Assertion Labels
and theorem 186:
Theorem (186) [serial 1910] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1909]
 


Theorem (188)                               [serial 1826] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << z = Z_A() >>
by Guided Substitution of Equals
and theorem 187:
Theorem (187) [serial 1909] used for:
  Guided Substitution of Equals
 replacing "z" with its = "((((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL))))" in its postcondition [serial 1826]
 


Theorem (189)                               [serial 1827] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q    << 0.0 <> (LRL - URL) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (190)                               [serial 1815] 
P [107] << (if (CCI - z) <= siri then siri else CCI - z) = up_siri
 and (if (LRL - (RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) <= MSR then MSR else LRL - (
RESPONSE_FACTOR * (XL - ACTIVITY_THRESHOLD))) = siri
 and (if (CCI + y) <= siri then CCI + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now) then HY + LRL else LRL) = hylrl
 and down = (CCI * (1.0 + (DRS / 100.0)))
 and up = (CCI * (1.0 - (URS / 100.0)))
 and y = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (RECOVERY_TIME - LRL)))
 and z = (((LRL - MSR) * (LRL + MSR)) / (2.0 * (REACTION_TIME - LRL)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and 0.0 <> (LRL - URL) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 148 153 159 164 169 178 183 188 189:
Theorem (148) [serial 1819] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1815]
 
Theorem (153) [serial 1820] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1815]
 
Theorem (159) [serial 1821] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1815]
 
Theorem (164) [serial 1822] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1815]
 
Theorem (169) [serial 1823] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1815]
 
Theorem (178) [serial 1824] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1815]
 
Theorem (183) [serial 1825] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1815]
 
Theorem (188) [serial 1826] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1815]
 
Theorem (189) [serial 1827] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1815]
 


Theorem (191)                               [serial 1797] 
P [107] << (if (CCI@now - z) <= siri then siri else CCI@now - z) = up_siri
 and (if (LRL@now - (RESPONSE_FACTOR@now * (XL@now - ACTIVITY_THRESHOLD@now))) <= MSR@now then MSR@now else LRL@now - (
RESPONSE_FACTOR@now * (XL@now - ACTIVITY_THRESHOLD@now))) = siri
 and (if (CCI@now + y) <= siri then CCI@now + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now)@now then HY@now + LRL@now else LRL@now) = hylrl
 and down = (CCI@now * (1.0 + (DRS@now / 100.0)))
 and up = (CCI@now * (1.0 - (URS@now / 100.0)))
 and y = (((LRL@now - MSR@now) * (LRL@now + MSR@now)) / (2.0 * (RECOVERY_TIME@now - LRL@now)))
 and z = (((LRL@now - MSR@now) * (LRL@now + MSR@now)) / (2.0 * (REACTION_TIME@now - LRL@now)))
 and 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL)) >>
S [120] ->
Q [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and 0.0 <> (LRL - URL) >>
by Assume Present:  P = P@now = P^0 
and theorem 190:
Theorem (190) [serial 1815] used for:
  Assume Present:  P = P@now = P^0  [serial 1797]
 


Theorem (192)                               [serial 1777] 
P [107] << 0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL))
 and (if (CCI@now - z) <= siri then siri else CCI@now - z) = up_siri
 and (if (LRL@now - (RESPONSE_FACTOR@now * (XL@now - ACTIVITY_THRESHOLD@now))) <= MSR@now then MSR@now else LRL@now - (
RESPONSE_FACTOR@now * (XL@now - ACTIVITY_THRESHOLD@now))) = siri
 and (if (CCI@now + y) <= siri then CCI@now + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now)@now then HY@now + LRL@now else LRL@now) = hylrl
 and down = (CCI@now * (1.0 + (DRS@now / 100.0)))
 and up = (CCI@now * (1.0 - (URS@now / 100.0)))
 and y = (((LRL@now - MSR@now) * (LRL@now + MSR@now)) / (2.0 * (RECOVERY_TIME@now - LRL@now)))
 and z = (((LRL@now - MSR@now) * (LRL@now + MSR@now)) / (2.0 * (REACTION_TIME@now - LRL@now))) >>
S [120] ->
Q [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and 0.0 <> (LRL - URL) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 191:
Theorem (191) [serial 1797] used for:
    normalization of [serial 1777]
 


Theorem (193)                               [serial 1770] 
P [107] << (if (CCI@now - z) <= siri then siri else CCI@now - z) = up_siri
 and (if (LRL@now - (RESPONSE_FACTOR@now * (XL@now - ACTIVITY_THRESHOLD@now))) <= MSR@now then MSR@now else LRL@now - (
RESPONSE_FACTOR@now * (XL@now - ACTIVITY_THRESHOLD@now))) = siri
 and (if (CCI@now + y) <= siri then CCI@now + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now)@now then HY@now + LRL@now else LRL@now) = hylrl
 and down = (CCI@now * (1.0 + (DRS@now / 100.0)))
 and up = (CCI@now * (1.0 - (URS@now / 100.0)))
 and y = (((LRL@now - MSR@now) * (LRL@now + MSR@now)) / (2.0 * (RECOVERY_TIME@now - LRL@now)))
 and z = (((LRL@now - MSR@now) * (LRL@now + MSR@now)) / (2.0 * (REACTION_TIME@now - LRL@now)))
 and (0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL))) >>
S [120] ->
Q [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and 0.0 <> (LRL - URL) >>
by Associativity: (b.c).a = a.b.c
and theorem 192:
Theorem (192) [serial 1777] used for:
  Associativity: (b.c).a = a.b.c [serial 1770]
 


Theorem (194)                               [serial 1762] 
P [107] << (if (CCI@now - z) <= siri then siri else CCI@now - z) = up_siri
 and (if (LRL@now - (RESPONSE_FACTOR@now * (XL@now - ACTIVITY_THRESHOLD@now))) <= MSR@now then MSR@now else LRL@now - (
RESPONSE_FACTOR@now * (XL@now - ACTIVITY_THRESHOLD@now))) = siri
 and (if (CCI@now + y) <= siri then CCI@now + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now)@now then HY@now + LRL@now else LRL@now) = hylrl
 and down = (CCI@now * (1.0 + (DRS@now / 100.0)))
 and up = (CCI@now * (1.0 - (URS@now / 100.0)))
 and y = (((LRL@now - MSR@now) * (LRL@now + MSR@now)) / (2.0 * (RECOVERY_TIME@now - LRL@now)))
 and z = (((LRL@now - MSR@now) * (LRL@now + MSR@now)) / (2.0 * (REACTION_TIME@now - LRL@now)))
 and (0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL))) >>
S [120] ->
Q [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and true
 and true
 and 0.0 <> (LRL - URL) >>
by Law of And-Simplification:  P and true is P
and theorem 193:
Theorem (193) [serial 1770] used for:
  Law of And-Simplification:  P and true is P [serial 1762]
 


Theorem (195)                               [serial 1708] 
P [107] << (if (CCI@now - z) <= siri then siri else CCI@now - z) = up_siri
 and (if (LRL@now - (RESPONSE_FACTOR@now * (XL@now - ACTIVITY_THRESHOLD@now))) <= MSR@now then MSR@now else LRL@now - (
RESPONSE_FACTOR@now * (XL@now - ACTIVITY_THRESHOLD@now))) = siri
 and (if (CCI@now + y) <= siri then CCI@now + y else siri) = dn_siri
 and (if LAST_V_WAS_VS(now)@now then HY@now + LRL@now else LRL@now) = hylrl
 and down = (CCI@now * (1.0 + (DRS@now / 100.0)))
 and up = (CCI@now * (1.0 - (URS@now / 100.0)))
 and y = (((LRL@now - MSR@now) * (LRL@now + MSR@now)) / (2.0 * (RECOVERY_TIME@now - LRL@now)))
 and z = (((LRL@now - MSR@now) * (LRL@now + MSR@now)) / (2.0 * (REACTION_TIME@now - LRL@now)))
 and (0 <> (LRL - URL)
 and 0.0 <> (2.0 * (REACTION_TIME - LRL))
 and 0.0 <> (2.0 * (RECOVERY_TIME - LRL))) >>
S [120] ->
Q [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 194 194:
Theorem (194) [serial 1762] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (194) [serial 1762] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (196)                               [serial 1674] 
P [107] << ((((((2.0 * ((REACTION_TIME - LRL)))) <> 0.0))
 and ((((2.0 * ((RECOVERY_TIME - LRL)))) <> 0.0))
 and ((((LRL - URL)) <> 0))))
 and siri = ((if ((MSR)@now >= (((LRL)@now - (((RESPONSE_FACTOR)@now * (((XL)@now - (ACTIVITY_THRESHOLD)@now))))))) then (MSR)@now else ((LRL)@now - ((
(RESPONSE_FACTOR)@now * (((XL)@now - (ACTIVITY_THRESHOLD)@now)))))))
 and z = (((((((LRL)@now - (MSR)@now)) * (((LRL)@now + (MSR)@now)))) / ((
2.0 * (((REACTION_TIME)@now - (LRL)@now))))))
 and y = (((((((LRL)@now - (MSR)@now)) * (((LRL)@now + (MSR)@now)))) / ((
2.0 * (((RECOVERY_TIME)@now - (LRL)@now))))))
 and up_siri = ((if ((((CCI)@now - z)) <= siri) then siri else ((CCI)@now - z)))
 and dn_siri = ((if ((((CCI)@now + y)) <= siri) then ((CCI)@now + y) else siri))
 and down = (((CCI)@now * ((1.0 + (((DRS)@now / 100.0))))))
 and up = (((CCI)@now * ((1.0 - (((URS)@now / 100.0))))))
 and hylrl = ((if (LAST_V_WAS_VS(now))@now then ((LRL)@now + (HY)@now) else (LRL)@now)) >>
S [120] ->
Q [120] << ((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 195:
Theorem (195) [serial 1708] used for:
    normalization of [serial 1674]
 


Theorem (197)                               [serial 1677] 
P [120] << ((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()) >>
S [120] ->
Q [120] << ((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()) >>
by Identity (id):  P->P is tautology


Theorem (198)                               [serial 1678] 
P [145] << true >>
S [145] ->
Q [145] << true >>
by True Conclusion Schema (tc): P->true


Theorem (199)                               [serial 1710] 
P [124] << (dav = (MIN_AV@now + (CCI@now * ((AV@now - MIN_AV@now) / (LRL - URL@now)))))@now
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL)) >>
S [124] ->
Q [145] << true >>
by True Conclusion Schema (tc): P->true


Theorem (200)                               [serial 1690] 
P [124] << (((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and (dav = (((((CCI)@now * (((((AV)@now - (MIN_AV)@now)) / ((LRL - (URL)@now)))))) + 
(MIN_AV)@now)))@now >>
S [124] ->
Q [145] << true >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 199:
Theorem (199) [serial 1710] used for:
    normalization of [serial 1690]
 


Theorem (201)                               [serial 1808] 
P [124] << dav = (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [124] ->
Q [124] << dav = (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (202)                               [serial 1783] 
P [124] << (dav = (MIN_AV@now + (CCI@now * ((AV@now - MIN_AV@now) / (LRL - URL@now)))))@now
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [124] ->
Q [124] << (dav = (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))))@now >>
by Assume Present:  P = P@now = P^0 
and theorem 201:
Theorem (201) [serial 1808] used for:
  Assume Present:  P = P@now = P^0  [serial 1783]
 


Theorem (203)                               [serial 1763] 
P [124] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL)
 and (dav = (MIN_AV@now + (CCI@now * ((AV@now - MIN_AV@now) / (LRL - URL@now)))))@now >>
S [124] ->
Q [124] << (dav = (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))))@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 202:
Theorem (202) [serial 1783] used for:
    normalization of [serial 1763]
 


Theorem (204)                               [serial 1712] 
P [124] << (dav = (MIN_AV@now + (CCI@now * ((AV@now - MIN_AV@now) / (LRL - URL@now)))))@now
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL)) >>
S [124] ->
Q [124] << (dav = (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))))@now >>
by Associativity: (b.c).a = a.b.c
and theorem 203:
Theorem (203) [serial 1763] used for:
  Associativity: (b.c).a = a.b.c [serial 1712]
 


Theorem (205)                               [serial 1691] 
P [124] << (((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and (dav = (((((CCI)@now * (((((AV)@now - (MIN_AV)@now)) / ((LRL - (URL)@now)))))) + 
(MIN_AV)@now)))@now >>
S [124] ->
Q [124] << (dav = ((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)))@now >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 204:
Theorem (204) [serial 1712] used for:
    normalization of [serial 1691]
 


Theorem (206)                               [serial 1844] 
P [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [124] ->
Q [124] << 0 <> (LRL - URL) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (207)                               [serial 1807] 
P [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [124] ->
Q [124] << 0 <> (LRL - url) >>
by Replacing port names with BLESS::Assertion properties
and theorem 206:
Theorem (206) [serial 1844] used for:
  Replacing port names with BLESS::Assertion properties [serial 1807]
 


Theorem (208)                               [serial 1714] 
P [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [124] ->
Q [124] << 0 <> (LRL - url?) >>
by Assume Present:  P = P@now = P^0 
and theorem 207:
Theorem (207) [serial 1807] used for:
  Assume Present:  P = P@now = P^0  [serial 1714]
 


Theorem (209)                               [serial 1692] 
P [120] << ((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()) >>
S [124] ->
Q [124] << ((LRL - url?)) <> 0 >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 208:
Theorem (208) [serial 1714] used for:
    normalization of [serial 1692]
 


Theorem (210)                               [serial 1679] 
P [120] << ((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()) >>
S [124] dav!((((cci? * ((((av? - min_av?)) / ((LRL - url?)))))) + min_av?))
Q [145] << true >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 200 205 209:
Theorem (200) [serial 1690] used for:
  applied port output <<pre and (dav=((((CCI)@now * (((((AV)@now - (MIN_AV)@now)) / ((LRL - (URL)@now)))))) + 
(MIN_AV)@now))@now>> -> <<post>> [serial 1679]
 
Theorem (205) [serial 1691] used for:
  applied port output <<pre and (dav=((((CCI)@now * (((((AV)@now - (MIN_AV)@now)) / ((LRL - (URL)@now)))))) + 
(MIN_AV)@now))@now>> -> <<(dav=(((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV))@now>> [serial 1679]
 
Theorem (209) [serial 1692] used for:
  applied  <<pre>> -> <<d <> 0>> for <<pre>> dav!((((cci? * ((((av? - min_av?)) / ((LRL - url?)))))) + min_av?)) <<post>> [serial 1679]
 


Theorem (211)                               [serial 1834] 
P [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [128] ->
Q [128] << true >>
by True Conclusion Schema (tc): P->true


Theorem (212)                               [serial 1832] 
P [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [128] ->
Q [128] << (true) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 211:
Theorem (211) [serial 1834] used for:
    normalization of [serial 1832]
 


Theorem (213)                               [serial 1831] 
P [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [128] ->
Q [128] << (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 212:
Theorem (212) [serial 1832] used for:
  Law of And-Simplification:  P and P is P [serial 1831]
 


Theorem (214)                               [serial 1830] 
P [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [128] ->
Q [128] << (true)
 and (true)
 and (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 213:
Theorem (213) [serial 1831] used for:
  Law of And-Simplification:  P and P is P [serial 1830]
 


Theorem (215)                               [serial 1829] 
P [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [128] ->
Q [128] << (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 214:
Theorem (214) [serial 1830] used for:
  Law of And-Simplification:  P and P is P [serial 1829]
 


Theorem (216)                               [serial 1828] 
P [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [128] ->
Q [128] << (up <= up_siri or 
up <= url or 
up_siri <= up)
 and (url <= up_siri or 
up <= url or 
up_siri <= up)
 and (up <= up_siri or 
up_siri <= url or 
up_siri <= up)
 and (url <= up_siri or 
up_siri <= url or 
up_siri <= up)
 and (up <= up_siri or 
up <= url or 
url <= up)
 and (url <= up_siri or 
up <= url or 
url <= up)
 and (up <= up_siri or 
up_siri <= url or 
url <= up)
 and (url <= up_siri or 
up_siri <= url or 
url <= up) >>
by At Most Law:  x<=y or y<=x is true
and theorem 215:
Theorem (215) [serial 1829] used for:
  At Most Law:  x<=y or y<=x is true [serial 1828]
 


Theorem (217)                               [serial 1716] 
P [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [128] ->
Q [128] << (up <= up_siri
 and url <= up_siri) or 
(up <= url
 and up_siri <= url) or 
(up_siri <= up
 and url <= up) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 216:
Theorem (216) [serial 1828] used for:
  Distributing Postcondition Or-Over-And [serial 1716]
 


Theorem (218)                               [serial 1682] 
P [120] << ((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()) >>
S [128] ->
Q [128] << ((((up_siri >= url))
 and ((up_siri >= up)))) or 
((((url >= up_siri))
 and ((url >= up)))) or 
((((up >= url))
 and ((up >= up_siri)))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 217:
Theorem (217) [serial 1716] used for:
    normalization of [serial 1682]
 


Theorem (219)                               [serial 1718] 
P [129] << (min_cci = up_siri)@now
 and ((up <= up_siri
 and url <= up_siri)
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL))) >>
S [129] ->
Q [145] << true >>
by True Conclusion Schema (tc): P->true


Theorem (220)                               [serial 1693] 
P [129] << ((((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and ((((up_siri >= url))
 and ((up_siri >= up)))))
 and (min_cci = up_siri)@now >>
S [129] ->
Q [145] << true >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 219:
Theorem (219) [serial 1718] used for:
    normalization of [serial 1693]
 


Theorem (221)                               [serial 1846] 
P [129] << up <= up_siri
 and URL <= up_siri
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and MIN_CCI = up_siri
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [129] ->
Q [129] << true >>
by True Conclusion Schema (tc): P->true


Theorem (222)                               [serial 1845] 
P [129] << up <= up_siri
 and URL <= up_siri
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and MIN_CCI = up_siri
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [129] ->
Q [129] << MIN_CCI = MIN_CCI >>
by Equality Law (idistr):  a=a <-> true
and theorem 221:
Theorem (221) [serial 1846] used for:
  Equality Law (idistr):  a=a <-> true [serial 1845]
 


Theorem (223)                               [serial 1809] 
P [129] << up <= up_siri
 and url <= up_siri
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and min_cci = up_siri
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [129] ->
Q [129] << MIN_CCI = min_cci >>
by Replacing port names with BLESS::Assertion properties
and theorem 222:
Theorem (222) [serial 1845] used for:
  Replacing port names with BLESS::Assertion properties [serial 1809]
 


Theorem (224)                               [serial 1785] 
P [129] << up <= up_siri
 and url <= up_siri
 and (min_cci = up_siri)@now
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [129] ->
Q [129] << (MIN_CCI = min_cci)@now >>
by Assume Present:  P = P@now = P^0 
and theorem 223:
Theorem (223) [serial 1809] used for:
  Assume Present:  P = P@now = P^0  [serial 1785]
 


Theorem (225)                               [serial 1771] 
P [129] << up <= up_siri
 and url <= up_siri
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL)
 and (min_cci = up_siri)@now >>
S [129] ->
Q [129] << (MIN_CCI = min_cci)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 224:
Theorem (224) [serial 1785] used for:
    normalization of [serial 1771]
 


Theorem (226)                               [serial 1764] 
P [129] << (up <= up_siri
 and url <= up_siri)
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL))
 and (min_cci = up_siri)@now >>
S [129] ->
Q [129] << (MIN_CCI = min_cci)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 225:
Theorem (225) [serial 1771] used for:
  Associativity: (b.c).a = a.b.c [serial 1764]
 


Theorem (227)                               [serial 1720] 
P [129] << (min_cci = up_siri)@now
 and ((up <= up_siri
 and url <= up_siri)
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL))) >>
S [129] ->
Q [129] << (MIN_CCI = min_cci)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 226:
Theorem (226) [serial 1764] used for:
  Associativity: (b.c).a = a.b.c [serial 1720]
 


Theorem (228)                               [serial 1694] 
P [129] << ((((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and ((((up_siri >= url))
 and ((up_siri >= up)))))
 and (min_cci = up_siri)@now >>
S [129] ->
Q [129] << (min_cci = MIN_CCI)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 227:
Theorem (227) [serial 1720] used for:
    normalization of [serial 1694]
 


Theorem (229)                               [serial 1683] 
P [128] << (((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and ((((up_siri >= url))
 and ((up_siri >= up)))) >>
S [129] min_cci!(up_siri)
Q [145] << true >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 220 228:
Theorem (220) [serial 1693] used for:
  applied port output <<pre and (min_cci=up_siri)@now>> -> <<post>> [serial 1683]
 
Theorem (228) [serial 1694] used for:
  applied port output <<pre and (min_cci=up_siri)@now>> -> <<(min_cci=MIN_CCI)@now>> [serial 1683]
 


Theorem (230)                               [serial 1722] 
P [131] << (min_cci = url)@now
 and ((up <= url
 and up_siri <= url)
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL))) >>
S [131] ->
Q [145] << true >>
by True Conclusion Schema (tc): P->true


Theorem (231)                               [serial 1695] 
P [131] << ((((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and ((((url >= up_siri))
 and ((url >= up)))))
 and (min_cci = url)@now >>
S [131] ->
Q [145] << true >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 230:
Theorem (230) [serial 1722] used for:
    normalization of [serial 1695]
 


Theorem (232)                               [serial 1848] 
P [131] << up <= URL
 and up_siri <= URL
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and MIN_CCI = URL
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [131] ->
Q [131] << true >>
by True Conclusion Schema (tc): P->true


Theorem (233)                               [serial 1847] 
P [131] << up <= URL
 and up_siri <= URL
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and MIN_CCI = URL
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [131] ->
Q [131] << MIN_CCI = MIN_CCI >>
by Equality Law (idistr):  a=a <-> true
and theorem 232:
Theorem (232) [serial 1848] used for:
  Equality Law (idistr):  a=a <-> true [serial 1847]
 


Theorem (234)                               [serial 1810] 
P [131] << up <= url
 and up_siri <= url
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and min_cci = url
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [131] ->
Q [131] << MIN_CCI = min_cci >>
by Replacing port names with BLESS::Assertion properties
and theorem 233:
Theorem (233) [serial 1847] used for:
  Replacing port names with BLESS::Assertion properties [serial 1810]
 


Theorem (235)                               [serial 1787] 
P [131] << up <= url
 and up_siri <= url
 and (min_cci = url)@now
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [131] ->
Q [131] << (MIN_CCI = min_cci)@now >>
by Assume Present:  P = P@now = P^0 
and theorem 234:
Theorem (234) [serial 1810] used for:
  Assume Present:  P = P@now = P^0  [serial 1787]
 


Theorem (236)                               [serial 1772] 
P [131] << up <= url
 and up_siri <= url
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL)
 and (min_cci = url)@now >>
S [131] ->
Q [131] << (MIN_CCI = min_cci)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 235:
Theorem (235) [serial 1787] used for:
    normalization of [serial 1772]
 


Theorem (237)                               [serial 1765] 
P [131] << (up <= url
 and up_siri <= url)
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL))
 and (min_cci = url)@now >>
S [131] ->
Q [131] << (MIN_CCI = min_cci)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 236:
Theorem (236) [serial 1772] used for:
  Associativity: (b.c).a = a.b.c [serial 1765]
 


Theorem (238)                               [serial 1724] 
P [131] << (min_cci = url)@now
 and ((up <= url
 and up_siri <= url)
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL))) >>
S [131] ->
Q [131] << (MIN_CCI = min_cci)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 237:
Theorem (237) [serial 1765] used for:
  Associativity: (b.c).a = a.b.c [serial 1724]
 


Theorem (239)                               [serial 1696] 
P [131] << ((((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and ((((url >= up_siri))
 and ((url >= up)))))
 and (min_cci = url)@now >>
S [131] ->
Q [131] << (min_cci = MIN_CCI)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 238:
Theorem (238) [serial 1724] used for:
    normalization of [serial 1696]
 


Theorem (240)                               [serial 1684] 
P [128] << (((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and ((((url >= up_siri))
 and ((url >= up)))) >>
S [131] min_cci!(url)
Q [145] << true >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 231 239:
Theorem (231) [serial 1695] used for:
  applied port output <<pre and (min_cci=url)@now>> -> <<post>> [serial 1684]
 
Theorem (239) [serial 1696] used for:
  applied port output <<pre and (min_cci=url)@now>> -> <<(min_cci=MIN_CCI)@now>> [serial 1684]
 


Theorem (241)                               [serial 1726] 
P [133] << (min_cci = up)@now
 and ((up_siri <= up
 and url <= up)
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL))) >>
S [133] ->
Q [145] << true >>
by True Conclusion Schema (tc): P->true


Theorem (242)                               [serial 1697] 
P [133] << ((((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and ((((up >= url))
 and ((up >= up_siri)))))
 and (min_cci = up)@now >>
S [133] ->
Q [145] << true >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 241:
Theorem (241) [serial 1726] used for:
    normalization of [serial 1697]
 


Theorem (243)                               [serial 1850] 
P [133] << up_siri <= up
 and URL <= up
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and MIN_CCI = up
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [133] ->
Q [133] << true >>
by True Conclusion Schema (tc): P->true


Theorem (244)                               [serial 1849] 
P [133] << up_siri <= up
 and URL <= up
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and MIN_CCI = up
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [133] ->
Q [133] << MIN_CCI = MIN_CCI >>
by Equality Law (idistr):  a=a <-> true
and theorem 243:
Theorem (243) [serial 1850] used for:
  Equality Law (idistr):  a=a <-> true [serial 1849]
 


Theorem (245)                               [serial 1811] 
P [133] << up_siri <= up
 and url <= up
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and min_cci = up
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [133] ->
Q [133] << MIN_CCI = min_cci >>
by Replacing port names with BLESS::Assertion properties
and theorem 244:
Theorem (244) [serial 1849] used for:
  Replacing port names with BLESS::Assertion properties [serial 1811]
 


Theorem (246)                               [serial 1789] 
P [133] << up_siri <= up
 and url <= up
 and (min_cci = up)@now
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [133] ->
Q [133] << (MIN_CCI = min_cci)@now >>
by Assume Present:  P = P@now = P^0 
and theorem 245:
Theorem (245) [serial 1811] used for:
  Assume Present:  P = P@now = P^0  [serial 1789]
 


Theorem (247)                               [serial 1773] 
P [133] << up_siri <= up
 and url <= up
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL)
 and (min_cci = up)@now >>
S [133] ->
Q [133] << (MIN_CCI = min_cci)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 246:
Theorem (246) [serial 1789] used for:
    normalization of [serial 1773]
 


Theorem (248)                               [serial 1766] 
P [133] << (up_siri <= up
 and url <= up)
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL))
 and (min_cci = up)@now >>
S [133] ->
Q [133] << (MIN_CCI = min_cci)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 247:
Theorem (247) [serial 1773] used for:
  Associativity: (b.c).a = a.b.c [serial 1766]
 


Theorem (249)                               [serial 1728] 
P [133] << (min_cci = up)@now
 and ((up_siri <= up
 and url <= up)
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL))) >>
S [133] ->
Q [133] << (MIN_CCI = min_cci)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 248:
Theorem (248) [serial 1766] used for:
  Associativity: (b.c).a = a.b.c [serial 1728]
 


Theorem (250)                               [serial 1698] 
P [133] << ((((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and ((((up >= url))
 and ((up >= up_siri)))))
 and (min_cci = up)@now >>
S [133] ->
Q [133] << (min_cci = MIN_CCI)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Irreflexivity of At Least: (a>=b) = (b<=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 249:
Theorem (249) [serial 1728] used for:
    normalization of [serial 1698]
 


Theorem (251)                               [serial 1685] 
P [128] << (((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and ((((up >= url))
 and ((up >= up_siri)))) >>
S [133] min_cci!(up)
Q [145] << true >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 242 250:
Theorem (242) [serial 1697] used for:
  applied port output <<pre and (min_cci=up)@now>> -> <<post>> [serial 1685]
 
Theorem (250) [serial 1698] used for:
  applied port output <<pre and (min_cci=up)@now>> -> <<(min_cci=MIN_CCI)@now>> [serial 1685]
 


Theorem (252)                               [serial 1680] 
P [120] << ((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()) >>
S [128] if 
((((up_siri >= url))
   and ((up_siri >= up))))~> 
  min_cci!(up_siri) 
[]
((((url >= up_siri))
      and ((url >= up))))~> 
  min_cci!(url) 
[]
((((up >= url))
      and ((up >= up_siri))))~> 
  min_cci!(up) 
fi
Q [145] << true >>
by Alternative Rule:
 <<P>> -> <<B1 or B2 or ... or Bn>>,
 <<P and B1>> -> <<P1>>, <<P and B2>> -> <<P2>>, . . . , <<P and Bn>> -> <<Pn>>,
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>,
 <<Q1>> -> <<Q>>, <<Q2>> -> <<Q>>, . . . <<Qn>> -> <<Q>>
 -------------------------------------------------------------------------
 <<P>> if B1-><<P1>>S1<<Q1>> [] B2-><<P2>>S2<<Q2>> [] . . . [] Bn-><<Pn>>Sn<<Qn>> fi <<Q>> (bl.iffi)
and theorems 218 229 240 251:
Theorem (218) [serial 1682] used for:
    <<P>> -> <<B1 or B2 or ... or Bn>> in alternative for [serial 1680]
 
Theorem (229) [serial 1683] used for:
    <<P and B0>> S0 <<Q>> in alternative for [serial 1680]
 
Theorem (240) [serial 1684] used for:
    <<P and B1>> S1 <<Q>> in alternative for [serial 1680]
 
Theorem (251) [serial 1685] used for:
    <<P and B2>> S2 <<Q>> in alternative for [serial 1680]
 


Theorem (253)                               [serial 1842] 
P [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [136] ->
Q [136] << true >>
by True Conclusion Schema (tc): P->true


Theorem (254)                               [serial 1840] 
P [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [136] ->
Q [136] << (true) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 253:
Theorem (253) [serial 1842] used for:
    normalization of [serial 1840]
 


Theorem (255)                               [serial 1839] 
P [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [136] ->
Q [136] << (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 254:
Theorem (254) [serial 1840] used for:
  Law of And-Simplification:  P and P is P [serial 1839]
 


Theorem (256)                               [serial 1838] 
P [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [136] ->
Q [136] << (true)
 and (true)
 and (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 255:
Theorem (255) [serial 1839] used for:
  Law of And-Simplification:  P and P is P [serial 1838]
 


Theorem (257)                               [serial 1837] 
P [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [136] ->
Q [136] << (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 256:
Theorem (256) [serial 1838] used for:
  Law of And-Simplification:  P and P is P [serial 1837]
 


Theorem (258)                               [serial 1836] 
P [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [136] ->
Q [136] << (dn_siri <= down or 
down <= dn_siri or 
hylrl <= dn_siri)
 and (dn_siri <= hylrl or 
down <= dn_siri or 
hylrl <= dn_siri)
 and (dn_siri <= down or 
down <= hylrl or 
hylrl <= dn_siri)
 and (dn_siri <= hylrl or 
down <= hylrl or 
hylrl <= dn_siri)
 and (dn_siri <= down or 
down <= dn_siri or 
hylrl <= down)
 and (dn_siri <= hylrl or 
down <= dn_siri or 
hylrl <= down)
 and (dn_siri <= down or 
down <= hylrl or 
hylrl <= down)
 and (dn_siri <= hylrl or 
down <= hylrl or 
hylrl <= down) >>
by At Most Law:  x<=y or y<=x is true
and theorem 257:
Theorem (257) [serial 1837] used for:
  At Most Law:  x<=y or y<=x is true [serial 1836]
 


Theorem (259)                               [serial 1730] 
P [120] << dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [136] ->
Q [136] << (dn_siri <= down
 and dn_siri <= hylrl) or 
(down <= dn_siri
 and down <= hylrl) or 
(hylrl <= dn_siri
 and hylrl <= down) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 258:
Theorem (258) [serial 1836] used for:
  Distributing Postcondition Or-Over-And [serial 1730]
 


Theorem (260)                               [serial 1686] 
P [120] << ((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()) >>
S [136] ->
Q [136] << ((((dn_siri <= hylrl))
 and ((dn_siri <= down)))) or 
((((hylrl <= dn_siri))
 and ((hylrl <= down)))) or 
((((down <= hylrl))
 and ((down <= dn_siri)))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 259:
Theorem (259) [serial 1730] used for:
    normalization of [serial 1686]
 


Theorem (261)                               [serial 1732] 
P [137] << (dn_siri = max_cci)@now
 and ((dn_siri <= down
 and dn_siri <= hylrl)
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL))) >>
S [137] ->
Q [145] << true >>
by True Conclusion Schema (tc): P->true


Theorem (262)                               [serial 1699] 
P [137] << ((((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and ((((dn_siri <= hylrl))
 and ((dn_siri <= down)))))
 and (max_cci = dn_siri)@now >>
S [137] ->
Q [145] << true >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 261:
Theorem (261) [serial 1732] used for:
    normalization of [serial 1699]
 


Theorem (263)                               [serial 1852] 
P [137] << dn_siri <= down
 and dn_siri <= hylrl
 and dn_siri = MAX_CCI
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [137] ->
Q [137] << true >>
by True Conclusion Schema (tc): P->true


Theorem (264)                               [serial 1851] 
P [137] << dn_siri <= down
 and dn_siri <= hylrl
 and dn_siri = MAX_CCI
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [137] ->
Q [137] << MAX_CCI = MAX_CCI >>
by Equality Law (idistr):  a=a <-> true
and theorem 263:
Theorem (263) [serial 1852] used for:
  Equality Law (idistr):  a=a <-> true [serial 1851]
 


Theorem (265)                               [serial 1812] 
P [137] << dn_siri <= down
 and dn_siri <= hylrl
 and dn_siri = max_cci
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [137] ->
Q [137] << MAX_CCI = max_cci >>
by Replacing port names with BLESS::Assertion properties
and theorem 264:
Theorem (264) [serial 1851] used for:
  Replacing port names with BLESS::Assertion properties [serial 1812]
 


Theorem (266)                               [serial 1791] 
P [137] << dn_siri <= down
 and dn_siri <= hylrl
 and (dn_siri = max_cci)@now
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [137] ->
Q [137] << (MAX_CCI = max_cci)@now >>
by Assume Present:  P = P@now = P^0 
and theorem 265:
Theorem (265) [serial 1812] used for:
  Assume Present:  P = P@now = P^0  [serial 1791]
 


Theorem (267)                               [serial 1774] 
P [137] << dn_siri <= down
 and dn_siri <= hylrl
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL)
 and (dn_siri = max_cci)@now >>
S [137] ->
Q [137] << (MAX_CCI = max_cci)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 266:
Theorem (266) [serial 1791] used for:
    normalization of [serial 1774]
 


Theorem (268)                               [serial 1767] 
P [137] << (dn_siri <= down
 and dn_siri <= hylrl)
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL))
 and (dn_siri = max_cci)@now >>
S [137] ->
Q [137] << (MAX_CCI = max_cci)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 267:
Theorem (267) [serial 1774] used for:
  Associativity: (b.c).a = a.b.c [serial 1767]
 


Theorem (269)                               [serial 1734] 
P [137] << (dn_siri = max_cci)@now
 and ((dn_siri <= down
 and dn_siri <= hylrl)
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL))) >>
S [137] ->
Q [137] << (MAX_CCI = max_cci)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 268:
Theorem (268) [serial 1767] used for:
  Associativity: (b.c).a = a.b.c [serial 1734]
 


Theorem (270)                               [serial 1700] 
P [137] << ((((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and ((((dn_siri <= hylrl))
 and ((dn_siri <= down)))))
 and (max_cci = dn_siri)@now >>
S [137] ->
Q [137] << (max_cci = MAX_CCI)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 269:
Theorem (269) [serial 1734] used for:
    normalization of [serial 1700]
 


Theorem (271)                               [serial 1687] 
P [136] << (((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and ((((dn_siri <= hylrl))
 and ((dn_siri <= down)))) >>
S [137] max_cci!(dn_siri)
Q [145] << true >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 262 270:
Theorem (262) [serial 1699] used for:
  applied port output <<pre and (max_cci=dn_siri)@now>> -> <<post>> [serial 1687]
 
Theorem (270) [serial 1700] used for:
  applied port output <<pre and (max_cci=dn_siri)@now>> -> <<(max_cci=MAX_CCI)@now>> [serial 1687]
 


Theorem (272)                               [serial 1736] 
P [139] << (hylrl = max_cci)@now
 and ((hylrl <= dn_siri
 and hylrl <= down)
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL))) >>
S [139] ->
Q [145] << true >>
by True Conclusion Schema (tc): P->true


Theorem (273)                               [serial 1701] 
P [139] << ((((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and ((((hylrl <= dn_siri))
 and ((hylrl <= down)))))
 and (max_cci = hylrl)@now >>
S [139] ->
Q [145] << true >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 272:
Theorem (272) [serial 1736] used for:
    normalization of [serial 1701]
 


Theorem (274)                               [serial 1854] 
P [139] << hylrl <= dn_siri
 and hylrl <= down
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = MAX_CCI
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [139] ->
Q [139] << true >>
by True Conclusion Schema (tc): P->true


Theorem (275)                               [serial 1853] 
P [139] << hylrl <= dn_siri
 and hylrl <= down
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = MAX_CCI
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [139] ->
Q [139] << MAX_CCI = MAX_CCI >>
by Equality Law (idistr):  a=a <-> true
and theorem 274:
Theorem (274) [serial 1854] used for:
  Equality Law (idistr):  a=a <-> true [serial 1853]
 


Theorem (276)                               [serial 1813] 
P [139] << hylrl <= dn_siri
 and hylrl <= down
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = max_cci
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [139] ->
Q [139] << MAX_CCI = max_cci >>
by Replacing port names with BLESS::Assertion properties
and theorem 275:
Theorem (275) [serial 1853] used for:
  Replacing port names with BLESS::Assertion properties [serial 1813]
 


Theorem (277)                               [serial 1793] 
P [139] << hylrl <= dn_siri
 and hylrl <= down
 and (hylrl = max_cci)@now
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [139] ->
Q [139] << (MAX_CCI = max_cci)@now >>
by Assume Present:  P = P@now = P^0 
and theorem 276:
Theorem (276) [serial 1813] used for:
  Assume Present:  P = P@now = P^0  [serial 1793]
 


Theorem (278)                               [serial 1775] 
P [139] << hylrl <= dn_siri
 and hylrl <= down
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL)
 and (hylrl = max_cci)@now >>
S [139] ->
Q [139] << (MAX_CCI = max_cci)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 277:
Theorem (277) [serial 1793] used for:
    normalization of [serial 1775]
 


Theorem (279)                               [serial 1768] 
P [139] << (hylrl <= dn_siri
 and hylrl <= down)
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL))
 and (hylrl = max_cci)@now >>
S [139] ->
Q [139] << (MAX_CCI = max_cci)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 278:
Theorem (278) [serial 1775] used for:
  Associativity: (b.c).a = a.b.c [serial 1768]
 


Theorem (280)                               [serial 1738] 
P [139] << (hylrl = max_cci)@now
 and ((hylrl <= dn_siri
 and hylrl <= down)
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL))) >>
S [139] ->
Q [139] << (MAX_CCI = max_cci)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 279:
Theorem (279) [serial 1768] used for:
  Associativity: (b.c).a = a.b.c [serial 1738]
 


Theorem (281)                               [serial 1702] 
P [139] << ((((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and ((((hylrl <= dn_siri))
 and ((hylrl <= down)))))
 and (max_cci = hylrl)@now >>
S [139] ->
Q [139] << (max_cci = MAX_CCI)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 280:
Theorem (280) [serial 1738] used for:
    normalization of [serial 1702]
 


Theorem (282)                               [serial 1688] 
P [136] << (((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and ((((hylrl <= dn_siri))
 and ((hylrl <= down)))) >>
S [139] max_cci!(hylrl)
Q [145] << true >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 273 281:
Theorem (273) [serial 1701] used for:
  applied port output <<pre and (max_cci=hylrl)@now>> -> <<post>> [serial 1688]
 
Theorem (281) [serial 1702] used for:
  applied port output <<pre and (max_cci=hylrl)@now>> -> <<(max_cci=MAX_CCI)@now>> [serial 1688]
 


Theorem (283)                               [serial 1740] 
P [141] << (down = max_cci)@now
 and ((down <= dn_siri
 and down <= hylrl)
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL))) >>
S [141] ->
Q [145] << true >>
by True Conclusion Schema (tc): P->true


Theorem (284)                               [serial 1703] 
P [141] << ((((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and ((((down <= hylrl))
 and ((down <= dn_siri)))))
 and (max_cci = down)@now >>
S [141] ->
Q [145] << true >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 283:
Theorem (283) [serial 1740] used for:
    normalization of [serial 1703]
 


Theorem (285)                               [serial 1856] 
P [141] << down <= dn_siri
 and down <= hylrl
 and dn_siri = DN_SIRi_A()
 and down = MAX_CCI
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [141] ->
Q [141] << true >>
by True Conclusion Schema (tc): P->true


Theorem (286)                               [serial 1855] 
P [141] << down <= dn_siri
 and down <= hylrl
 and dn_siri = DN_SIRi_A()
 and down = MAX_CCI
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [141] ->
Q [141] << MAX_CCI = MAX_CCI >>
by Equality Law (idistr):  a=a <-> true
and theorem 285:
Theorem (285) [serial 1856] used for:
  Equality Law (idistr):  a=a <-> true [serial 1855]
 


Theorem (287)                               [serial 1814] 
P [141] << down <= dn_siri
 and down <= hylrl
 and dn_siri = DN_SIRi_A()
 and down = max_cci
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [141] ->
Q [141] << MAX_CCI = max_cci >>
by Replacing port names with BLESS::Assertion properties
and theorem 286:
Theorem (286) [serial 1855] used for:
  Replacing port names with BLESS::Assertion properties [serial 1814]
 


Theorem (288)                               [serial 1795] 
P [141] << down <= dn_siri
 and down <= hylrl
 and (down = max_cci)@now
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL) >>
S [141] ->
Q [141] << (MAX_CCI = max_cci)@now >>
by Assume Present:  P = P@now = P^0 
and theorem 287:
Theorem (287) [serial 1814] used for:
  Assume Present:  P = P@now = P^0  [serial 1795]
 


Theorem (289)                               [serial 1776] 
P [141] << down <= dn_siri
 and down <= hylrl
 and dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL)
 and (down = max_cci)@now >>
S [141] ->
Q [141] << (MAX_CCI = max_cci)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 288:
Theorem (288) [serial 1795] used for:
    normalization of [serial 1776]
 


Theorem (290)                               [serial 1769] 
P [141] << (down <= dn_siri
 and down <= hylrl)
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL))
 and (down = max_cci)@now >>
S [141] ->
Q [141] << (MAX_CCI = max_cci)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 289:
Theorem (289) [serial 1776] used for:
  Associativity: (b.c).a = a.b.c [serial 1769]
 


Theorem (291)                               [serial 1742] 
P [141] << (down = max_cci)@now
 and ((down <= dn_siri
 and down <= hylrl)
 and (dn_siri = DN_SIRi_A()
 and down = DOWN_A()
 and hylrl = HyLRL(now)
 and siri = SIRi_A()
 and up = UP_A()
 and up_siri = UP_SIRi_A()
 and y = Y_A()
 and z = Z_A()
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()
 and 0.0 <> (LRL - URL))) >>
S [141] ->
Q [141] << (MAX_CCI = max_cci)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 290:
Theorem (290) [serial 1769] used for:
  Associativity: (b.c).a = a.b.c [serial 1742]
 


Theorem (292)                               [serial 1704] 
P [141] << ((((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and ((((down <= hylrl))
 and ((down <= dn_siri)))))
 and (max_cci = down)@now >>
S [141] ->
Q [141] << (max_cci = MAX_CCI)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Inequality: (a<>b) = (b<>a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 291:
Theorem (291) [serial 1742] used for:
    normalization of [serial 1704]
 


Theorem (293)                               [serial 1689] 
P [136] << (((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()))
 and ((((down <= hylrl))
 and ((down <= dn_siri)))) >>
S [141] max_cci!(down)
Q [145] << true >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 284 292:
Theorem (284) [serial 1703] used for:
  applied port output <<pre and (max_cci=down)@now>> -> <<post>> [serial 1689]
 
Theorem (292) [serial 1704] used for:
  applied port output <<pre and (max_cci=down)@now>> -> <<(max_cci=MAX_CCI)@now>> [serial 1689]
 


Theorem (294)                               [serial 1681] 
P [120] << ((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()) >>
S [136] if 
((((dn_siri <= hylrl))
   and ((dn_siri <= down))))~> 
  max_cci!(dn_siri) 
[]
((((hylrl <= dn_siri))
      and ((hylrl <= down))))~> 
  max_cci!(hylrl) 
[]
((((down <= hylrl))
      and ((down <= dn_siri))))~> 
  max_cci!(down) 
fi
Q [145] << true >>
by Alternative Rule:
 <<P>> -> <<B1 or B2 or ... or Bn>>,
 <<P and B1>> -> <<P1>>, <<P and B2>> -> <<P2>>, . . . , <<P and Bn>> -> <<Pn>>,
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>,
 <<Q1>> -> <<Q>>, <<Q2>> -> <<Q>>, . . . <<Qn>> -> <<Q>>
 -------------------------------------------------------------------------
 <<P>> if B1-><<P1>>S1<<Q1>> [] B2-><<P2>>S2<<Q2>> [] . . . [] Bn-><<Pn>>Sn<<Qn>> fi <<Q>> (bl.iffi)
and theorems 260 271 282 293:
Theorem (260) [serial 1686] used for:
    <<P>> -> <<B1 or B2 or ... or Bn>> in alternative for [serial 1681]
 
Theorem (271) [serial 1687] used for:
    <<P and B0>> S0 <<Q>> in alternative for [serial 1681]
 
Theorem (282) [serial 1688] used for:
    <<P and B1>> S1 <<Q>> in alternative for [serial 1681]
 
Theorem (293) [serial 1689] used for:
    <<P and B2>> S2 <<Q>> in alternative for [serial 1681]
 


Theorem (295)                               [serial 1675] 
P [120] << ((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()) >>
S [120] << ((((LRL - URL)) <> 0.0)
 and (z = Z_A())
 and (y = Y_A())
 and (siri = SIRi_A())
 and (dn_siri = DN_SIRi_A())
 and (up_siri = UP_SIRi_A())
 and (down = DOWN_A())
 and (up = UP_A())
 and (hylrl = HyLRL(now))
 and AXIOM_MAX_CCI()
 and AXIOM_MIN_CCI()) >>
dav!((((cci? * ((((av? - min_av?)) / ((LRL - url?)))))) + min_av?))
&
if 
((((up_siri >= url))
   and ((up_siri >= up))))~> 
  min_cci!(up_siri) 
[]
((((url >= up_siri))
      and ((url >= up))))~> 
  min_cci!(url) 
[]
((((up >= url))
      and ((up >= up_siri))))~> 
  min_cci!(up) 
fi
&
if 
((((dn_siri <= hylrl))
   and ((dn_siri <= down))))~> 
  max_cci!(dn_siri) 
[]
((((hylrl <= dn_siri))
      and ((hylrl <= down))))~> 
  max_cci!(hylrl) 
[]
((((down <= hylrl))
      and ((down <= dn_siri))))~> 
  max_cci!(down) 
fi
<< true >>
Q [145] << true >>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 197 198 210 252 294:
Theorem (197) [serial 1677] used for:
  P -> P1 in concurrent composition for [serial 1675]
 
Theorem (198) [serial 1678] used for:
  Qk -> Q in concurrent composition for [serial 1675]
 
Theorem (210) [serial 1679] used for:
  <<P1>> S1 <<Q>> in concurrent composition for [serial 1675]
 
Theorem (252) [serial 1680] used for:
  <<P>> S2 <<Q>> in concurrent composition for [serial 1675]
 
Theorem (294) [serial 1681] used for:
  <<P>> S3 <<Q3>> in concurrent composition for [serial 1675]
 


Theorem (296)                               [serial 1676] 
P [145] << true >>
S [109] ->
Q [85] << true >>
by True Conclusion Schema (tc): P->true


Theorem (297)                               [serial 1673] 
P [107] << (((((2.0 * ((REACTION_TIME - LRL)))) <> 0.0))
 and ((((2.0 * ((RECOVERY_TIME - LRL)))) <> 0.0))
 and ((((LRL - URL)) <> 0))) >>
S [109] declare 
  siri ~  time:=(if (msr? >= ((lrl? - ((rf? * ((xl? - at?))))))) then msr? else (lrl? - ((
  rf? * ((xl? - at?))))));
  z ~  time:=(((((lrl? - msr?)) * ((lrl? + msr?)))) / ((2.0 * ((rt? - lrl?)))));
  y ~  time:=(((((lrl? - msr?)) * ((lrl? + msr?)))) / ((2.0 * ((ct? - lrl?)))));
  up_siri ~  time:=(if (((cci? - z)) <= siri) then siri else (cci? - z));
  dn_siri ~  time:=(if (((cci? + y)) <= siri) then (cci? + y) else siri);
  down ~  time:=(cci? * ((1.0 + ((drs? / 100.0)))));
  up ~  time:=(cci? * ((1.0 - ((urs? / 100.0)))));
  hylrl ~  time:=(if last_v_was_vs? then (lrl? + hy?) else lrl?);
  {
  << ((((LRL - URL)) <> 0.0)
   and (z = Z_A())
   and (y = Y_A())
   and (siri = SIRi_A())
   and (dn_siri = DN_SIRi_A())
   and (up_siri = UP_SIRi_A())
   and (down = DOWN_A())
   and (up = UP_A())
   and (hylrl = HyLRL(now))
   and AXIOM_MAX_CCI()
   and AXIOM_MIN_CCI()) >>
  dav!((((cci? * ((((av? - min_av?)) / ((LRL - url?)))))) + min_av?))
  &
  if 
  ((((up_siri >= url))
     and ((up_siri >= up))))~> 
    min_cci!(up_siri) 
  []
  ((((url >= up_siri))
        and ((url >= up))))~> 
    min_cci!(url) 
  []
  ((((up >= url))
        and ((up >= up_siri))))~> 
    min_cci!(up) 
  fi
  &
  if 
  ((((dn_siri <= hylrl))
     and ((dn_siri <= down))))~> 
    max_cci!(dn_siri) 
  []
  ((((hylrl <= dn_siri))
        and ((hylrl <= down))))~> 
    max_cci!(hylrl) 
  []
  ((((down <= hylrl))
        and ((down <= dn_siri))))~> 
    max_cci!(down) 
  fi
  << true >>
  } 
Q [85] << true >>
by Introduction of Existential Quantification (bl.elq)
and theorems 196 295 296:
Theorem (196) [serial 1674] used for:
  <<P and x=e>> -> <<A>> in existential lattice quantification for [serial 1673]
 
Theorem (295) [serial 1675] used for:
  <<A>> T <<B>> in existential lattice quantification for [serial 1673]
 
Theorem (296) [serial 1676] used for:
  <<B>> -> <<Q>> in existential lattice quantification for [serial 1673]
 


Theorem (298)                               [serial 1018] 
P [102] << (((((2.0 * (((REACTION_TIME)@now - (LRL)@now)))) <> 0.0))
 and ((((2.0 * (((RECOVERY_TIME)@now - (LRL)@now)))) <> 0.0))
 and (((((LRL)@now - (URL)@now)) <> 0.0))) >>
S [107] << (((((2.0 * ((REACTION_TIME - LRL)))) <> 0.0))
 and ((((2.0 * ((RECOVERY_TIME - LRL)))) <> 0.0))
 and ((((LRL - URL)) <> 0))) >>
declare 
  siri ~  time:=(if (msr? >= ((lrl? - ((rf? * ((xl? - at?))))))) then msr? else (lrl? - ((rf? * ((xl? - at?))))));
  z ~  time:=(((((lrl? - msr?)) * ((lrl? + msr?)))) / ((2.0 * ((rt? - lrl?)))));
  y ~  time:=(((((lrl? - msr?)) * ((lrl? + msr?)))) / ((2.0 * ((ct? - lrl?)))));
  up_siri ~  time:=(if (((cci? - z)) <= siri) then siri else (cci? - z));
  dn_siri ~  time:=(if (((cci? + y)) <= siri) then (cci? + y) else siri);
  down ~  time:=(cci? * ((1.0 + ((drs? / 100.0)))));
  up ~  time:=(cci? * ((1.0 - ((urs? / 100.0)))));
  hylrl ~  time:=(if last_v_was_vs? then (lrl? + hy?) else lrl?);
  {
  << ((((LRL - URL)) <> 0.0)
   and (z = Z_A())
   and (y = Y_A())
   and (siri = SIRi_A())
   and (dn_siri = DN_SIRi_A())
   and (up_siri = UP_SIRi_A())
   and (down = DOWN_A())
   and (up = UP_A())
   and (hylrl = HyLRL(now))
   and AXIOM_MAX_CCI()
   and AXIOM_MIN_CCI()) >>
  dav!((((cci? * ((((av? - min_av?)) / ((LRL - url?)))))) + min_av?))
  &
  if 
  ((((up_siri >= url))
     and ((up_siri >= up))))~> 
    min_cci!(up_siri) 
  []
  ((((url >= up_siri))
        and ((url >= up))))~> 
    min_cci!(url) 
  []
  ((((up >= url))
        and ((up >= up_siri))))~> 
    min_cci!(up) 
  fi
  &
  if 
  ((((dn_siri <= hylrl))
     and ((dn_siri <= down))))~> 
    max_cci!(dn_siri) 
  []
  ((((hylrl <= dn_siri))
        and ((hylrl <= down))))~> 
    max_cci!(hylrl) 
  []
  ((((down <= hylrl))
        and ((down <= dn_siri))))~> 
    max_cci!(down) 
  fi
  << true >>
  } 
Q [85] << true >>
by Introduction of Existential Quantification (bl.aapre)
and theorems 86 297:
Theorem (86) [serial 1672] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1018]
 
Theorem (297) [serial 1673] used for:
  as <<pre>> S <<Q>> in <<P>> { <<pre>> S  } <<Q>> [serial 1018]
 


Theorem (299)                               [serial 1011] 
P [78] <<   >>
S [78] ->
Q [78] << RateController.normal proof obligations >>
by Initial Thread Obligations
and theorems 67 68 77 78 79 80 298:
Theorem (67) [serial 1012] used for:
  <<M(wait)>> -> <<I>> from invariant I when complete state wait has Assertion <<M(wait)>> in its definition.
 
Theorem (68) [serial 1013] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state first_rate, <<M(first_rate)>> -> <<e1 or e2 or . . . en>>
 
Theorem (77) [serial 1014] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_zero_division, <<M(check_zero_division)>> -> <<e1 or e2 or . . . en>>
 
Theorem (78) [serial 1015] used for:
   <<M(first_rate)>> -> <<M(wait)>> for RC0_init:first_rate-[ ]->wait{};
 
Theorem (79) [serial 1016] used for:
   <<M(wait) and x>> -> <<M(check_zero_division)>> for RC1_cci:wait-[x]->check_zero_division{};
 
Theorem (80) [serial 1017] used for:
   <<M(check_zero_division) and x>> -> <<M(err)>> for RC2_zero:check_zero_division-[x]->err{};
 
Theorem (298) [serial 1018] used for:
   <<M(check_zero_division) and x>> A <<M(wait)>> for RC3_nonzero:check_zero_division-[x]->wait{A};
 


Theorem (300)                               [serial 1385] 
P [225] << 0 = c
 and 0.0 = et >>
S [213] ->
Q [213] << 0.0 = et or 
ATC() >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (301)                               [serial 1020] 
P [225] << ((et = 0.0)
 and (c = 0)) >>
S [213] ->
Q [213] << (ATC() or 
(et = 0.0)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 300:
Theorem (300) [serial 1385] used for:
    normalization of [serial 1020]
 


Theorem (302)                               [serial 1388] 
P [226] << ATC() >>
S [213] ->
Q [213] << 0.0 = et or 
ATC() >>
by Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (303)                               [serial 1021] 
P [226] << ATC() >>
S [213] ->
Q [213] << (ATC() or 
(et = 0.0)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 302:
Theorem (302) [serial 1388] used for:
    normalization of [serial 1021]
 


Theorem (304)                               [serial 1393] 
P [227] << AT@now
 and 0 = c
 and 0.0 = et >>
S [227] ->
Q [227] << true >>
by True Conclusion Schema (tc): P->true


Theorem (305)                               [serial 1391] 
P [227] << AT@now
 and 0 = c
 and 0.0 = et >>
S [227] ->
Q [227] << ATR_ENABLE@now or 
not ATR_ENABLE@now >>
by Law of Excluded Middle: P or not P is tautology
and theorem 304:
Theorem (304) [serial 1393] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1391]
 


Theorem (306)                               [serial 1022] 
P [227] << ((et = 0.0)
 and AT@now
 and (c = 0)) >>
S [227] ->
Q [227] << (not (ATR_ENABLE)@now) or 
((ATR_ENABLE)@now) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 305:
Theorem (305) [serial 1391] used for:
    normalization of [serial 1022]
 


Theorem (307)                               [serial 1397] 
P [228] << AT@now
 and ATC() >>
S [228] ->
Q [228] << true >>
by True Conclusion Schema (tc): P->true


Theorem (308)                               [serial 1395] 
P [228] << AT@now
 and ATC() >>
S [228] ->
Q [228] << ATR_ENABLE@now or 
not ATR_ENABLE@now >>
by Law of Excluded Middle: P or not P is tautology
and theorem 307:
Theorem (307) [serial 1397] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1395]
 


Theorem (309)                               [serial 1023] 
P [228] << (ATC()
 and AT@now) >>
S [228] ->
Q [228] << (not (ATR_ENABLE)@now) or 
((ATR_ENABLE)@now) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 308:
Theorem (308) [serial 1395] used for:
    normalization of [serial 1023]
 


Theorem (310)                               [serial 1024] 
P [224] << ((et = 0.0)
 and (c = 0)) >>
S [224] ->
Q [224] << true >>
by True Conclusion Schema (tc): P->true


Theorem (311)                               [serial 1025] 
P [224] << ((et = 0.0)
 and (c = 0)) >>
S [230] ->
Q [225] << ((et = 0.0)
 and (c = 0)) >>
by Identity (id):  P->P is tautology


Theorem (312)                               [serial 1401] 
P [233] << 0 = c
 and 0.0 = et
 and AT@now
 and not (exists u~time
  in tops ,, now 
  that AT@u ) >>
S [232] ->
Q [227] << AT@now
 and 0 = c
 and 0.0 = et >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (313)                               [serial 1399] 
P [233] << AT@now
 and not (exists u~time
  in tops ,, now 
  that AT@u )
 and (0 = c
 and 0.0 = et) >>
S [232] ->
Q [227] << AT@now
 and 0 = c
 and 0.0 = et >>
by Associativity: (b.c).a = a.b.c
and theorem 312:
Theorem (312) [serial 1401] used for:
  Associativity: (b.c).a = a.b.c [serial 1399]
 


Theorem (314)                               [serial 1026] 
P [233] << (((et = 0.0)
 and (c = 0)))
 and AT@now
 and not (exists u~time
  in tops ,, now 
  that AT@u ) >>
S [232] ->
Q [227] << ((et = 0.0)
 and AT@now
 and (c = 0)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 313:
Theorem (313) [serial 1399] used for:
    normalization of [serial 1026]
 


Theorem (315)                               [serial 1415] 
P [235] << 0 = atCount
 and 0 = c
 and 0.0 = et
 and AT
 and not ATR_ENABLE >>
S [235] ->
Q [225] << 0 = c
 and 0.0 = et >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (316)                               [serial 1413] 
P [235] << AT@now
 and 0 = c
 and 0.0 = et
 and not ATR_ENABLE@now
 and (0 = atCount)@now >>
S [235] ->
Q [225] << 0 = c
 and 0.0 = et >>
by Assume Present:  P = P@now = P^0 
and theorem 315:
Theorem (315) [serial 1415] used for:
  Assume Present:  P = P@now = P^0  [serial 1413]
 


Theorem (317)                               [serial 1411] 
P [235] << not ATR_ENABLE@now
 and (AT@now
 and 0 = c
 and 0.0 = et)
 and (0 = atCount)@now >>
S [235] ->
Q [225] << 0 = c
 and 0.0 = et >>
by Associativity: (b.c).a = a.b.c
and theorem 316:
Theorem (316) [serial 1413] used for:
  Associativity: (b.c).a = a.b.c [serial 1411]
 


Theorem (318)                               [serial 1406] 
P [235] << (0 = atCount)@now
 and (not ATR_ENABLE@now
 and (AT@now
 and 0 = c
 and 0.0 = et)) >>
S [235] ->
Q [225] << 0 = c
 and 0.0 = et >>
by Associativity: (b.c).a = a.b.c
and theorem 317:
Theorem (317) [serial 1411] used for:
  Associativity: (b.c).a = a.b.c [serial 1406]
 


Theorem (319)                               [serial 1403] 
P [235] << ((((et = 0.0)
 and AT@now
 and (c = 0)))
 and (not (ATR_ENABLE)@now))
 and (atCount = 0)@now >>
S [235] ->
Q [225] << ((et = 0.0)
 and (c = 0)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 318:
Theorem (318) [serial 1406] used for:
    normalization of [serial 1403]
 


Theorem (320)                               [serial 1417] 
P [235] << 0 = atCount
 and 0 = c
 and 0.0 = et
 and AT
 and not ATR_ENABLE >>
S [235] ->
Q [235] << 0 = atCount >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (321)                               [serial 1416] 
P [235] << 0 = atCount
 and 0 = c
 and 0.0 = et
 and AT
 and not ATR_ENABLE >>
S [235] ->
Q [235] << (if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t  else 0) = atCount >>
by Conditional False Expression:  not b and x=g  iff  not b and x=(b??e:g) 
and theorem 320:
Theorem (320) [serial 1417] used for:
   Conditional False Expression:  not b and x=g  iff  not b and x=(b??e:g)  [serial 1416]
 


Theorem (322)                               [serial 1414] 
P [235] << AT@now
 and 0 = c
 and 0.0 = et
 and not ATR_ENABLE@now
 and (0 = atCount)@now >>
S [235] ->
Q [235] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t  else 0) = atCount)@now >>
by Assume Present:  P = P@now = P^0 
and theorem 321:
Theorem (321) [serial 1416] used for:
  Assume Present:  P = P@now = P^0  [serial 1414]
 


Theorem (323)                               [serial 1412] 
P [235] << not ATR_ENABLE@now
 and (AT@now
 and 0 = c
 and 0.0 = et)
 and (0 = atCount)@now >>
S [235] ->
Q [235] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t  else 0) = atCount)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 322:
Theorem (322) [serial 1414] used for:
  Associativity: (b.c).a = a.b.c [serial 1412]
 


Theorem (324)                               [serial 1408] 
P [235] << (0 = atCount)@now
 and (not ATR_ENABLE@now
 and (AT@now
 and 0 = c
 and 0.0 = et)) >>
S [235] ->
Q [235] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t  else 0) = atCount)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 323:
Theorem (323) [serial 1412] used for:
  Associativity: (b.c).a = a.b.c [serial 1408]
 


Theorem (325)                               [serial 1404] 
P [235] << ((((et = 0.0)
 and AT@now
 and (c = 0)))
 and (not (ATR_ENABLE)@now))
 and (atCount = 0)@now >>
S [235] ->
Q [235] << (atCount = ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t  else 0)))@now >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 324:
Theorem (324) [serial 1408] used for:
    normalization of [serial 1404]
 


Theorem (326)                               [serial 1402] 
P [227] << (((et = 0.0)
 and AT@now
 and (c = 0)))
 and (not (ATR_ENABLE)@now) >>
S [235] atCount!(0)
Q [225] << ((et = 0.0)
 and (c = 0)) >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 319 325:
Theorem (319) [serial 1403] used for:
  applied port output <<pre and (atCount=0)@now>> -> <<post>> [serial 1402]
 
Theorem (325) [serial 1404] used for:
  applied port output <<pre and (atCount=0)@now>> -> <<(atCount=(if ATR_ENABLE then numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t  else 0))@now>> [serial 1402]
 


Theorem (327)                               [serial 1027] 
P [227] << (((et = 0.0)
 and AT@now
 and (c = 0)))
 and (not (ATR_ENABLE)@now) >>
S [235] atCount!(0)
Q [225] << ((et = 0.0)
 and (c = 0)) >>
by Introduction of Existential Quantification (bl.aanone)
and theorem 326:
Theorem (326) [serial 1402] used for:
  as <<P>> S <<Q>> in <<P>> { S } <<Q>> [serial 1027]
 


Theorem (328)                               [serial 1475] 
P [227] << AT@now
 and ATR_ENABLE@now
 and 0 = c
 and 0.0 = et >>
S [227] ->
Q [238] << AT@now
 and ATR_ENABLE@now >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (329)                               [serial 1473] 
P [227] << AT@now
 and ATR_ENABLE@now
 and 0 = c
 and 0.0 = et >>
S [227] ->
Q [238] << (AT@now
 and ATR_ENABLE@now) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 328:
Theorem (328) [serial 1475] used for:
    normalization of [serial 1473]
 


Theorem (330)                               [serial 1453] 
P [227] << AT@now
 and ATR_ENABLE@now
 and 0 = c
 and 0.0 = et >>
S [227] ->
Q [238] << (AT
 and ATR_ENABLE)@now >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 329:
Theorem (329) [serial 1473] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 1453]
 


Theorem (331)                               [serial 1447] 
P [227] << AT@now
 and 0 = c
 and 0.0 = et
 and ATR_ENABLE@now >>
S [227] ->
Q [238] << (AT
 and ATR_ENABLE)@now >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 330:
Theorem (330) [serial 1453] used for:
    normalization of [serial 1447]
 


Theorem (332)                               [serial 1432] 
P [227] << ATR_ENABLE@now
 and (AT@now
 and 0 = c
 and 0.0 = et) >>
S [227] ->
Q [238] << (AT
 and ATR_ENABLE)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 331:
Theorem (331) [serial 1447] used for:
  Associativity: (b.c).a = a.b.c [serial 1432]
 


Theorem (333)                               [serial 1418] 
P [227] << (((et = 0.0)
 and AT@now
 and (c = 0)))
 and ((ATR_ENABLE)@now) >>
S [227] ->
Q [238] << ((AT
 and ATR_ENABLE))@now >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 332:
Theorem (332) [serial 1432] used for:
    normalization of [serial 1418]
 


Theorem (334)                               [serial 1419] 
P [243] << ATC() >>
S [226] ->
Q [226] << ATC() >>
by Identity (id):  P->P is tautology


Theorem (335)                               [serial 1469] 
P [238] << AT
 and ATR_ENABLE >>
S [239] ->
Q [240] << AT
 and ATR_ENABLE >>
by Identity (id):  P->P is tautology


Theorem (336)                               [serial 1468] 
P [238] << AT
 and ATR_ENABLE >>
S [239] ->
Q [240] << AT
 and ATR_ENABLE
 and ATR_ENABLE >>
by Law of And-Simplification:  P and P is P
and theorem 335:
Theorem (335) [serial 1469] used for:
  Law of And-Simplification:  P and P is P [serial 1468]
 


Theorem (337)                               [serial 1467] 
P [238] << AT
 and ATR_ENABLE >>
S [239] ->
Q [240] << ATR_ENABLE
 and (AT
 and ATR_ENABLE) >>
by Associativity: (b.c).a = a.b.c
and theorem 336:
Theorem (336) [serial 1468] used for:
  Associativity: (b.c).a = a.b.c [serial 1467]
 


Theorem (338)                               [serial 1465] 
P [238] << AT@now
 and ATR_ENABLE@now >>
S [239] ->
Q [240] << ATR_ENABLE
 and (AT@now
 and ATR_ENABLE@now) >>
by Assume Present:  P = P@now = P^0 
and theorem 337:
Theorem (337) [serial 1467] used for:
  Assume Present:  P = P@now = P^0  [serial 1465]
 


Theorem (339)                               [serial 1463] 
P [238] << (AT@now
 and ATR_ENABLE@now) >>
S [239] ->
Q [240] << (AT@now
 and ATR_ENABLE@now)
 and ATR_ENABLE >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 338:
Theorem (338) [serial 1465] used for:
    normalization of [serial 1463]
 


Theorem (340)                               [serial 1450] 
P [238] << (AT
 and ATR_ENABLE)@now >>
S [239] ->
Q [240] << (AT
 and ATR_ENABLE)@now
 and ATR_ENABLE >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 339:
Theorem (339) [serial 1463] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 1450]
 


Theorem (341)                               [serial 1439] 
P [238] << (AT
 and ATR_ENABLE)@now >>
S [239] ->
Q [240] << (AT
 and ATR_ENABLE)@now
 and ATR_ENABLE
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 340:
Theorem (340) [serial 1450] used for:
  Law of And-Simplification:  P and true is P [serial 1439]
 


Theorem (342)                               [serial 1429] 
P [238] << ((AT
 and ATR_ENABLE))@now >>
S [239] ->
Q [240] << ((true)
 and ((AT
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 341:
Theorem (341) [serial 1439] used for:
    normalization of [serial 1429]
 


Theorem (343)                               [serial 1427] 
P [238] << ((AT
 and ATR_ENABLE))@now >>
S [239] ->
Q [240] << ((true)
 and (true)
 and ((AT
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
by Law of And-Simplification:  P and P is P
and theorem 342:
Theorem (342) [serial 1429] used for:
  Law of And-Simplification:  P and P is P [serial 1427]
 


Theorem (344)                               [serial 1425] 
P [238] << ((AT
 and ATR_ENABLE))@now >>
S [239] ->
Q [240] << ((true)
 and (true)
 and (true)
 and ((AT
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
by Law of And-Simplification:  P and P is P
and theorem 343:
Theorem (343) [serial 1427] used for:
  Law of And-Simplification:  P and P is P [serial 1425]
 


Theorem (345)                               [serial 1472] 
P [238] << AT
 and ATR_ENABLE >>
S [239] ->
Q [240] << AT
 and ATR_ENABLE >>
by Identity (id):  P->P is tautology


Theorem (346)                               [serial 1471] 
P [238] << AT
 and ATR_ENABLE >>
S [239] ->
Q [240] << AT
 and ATR_ENABLE
 and ATR_ENABLE >>
by Law of And-Simplification:  P and P is P
and theorem 345:
Theorem (345) [serial 1472] used for:
  Law of And-Simplification:  P and P is P [serial 1471]
 


Theorem (347)                               [serial 1470] 
P [238] << AT
 and ATR_ENABLE >>
S [239] ->
Q [240] << ATR_ENABLE
 and (AT
 and ATR_ENABLE) >>
by Associativity: (b.c).a = a.b.c
and theorem 346:
Theorem (346) [serial 1471] used for:
  Associativity: (b.c).a = a.b.c [serial 1470]
 


Theorem (348)                               [serial 1451] 
P [238] << (AT
 and ATR_ENABLE)@now >>
S [239] ->
Q [240] << (AT
 and ATR_ENABLE)@now
 and ATR_ENABLE >>
by Assume Present:  P = P@now = P^0 
and theorem 347:
Theorem (347) [serial 1470] used for:
  Assume Present:  P = P@now = P^0  [serial 1451]
 


Theorem (349)                               [serial 1441] 
P [238] << (AT
 and ATR_ENABLE)@now >>
S [239] ->
Q [240] << (AT
 and ATR_ENABLE)@now
 and ATR_ENABLE
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 348:
Theorem (348) [serial 1451] used for:
  Law of And-Simplification:  P and true is P [serial 1441]
 


Theorem (350)                               [serial 1430] 
P [238] << ((AT
 and ATR_ENABLE))@now >>
S [239] ->
Q [240] << ((true)
 and ((AT
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 349:
Theorem (349) [serial 1441] used for:
    normalization of [serial 1430]
 


Theorem (351)                               [serial 1428] 
P [238] << ((AT
 and ATR_ENABLE))@now >>
S [239] ->
Q [240] << ((true)
 and (true)
 and ((AT
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
by Law of And-Simplification:  P and P is P
and theorem 350:
Theorem (350) [serial 1430] used for:
  Law of And-Simplification:  P and P is P [serial 1428]
 


Theorem (352)                               [serial 1426] 
P [238] << ((AT
 and ATR_ENABLE))@now >>
S [239] ->
Q [240] << ((true)
 and (true)
 and (true)
 and ((AT
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
by Law of And-Simplification:  P and P is P
and theorem 351:
Theorem (351) [serial 1428] used for:
  Law of And-Simplification:  P and P is P [serial 1426]
 


Theorem (353)                               [serial 1422] 
P [238] << ((AT
 and ATR_ENABLE))@now >>
S [239] ->
Q [240] << ((1 = 1)
 and (now = now)
 and (now = now)
 and ((AT
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
by Equality Law (idistr):  a=a <-> true
and theorems 344 352:
Theorem (344) [serial 1425] used for:
  Equality Law (idistr):  a=a <-> true [serial 1422]
 
Theorem (352) [serial 1426] used for:
  Equality Law (idistr):  a=a <-> true [serial 1422]
 


Theorem (354)                               [serial 1420] 
P [238] << ((AT
 and ATR_ENABLE))@now >>
S [239] |c,last_at,et := 1,now,now|  
Q [240] << ((c = 1)
 and (last_at = now)
 and (et = now)
 and ((AT
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
by Simultaneous Assignment
and theorem 353:
Theorem (353) [serial 1422] used for:
  applied wp for simultaneous assignment [serial 1420]
 


Theorem (355)                               [serial 1492] 
P [242] << AT@now
 and ATR_ENABLE@now
 and (1 = atCount)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [218] << ATR_ENABLE@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (356)                               [serial 1491] 
P [242] << (1 = atCount)@now
 and (AT@now
 and ATR_ENABLE@now)
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [218] << ATR_ENABLE@now >>
by Associativity: (b.c).a = a.b.c
and theorem 355:
Theorem (355) [serial 1492] used for:
  Associativity: (b.c).a = a.b.c [serial 1491]
 


Theorem (357)                               [serial 1490] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [218] << ATR_ENABLE@now >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 356:
Theorem (356) [serial 1491] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 1490]
 


Theorem (358)                               [serial 1486] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [218] << ATR_ENABLE@et >>
by Guided Substitution of Equals
and theorem 357:
Theorem (357) [serial 1490] used for:
  Guided Substitution of Equals
 replacing "et" with its = "now" in its postcondition [serial 1486]
 


Theorem (359)                               [serial 1493] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [221] << (AT
 and ATR_ENABLE)@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (360)                               [serial 1487] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [221] << (AT
 and ATR_ENABLE)@last_at >>
by Guided Substitution of Equals
and theorem 359:
Theorem (359) [serial 1493] used for:
  Guided Substitution of Equals
 replacing "last_at" with its = "now" in its postcondition [serial 1487]
 


Theorem (361)                               [serial 1497] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [216] << (AT
 and ATR_ENABLE)@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (362)                               [serial 1496] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [216] << 1 = (numberof t~time
  in now .. now 
  that (AT
        and ATR_ENABLE)@t ) >>
by First Count Law:  x@now iff 1=numberof t:time in now..now that x@t
and theorem 361:
Theorem (361) [serial 1497] used for:
  First Count Law:  x@now iff 1=numberof t:time in now..now that x@t [serial 1496]
 


Theorem (363)                               [serial 1495] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [216] << c = (numberof t~time
  in now .. now 
  that (AT
        and ATR_ENABLE)@t ) >>
by Guided Substitution of Equals
and theorem 362:
Theorem (362) [serial 1496] used for:
  Guided Substitution of Equals
 replacing "c" with its = "1" in its postcondition [serial 1495]
 


Theorem (364)                               [serial 1494] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [216] << c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) >>
by Guided Substitution of Equals
and theorem 363:
Theorem (363) [serial 1495] used for:
  Guided Substitution of Equals
 replacing "et" with its = "now" in its postcondition [serial 1494]
 


Theorem (365)                               [serial 1488] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [216] << c = (numberof t~time
  in et .. last_at 
  that (AT
        and ATR_ENABLE)@t ) >>
by Guided Substitution of Equals
and theorem 364:
Theorem (364) [serial 1494] used for:
  Guided Substitution of Equals
 replacing "last_at" with its = "now" in its postcondition [serial 1488]
 


Theorem (366)                               [serial 1501] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [222] << true >>
by True Conclusion Schema (tc): P->true


Theorem (367)                               [serial 1499] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [222] << not (false) >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 366:
Theorem (366) [serial 1501] used for:
    normalization of [serial 1499]
 


Theorem (368)                               [serial 1498] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [222] << not (exists t~time
  in now ,, now 
  that (AT
        and ATR_ENABLE)@t ) >>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 367:
Theorem (367) [serial 1499] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 1498]
 


Theorem (369)                               [serial 1489] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [222] << not (exists t~time
  in last_at ,, now 
  that (AT
        and ATR_ENABLE)@t ) >>
by Guided Substitution of Equals
and theorem 368:
Theorem (368) [serial 1498] used for:
  Guided Substitution of Equals
 replacing "last_at" with its = "now" in its postcondition [serial 1489]
 


Theorem (370)                               [serial 1484] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [243] << ATR_ENABLE@et
 and (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. last_at 
  that (AT
        and ATR_ENABLE)@t )
 and not (exists t~time
  in last_at ,, now 
  that (AT
        and ATR_ENABLE)@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 358 360 365 369:
Theorem (358) [serial 1486] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1484]
 
Theorem (360) [serial 1487] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1484]
 
Theorem (365) [serial 1488] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1484]
 
Theorem (369) [serial 1489] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1484]
 


Theorem (371)                               [serial 1482] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [243] << (AT
 and ATR_ENABLE)@last_at
 and not (exists t~time
  in last_at ,, now 
  that (AT
        and ATR_ENABLE)@t )
 and ATR_ENABLE@et
 and c = (numberof t~time
  in et .. last_at 
  that (AT
        and ATR_ENABLE)@t ) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 370:
Theorem (370) [serial 1484] used for:
    normalization of [serial 1482]
 


Theorem (372)                               [serial 1480] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [243] << ATR_ENABLE@et
 and c = (numberof t~time
  in et .. last_at 
  that (AT
        and ATR_ENABLE)@t )
 and ((AT
 and ATR_ENABLE)@last_at
 and not (exists t~time
  in last_at ,, now 
  that (AT
        and ATR_ENABLE)@t )) >>
by Associativity: (b.c).a = a.b.c
and theorem 371:
Theorem (371) [serial 1482] used for:
  Associativity: (b.c).a = a.b.c [serial 1480]
 


Theorem (373)                               [serial 1478] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [243] << ((((c = (numberof t~time
  in et .. last_at 
  that ((AT
        and ATR_ENABLE))@t )))
 and ((((AT
 and ATR_ENABLE))@last_at
 and not (exists t~time
  in last_at ,, now 
  that ((AT
        and ATR_ENABLE))@t )))
 and ATR_ENABLE@et)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 372:
Theorem (372) [serial 1480] used for:
    normalization of [serial 1478]
 


Theorem (374)                               [serial 1477] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [243] << ((T_COUNT()
 and LAT()
 and ET_A(last_at))) >>
by Substitution of Assertion Labels
and theorem 373:
Theorem (373) [serial 1478] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1477]
 


Theorem (375)                               [serial 1455] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [243] << ATC() >>
by Substitution of Assertion Labels
and theorem 374:
Theorem (374) [serial 1477] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1455]
 


Theorem (376)                               [serial 1448] 
P [242] << (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE
 and (1 = atCount)@now >>
S [242] ->
Q [243] << ATC() >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 375:
Theorem (375) [serial 1455] used for:
    normalization of [serial 1448]
 


Theorem (377)                               [serial 1435] 
P [242] << (1 = atCount)@now
 and ((AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE) >>
S [242] ->
Q [243] << ATC() >>
by Associativity: (b.c).a = a.b.c
and theorem 376:
Theorem (376) [serial 1448] used for:
  Associativity: (b.c).a = a.b.c [serial 1435]
 


Theorem (378)                               [serial 1423] 
P [242] << (((c = 1)
 and (last_at = now)
 and (et = now)
 and ((AT
 and ATR_ENABLE))@now
 and ATR_ENABLE))
 and (atCount = 1)@now >>
S [242] ->
Q [243] << ATC() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 377:
Theorem (377) [serial 1435] used for:
    normalization of [serial 1423]
 


Theorem (379)                               [serial 1508] 
P [242] << 1 = atCount
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE
 and (AT
 and ATR_ENABLE) >>
S [242] ->
Q [242] << AT
 and ATR_ENABLE >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (380)                               [serial 1507] 
P [242] << 1 = atCount
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE
 and (AT
 and ATR_ENABLE) >>
S [242] ->
Q [242] << (AT
 and ATR_ENABLE)@now >>
by Assume Present:  P = P@now = P^0 
and theorem 379:
Theorem (379) [serial 1508] used for:
  Assume Present:  P = P@now = P^0  [serial 1507]
 


Theorem (381)                               [serial 1506] 
P [242] << 1 = atCount
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE
 and (AT
 and ATR_ENABLE) >>
S [242] ->
Q [242] << 1 = (numberof t~time
  in now .. now 
  that (AT
        and ATR_ENABLE)@t ) >>
by First Count Law:  x@now iff 1=numberof t:time in now..now that x@t
and theorem 380:
Theorem (380) [serial 1507] used for:
  First Count Law:  x@now iff 1=numberof t:time in now..now that x@t [serial 1506]
 


Theorem (382)                               [serial 1505] 
P [242] << 1 = atCount
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE
 and (AT
 and ATR_ENABLE) >>
S [242] ->
Q [242] << atCount = (numberof t~time
  in now .. now 
  that (AT
        and ATR_ENABLE)@t ) >>
by Guided Substitution of Equals
and theorem 381:
Theorem (381) [serial 1506] used for:
  Guided Substitution of Equals
 replacing "atCount" with its = "1" in its postcondition [serial 1505]
 


Theorem (383)                               [serial 1504] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [242] << (atCount = (numberof t~time
  in now .. now 
  that (AT
        and ATR_ENABLE)@t ))@now >>
by Assume Present:  P = P@now = P^0 
and theorem 382:
Theorem (382) [serial 1505] used for:
  Assume Present:  P = P@now = P^0  [serial 1504]
 


Theorem (384)                               [serial 1503] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [242] << (atCount = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ))@now >>
by Guided Substitution of Equals
and theorem 383:
Theorem (383) [serial 1504] used for:
  Guided Substitution of Equals
 replacing "et" with its = "now" in its postcondition [serial 1503]
 


Theorem (385)                               [serial 1457] 
P [242] << (1 = atCount)@now
 and (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE >>
S [242] ->
Q [242] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t  else 0) = atCount)@now >>
by Conditional True Expression:  b and x=e  iff  b and x=(b??e:g) 
and theorem 384:
Theorem (384) [serial 1503] used for:
   Conditional True Expression:  b and x=e  iff  b and x=(b??e:g)  [serial 1457]
 


Theorem (386)                               [serial 1449] 
P [242] << (AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE
 and (1 = atCount)@now >>
S [242] ->
Q [242] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t  else 0) = atCount)@now >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 385:
Theorem (385) [serial 1457] used for:
    normalization of [serial 1449]
 


Theorem (387)                               [serial 1437] 
P [242] << (1 = atCount)@now
 and ((AT
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_at = now
 and ATR_ENABLE) >>
S [242] ->
Q [242] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t  else 0) = atCount)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 386:
Theorem (386) [serial 1449] used for:
  Associativity: (b.c).a = a.b.c [serial 1437]
 


Theorem (388)                               [serial 1424] 
P [242] << (((c = 1)
 and (last_at = now)
 and (et = now)
 and ((AT
 and ATR_ENABLE))@now
 and ATR_ENABLE))
 and (atCount = 1)@now >>
S [242] ->
Q [242] << (atCount = ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t  else 0)))@now >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 387:
Theorem (387) [serial 1437] used for:
    normalization of [serial 1424]
 


Theorem (389)                               [serial 1421] 
P [240] << ((c = 1)
 and (last_at = now)
 and (et = now)
 and ((AT
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
S [242] atCount!(1)
Q [243] << ATC() >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 378 388:
Theorem (378) [serial 1423] used for:
  applied port output <<pre and (atCount=1)@now>> -> <<post>> [serial 1421]
 
Theorem (388) [serial 1424] used for:
  applied port output <<pre and (atCount=1)@now>> -> <<(atCount=(if ATR_ENABLE then numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t  else 0))@now>> [serial 1421]
 


Theorem (390)                               [serial 1028] 
P [227] << (((et = 0.0)
 and AT@now
 and (c = 0)))
 and ((ATR_ENABLE)@now) >>
S [238] << ((AT
 and ATR_ENABLE))@now >>
|c,last_at,et := 1,now,now|  
<< ((c = 1)
 and (last_at = now)
 and (et = now)
 and ((AT
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
;
atCount!(1)
<< ATC() >>
Q [226] << ATC() >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 333 334 354 389:
Theorem (333) [serial 1418] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 1028]
 
Theorem (334) [serial 1419] used for:
  <<Q1>> -> <<Q>> in sequential composition for [serial 1028]
 
Theorem (354) [serial 1420] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1028]
 
Theorem (389) [serial 1421] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1028]
 


Theorem (391)                               [serial 1510] 
P [246] << AT@now
 and ATC()
 and not (exists u~time
  in tops ,, now 
  that AT@u ) >>
S [245] ->
Q [228] << AT@now
 and ATC() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (392)                               [serial 1029] 
P [246] << (ATC())
 and AT@now
 and not (exists u~time
  in tops ,, now 
  that AT@u ) >>
S [245] ->
Q [228] << (ATC()
 and AT@now) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 391:
Theorem (391) [serial 1510] used for:
    normalization of [serial 1029]
 


Theorem (393)                               [serial 1550] 
P [228] << AT
 and ATC()
 and not ATR_ENABLE >>
S [249] ->
Q [251] << not ATR_ENABLE >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (394)                               [serial 1542] 
P [228] << AT@now
 and ATC()
 and not ATR_ENABLE@now >>
S [249] ->
Q [251] << not ATR_ENABLE >>
by Assume Present:  P = P@now = P^0 
and theorem 393:
Theorem (393) [serial 1550] used for:
  Assume Present:  P = P@now = P^0  [serial 1542]
 


Theorem (395)                               [serial 1535] 
P [228] << AT@now
 and ATC()
 and not ATR_ENABLE@now >>
S [249] ->
Q [251] << (not ATR_ENABLE) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 394:
Theorem (394) [serial 1542] used for:
    normalization of [serial 1535]
 


Theorem (396)                               [serial 1533] 
P [228] << not ATR_ENABLE@now
 and (AT@now
 and ATC()) >>
S [249] ->
Q [251] << (not ATR_ENABLE) >>
by Associativity: (b.c).a = a.b.c
and theorem 395:
Theorem (395) [serial 1535] used for:
  Associativity: (b.c).a = a.b.c [serial 1533]
 


Theorem (397)                               [serial 1529] 
P [228] << not ATR_ENABLE@now
 and (AT@now
 and ATC()) >>
S [249] ->
Q [251] << true
 and true
 and not ATR_ENABLE >>
by Law of And-Simplification:  P and true is P
and theorem 396:
Theorem (396) [serial 1533] used for:
  Law of And-Simplification:  P and true is P [serial 1529]
 


Theorem (398)                               [serial 1518] 
P [228] << not ATR_ENABLE@now
 and (AT@now
 and ATC()) >>
S [249] ->
Q [251] << 0 = 0
 and 0.0 = 0.0
 and not ATR_ENABLE >>
by Equality Law (idistr):  a=a <-> true
and theorem 397:
Theorem (397) [serial 1529] used for:
  Equality Law (idistr):  a=a <-> true [serial 1518]
 


Theorem (399)                               [serial 1551] 
P [228] << AT
 and ATC()
 and not ATR_ENABLE >>
S [249] ->
Q [251] << not ATR_ENABLE >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (400)                               [serial 1544] 
P [228] << AT@now
 and ATC()
 and not ATR_ENABLE@now >>
S [249] ->
Q [251] << not ATR_ENABLE >>
by Assume Present:  P = P@now = P^0 
and theorem 399:
Theorem (399) [serial 1551] used for:
  Assume Present:  P = P@now = P^0  [serial 1544]
 


Theorem (401)                               [serial 1536] 
P [228] << AT@now
 and ATC()
 and not ATR_ENABLE@now >>
S [249] ->
Q [251] << (not ATR_ENABLE) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 400:
Theorem (400) [serial 1544] used for:
    normalization of [serial 1536]
 


Theorem (402)                               [serial 1534] 
P [228] << not ATR_ENABLE@now
 and (AT@now
 and ATC()) >>
S [249] ->
Q [251] << (not ATR_ENABLE) >>
by Associativity: (b.c).a = a.b.c
and theorem 401:
Theorem (401) [serial 1536] used for:
  Associativity: (b.c).a = a.b.c [serial 1534]
 


Theorem (403)                               [serial 1530] 
P [228] << not ATR_ENABLE@now
 and (AT@now
 and ATC()) >>
S [249] ->
Q [251] << true
 and true
 and not ATR_ENABLE >>
by Law of And-Simplification:  P and true is P
and theorem 402:
Theorem (402) [serial 1534] used for:
  Law of And-Simplification:  P and true is P [serial 1530]
 


Theorem (404)                               [serial 1520] 
P [228] << not ATR_ENABLE@now
 and (AT@now
 and ATC()) >>
S [249] ->
Q [251] << 0 = 0
 and 0.0 = 0.0
 and not ATR_ENABLE >>
by Equality Law (idistr):  a=a <-> true
and theorem 403:
Theorem (403) [serial 1530] used for:
  Equality Law (idistr):  a=a <-> true [serial 1520]
 


Theorem (405)                               [serial 1514] 
P [228] << ((ATC()
 and AT@now))
 and (not (ATR_ENABLE)@now) >>
S [249] ->
Q [251] << ((0 = 0)
 and (0.0 = 0.0)
 and not ATR_ENABLE) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorems 398 404:
Theorem (398) [serial 1518] used for:
    normalization of [serial 1514]
 
Theorem (404) [serial 1520] used for:
    normalization of [serial 1514]
 


Theorem (406)                               [serial 1512] 
P [228] << ((ATC()
 and AT@now))
 and (not (ATR_ENABLE)@now) >>
S [249] |c,et := 0,0.0|  
Q [251] << ((c = 0)
 and (et = 0.0)
 and not ATR_ENABLE) >>
by Simultaneous Assignment
and theorem 405:
Theorem (405) [serial 1514] used for:
  applied wp for simultaneous assignment [serial 1512]
 


Theorem (407)                               [serial 1538] 
P [252] << (0 = atCount)@now
 and 0 = c
 and 0.0 = et
 and not ATR_ENABLE >>
S [252] ->
Q [225] << 0 = c
 and 0.0 = et >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (408)                               [serial 1531] 
P [252] << 0 = c
 and 0.0 = et
 and not ATR_ENABLE
 and (0 = atCount)@now >>
S [252] ->
Q [225] << 0 = c
 and 0.0 = et >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 407:
Theorem (407) [serial 1538] used for:
    normalization of [serial 1531]
 


Theorem (409)                               [serial 1522] 
P [252] << (0 = atCount)@now
 and (0 = c
 and 0.0 = et
 and not ATR_ENABLE) >>
S [252] ->
Q [225] << 0 = c
 and 0.0 = et >>
by Associativity: (b.c).a = a.b.c
and theorem 408:
Theorem (408) [serial 1531] used for:
  Associativity: (b.c).a = a.b.c [serial 1522]
 


Theorem (410)                               [serial 1515] 
P [252] << (((c = 0)
 and (et = 0.0)
 and not ATR_ENABLE))
 and (atCount = 0)@now >>
S [252] ->
Q [225] << ((et = 0.0)
 and (c = 0)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 409:
Theorem (409) [serial 1522] used for:
    normalization of [serial 1515]
 


Theorem (411)                               [serial 1552] 
P [252] << 0 = atCount
 and 0 = c
 and 0.0 = et
 and not ATR_ENABLE >>
S [252] ->
Q [252] << 0 = atCount >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (412)                               [serial 1549] 
P [252] << 0 = atCount
 and 0 = c
 and 0.0 = et
 and not ATR_ENABLE >>
S [252] ->
Q [252] << (if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t  else 0) = atCount >>
by Conditional False Expression:  not b and x=g  iff  not b and x=(b??e:g) 
and theorem 411:
Theorem (411) [serial 1552] used for:
   Conditional False Expression:  not b and x=g  iff  not b and x=(b??e:g)  [serial 1549]
 


Theorem (413)                               [serial 1540] 
P [252] << (0 = atCount)@now
 and 0 = c
 and 0.0 = et
 and not ATR_ENABLE >>
S [252] ->
Q [252] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t  else 0) = atCount)@now >>
by Assume Present:  P = P@now = P^0 
and theorem 412:
Theorem (412) [serial 1549] used for:
  Assume Present:  P = P@now = P^0  [serial 1540]
 


Theorem (414)                               [serial 1532] 
P [252] << 0 = c
 and 0.0 = et
 and not ATR_ENABLE
 and (0 = atCount)@now >>
S [252] ->
Q [252] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t  else 0) = atCount)@now >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 413:
Theorem (413) [serial 1540] used for:
    normalization of [serial 1532]
 


Theorem (415)                               [serial 1524] 
P [252] << (0 = atCount)@now
 and (0 = c
 and 0.0 = et
 and not ATR_ENABLE) >>
S [252] ->
Q [252] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t  else 0) = atCount)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 414:
Theorem (414) [serial 1532] used for:
  Associativity: (b.c).a = a.b.c [serial 1524]
 


Theorem (416)                               [serial 1516] 
P [252] << (((c = 0)
 and (et = 0.0)
 and not ATR_ENABLE))
 and (atCount = 0)@now >>
S [252] ->
Q [252] << (atCount = ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t  else 0)))@now >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 415:
Theorem (415) [serial 1524] used for:
    normalization of [serial 1516]
 


Theorem (417)                               [serial 1513] 
P [251] << ((c = 0)
 and (et = 0.0)
 and not ATR_ENABLE) >>
S [252] atCount!(0)
Q [225] << ((et = 0.0)
 and (c = 0)) >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 410 416:
Theorem (410) [serial 1515] used for:
  applied port output <<pre and (atCount=0)@now>> -> <<post>> [serial 1513]
 
Theorem (416) [serial 1516] used for:
  applied port output <<pre and (atCount=0)@now>> -> <<(atCount=(if ATR_ENABLE then numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t  else 0))@now>> [serial 1513]
 


Theorem (418)                               [serial 1030] 
P [228] << ((ATC()
 and AT@now))
 and (not (ATR_ENABLE)@now) >>
S [249] |c,et := 0,0.0|  
;
<< ((c = 0)
 and (et = 0.0)
 and not ATR_ENABLE) >>
atCount!(0)
Q [225] << ((et = 0.0)
 and (c = 0)) >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 406 417:
Theorem (406) [serial 1512] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1030]
 
Theorem (417) [serial 1513] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1030]
 


Theorem (419)                               [serial 1636] 
P [228] << AT@now
 and ATR_ENABLE@now
 and ATC() >>
S [228] ->
Q [257] << AT@now
 and ATR_ENABLE@now
 and ATC() >>
by Identity (id):  P->P is tautology


Theorem (420)                               [serial 1634] 
P [228] << AT@now
 and ATR_ENABLE@now
 and ATC() >>
S [228] ->
Q [257] << (AT)@now
 and (ATR_ENABLE)@now
 and ATC() >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 419:
Theorem (419) [serial 1636] used for:
    normalization of [serial 1634]
 


Theorem (421)                               [serial 1633] 
P [228] << AT@now
 and ATR_ENABLE@now
 and ATC() >>
S [228] ->
Q [257] << ((AT)@now
 and (ATR_ENABLE)@now)
 and ATC() >>
by Associativity: (b.c).a = a.b.c
and theorem 420:
Theorem (420) [serial 1634] used for:
  Associativity: (b.c).a = a.b.c [serial 1633]
 


Theorem (422)                               [serial 1589] 
P [228] << AT@now
 and ATR_ENABLE@now
 and ATC() >>
S [228] ->
Q [257] << (AT
 and ATR_ENABLE)@now
 and ATC() >>
by Distribute @
and theorem 421:
Theorem (421) [serial 1633] used for:
  Distribute @ [serial 1589]
 


Theorem (423)                               [serial 1580] 
P [228] << AT@now
 and ATC()
 and ATR_ENABLE@now >>
S [228] ->
Q [257] << (AT
 and ATR_ENABLE)@now
 and ATC() >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 422:
Theorem (422) [serial 1589] used for:
    normalization of [serial 1580]
 


Theorem (424)                               [serial 1563] 
P [228] << ATR_ENABLE@now
 and (AT@now
 and ATC()) >>
S [228] ->
Q [257] << (AT
 and ATR_ENABLE)@now
 and ATC() >>
by Associativity: (b.c).a = a.b.c
and theorem 423:
Theorem (423) [serial 1580] used for:
  Associativity: (b.c).a = a.b.c [serial 1563]
 


Theorem (425)                               [serial 1553] 
P [228] << ((ATC()
 and AT@now))
 and ((ATR_ENABLE)@now) >>
S [228] ->
Q [257] << (((AT
 and ATR_ENABLE))@now
 and ATC()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 424:
Theorem (424) [serial 1563] used for:
    normalization of [serial 1553]
 


Theorem (426)                               [serial 1554] 
P [265] << ATC() >>
S [226] ->
Q [226] << ATC() >>
by Identity (id):  P->P is tautology


Theorem (427)                               [serial 1609] 
P [257] << ATR_ENABLE@et
 and (AT
 and ATR_ENABLE)@last_at
 and (AT
 and ATR_ENABLE)@now
 and c = (numberof t~time
  in et .. last_at 
  that (AT
        and ATR_ENABLE)@t )
 and not (exists t~time
  in last_at ,, now 
  that (AT
        and ATR_ENABLE)@t ) >>
S [258] ->
Q [218] << ATR_ENABLE@et >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (428)                               [serial 1610] 
P [257] << ATR_ENABLE@et
 and (AT
 and ATR_ENABLE)@last_at
 and (AT
 and ATR_ENABLE)@now
 and c = (numberof t~time
  in et .. last_at 
  that (AT
        and ATR_ENABLE)@t )
 and not (exists t~time
  in last_at ,, now 
  that (AT
        and ATR_ENABLE)@t ) >>
S [258] ->
Q [260] << (AT
 and ATR_ENABLE)@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (429)                               [serial 1614] 
P [257] << ATR_ENABLE@et
 and (AT
 and ATR_ENABLE)@last_at
 and (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and not (exists t~time
  in last_at ,, now 
  that (AT
        and ATR_ENABLE)@t ) >>
S [258] ->
Q [259] << (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (430)                               [serial 1612] 
P [257] << ATR_ENABLE@et
 and (AT
 and ATR_ENABLE)@last_at
 and (AT
 and ATR_ENABLE)@now
 and (1 + c) = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and not (exists t~time
  in last_at ,, now 
  that (AT
        and ATR_ENABLE)@t ) >>
S [258] ->
Q [259] << (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 429:
Theorem (429) [serial 1614] used for:
    normalization of [serial 1612]
 


Theorem (431)                               [serial 1611] 
P [257] << ATR_ENABLE@et
 and (AT
 and ATR_ENABLE)@last_at
 and (AT
 and ATR_ENABLE)@now
 and c = (numberof t~time
  in et .. last_at 
  that (AT
        and ATR_ENABLE)@t )
 and not (exists t~time
  in last_at ,, now 
  that (AT
        and ATR_ENABLE)@t ) >>
S [258] ->
Q [259] << (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c) >>
by Extend Count:   x=(numberof t:time in t0..t1 that p@t) 
   p@t2    /\  not (exists t:time in t1,,t2 that p@t) 
   --------------------------------------------------- 
   (1+x)=(numberof t:time in t0..t2 that p@t) 
and theorem 430:
Theorem (430) [serial 1612] used for:
  Extend Count:   x=(numberof t:time in t0..t1 that p@t) 
   p@t2    /\  not (exists t:time in t1,,t2 that p@t) 
   --------------------------------------------------- 
   (1+x)=(numberof t:time in t0..t2 that p@t)  [serial 1611]
 


Theorem (432)                               [serial 1607] 
P [257] << ATR_ENABLE@et
 and (AT
 and ATR_ENABLE)@last_at
 and (AT
 and ATR_ENABLE)@now
 and c = (numberof t~time
  in et .. last_at 
  that (AT
        and ATR_ENABLE)@t )
 and not (exists t~time
  in last_at ,, now 
  that (AT
        and ATR_ENABLE)@t ) >>
S [258] ->
Q [259] << ATR_ENABLE@et
 and (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 427 428 431:
Theorem (427) [serial 1609] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1607]
 
Theorem (428) [serial 1610] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1607]
 
Theorem (431) [serial 1611] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1607]
 


Theorem (433)                               [serial 1605] 
P [257] << (AT
 and ATR_ENABLE)@last_at
 and not (exists t~time
  in last_at ,, now 
  that (AT
        and ATR_ENABLE)@t )
 and ATR_ENABLE@et
 and c = (numberof t~time
  in et .. last_at 
  that (AT
        and ATR_ENABLE)@t )
 and (AT
 and ATR_ENABLE)@now >>
S [258] ->
Q [259] << ATR_ENABLE@et
 and (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 432:
Theorem (432) [serial 1607] used for:
    normalization of [serial 1605]
 


Theorem (434)                               [serial 1604] 
P [257] << ATR_ENABLE@et
 and c = (numberof t~time
  in et .. last_at 
  that (AT
        and ATR_ENABLE)@t )
 and ((AT
 and ATR_ENABLE)@last_at
 and not (exists t~time
  in last_at ,, now 
  that (AT
        and ATR_ENABLE)@t ))
 and (AT
 and ATR_ENABLE)@now >>
S [258] ->
Q [259] << ATR_ENABLE@et
 and (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c) >>
by Associativity: (b.c).a = a.b.c
and theorem 433:
Theorem (433) [serial 1605] used for:
  Associativity: (b.c).a = a.b.c [serial 1604]
 


Theorem (435)                               [serial 1602] 
P [257] << (AT
 and ATR_ENABLE)@now
 and (ATR_ENABLE@et
 and c = (numberof t~time
  in et .. last_at 
  that (AT
        and ATR_ENABLE)@t )
 and ((AT
 and ATR_ENABLE)@last_at
 and not (exists t~time
  in last_at ,, now 
  that (AT
        and ATR_ENABLE)@t ))) >>
S [258] ->
Q [259] << ATR_ENABLE@et
 and (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c) >>
by Associativity: (b.c).a = a.b.c
and theorem 434:
Theorem (434) [serial 1604] used for:
  Associativity: (b.c).a = a.b.c [serial 1602]
 


Theorem (436)                               [serial 1600] 
P [257] << (AT
 and ATR_ENABLE)@now
 and ((((c = (numberof t~time
  in et .. last_at 
  that ((AT
        and ATR_ENABLE))@t )))
 and ((((AT
 and ATR_ENABLE))@last_at
 and not (exists t~time
  in last_at ,, now 
  that ((AT
        and ATR_ENABLE))@t )))
 and ATR_ENABLE@et)) >>
S [258] ->
Q [259] << (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ATR_ENABLE@et >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 435:
Theorem (435) [serial 1602] used for:
    normalization of [serial 1600]
 


Theorem (437)                               [serial 1599] 
P [257] << (AT
 and ATR_ENABLE)@now
 and ((T_COUNT()
 and LAT()
 and ET_A(last_at))) >>
S [258] ->
Q [259] << (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ATR_ENABLE@et >>
by Substitution of Assertion Labels
and theorem 436:
Theorem (436) [serial 1600] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1599]
 


Theorem (438)                               [serial 1565] 
P [257] << (AT
 and ATR_ENABLE)@now
 and ATC() >>
S [258] ->
Q [259] << (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ET_A(now) >>
by Substitution of Assertion Labels
and theorem 437:
Theorem (437) [serial 1599] used for:
  substituted Assertions' predicates for  labels  [serial 1565]
 


Theorem (439)                               [serial 1558] 
P [257] << (((AT
 and ATR_ENABLE))@now
 and ATC()) >>
S [258] ->
Q [259] << ((((c + 1)) = (numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t ))
 and ((AT
 and ATR_ENABLE))@now
 and ET_A(now)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 438:
Theorem (438) [serial 1565] used for:
    normalization of [serial 1558]
 


Theorem (440)                               [serial 1555] 
P [257] << (((AT
 and ATR_ENABLE))@now
 and ATC()) >>
S [258] skip
Q [259] << ((((c + 1)) = (numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t ))
 and ((AT
 and ATR_ENABLE))@now
 and ET_A(now)) >>
by Skip Means Implication:  <<P>> skip <<Q>>  is  <<P>> -> <<Q>> (bl.skip)
and theorem 439:
Theorem (439) [serial 1558] used for:
    <<P>> -> <<Q>>
  for [serial 1555]
 


Theorem (441)                               [serial 1621] 
P [259] << AT@now
 and ATR_ENABLE@now
 and (numberof t~time
  in et .. now 
  that (AT@t
        and ATR_ENABLE@t) ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [263] << AT@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (442)                               [serial 1622] 
P [259] << AT@now
 and ATR_ENABLE@now
 and (numberof t~time
  in et .. now 
  that (AT@t
        and ATR_ENABLE@t) ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [263] << ATR_ENABLE@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (443)                               [serial 1623] 
P [259] << AT@now
 and ATR_ENABLE@now
 and (numberof t~time
  in et .. now 
  that (AT@t
        and ATR_ENABLE@t) ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [262] << (numberof t~time
  in et .. now 
  that (AT@t
        and ATR_ENABLE@t) ) = (1 + c) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (444)                               [serial 1626] 
P [259] << (numberof t~time
  in et .. now 
  that (AT@t
        and ATR_ENABLE@t) ) = (1 + c)
 and AT
 and ATR_ENABLE
 and ET_A(now) >>
S [261] ->
Q [263] << ATR_ENABLE >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (445)                               [serial 1624] 
P [259] << AT@now
 and ATR_ENABLE@now
 and (numberof t~time
  in et .. now 
  that (AT@t
        and ATR_ENABLE@t) ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [263] << ATR_ENABLE >>
by Assume Present:  P = P@now = P^0 
and theorem 444:
Theorem (444) [serial 1626] used for:
  Assume Present:  P = P@now = P^0  [serial 1624]
 


Theorem (446)                               [serial 1625] 
P [259] << AT@now
 and ATR_ENABLE@now
 and (numberof t~time
  in et .. now 
  that (AT@t
        and ATR_ENABLE@t) ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [262] << ET_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (447)                               [serial 1619] 
P [259] << AT@now
 and ATR_ENABLE@now
 and (numberof t~time
  in et .. now 
  that (AT@t
        and ATR_ENABLE@t) ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [262] << AT@now
 and ATR_ENABLE@now
 and (numberof t~time
  in et .. now 
  that (AT@t
        and ATR_ENABLE@t) ) = (1 + c)
 and ATR_ENABLE
 and ET_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 441 442 443 445 446:
Theorem (441) [serial 1621] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1619]
 
Theorem (442) [serial 1622] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1619]
 
Theorem (443) [serial 1623] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1619]
 
Theorem (445) [serial 1624] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1619]
 
Theorem (446) [serial 1625] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1619]
 


Theorem (448)                               [serial 1617] 
P [259] << (AT)@now
 and (ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that ((AT)@t
        and (ATR_ENABLE)@t) ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [262] << (AT)@now
 and (ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that ((AT)@t
        and (ATR_ENABLE)@t) ) = (1 + c)
 and ATR_ENABLE
 and ET_A(now) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 447:
Theorem (447) [serial 1619] used for:
    normalization of [serial 1617]
 


Theorem (449)                               [serial 1616] 
P [259] << ((AT)@now
 and (ATR_ENABLE)@now)
 and (numberof t~time
  in et .. now 
  that ((AT)@t
        and (ATR_ENABLE)@t) ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [262] << ((AT)@now
 and (ATR_ENABLE)@now)
 and (numberof t~time
  in et .. now 
  that ((AT)@t
        and (ATR_ENABLE)@t) ) = (1 + c)
 and ATR_ENABLE
 and ET_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 448:
Theorem (448) [serial 1617] used for:
  Associativity: (b.c).a = a.b.c [serial 1616]
 


Theorem (450)                               [serial 1585] 
P [259] << (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [262] << (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ATR_ENABLE
 and ET_A(now) >>
by Distribute @
and theorem 449:
Theorem (449) [serial 1616] used for:
  Distribute @ [serial 1585]
 


Theorem (451)                               [serial 1581] 
P [259] << (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [262] << (AT
 and ATR_ENABLE)@now
 and true
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ATR_ENABLE
 and ET_A(now) >>
by Law of And-Simplification:  P and true is P
and theorem 450:
Theorem (450) [serial 1585] used for:
  Law of And-Simplification:  P and true is P [serial 1581]
 


Theorem (452)                               [serial 1567] 
P [259] << (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [262] << (AT
 and ATR_ENABLE)@now
 and now = now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ATR_ENABLE
 and ET_A(now) >>
by Equality Law (idistr):  a=a <-> true
and theorem 451:
Theorem (451) [serial 1581] used for:
  Equality Law (idistr):  a=a <-> true [serial 1567]
 


Theorem (453)                               [serial 1627] 
P [259] << (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [263] << (AT
 and ATR_ENABLE)@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (454)                               [serial 1628] 
P [259] << (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [262] << (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (455)                               [serial 1632] 
P [259] << AT
 and ATR_ENABLE
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [263] << ATR_ENABLE >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (456)                               [serial 1631] 
P [259] << (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ET_A(now)
 and (AT
 and ATR_ENABLE) >>
S [261] ->
Q [263] << ATR_ENABLE >>
by Associativity: (b.c).a = a.b.c
and theorem 455:
Theorem (455) [serial 1632] used for:
  Associativity: (b.c).a = a.b.c [serial 1631]
 


Theorem (457)                               [serial 1629] 
P [259] << (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [263] << ATR_ENABLE >>
by Assume Present:  P = P@now = P^0 
and theorem 456:
Theorem (456) [serial 1631] used for:
  Assume Present:  P = P@now = P^0  [serial 1629]
 


Theorem (458)                               [serial 1630] 
P [259] << (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [262] << ET_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (459)                               [serial 1586] 
P [259] << (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [262] << (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ATR_ENABLE
 and ET_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 453 454 457 458:
Theorem (453) [serial 1627] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1586]
 
Theorem (454) [serial 1628] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1586]
 
Theorem (457) [serial 1629] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1586]
 
Theorem (458) [serial 1630] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1586]
 


Theorem (460)                               [serial 1582] 
P [259] << (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [262] << (AT
 and ATR_ENABLE)@now
 and true
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ATR_ENABLE
 and ET_A(now) >>
by Law of And-Simplification:  P and true is P
and theorem 459:
Theorem (459) [serial 1586] used for:
  Law of And-Simplification:  P and true is P [serial 1582]
 


Theorem (461)                               [serial 1569] 
P [259] << (AT
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ET_A(now) >>
S [261] ->
Q [262] << (AT
 and ATR_ENABLE)@now
 and now = now
 and (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) = (1 + c)
 and ATR_ENABLE
 and ET_A(now) >>
by Equality Law (idistr):  a=a <-> true
and theorem 460:
Theorem (460) [serial 1582] used for:
  Equality Law (idistr):  a=a <-> true [serial 1569]
 


Theorem (462)                               [serial 1559] 
P [259] << ((((c + 1)) = (numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t ))
 and ((AT
 and ATR_ENABLE))@now
 and ET_A(now)) >>
S [261] ->
Q [262] << (((((c + 1))) = (numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t ))
 and ET_A(now)
 and ATR_ENABLE
 and ((AT
 and ATR_ENABLE))@now
 and (now = now)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorems 452 461:
Theorem (452) [serial 1567] used for:
    normalization of [serial 1559]
 
Theorem (461) [serial 1569] used for:
    normalization of [serial 1559]
 


Theorem (463)                               [serial 1556] 
P [259] << ((((c + 1)) = (numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t ))
 and ((AT
 and ATR_ENABLE))@now
 and ET_A(now)) >>
S [261] |c,last_at := (c + 1),now|  
Q [262] << ((c = (numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t ))
 and ET_A(last_at)
 and ATR_ENABLE
 and ((AT
 and ATR_ENABLE))@last_at
 and (last_at = now)) >>
by Simultaneous Assignment
and theorem 462:
Theorem (462) [serial 1559] used for:
  applied wp for simultaneous assignment [serial 1556]
 


Theorem (464)                               [serial 1653] 
P [264] << ATR_ENABLE@et
 and (atCount = c)@now
 and (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE >>
S [264] ->
Q [218] << ATR_ENABLE@et >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (465)                               [serial 1656] 
P [264] << ATR_ENABLE@et
 and (atCount = c)@now
 and (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE >>
S [264] ->
Q [221] << (AT
 and ATR_ENABLE)@last_at >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (466)                               [serial 1654] 
P [264] << ATR_ENABLE@et
 and (atCount = c)@now
 and (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE >>
S [264] ->
Q [221] << (AT
 and ATR_ENABLE)@now >>
by Guided Substitution of Equals
and theorem 465:
Theorem (465) [serial 1656] used for:
  Guided Substitution of Equals
 replacing "now" with its = "last_at" in its postcondition [serial 1654]
 


Theorem (467)                               [serial 1655] 
P [264] << ATR_ENABLE@et
 and (atCount = c)@now
 and (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE >>
S [264] ->
Q [216] << c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (468)                               [serial 1652] 
P [264] << ATR_ENABLE@et
 and (atCount = c)@now
 and (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE >>
S [264] ->
Q [265] << ATR_ENABLE@et
 and (AT
 and ATR_ENABLE)@now
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 464 466 467:
Theorem (464) [serial 1653] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1652]
 
Theorem (466) [serial 1654] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1652]
 
Theorem (467) [serial 1655] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1652]
 


Theorem (469)                               [serial 1650] 
P [264] << ATR_ENABLE@et
 and (atCount = c)@now
 and (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE >>
S [264] ->
Q [265] << ATR_ENABLE@et
 and (AT
 and ATR_ENABLE)@now
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 468:
Theorem (468) [serial 1652] used for:
  Law of And-Simplification:  P and true is P [serial 1650]
 


Theorem (470)                               [serial 1648] 
P [264] << ATR_ENABLE@et
 and (atCount = c)@now
 and (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE >>
S [264] ->
Q [265] << ATR_ENABLE@et
 and (AT
 and ATR_ENABLE)@now
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and not (false) >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 469:
Theorem (469) [serial 1650] used for:
    normalization of [serial 1648]
 


Theorem (471)                               [serial 1647] 
P [264] << ATR_ENABLE@et
 and (atCount = c)@now
 and (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE >>
S [264] ->
Q [265] << ATR_ENABLE@et
 and (AT
 and ATR_ENABLE)@now
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and not (exists t~time
  in now ,, now 
  that (AT
        and ATR_ENABLE)@t ) >>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 470:
Theorem (470) [serial 1648] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 1647]
 


Theorem (472)                               [serial 1645] 
P [264] << ATR_ENABLE@et
 and (atCount = c)@now
 and (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE >>
S [264] ->
Q [265] << ATR_ENABLE@et
 and (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. last_at 
  that (AT
        and ATR_ENABLE)@t )
 and not (exists t~time
  in last_at ,, now 
  that (AT
        and ATR_ENABLE)@t ) >>
by Guided Substitution of Equals
and theorem 471:
Theorem (471) [serial 1647] used for:
  Guided Substitution of Equals
 replacing "last_at" with its = "now" in its postcondition [serial 1645]
 


Theorem (473)                               [serial 1643] 
P [264] << ATR_ENABLE@et
 and (atCount = c)@now
 and (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE >>
S [264] ->
Q [265] << (AT
 and ATR_ENABLE)@last_at
 and not (exists t~time
  in last_at ,, now 
  that (AT
        and ATR_ENABLE)@t )
 and ATR_ENABLE@et
 and c = (numberof t~time
  in et .. last_at 
  that (AT
        and ATR_ENABLE)@t ) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 472:
Theorem (472) [serial 1645] used for:
    normalization of [serial 1643]
 


Theorem (474)                               [serial 1641] 
P [264] << ATR_ENABLE@et
 and (atCount = c)@now
 and (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE >>
S [264] ->
Q [265] << ATR_ENABLE@et
 and c = (numberof t~time
  in et .. last_at 
  that (AT
        and ATR_ENABLE)@t )
 and ((AT
 and ATR_ENABLE)@last_at
 and not (exists t~time
  in last_at ,, now 
  that (AT
        and ATR_ENABLE)@t )) >>
by Associativity: (b.c).a = a.b.c
and theorem 473:
Theorem (473) [serial 1643] used for:
  Associativity: (b.c).a = a.b.c [serial 1641]
 


Theorem (475)                               [serial 1639] 
P [264] << (atCount = c)@now
 and (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE
 and ATR_ENABLE@et >>
S [264] ->
Q [265] << ((((c = (numberof t~time
  in et .. last_at 
  that ((AT
        and ATR_ENABLE))@t )))
 and ((((AT
 and ATR_ENABLE))@last_at
 and not (exists t~time
  in last_at ,, now 
  that ((AT
        and ATR_ENABLE))@t )))
 and ATR_ENABLE@et)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 474:
Theorem (474) [serial 1641] used for:
    normalization of [serial 1639]
 


Theorem (476)                               [serial 1638] 
P [264] << (atCount = c)@now
 and (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE
 and ET_A(last_at) >>
S [264] ->
Q [265] << ((T_COUNT()
 and LAT()
 and ET_A(last_at))) >>
by Substitution of Assertion Labels
and theorem 475:
Theorem (475) [serial 1639] used for:
  substituted Assertions' predicates for  labels  [serial 1638]
 


Theorem (477)                               [serial 1591] 
P [264] << (atCount = c)@now
 and (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE
 and ET_A(last_at) >>
S [264] ->
Q [265] << ATC() >>
by Substitution of Assertion Labels
and theorem 476:
Theorem (476) [serial 1638] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1591]
 


Theorem (478)                               [serial 1583] 
P [264] << (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE
 and ET_A(last_at)
 and (atCount = c)@now >>
S [264] ->
Q [265] << ATC() >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 477:
Theorem (477) [serial 1591] used for:
    normalization of [serial 1583]
 


Theorem (479)                               [serial 1571] 
P [264] << (atCount = c)@now
 and ((AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE
 and ET_A(last_at)) >>
S [264] ->
Q [265] << ATC() >>
by Associativity: (b.c).a = a.b.c
and theorem 478:
Theorem (478) [serial 1583] used for:
  Associativity: (b.c).a = a.b.c [serial 1571]
 


Theorem (480)                               [serial 1560] 
P [264] << (((c = (numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t ))
 and ET_A(last_at)
 and ATR_ENABLE
 and ((AT
 and ATR_ENABLE))@last_at
 and (last_at = now)))
 and (atCount = c)@now >>
S [264] ->
Q [265] << ATC() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 479:
Theorem (479) [serial 1571] used for:
    normalization of [serial 1560]
 


Theorem (481)                               [serial 1659] 
P [264] << (AT
 and ATR_ENABLE)@last_at
 and atCount = c
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE
 and ET_A(last_at) >>
S [264] ->
Q [264] << c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (482)                               [serial 1658] 
P [264] << (AT
 and ATR_ENABLE)@last_at
 and atCount = c
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE
 and ET_A(last_at) >>
S [264] ->
Q [264] << atCount = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t ) >>
by Guided Substitution of Equals
and theorem 481:
Theorem (481) [serial 1659] used for:
  Guided Substitution of Equals
 replacing "atCount" with its = "c" in its postcondition [serial 1658]
 


Theorem (483)                               [serial 1657] 
P [264] << (AT
 and ATR_ENABLE)@last_at
 and atCount = c
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE
 and ET_A(last_at) >>
S [264] ->
Q [264] << (if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t  else 0) = atCount >>
by Conditional True Expression:  b and x=e  iff  b and x=(b??e:g) 
and theorem 482:
Theorem (482) [serial 1658] used for:
   Conditional True Expression:  b and x=e  iff  b and x=(b??e:g)  [serial 1657]
 


Theorem (484)                               [serial 1593] 
P [264] << (atCount = c)@now
 and (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE
 and ET_A(last_at) >>
S [264] ->
Q [264] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t  else 0) = atCount)@now >>
by Assume Present:  P = P@now = P^0 
and theorem 483:
Theorem (483) [serial 1657] used for:
  Assume Present:  P = P@now = P^0  [serial 1593]
 


Theorem (485)                               [serial 1584] 
P [264] << (AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE
 and ET_A(last_at)
 and (atCount = c)@now >>
S [264] ->
Q [264] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t  else 0) = atCount)@now >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 484:
Theorem (484) [serial 1593] used for:
    normalization of [serial 1584]
 


Theorem (486)                               [serial 1573] 
P [264] << (atCount = c)@now
 and ((AT
 and ATR_ENABLE)@last_at
 and c = (numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t )
 and last_at = now
 and ATR_ENABLE
 and ET_A(last_at)) >>
S [264] ->
Q [264] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AT
        and ATR_ENABLE)@t  else 0) = atCount)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 485:
Theorem (485) [serial 1584] used for:
  Associativity: (b.c).a = a.b.c [serial 1573]
 


Theorem (487)                               [serial 1561] 
P [264] << (((c = (numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t ))
 and ET_A(last_at)
 and ATR_ENABLE
 and ((AT
 and ATR_ENABLE))@last_at
 and (last_at = now)))
 and (atCount = c)@now >>
S [264] ->
Q [264] << (atCount = ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t  else 0)))@now >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 486:
Theorem (486) [serial 1573] used for:
    normalization of [serial 1561]
 


Theorem (488)                               [serial 1557] 
P [262] << ((c = (numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t ))
 and ET_A(last_at)
 and ATR_ENABLE
 and ((AT
 and ATR_ENABLE))@last_at
 and (last_at = now)) >>
S [264] atCount!(c)
Q [265] << ATC() >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 480 487:
Theorem (480) [serial 1560] used for:
  applied port output <<pre and (atCount=c)@now>> -> <<post>> [serial 1557]
 
Theorem (487) [serial 1561] used for:
  applied port output <<pre and (atCount=c)@now>> -> <<(atCount=(if ATR_ENABLE then numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t  else 0))@now>> [serial 1557]
 


Theorem (489)                               [serial 1031] 
P [228] << ((ATC()
 and AT@now))
 and ((ATR_ENABLE)@now) >>
S [257] << (((AT
 and ATR_ENABLE))@now
 and ATC()) >>
skip
;
<< ((((c + 1)) = (numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t ))
 and ((AT
 and ATR_ENABLE))@now
 and ET_A(now)) >>
|c,last_at := (c + 1),now|  
;
<< ((c = (numberof t~time
  in et .. now 
  that ((AT
        and ATR_ENABLE))@t ))
 and ET_A(last_at)
 and ATR_ENABLE
 and ((AT
 and ATR_ENABLE))@last_at
 and (last_at = now)) >>
atCount!(c)
<< ATC() >>
Q [226] << ATC() >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 425 426 440 463 488:
Theorem (425) [serial 1553] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 1031]
 
Theorem (426) [serial 1554] used for:
  <<Q2>> -> <<Q>> in sequential composition for [serial 1031]
 
Theorem (440) [serial 1555] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1031]
 
Theorem (463) [serial 1556] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1031]
 
Theorem (488) [serial 1557] used for:
  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 1031]
 


Theorem (490)                               [serial 1019] 
P [209] <<   >>
S [213] ->
Q [209] << AtCounter.imp proof obligations >>
by Initial Thread Obligations
and theorems 301 303 306 309 310 311 314 327 390 392 418 489:
Theorem (301) [serial 1020] used for:
  <<M(wait)>> -> <<I>> from invariant I when complete state wait has Assertion <<M(wait)>> in its definition.
 
Theorem (303) [serial 1021] used for:
  <<M(go)>> -> <<I>> from invariant I when complete state go has Assertion <<M(go)>> in its definition.
 
Theorem (306) [serial 1022] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_wait, <<M(check_wait)>> -> <<e1 or e2 or . . . en>>
 
Theorem (309) [serial 1023] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_go, <<M(check_go)>> -> <<e1 or e2 or . . . en>>
 
Theorem (310) [serial 1024] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (311) [serial 1025] used for:
   <<M(start)>> -> <<M(wait)>> for dc_begin:start-[ ]->wait{};
 
Theorem (314) [serial 1026] used for:
   <<M(wait) and x>> -> <<M(check_wait)>> for dc_was:wait-[x]->check_wait{};
 
Theorem (327) [serial 1027] used for:
   <<M(check_wait) and x>> A <<M(wait)>> for dc_wnen:check_wait-[x]->wait{A};
 
Theorem (390) [serial 1028] used for:
   <<M(check_wait) and x>> A <<M(go)>> for dc_wen:check_wait-[x]->go{A};
 
Theorem (392) [serial 1029] used for:
   <<M(go) and x>> -> <<M(check_go)>> for dc_gas:go-[x]->check_go{};
 
Theorem (418) [serial 1030] used for:
   <<M(check_go) and x>> A <<M(wait)>> for dc_gnen:check_go-[x]->wait{A};
 
Theorem (489) [serial 1031] used for:
   <<M(check_go) and x>> A <<M(go)>> for dc_ggo:check_go-[x]->go{A};
 


Theorem (491)                               [serial 1114] 
P [150] << 0 = c
 and 0.0 = et >>
S [138] ->
Q [138] << 0.0 = et or 
DC() >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (492)                               [serial 1033] 
P [150] << ((et = 0.0)
 and (c = 0)) >>
S [138] ->
Q [138] << (DC() or 
(et = 0.0)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 491:
Theorem (491) [serial 1114] used for:
    normalization of [serial 1033]
 


Theorem (493)                               [serial 1117] 
P [151] << DC() >>
S [138] ->
Q [138] << 0.0 = et or 
DC() >>
by Or Introduction Schema (orcwl):  X->(X or Y)


Theorem (494)                               [serial 1034] 
P [151] << DC() >>
S [138] ->
Q [138] << (DC() or 
(et = 0.0)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 493:
Theorem (493) [serial 1117] used for:
    normalization of [serial 1034]
 


Theorem (495)                               [serial 1122] 
P [152] << AS@now
 and 0 = c
 and 0.0 = et >>
S [152] ->
Q [152] << true >>
by True Conclusion Schema (tc): P->true


Theorem (496)                               [serial 1120] 
P [152] << AS@now
 and 0 = c
 and 0.0 = et >>
S [152] ->
Q [152] << ATR_ENABLE@now or 
not ATR_ENABLE@now >>
by Law of Excluded Middle: P or not P is tautology
and theorem 495:
Theorem (495) [serial 1122] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1120]
 


Theorem (497)                               [serial 1035] 
P [152] << ((et = 0.0)
 and AS@now
 and (c = 0)) >>
S [152] ->
Q [152] << (not (ATR_ENABLE)@now) or 
((ATR_ENABLE)@now) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 496:
Theorem (496) [serial 1120] used for:
    normalization of [serial 1035]
 


Theorem (498)                               [serial 1127] 
P [153] << AS
 and DC() >>
S [153] ->
Q [153] << true >>
by True Conclusion Schema (tc): P->true


Theorem (499)                               [serial 1126] 
P [153] << AS
 and DC() >>
S [153] ->
Q [153] << ATR_ENABLE or 
not ATR_ENABLE >>
by Law of Excluded Middle: P or not P is tautology
and theorem 498:
Theorem (498) [serial 1127] used for:
  Law of Excluded Middle: P or not P is tautology [serial 1126]
 


Theorem (500)                               [serial 1124] 
P [153] << AS@now
 and DC() >>
S [153] ->
Q [153] << ATR_ENABLE@now or 
not ATR_ENABLE@now >>
by Assume Present:  P = P@now = P^0 
and theorem 499:
Theorem (499) [serial 1126] used for:
  Assume Present:  P = P@now = P^0  [serial 1124]
 


Theorem (501)                               [serial 1036] 
P [153] << (DC()
 and AS@now) >>
S [153] ->
Q [153] << (not (ATR_ENABLE)@now) or 
((ATR_ENABLE)@now) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 500:
Theorem (500) [serial 1124] used for:
    normalization of [serial 1036]
 


Theorem (502)                               [serial 1037] 
P [149] << ((et = 0.0)
 and (c = 0)) >>
S [149] ->
Q [149] << true >>
by True Conclusion Schema (tc): P->true


Theorem (503)                               [serial 1129] 
P [149] << 0 = c
 and 0.0 = et >>
S [155] ->
Q [150] << 0 = c
 and 0.0 = et >>
by Identity (id):  P->P is tautology


Theorem (504)                               [serial 1038] 
P [149] << ((et = 0.0)
 and (c = 0)) >>
S [155] ->
Q [150] << ((et = 0.0)
 and (c = 0)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 503:
Theorem (503) [serial 1129] used for:
    normalization of [serial 1038]
 


Theorem (505)                               [serial 1134] 
P [158] << 0 = c
 and 0.0 = et
 and AS@now
 and not (exists u~time
  in tops ,, now 
  that AS@u ) >>
S [157] ->
Q [152] << AS@now
 and 0 = c
 and 0.0 = et >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (506)                               [serial 1132] 
P [158] << AS@now
 and not (exists u~time
  in tops ,, now 
  that AS@u )
 and (0 = c
 and 0.0 = et) >>
S [157] ->
Q [152] << AS@now
 and 0 = c
 and 0.0 = et >>
by Associativity: (b.c).a = a.b.c
and theorem 505:
Theorem (505) [serial 1134] used for:
  Associativity: (b.c).a = a.b.c [serial 1132]
 


Theorem (507)                               [serial 1039] 
P [158] << (((et = 0.0)
 and (c = 0)))
 and AS@now
 and not (exists u~time
  in tops ,, now 
  that AS@u ) >>
S [157] ->
Q [152] << ((et = 0.0)
 and AS@now
 and (c = 0)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 506:
Theorem (506) [serial 1132] used for:
    normalization of [serial 1039]
 


Theorem (508)                               [serial 1146] 
P [160] << AS@now
 and 0 = c
 and 0.0 = et
 and not ATR_ENABLE@now
 and (0 = asCount)@now >>
S [160] ->
Q [150] << 0 = c
 and 0.0 = et >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (509)                               [serial 1144] 
P [160] << not ATR_ENABLE@now
 and (AS@now
 and 0 = c
 and 0.0 = et)
 and (0 = asCount)@now >>
S [160] ->
Q [150] << 0 = c
 and 0.0 = et >>
by Associativity: (b.c).a = a.b.c
and theorem 508:
Theorem (508) [serial 1146] used for:
  Associativity: (b.c).a = a.b.c [serial 1144]
 


Theorem (510)                               [serial 1139] 
P [160] << (0 = asCount)@now
 and (not ATR_ENABLE@now
 and (AS@now
 and 0 = c
 and 0.0 = et)) >>
S [160] ->
Q [150] << 0 = c
 and 0.0 = et >>
by Associativity: (b.c).a = a.b.c
and theorem 509:
Theorem (509) [serial 1144] used for:
  Associativity: (b.c).a = a.b.c [serial 1139]
 


Theorem (511)                               [serial 1136] 
P [160] << ((((et = 0.0)
 and AS@now
 and (c = 0)))
 and (not (ATR_ENABLE)@now))
 and (asCount = 0)@now >>
S [160] ->
Q [150] << ((et = 0.0)
 and (c = 0)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 510:
Theorem (510) [serial 1139] used for:
    normalization of [serial 1136]
 


Theorem (512)                               [serial 1149] 
P [160] << 0 = asCount
 and 0 = c
 and 0.0 = et
 and AS
 and not ATR_ENABLE >>
S [160] ->
Q [160] << 0 = asCount >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (513)                               [serial 1148] 
P [160] << 0 = asCount
 and 0 = c
 and 0.0 = et
 and AS
 and not ATR_ENABLE >>
S [160] ->
Q [160] << (if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t  else 0) = asCount >>
by Conditional False Expression:  not b and x=g  iff  not b and x=(b??e:g) 
and theorem 512:
Theorem (512) [serial 1149] used for:
   Conditional False Expression:  not b and x=g  iff  not b and x=(b??e:g)  [serial 1148]
 


Theorem (514)                               [serial 1147] 
P [160] << AS@now
 and 0 = c
 and 0.0 = et
 and not ATR_ENABLE@now
 and (0 = asCount)@now >>
S [160] ->
Q [160] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t  else 0) = asCount)@now >>
by Assume Present:  P = P@now = P^0 
and theorem 513:
Theorem (513) [serial 1148] used for:
  Assume Present:  P = P@now = P^0  [serial 1147]
 


Theorem (515)                               [serial 1145] 
P [160] << not ATR_ENABLE@now
 and (AS@now
 and 0 = c
 and 0.0 = et)
 and (0 = asCount)@now >>
S [160] ->
Q [160] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t  else 0) = asCount)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 514:
Theorem (514) [serial 1147] used for:
  Associativity: (b.c).a = a.b.c [serial 1145]
 


Theorem (516)                               [serial 1141] 
P [160] << (0 = asCount)@now
 and (not ATR_ENABLE@now
 and (AS@now
 and 0 = c
 and 0.0 = et)) >>
S [160] ->
Q [160] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t  else 0) = asCount)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 515:
Theorem (515) [serial 1145] used for:
  Associativity: (b.c).a = a.b.c [serial 1141]
 


Theorem (517)                               [serial 1137] 
P [160] << ((((et = 0.0)
 and AS@now
 and (c = 0)))
 and (not (ATR_ENABLE)@now))
 and (asCount = 0)@now >>
S [160] ->
Q [160] << (asCount = ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that ((AS
        and ATR_ENABLE))@t  else 0)))@now >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 516:
Theorem (516) [serial 1141] used for:
    normalization of [serial 1137]
 


Theorem (518)                               [serial 1135] 
P [152] << (((et = 0.0)
 and AS@now
 and (c = 0)))
 and (not (ATR_ENABLE)@now) >>
S [160] asCount!(0)
Q [150] << ((et = 0.0)
 and (c = 0)) >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 511 517:
Theorem (511) [serial 1136] used for:
  applied port output <<pre and (asCount=0)@now>> -> <<post>> [serial 1135]
 
Theorem (517) [serial 1137] used for:
  applied port output <<pre and (asCount=0)@now>> -> <<(asCount=(if ATR_ENABLE then numberof t~time
  in et .. now 
  that ((AS
        and ATR_ENABLE))@t  else 0))@now>> [serial 1135]
 


Theorem (519)                               [serial 1040] 
P [152] << (((et = 0.0)
 and AS@now
 and (c = 0)))
 and (not (ATR_ENABLE)@now) >>
S [160] asCount!(0)
Q [150] << ((et = 0.0)
 and (c = 0)) >>
by Introduction of Existential Quantification (bl.aanone)
and theorem 518:
Theorem (518) [serial 1135] used for:
  as <<P>> S <<Q>> in <<P>> { S } <<Q>> [serial 1040]
 


Theorem (520)                               [serial 1205] 
P [152] << 0 = c
 and 0.0 = et
 and AS
 and ATR_ENABLE >>
S [152] ->
Q [163] << AS
 and ATR_ENABLE >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (521)                               [serial 1185] 
P [152] << AS@now
 and ATR_ENABLE@now
 and 0 = c
 and 0.0 = et >>
S [152] ->
Q [163] << (AS
 and ATR_ENABLE)@now >>
by Assume Present:  P = P@now = P^0 
and theorem 520:
Theorem (520) [serial 1205] used for:
  Assume Present:  P = P@now = P^0  [serial 1185]
 


Theorem (522)                               [serial 1179] 
P [152] << AS@now
 and 0 = c
 and 0.0 = et
 and ATR_ENABLE@now >>
S [152] ->
Q [163] << (AS
 and ATR_ENABLE)@now >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 521:
Theorem (521) [serial 1185] used for:
    normalization of [serial 1179]
 


Theorem (523)                               [serial 1164] 
P [152] << ATR_ENABLE@now
 and (AS@now
 and 0 = c
 and 0.0 = et) >>
S [152] ->
Q [163] << (AS
 and ATR_ENABLE)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 522:
Theorem (522) [serial 1179] used for:
  Associativity: (b.c).a = a.b.c [serial 1164]
 


Theorem (524)                               [serial 1150] 
P [152] << (((et = 0.0)
 and AS@now
 and (c = 0)))
 and ((ATR_ENABLE)@now) >>
S [152] ->
Q [163] << ((AS
 and ATR_ENABLE))@now >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 523:
Theorem (523) [serial 1164] used for:
    normalization of [serial 1150]
 


Theorem (525)                               [serial 1151] 
P [168] << DC() >>
S [151] ->
Q [151] << DC() >>
by Identity (id):  P->P is tautology


Theorem (526)                               [serial 1201] 
P [163] << AS
 and ATR_ENABLE >>
S [164] ->
Q [165] << AS
 and ATR_ENABLE >>
by Identity (id):  P->P is tautology


Theorem (527)                               [serial 1200] 
P [163] << AS
 and ATR_ENABLE >>
S [164] ->
Q [165] << AS
 and ATR_ENABLE
 and ATR_ENABLE >>
by Law of And-Simplification:  P and P is P
and theorem 526:
Theorem (526) [serial 1201] used for:
  Law of And-Simplification:  P and P is P [serial 1200]
 


Theorem (528)                               [serial 1199] 
P [163] << AS
 and ATR_ENABLE >>
S [164] ->
Q [165] << ATR_ENABLE
 and (AS
 and ATR_ENABLE) >>
by Associativity: (b.c).a = a.b.c
and theorem 527:
Theorem (527) [serial 1200] used for:
  Associativity: (b.c).a = a.b.c [serial 1199]
 


Theorem (529)                               [serial 1197] 
P [163] << AS@now
 and ATR_ENABLE@now >>
S [164] ->
Q [165] << ATR_ENABLE
 and (AS@now
 and ATR_ENABLE@now) >>
by Assume Present:  P = P@now = P^0 
and theorem 528:
Theorem (528) [serial 1199] used for:
  Assume Present:  P = P@now = P^0  [serial 1197]
 


Theorem (530)                               [serial 1195] 
P [163] << (AS@now
 and ATR_ENABLE@now) >>
S [164] ->
Q [165] << (AS@now
 and ATR_ENABLE@now)
 and ATR_ENABLE >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 529:
Theorem (529) [serial 1197] used for:
    normalization of [serial 1195]
 


Theorem (531)                               [serial 1182] 
P [163] << (AS
 and ATR_ENABLE)@now >>
S [164] ->
Q [165] << (AS
 and ATR_ENABLE)@now
 and ATR_ENABLE >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 530:
Theorem (530) [serial 1195] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 1182]
 


Theorem (532)                               [serial 1171] 
P [163] << (AS
 and ATR_ENABLE)@now >>
S [164] ->
Q [165] << (AS
 and ATR_ENABLE)@now
 and ATR_ENABLE
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 531:
Theorem (531) [serial 1182] used for:
  Law of And-Simplification:  P and true is P [serial 1171]
 


Theorem (533)                               [serial 1161] 
P [163] << ((AS
 and ATR_ENABLE))@now >>
S [164] ->
Q [165] << ((true)
 and ((AS
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 532:
Theorem (532) [serial 1171] used for:
    normalization of [serial 1161]
 


Theorem (534)                               [serial 1159] 
P [163] << ((AS
 and ATR_ENABLE))@now >>
S [164] ->
Q [165] << ((true)
 and (true)
 and ((AS
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
by Law of And-Simplification:  P and P is P
and theorem 533:
Theorem (533) [serial 1161] used for:
  Law of And-Simplification:  P and P is P [serial 1159]
 


Theorem (535)                               [serial 1157] 
P [163] << ((AS
 and ATR_ENABLE))@now >>
S [164] ->
Q [165] << ((true)
 and (true)
 and (true)
 and ((AS
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
by Law of And-Simplification:  P and P is P
and theorem 534:
Theorem (534) [serial 1159] used for:
  Law of And-Simplification:  P and P is P [serial 1157]
 


Theorem (536)                               [serial 1204] 
P [163] << AS
 and ATR_ENABLE >>
S [164] ->
Q [165] << AS
 and ATR_ENABLE >>
by Identity (id):  P->P is tautology


Theorem (537)                               [serial 1203] 
P [163] << AS
 and ATR_ENABLE >>
S [164] ->
Q [165] << AS
 and ATR_ENABLE
 and ATR_ENABLE >>
by Law of And-Simplification:  P and P is P
and theorem 536:
Theorem (536) [serial 1204] used for:
  Law of And-Simplification:  P and P is P [serial 1203]
 


Theorem (538)                               [serial 1202] 
P [163] << AS
 and ATR_ENABLE >>
S [164] ->
Q [165] << ATR_ENABLE
 and (AS
 and ATR_ENABLE) >>
by Associativity: (b.c).a = a.b.c
and theorem 537:
Theorem (537) [serial 1203] used for:
  Associativity: (b.c).a = a.b.c [serial 1202]
 


Theorem (539)                               [serial 1183] 
P [163] << (AS
 and ATR_ENABLE)@now >>
S [164] ->
Q [165] << (AS
 and ATR_ENABLE)@now
 and ATR_ENABLE >>
by Assume Present:  P = P@now = P^0 
and theorem 538:
Theorem (538) [serial 1202] used for:
  Assume Present:  P = P@now = P^0  [serial 1183]
 


Theorem (540)                               [serial 1173] 
P [163] << (AS
 and ATR_ENABLE)@now >>
S [164] ->
Q [165] << (AS
 and ATR_ENABLE)@now
 and ATR_ENABLE
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 539:
Theorem (539) [serial 1183] used for:
  Law of And-Simplification:  P and true is P [serial 1173]
 


Theorem (541)                               [serial 1162] 
P [163] << ((AS
 and ATR_ENABLE))@now >>
S [164] ->
Q [165] << ((true)
 and ((AS
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 540:
Theorem (540) [serial 1173] used for:
    normalization of [serial 1162]
 


Theorem (542)                               [serial 1160] 
P [163] << ((AS
 and ATR_ENABLE))@now >>
S [164] ->
Q [165] << ((true)
 and (true)
 and ((AS
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
by Law of And-Simplification:  P and P is P
and theorem 541:
Theorem (541) [serial 1162] used for:
  Law of And-Simplification:  P and P is P [serial 1160]
 


Theorem (543)                               [serial 1158] 
P [163] << ((AS
 and ATR_ENABLE))@now >>
S [164] ->
Q [165] << ((true)
 and (true)
 and (true)
 and ((AS
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
by Law of And-Simplification:  P and P is P
and theorem 542:
Theorem (542) [serial 1160] used for:
  Law of And-Simplification:  P and P is P [serial 1158]
 


Theorem (544)                               [serial 1154] 
P [163] << ((AS
 and ATR_ENABLE))@now >>
S [164] ->
Q [165] << ((1 = 1)
 and (now = now)
 and (now = now)
 and ((AS
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
by Equality Law (idistr):  a=a <-> true
and theorems 535 543:
Theorem (535) [serial 1157] used for:
  Equality Law (idistr):  a=a <-> true [serial 1154]
 
Theorem (543) [serial 1158] used for:
  Equality Law (idistr):  a=a <-> true [serial 1154]
 


Theorem (545)                               [serial 1152] 
P [163] << ((AS
 and ATR_ENABLE))@now >>
S [164] |c,last_as,et := 1,now,now|  
Q [165] << ((c = 1)
 and (last_as = now)
 and (et = now)
 and ((AS
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
by Simultaneous Assignment
and theorem 544:
Theorem (544) [serial 1154] used for:
  applied wp for simultaneous assignment [serial 1152]
 


Theorem (546)                               [serial 1220] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << (AS
 and ATR_ENABLE)@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (547)                               [serial 1219] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << 1 = (numberof t~time
  in now .. now 
  that (AS
        and ATR_ENABLE)@t ) >>
by First Count Law:  x@now iff 1=numberof t:time in now..now that x@t
and theorem 546:
Theorem (546) [serial 1220] used for:
  First Count Law:  x@now iff 1=numberof t:time in now..now that x@t [serial 1219]
 


Theorem (548)                               [serial 1218] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << 1 = (numberof t~time
  in now .. last_as 
  that (AS
        and ATR_ENABLE)@t ) >>
by Guided Substitution of Equals
and theorem 547:
Theorem (547) [serial 1219] used for:
  Guided Substitution of Equals
 replacing "last_as" with its = "now" in its postcondition [serial 1218]
 


Theorem (549)                               [serial 1217] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << 1 = (numberof t~time
  in et .. last_as 
  that (AS
        and ATR_ENABLE)@t ) >>
by Guided Substitution of Equals
and theorem 548:
Theorem (548) [serial 1218] used for:
  Guided Substitution of Equals
 replacing "et" with its = "now" in its postcondition [serial 1217]
 


Theorem (550)                               [serial 1215] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << c = (numberof t~time
  in et .. last_as 
  that (AS
        and ATR_ENABLE)@t ) >>
by Guided Substitution of Equals
and theorem 549:
Theorem (549) [serial 1217] used for:
  Guided Substitution of Equals
 replacing "c" with its = "1" in its postcondition [serial 1215]
 


Theorem (551)                               [serial 1213] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << ((c = (numberof t~time
  in et .. last_as 
  that ((AS
        and ATR_ENABLE))@t ))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 550:
Theorem (550) [serial 1215] used for:
    normalization of [serial 1213]
 


Theorem (552)                               [serial 1210] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << DUR_COUNT() >>
by Substitution of Assertion Labels
and theorem 551:
Theorem (551) [serial 1213] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1210]
 


Theorem (553)                               [serial 1224] 
P [167] << AS@now
 and ATR_ENABLE@now
 and (1 = asCount)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << ATR_ENABLE@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (554)                               [serial 1223] 
P [167] << (1 = asCount)@now
 and (AS@now
 and ATR_ENABLE@now)
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << ATR_ENABLE@now >>
by Associativity: (b.c).a = a.b.c
and theorem 553:
Theorem (553) [serial 1224] used for:
  Associativity: (b.c).a = a.b.c [serial 1223]
 


Theorem (555)                               [serial 1222] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << ATR_ENABLE@now >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 554:
Theorem (554) [serial 1223] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 1222]
 


Theorem (556)                               [serial 1221] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << ATR_ENABLE@et >>
by Guided Substitution of Equals
and theorem 555:
Theorem (555) [serial 1222] used for:
  Guided Substitution of Equals
 replacing "et" with its = "now" in its postcondition [serial 1221]
 


Theorem (557)                               [serial 1211] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << E(last_as) >>
by Substitution of Assertion Labels
and theorem 556:
Theorem (556) [serial 1221] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1211]
 


Theorem (558)                               [serial 1236] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << (AS
 and ATR_ENABLE)@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (559)                               [serial 1234] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << ((AS
 and ATR_ENABLE)@now) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 558:
Theorem (558) [serial 1236] used for:
    normalization of [serial 1234]
 


Theorem (560)                               [serial 1232] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << (AS
 and ATR_ENABLE)@now
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 559:
Theorem (559) [serial 1234] used for:
  Law of And-Simplification:  P and true is P [serial 1232]
 


Theorem (561)                               [serial 1230] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << (AS
 and ATR_ENABLE)@now
 and not (false) >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 560:
Theorem (560) [serial 1232] used for:
    normalization of [serial 1230]
 


Theorem (562)                               [serial 1229] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << (AS
 and ATR_ENABLE)@now
 and not (exists t~time
  in now ,, now 
  that (AS
        and ATR_ENABLE)@t ) >>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 561:
Theorem (561) [serial 1230] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 1229]
 


Theorem (563)                               [serial 1227] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << (AS
 and ATR_ENABLE)@last_as
 and not (exists t~time
  in last_as ,, now 
  that (AS
        and ATR_ENABLE)@t ) >>
by Guided Substitution of Equals
and theorem 562:
Theorem (562) [serial 1229] used for:
  Guided Substitution of Equals
 replacing "last_as" with its = "now" in its postcondition [serial 1227]
 


Theorem (564)                               [serial 1225] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << ((((AS
 and ATR_ENABLE))@last_as
 and not (exists t~time
  in last_as ,, now 
  that ((AS
        and ATR_ENABLE))@t ))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 563:
Theorem (563) [serial 1227] used for:
    normalization of [serial 1225]
 


Theorem (565)                               [serial 1212] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [135] << LAS() >>
by Substitution of Assertion Labels
and theorem 564:
Theorem (564) [serial 1225] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1212]
 


Theorem (566)                               [serial 1208] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [168] << DUR_COUNT()
 and E(last_as)
 and LAS() >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 552 557 565:
Theorem (552) [serial 1210] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1208]
 
Theorem (557) [serial 1211] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1208]
 
Theorem (565) [serial 1212] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1208]
 


Theorem (567)                               [serial 1206] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [168] << ((DUR_COUNT()
 and LAS()
 and E(last_as))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 566:
Theorem (566) [serial 1208] used for:
    normalization of [serial 1206]
 


Theorem (568)                               [serial 1187] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [168] << DC() >>
by Substitution of Assertion Labels
and theorem 567:
Theorem (567) [serial 1206] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1187]
 


Theorem (569)                               [serial 1180] 
P [167] << (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE
 and (1 = asCount)@now >>
S [167] ->
Q [168] << DC() >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 568:
Theorem (568) [serial 1187] used for:
    normalization of [serial 1180]
 


Theorem (570)                               [serial 1167] 
P [167] << (1 = asCount)@now
 and ((AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE) >>
S [167] ->
Q [168] << DC() >>
by Associativity: (b.c).a = a.b.c
and theorem 569:
Theorem (569) [serial 1180] used for:
  Associativity: (b.c).a = a.b.c [serial 1167]
 


Theorem (571)                               [serial 1155] 
P [167] << (((c = 1)
 and (last_as = now)
 and (et = now)
 and ((AS
 and ATR_ENABLE))@now
 and ATR_ENABLE))
 and (asCount = 1)@now >>
S [167] ->
Q [168] << DC() >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 570:
Theorem (570) [serial 1167] used for:
    normalization of [serial 1155]
 


Theorem (572)                               [serial 1244] 
P [167] << AS
 and ATR_ENABLE
 and 1 = asCount
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [167] << AS
 and ATR_ENABLE >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (573)                               [serial 1243] 
P [167] << 1 = asCount
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE
 and (AS
 and ATR_ENABLE) >>
S [167] ->
Q [167] << AS
 and ATR_ENABLE >>
by Associativity: (b.c).a = a.b.c
and theorem 572:
Theorem (572) [serial 1244] used for:
  Associativity: (b.c).a = a.b.c [serial 1243]
 


Theorem (574)                               [serial 1242] 
P [167] << 1 = asCount
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE
 and (AS
 and ATR_ENABLE) >>
S [167] ->
Q [167] << (AS
 and ATR_ENABLE)@now >>
by Assume Present:  P = P@now = P^0 
and theorem 573:
Theorem (573) [serial 1243] used for:
  Assume Present:  P = P@now = P^0  [serial 1242]
 


Theorem (575)                               [serial 1241] 
P [167] << 1 = asCount
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE
 and (AS
 and ATR_ENABLE) >>
S [167] ->
Q [167] << 1 = (numberof t~time
  in now .. now 
  that (AS
        and ATR_ENABLE)@t ) >>
by First Count Law:  x@now iff 1=numberof t:time in now..now that x@t
and theorem 574:
Theorem (574) [serial 1242] used for:
  First Count Law:  x@now iff 1=numberof t:time in now..now that x@t [serial 1241]
 


Theorem (576)                               [serial 1240] 
P [167] << 1 = asCount
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE
 and (AS
 and ATR_ENABLE) >>
S [167] ->
Q [167] << asCount = (numberof t~time
  in now .. now 
  that (AS
        and ATR_ENABLE)@t ) >>
by Guided Substitution of Equals
and theorem 575:
Theorem (575) [serial 1241] used for:
  Guided Substitution of Equals
 replacing "asCount" with its = "1" in its postcondition [serial 1240]
 


Theorem (577)                               [serial 1239] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [167] << (asCount = (numberof t~time
  in now .. now 
  that (AS
        and ATR_ENABLE)@t ))@now >>
by Assume Present:  P = P@now = P^0 
and theorem 576:
Theorem (576) [serial 1240] used for:
  Assume Present:  P = P@now = P^0  [serial 1239]
 


Theorem (578)                               [serial 1238] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [167] << (asCount = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ))@now >>
by Guided Substitution of Equals
and theorem 577:
Theorem (577) [serial 1239] used for:
  Guided Substitution of Equals
 replacing "et" with its = "now" in its postcondition [serial 1238]
 


Theorem (579)                               [serial 1189] 
P [167] << (1 = asCount)@now
 and (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE >>
S [167] ->
Q [167] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t  else 0) = asCount)@now >>
by Conditional True Expression:  b and x=e  iff  b and x=(b??e:g) 
and theorem 578:
Theorem (578) [serial 1238] used for:
   Conditional True Expression:  b and x=e  iff  b and x=(b??e:g)  [serial 1189]
 


Theorem (580)                               [serial 1181] 
P [167] << (AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE
 and (1 = asCount)@now >>
S [167] ->
Q [167] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t  else 0) = asCount)@now >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 579:
Theorem (579) [serial 1189] used for:
    normalization of [serial 1181]
 


Theorem (581)                               [serial 1169] 
P [167] << (1 = asCount)@now
 and ((AS
 and ATR_ENABLE)@now
 and 1 = c
 and et = now
 and last_as = now
 and ATR_ENABLE) >>
S [167] ->
Q [167] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t  else 0) = asCount)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 580:
Theorem (580) [serial 1181] used for:
  Associativity: (b.c).a = a.b.c [serial 1169]
 


Theorem (582)                               [serial 1156] 
P [167] << (((c = 1)
 and (last_as = now)
 and (et = now)
 and ((AS
 and ATR_ENABLE))@now
 and ATR_ENABLE))
 and (asCount = 1)@now >>
S [167] ->
Q [167] << (asCount = ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that ((AS
        and ATR_ENABLE))@t  else 0)))@now >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 581:
Theorem (581) [serial 1169] used for:
    normalization of [serial 1156]
 


Theorem (583)                               [serial 1153] 
P [165] << ((c = 1)
 and (last_as = now)
 and (et = now)
 and ((AS
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
S [167] asCount!(1)
Q [168] << DC() >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 571 582:
Theorem (571) [serial 1155] used for:
  applied port output <<pre and (asCount=1)@now>> -> <<post>> [serial 1153]
 
Theorem (582) [serial 1156] used for:
  applied port output <<pre and (asCount=1)@now>> -> <<(asCount=(if ATR_ENABLE then numberof t~time
  in et .. now 
  that ((AS
        and ATR_ENABLE))@t  else 0))@now>> [serial 1153]
 


Theorem (584)                               [serial 1041] 
P [152] << (((et = 0.0)
 and AS@now
 and (c = 0)))
 and ((ATR_ENABLE)@now) >>
S [163] << ((AS
 and ATR_ENABLE))@now >>
|c,last_as,et := 1,now,now|  
<< ((c = 1)
 and (last_as = now)
 and (et = now)
 and ((AS
 and ATR_ENABLE))@now
 and ATR_ENABLE) >>
;
asCount!(1)
<< DC() >>
Q [151] << DC() >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 524 525 545 583:
Theorem (524) [serial 1150] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 1041]
 
Theorem (525) [serial 1151] used for:
  <<Q1>> -> <<Q>> in sequential composition for [serial 1041]
 
Theorem (545) [serial 1152] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1041]
 
Theorem (583) [serial 1153] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1041]
 


Theorem (585)                               [serial 1246] 
P [171] << AS@now
 and DC()
 and not (exists u~time
  in tops ,, now 
  that AS@u ) >>
S [170] ->
Q [153] << AS@now
 and DC() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (586)                               [serial 1042] 
P [171] << (DC())
 and AS@now
 and not (exists u~time
  in tops ,, now 
  that AS@u ) >>
S [170] ->
Q [153] << (DC()
 and AS@now) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 585:
Theorem (585) [serial 1246] used for:
    normalization of [serial 1042]
 


Theorem (587)                               [serial 1277] 
P [153] << AS
 and DC()
 and not ATR_ENABLE >>
S [174] ->
Q [176] << not ATR_ENABLE >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (588)                               [serial 1269] 
P [153] << AS@now
 and DC()
 and not ATR_ENABLE@now >>
S [174] ->
Q [176] << not ATR_ENABLE >>
by Assume Present:  P = P@now = P^0 
and theorem 587:
Theorem (587) [serial 1277] used for:
  Assume Present:  P = P@now = P^0  [serial 1269]
 


Theorem (589)                               [serial 1262] 
P [153] << AS@now
 and DC()
 and not ATR_ENABLE@now >>
S [174] ->
Q [176] << (not ATR_ENABLE) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 588:
Theorem (588) [serial 1269] used for:
    normalization of [serial 1262]
 


Theorem (590)                               [serial 1260] 
P [153] << not ATR_ENABLE@now
 and (AS@now
 and DC()) >>
S [174] ->
Q [176] << (not ATR_ENABLE) >>
by Associativity: (b.c).a = a.b.c
and theorem 589:
Theorem (589) [serial 1262] used for:
  Associativity: (b.c).a = a.b.c [serial 1260]
 


Theorem (591)                               [serial 1256] 
P [153] << not ATR_ENABLE@now
 and (AS@now
 and DC()) >>
S [174] ->
Q [176] << true
 and true
 and not ATR_ENABLE >>
by Law of And-Simplification:  P and true is P
and theorem 590:
Theorem (590) [serial 1260] used for:
  Law of And-Simplification:  P and true is P [serial 1256]
 


Theorem (592)                               [serial 1278] 
P [153] << AS
 and DC()
 and not ATR_ENABLE >>
S [174] ->
Q [176] << not ATR_ENABLE >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (593)                               [serial 1271] 
P [153] << AS@now
 and DC()
 and not ATR_ENABLE@now >>
S [174] ->
Q [176] << not ATR_ENABLE >>
by Assume Present:  P = P@now = P^0 
and theorem 592:
Theorem (592) [serial 1278] used for:
  Assume Present:  P = P@now = P^0  [serial 1271]
 


Theorem (594)                               [serial 1263] 
P [153] << AS@now
 and DC()
 and not ATR_ENABLE@now >>
S [174] ->
Q [176] << (not ATR_ENABLE) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 593:
Theorem (593) [serial 1271] used for:
    normalization of [serial 1263]
 


Theorem (595)                               [serial 1261] 
P [153] << not ATR_ENABLE@now
 and (AS@now
 and DC()) >>
S [174] ->
Q [176] << (not ATR_ENABLE) >>
by Associativity: (b.c).a = a.b.c
and theorem 594:
Theorem (594) [serial 1263] used for:
  Associativity: (b.c).a = a.b.c [serial 1261]
 


Theorem (596)                               [serial 1257] 
P [153] << not ATR_ENABLE@now
 and (AS@now
 and DC()) >>
S [174] ->
Q [176] << true
 and true
 and not ATR_ENABLE >>
by Law of And-Simplification:  P and true is P
and theorem 595:
Theorem (595) [serial 1261] used for:
  Law of And-Simplification:  P and true is P [serial 1257]
 


Theorem (597)                               [serial 1253] 
P [153] << not ATR_ENABLE@now
 and (AS@now
 and DC()) >>
S [174] ->
Q [176] << 0 = 0
 and 0.0 = 0.0
 and not ATR_ENABLE >>
by Equality Law (idistr):  a=a <-> true
and theorems 591 596:
Theorem (591) [serial 1256] used for:
  Equality Law (idistr):  a=a <-> true [serial 1253]
 
Theorem (596) [serial 1257] used for:
  Equality Law (idistr):  a=a <-> true [serial 1253]
 


Theorem (598)                               [serial 1251] 
P [153] << not ATR_ENABLE@now
 and (AS@now
 and DC()) >>
S [174] |c,et := 0,0.0|  
Q [176] << 0 = c
 and 0.0 = et
 and not ATR_ENABLE >>
by Simultaneous Assignment
and theorem 597:
Theorem (597) [serial 1253] used for:
  applied wp for simultaneous assignment [serial 1251]
 


Theorem (599)                               [serial 1265] 
P [177] << (0 = asCount)@now
 and 0 = c
 and 0.0 = et
 and not ATR_ENABLE >>
S [177] ->
Q [150] << 0 = c
 and 0.0 = et >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (600)                               [serial 1258] 
P [177] << 0 = c
 and 0.0 = et
 and not ATR_ENABLE
 and (asCount = 0)@now >>
S [177] ->
Q [150] << 0 = c
 and 0.0 = et >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 599:
Theorem (599) [serial 1265] used for:
    normalization of [serial 1258]
 


Theorem (601)                               [serial 1254] 
P [177] << (0 = c
 and 0.0 = et
 and not ATR_ENABLE)
 and (asCount = 0)@now >>
S [177] ->
Q [150] << 0 = c
 and 0.0 = et >>
by Associativity: (b.c).a = a.b.c
and theorem 600:
Theorem (600) [serial 1258] used for:
  Associativity: (b.c).a = a.b.c [serial 1254]
 


Theorem (602)                               [serial 1279] 
P [177] << 0 = asCount
 and 0 = c
 and 0.0 = et
 and not ATR_ENABLE >>
S [177] ->
Q [177] << 0 = asCount >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (603)                               [serial 1276] 
P [177] << 0 = asCount
 and 0 = c
 and 0.0 = et
 and not ATR_ENABLE >>
S [177] ->
Q [177] << (if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t  else 0) = asCount >>
by Conditional False Expression:  not b and x=g  iff  not b and x=(b??e:g) 
and theorem 602:
Theorem (602) [serial 1279] used for:
   Conditional False Expression:  not b and x=g  iff  not b and x=(b??e:g)  [serial 1276]
 


Theorem (604)                               [serial 1267] 
P [177] << (0 = asCount)@now
 and 0 = c
 and 0.0 = et
 and not ATR_ENABLE >>
S [177] ->
Q [177] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t  else 0) = asCount)@now >>
by Assume Present:  P = P@now = P^0 
and theorem 603:
Theorem (603) [serial 1276] used for:
  Assume Present:  P = P@now = P^0  [serial 1267]
 


Theorem (605)                               [serial 1259] 
P [177] << 0 = c
 and 0.0 = et
 and not ATR_ENABLE
 and (asCount = 0)@now >>
S [177] ->
Q [177] << (asCount = ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that ((AS
        and ATR_ENABLE))@t  else 0)))@now >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 604:
Theorem (604) [serial 1267] used for:
    normalization of [serial 1259]
 


Theorem (606)                               [serial 1255] 
P [177] << (0 = c
 and 0.0 = et
 and not ATR_ENABLE)
 and (asCount = 0)@now >>
S [177] ->
Q [177] << (asCount = ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that ((AS
        and ATR_ENABLE))@t  else 0)))@now >>
by Associativity: (b.c).a = a.b.c
and theorem 605:
Theorem (605) [serial 1259] used for:
  Associativity: (b.c).a = a.b.c [serial 1255]
 


Theorem (607)                               [serial 1252] 
P [176] << 0 = c
 and 0.0 = et
 and not ATR_ENABLE >>
S [177] asCount!(0)
Q [150] << 0 = c
 and 0.0 = et >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 601 606:
Theorem (601) [serial 1254] used for:
  applied port output <<pre and (asCount=0)@now>> -> <<post>> [serial 1252]
 
Theorem (606) [serial 1255] used for:
  applied port output <<pre and (asCount=0)@now>> -> <<(asCount=(if ATR_ENABLE then numberof t~time
  in et .. now 
  that ((AS
        and ATR_ENABLE))@t  else 0))@now>> [serial 1252]
 


Theorem (608)                               [serial 1249] 
P [153] << not ATR_ENABLE@now
 and (AS@now
 and DC()) >>
S [174] |c,et := 0,0.0|  
;
<< 0 = c
 and 0.0 = et
 and not ATR_ENABLE >>
asCount!(0)
Q [150] << 0 = c
 and 0.0 = et >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 598 607:
Theorem (598) [serial 1251] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1249]
 
Theorem (607) [serial 1252] used for:
  <<Q0 and P1>> S1 <<Q1>> in sequential composition for [serial 1249]
 


Theorem (609)                               [serial 1043] 
P [153] << ((DC()
 and AS@now))
 and (not (ATR_ENABLE)@now) >>
S [174] |c,et := 0,0.0|  
;
<< ((c = 0)
 and (et = 0.0)
 and not ATR_ENABLE) >>
asCount!(0)
Q [150] << ((et = 0.0)
 and (c = 0)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 608:
Theorem (608) [serial 1249] used for:
    normalization of [serial 1043]
 


Theorem (610)                               [serial 1299] 
P [153] << AS@now
 and DC()
 and ATR_ENABLE@now >>
S [153] ->
Q [182] << AS@now
 and ATR_ENABLE@now
 and DC() >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (611)                               [serial 1298] 
P [153] << ATR_ENABLE@now
 and (AS@now
 and DC()) >>
S [153] ->
Q [182] << (AS@now
 and ATR_ENABLE@now)
 and DC() >>
by Associativity: (b.c).a = a.b.c
and theorem 610:
Theorem (610) [serial 1299] used for:
  Associativity: (b.c).a = a.b.c [serial 1298]
 


Theorem (612)                               [serial 1286] 
P [153] << ATR_ENABLE@now
 and (AS@now
 and DC()) >>
S [153] ->
Q [182] << (AS
 and ATR_ENABLE)@now
 and DC() >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 611:
Theorem (611) [serial 1298] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 1286]
 


Theorem (613)                               [serial 1280] 
P [153] << ((DC()
 and AS@now))
 and ((ATR_ENABLE)@now) >>
S [153] ->
Q [182] << (((AS
 and ATR_ENABLE))@now
 and DC()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 612:
Theorem (612) [serial 1286] used for:
    normalization of [serial 1280]
 


Theorem (614)                               [serial 1281] 
P [190] << DC() >>
S [151] ->
Q [151] << DC() >>
by Identity (id):  P->P is tautology


Theorem (615)                               [serial 1313] 
P [182] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@last_as
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c)
 and not (exists t~time
  in last_as ,, now 
  that (AS
        and ATR_ENABLE)@t ) >>
S [183] ->
Q [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (616)                               [serial 1311] 
P [182] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@last_as
 and (AS
 and ATR_ENABLE)@now
 and (1 + c) = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and not (exists t~time
  in last_as ,, now 
  that (AS
        and ATR_ENABLE)@t ) >>
S [183] ->
Q [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 615:
Theorem (615) [serial 1313] used for:
    normalization of [serial 1311]
 


Theorem (617)                               [serial 1309] 
P [182] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@last_as
 and (AS
 and ATR_ENABLE)@now
 and c = (numberof t~time
  in et .. last_as 
  that (AS
        and ATR_ENABLE)@t )
 and not (exists t~time
  in last_as ,, now 
  that (AS
        and ATR_ENABLE)@t ) >>
S [183] ->
Q [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
by Extend Count:   x=(numberof t:time in t0..t1 that p@t) 
   p@t2    /\  not (exists t:time in t1,,t2 that p@t) 
   --------------------------------------------------- 
   (1+x)=(numberof t:time in t0..t2 that p@t) 
and theorem 616:
Theorem (616) [serial 1311] used for:
  Extend Count:   x=(numberof t:time in t0..t1 that p@t) 
   p@t2    /\  not (exists t:time in t1,,t2 that p@t) 
   --------------------------------------------------- 
   (1+x)=(numberof t:time in t0..t2 that p@t)  [serial 1309]
 


Theorem (618)                               [serial 1307] 
P [182] << (AS
 and ATR_ENABLE)@last_as
 and not (exists t~time
  in last_as ,, now 
  that (AS
        and ATR_ENABLE)@t )
 and ATR_ENABLE@et
 and c = (numberof t~time
  in et .. last_as 
  that (AS
        and ATR_ENABLE)@t )
 and (AS
 and ATR_ENABLE)@now >>
S [183] ->
Q [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 617:
Theorem (617) [serial 1309] used for:
    normalization of [serial 1307]
 


Theorem (619)                               [serial 1306] 
P [182] << ATR_ENABLE@et
 and c = (numberof t~time
  in et .. last_as 
  that (AS
        and ATR_ENABLE)@t )
 and ((AS
 and ATR_ENABLE)@last_as
 and not (exists t~time
  in last_as ,, now 
  that (AS
        and ATR_ENABLE)@t ))
 and (AS
 and ATR_ENABLE)@now >>
S [183] ->
Q [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
by Associativity: (b.c).a = a.b.c
and theorem 618:
Theorem (618) [serial 1307] used for:
  Associativity: (b.c).a = a.b.c [serial 1306]
 


Theorem (620)                               [serial 1304] 
P [182] << (AS
 and ATR_ENABLE)@now
 and (ATR_ENABLE@et
 and c = (numberof t~time
  in et .. last_as 
  that (AS
        and ATR_ENABLE)@t )
 and ((AS
 and ATR_ENABLE)@last_as
 and not (exists t~time
  in last_as ,, now 
  that (AS
        and ATR_ENABLE)@t ))) >>
S [183] ->
Q [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
by Associativity: (b.c).a = a.b.c
and theorem 619:
Theorem (619) [serial 1306] used for:
  Associativity: (b.c).a = a.b.c [serial 1304]
 


Theorem (621)                               [serial 1302] 
P [182] << (AS
 and ATR_ENABLE)@now
 and ((((c = (numberof t~time
  in et .. last_as 
  that ((AS
        and ATR_ENABLE))@t )))
 and ((((AS
 and ATR_ENABLE))@last_as
 and not (exists t~time
  in last_as ,, now 
  that ((AS
        and ATR_ENABLE))@t )))
 and ATR_ENABLE@et)) >>
S [183] ->
Q [184] << (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c)
 and ATR_ENABLE@et >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 620:
Theorem (620) [serial 1304] used for:
    normalization of [serial 1302]
 


Theorem (622)                               [serial 1301] 
P [182] << (AS
 and ATR_ENABLE)@now
 and ((DUR_COUNT()
 and LAS()
 and E(last_as))) >>
S [183] ->
Q [184] << (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c)
 and ATR_ENABLE@et >>
by Substitution of Assertion Labels
and theorem 621:
Theorem (621) [serial 1302] used for:
  substituted Assertions' predicates for  labels  [serial 1301]
 


Theorem (623)                               [serial 1300] 
P [182] << (AS
 and ATR_ENABLE)@now
 and DC() >>
S [183] ->
Q [184] << (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c)
 and E(now) >>
by Substitution of Assertion Labels
and theorem 622:
Theorem (622) [serial 1301] used for:
  substituted Assertions' predicates for  labels  [serial 1300]
 


Theorem (624)                               [serial 1289] 
P [182] << (AS
 and ATR_ENABLE)@now
 and DC() >>
S [183] skip
Q [184] << (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c)
 and E(now) >>
by Skip Means Implication:  <<P>> skip <<Q>>  is  <<P>> -> <<Q>> (bl.skip)
and theorem 623:
Theorem (623) [serial 1300] used for:
    <<P>> -> <<Q>>
  for [serial 1289]
 


Theorem (625)                               [serial 1282] 
P [182] << (((AS
 and ATR_ENABLE))@now
 and DC()) >>
S [183] skip
Q [184] << ((((c + 1)) = (numberof t~time
  in et .. now 
  that ((AS
        and ATR_ENABLE))@t ))
 and ((AS
 and ATR_ENABLE))@now
 and E(now)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 624:
Theorem (624) [serial 1289] used for:
    normalization of [serial 1282]
 


Theorem (626)                               [serial 1326] 
P [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
S [186] ->
Q [143] << ATR_ENABLE@et >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (627)                               [serial 1327] 
P [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
S [186] ->
Q [188] << (AS
 and ATR_ENABLE)@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (628)                               [serial 1336] 
P [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
S [186] ->
Q [188] << true >>
by True Conclusion Schema (tc): P->true


Theorem (629)                               [serial 1328] 
P [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
S [186] ->
Q [188] << now = now >>
by Equality Law (idistr):  a=a <-> true
and theorem 628:
Theorem (628) [serial 1336] used for:
  Equality Law (idistr):  a=a <-> true [serial 1328]
 


Theorem (630)                               [serial 1329] 
P [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
S [186] ->
Q [187] << (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (631)                               [serial 1342] 
P [184] << ATR_ENABLE@et
 and (numberof t~time
  in et .. now 
  that (AS@t
        and ATR_ENABLE@t) ) = (1 + c)
 and AS
 and ATR_ENABLE >>
S [186] ->
Q [188] << ATR_ENABLE >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (632)                               [serial 1340] 
P [184] << AS@now
 and ATR_ENABLE@now
 and ATR_ENABLE@et
 and (numberof t~time
  in et .. now 
  that (AS@t
        and ATR_ENABLE@t) ) = (1 + c) >>
S [186] ->
Q [188] << ATR_ENABLE >>
by Assume Present:  P = P@now = P^0 
and theorem 631:
Theorem (631) [serial 1342] used for:
  Assume Present:  P = P@now = P^0  [serial 1340]
 


Theorem (633)                               [serial 1338] 
P [184] << ATR_ENABLE@et
 and (AS@now
 and ATR_ENABLE@now)
 and (numberof t~time
  in et .. now 
  that (AS@t
        and ATR_ENABLE@t) ) = (1 + c) >>
S [186] ->
Q [188] << ATR_ENABLE >>
by Associativity: (b.c).a = a.b.c
and theorem 632:
Theorem (632) [serial 1340] used for:
  Associativity: (b.c).a = a.b.c [serial 1338]
 


Theorem (634)                               [serial 1330] 
P [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
S [186] ->
Q [188] << ATR_ENABLE >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 633:
Theorem (633) [serial 1338] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 1330]
 


Theorem (635)                               [serial 1321] 
P [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
S [186] ->
Q [187] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and now = now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c)
 and ATR_ENABLE >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 626 627 629 630 634:
Theorem (626) [serial 1326] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1321]
 
Theorem (627) [serial 1327] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1321]
 
Theorem (629) [serial 1328] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1321]
 
Theorem (630) [serial 1329] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1321]
 
Theorem (634) [serial 1330] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1321]
 


Theorem (636)                               [serial 1331] 
P [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
S [186] ->
Q [143] << ATR_ENABLE@et >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (637)                               [serial 1332] 
P [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
S [186] ->
Q [188] << (AS
 and ATR_ENABLE)@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (638)                               [serial 1337] 
P [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
S [186] ->
Q [188] << true >>
by True Conclusion Schema (tc): P->true


Theorem (639)                               [serial 1333] 
P [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
S [186] ->
Q [188] << now = now >>
by Equality Law (idistr):  a=a <-> true
and theorem 638:
Theorem (638) [serial 1337] used for:
  Equality Law (idistr):  a=a <-> true [serial 1333]
 


Theorem (640)                               [serial 1334] 
P [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
S [186] ->
Q [187] << (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (641)                               [serial 1343] 
P [184] << ATR_ENABLE@et
 and (numberof t~time
  in et .. now 
  that (AS@t
        and ATR_ENABLE@t) ) = (1 + c)
 and AS
 and ATR_ENABLE >>
S [186] ->
Q [188] << ATR_ENABLE >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (642)                               [serial 1341] 
P [184] << AS@now
 and ATR_ENABLE@now
 and ATR_ENABLE@et
 and (numberof t~time
  in et .. now 
  that (AS@t
        and ATR_ENABLE@t) ) = (1 + c) >>
S [186] ->
Q [188] << ATR_ENABLE >>
by Assume Present:  P = P@now = P^0 
and theorem 641:
Theorem (641) [serial 1343] used for:
  Assume Present:  P = P@now = P^0  [serial 1341]
 


Theorem (643)                               [serial 1339] 
P [184] << ATR_ENABLE@et
 and (AS@now
 and ATR_ENABLE@now)
 and (numberof t~time
  in et .. now 
  that (AS@t
        and ATR_ENABLE@t) ) = (1 + c) >>
S [186] ->
Q [188] << ATR_ENABLE >>
by Associativity: (b.c).a = a.b.c
and theorem 642:
Theorem (642) [serial 1341] used for:
  Associativity: (b.c).a = a.b.c [serial 1339]
 


Theorem (644)                               [serial 1335] 
P [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
S [186] ->
Q [188] << ATR_ENABLE >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 643:
Theorem (643) [serial 1339] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 1335]
 


Theorem (645)                               [serial 1323] 
P [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
S [186] ->
Q [187] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and now = now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c)
 and ATR_ENABLE >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 636 637 639 640 644:
Theorem (636) [serial 1331] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1323]
 
Theorem (637) [serial 1332] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1323]
 
Theorem (639) [serial 1333] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1323]
 
Theorem (640) [serial 1334] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1323]
 
Theorem (644) [serial 1335] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1323]
 


Theorem (646)                               [serial 1319] 
P [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
S [186] ->
Q [187] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (((1 + c))) = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and now = now
 and ATR_ENABLE >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorems 635 645:
Theorem (635) [serial 1321] used for:
    normalization of [serial 1319]
 
Theorem (645) [serial 1323] used for:
    normalization of [serial 1319]
 


Theorem (647)                               [serial 1317] 
P [184] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c) >>
S [186] |c,last_as := (1 + c),now|  
Q [187] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@last_as
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE >>
by Simultaneous Assignment
and theorem 646:
Theorem (646) [serial 1319] used for:
  applied wp for simultaneous assignment [serial 1317]
 


Theorem (648)                               [serial 1315] 
P [184] << (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c)
 and ATR_ENABLE@et >>
S [186] |c,last_as := (1 + c),now|  
Q [187] << (AS
 and ATR_ENABLE)@last_as
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE
 and ATR_ENABLE@et >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 647:
Theorem (647) [serial 1317] used for:
    normalization of [serial 1315]
 


Theorem (649)                               [serial 1291] 
P [184] << (AS
 and ATR_ENABLE)@now
 and (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) = (1 + c)
 and E(now) >>
S [186] |c,last_as := (1 + c),now|  
Q [187] << (AS
 and ATR_ENABLE)@last_as
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE
 and E(last_as) >>
by Substitution of Assertion Labels
and theorem 648:
Theorem (648) [serial 1315] used for:
  substituted Assertions' predicates for  labels  [serial 1291]
 


Theorem (650)                               [serial 1283] 
P [184] << ((((c + 1)) = (numberof t~time
  in et .. now 
  that ((AS
        and ATR_ENABLE))@t ))
 and ((AS
 and ATR_ENABLE))@now
 and E(now)) >>
S [186] |c,last_as := (c + 1),now|  
Q [187] << ((c = (numberof t~time
  in et .. now 
  that ((AS
        and ATR_ENABLE))@t ))
 and E(last_as)
 and ATR_ENABLE
 and ((AS
 and ATR_ENABLE))@last_as
 and (last_as = now)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 649:
Theorem (649) [serial 1291] used for:
    normalization of [serial 1283]
 


Theorem (651)                               [serial 1373] 
P [189] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@last_as
 and asCount = c
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE >>
S [189] ->
Q [143] << ATR_ENABLE@et >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (652)                               [serial 1374] 
P [189] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@last_as
 and asCount = c
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE >>
S [189] ->
Q [146] << (AS
 and ATR_ENABLE)@last_as >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (653)                               [serial 1377] 
P [189] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@last_as
 and asCount = c
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE >>
S [189] ->
Q [141] << c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (654)                               [serial 1375] 
P [189] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@last_as
 and asCount = c
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE >>
S [189] ->
Q [141] << c = (numberof t~time
  in et .. last_as 
  that (AS
        and ATR_ENABLE)@t ) >>
by Guided Substitution of Equals
and theorem 653:
Theorem (653) [serial 1377] used for:
  Guided Substitution of Equals
 replacing "last_as" with its = "now" in its postcondition [serial 1375]
 


Theorem (655)                               [serial 1382] 
P [189] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@last_as
 and asCount = c
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE >>
S [189] ->
Q [147] << true >>
by True Conclusion Schema (tc): P->true


Theorem (656)                               [serial 1379] 
P [189] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@last_as
 and asCount = c
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE >>
S [189] ->
Q [147] << not (false) >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 655:
Theorem (655) [serial 1382] used for:
    normalization of [serial 1379]
 


Theorem (657)                               [serial 1378] 
P [189] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@last_as
 and asCount = c
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE >>
S [189] ->
Q [147] << not (exists t~time
  in now ,, now 
  that (AS
        and ATR_ENABLE)@t ) >>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 656:
Theorem (656) [serial 1379] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 1378]
 


Theorem (658)                               [serial 1376] 
P [189] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@last_as
 and asCount = c
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE >>
S [189] ->
Q [147] << not (exists t~time
  in last_as ,, now 
  that (AS
        and ATR_ENABLE)@t ) >>
by Guided Substitution of Equals
and theorem 657:
Theorem (657) [serial 1378] used for:
  Guided Substitution of Equals
 replacing "last_as" with its = "now" in its postcondition [serial 1376]
 


Theorem (659)                               [serial 1371] 
P [189] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@last_as
 and asCount = c
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE >>
S [189] ->
Q [190] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@last_as
 and c = (numberof t~time
  in et .. last_as 
  that (AS
        and ATR_ENABLE)@t )
 and not (exists t~time
  in last_as ,, now 
  that (AS
        and ATR_ENABLE)@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 651 652 654 658:
Theorem (651) [serial 1373] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1371]
 
Theorem (652) [serial 1374] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1371]
 
Theorem (654) [serial 1375] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1371]
 
Theorem (658) [serial 1376] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1371]
 


Theorem (660)                               [serial 1369] 
P [189] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@last_as
 and asCount = c
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE >>
S [189] ->
Q [190] << (AS
 and ATR_ENABLE)@last_as
 and not (exists t~time
  in last_as ,, now 
  that (AS
        and ATR_ENABLE)@t )
 and ATR_ENABLE@et
 and c = (numberof t~time
  in et .. last_as 
  that (AS
        and ATR_ENABLE)@t ) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 659:
Theorem (659) [serial 1371] used for:
    normalization of [serial 1369]
 


Theorem (661)                               [serial 1367] 
P [189] << ATR_ENABLE@et
 and (AS
 and ATR_ENABLE)@last_as
 and asCount = c
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE >>
S [189] ->
Q [190] << ATR_ENABLE@et
 and c = (numberof t~time
  in et .. last_as 
  that (AS
        and ATR_ENABLE)@t )
 and ((AS
 and ATR_ENABLE)@last_as
 and not (exists t~time
  in last_as ,, now 
  that (AS
        and ATR_ENABLE)@t )) >>
by Associativity: (b.c).a = a.b.c
and theorem 660:
Theorem (660) [serial 1369] used for:
  Associativity: (b.c).a = a.b.c [serial 1367]
 


Theorem (662)                               [serial 1365] 
P [189] << (AS
 and ATR_ENABLE)@last_as
 and asCount = c
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE
 and ATR_ENABLE@et >>
S [189] ->
Q [190] << ((((c = (numberof t~time
  in et .. last_as 
  that ((AS
        and ATR_ENABLE))@t )))
 and ((((AS
 and ATR_ENABLE))@last_as
 and not (exists t~time
  in last_as ,, now 
  that ((AS
        and ATR_ENABLE))@t )))
 and ATR_ENABLE@et)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 661:
Theorem (661) [serial 1367] used for:
    normalization of [serial 1365]
 


Theorem (663)                               [serial 1364] 
P [189] << (AS
 and ATR_ENABLE)@last_as
 and asCount = c
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE
 and ATR_ENABLE@et >>
S [189] ->
Q [190] << ((DUR_COUNT()
 and LAS()
 and E(last_as))) >>
by Substitution of Assertion Labels
and theorem 662:
Theorem (662) [serial 1365] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 1364]
 


Theorem (664)                               [serial 1361] 
P [189] << (AS
 and ATR_ENABLE)@last_as
 and asCount = c
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE
 and E(last_as) >>
S [189] ->
Q [190] << DC() >>
by Substitution of Assertion Labels
and theorem 663:
Theorem (663) [serial 1364] used for:
  substituted Assertions' predicates for  labels  [serial 1361]
 


Theorem (665)                               [serial 1355] 
P [189] << (asCount = c)@now
 and (AS
 and ATR_ENABLE)@last_as
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE
 and E(last_as) >>
S [189] ->
Q [190] << DC() >>
by Assume Present:  P = P@now = P^0 
and theorem 664:
Theorem (664) [serial 1361] used for:
  Assume Present:  P = P@now = P^0  [serial 1355]
 


Theorem (666)                               [serial 1352] 
P [189] << (AS
 and ATR_ENABLE)@last_as
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE
 and E(last_as)
 and (asCount = c)@now >>
S [189] ->
Q [190] << DC() >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 665:
Theorem (665) [serial 1355] used for:
    normalization of [serial 1352]
 


Theorem (667)                               [serial 1347] 
P [189] << (asCount = c)@now
 and ((AS
 and ATR_ENABLE)@last_as
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE
 and E(last_as)) >>
S [189] ->
Q [190] << DC() >>
by Associativity: (b.c).a = a.b.c
and theorem 666:
Theorem (666) [serial 1352] used for:
  Associativity: (b.c).a = a.b.c [serial 1347]
 


Theorem (668)                               [serial 1344] 
P [189] << ((AS
 and ATR_ENABLE)@last_as
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE
 and E(last_as))
 and (asCount = c)@now >>
S [189] ->
Q [190] << DC() >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 667:
Theorem (667) [serial 1347] used for:
    normalization of [serial 1344]
 


Theorem (669)                               [serial 1363] 
P [189] << (AS
 and ATR_ENABLE)@last_as
 and asCount = c
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE
 and E(last_as) >>
S [189] ->
Q [189] << c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (670)                               [serial 1362] 
P [189] << (AS
 and ATR_ENABLE)@last_as
 and asCount = c
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE
 and E(last_as) >>
S [189] ->
Q [189] << asCount = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ) >>
by Guided Substitution of Equals
and theorem 669:
Theorem (669) [serial 1363] used for:
  Guided Substitution of Equals
 replacing "asCount" with its = "c" in its postcondition [serial 1362]
 


Theorem (671)                               [serial 1360] 
P [189] << (asCount = c)@now
 and (AS
 and ATR_ENABLE)@last_as
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE
 and E(last_as) >>
S [189] ->
Q [189] << (asCount = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t ))@now >>
by Assume Present:  P = P@now = P^0 
and theorem 670:
Theorem (670) [serial 1362] used for:
  Assume Present:  P = P@now = P^0  [serial 1360]
 


Theorem (672)                               [serial 1357] 
P [189] << (asCount = c)@now
 and (AS
 and ATR_ENABLE)@last_as
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE
 and E(last_as) >>
S [189] ->
Q [189] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t  else 0) = asCount)@now >>
by Conditional True Expression:  b and x=e  iff  b and x=(b??e:g) 
and theorem 671:
Theorem (671) [serial 1360] used for:
   Conditional True Expression:  b and x=e  iff  b and x=(b??e:g)  [serial 1357]
 


Theorem (673)                               [serial 1353] 
P [189] << (AS
 and ATR_ENABLE)@last_as
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE
 and E(last_as)
 and (asCount = c)@now >>
S [189] ->
Q [189] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t  else 0) = asCount)@now >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 672:
Theorem (672) [serial 1357] used for:
    normalization of [serial 1353]
 


Theorem (674)                               [serial 1349] 
P [189] << (asCount = c)@now
 and ((AS
 and ATR_ENABLE)@last_as
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE
 and E(last_as)) >>
S [189] ->
Q [189] << ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t  else 0) = asCount)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 673:
Theorem (673) [serial 1353] used for:
  Associativity: (b.c).a = a.b.c [serial 1349]
 


Theorem (675)                               [serial 1345] 
P [189] << ((AS
 and ATR_ENABLE)@last_as
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE
 and E(last_as))
 and (asCount = c)@now >>
S [189] ->
Q [189] << (asCount = ((if ATR_ENABLE then numberof t~time
  in et .. now 
  that ((AS
        and ATR_ENABLE))@t  else 0)))@now >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 674:
Theorem (674) [serial 1349] used for:
    normalization of [serial 1345]
 


Theorem (676)                               [serial 1293] 
P [187] << (AS
 and ATR_ENABLE)@last_as
 and c = (numberof t~time
  in et .. now 
  that (AS
        and ATR_ENABLE)@t )
 and last_as = now
 and ATR_ENABLE
 and E(last_as) >>
S [189] asCount!(c)
Q [190] << DC() >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 668 675:
Theorem (668) [serial 1344] used for:
  applied port output <<pre and (asCount=c)@now>> -> <<post>> [serial 1293]
 
Theorem (675) [serial 1345] used for:
  applied port output <<pre and (asCount=c)@now>> -> <<(asCount=(if ATR_ENABLE then numberof t~time
  in et .. now 
  that ((AS
        and ATR_ENABLE))@t  else 0))@now>> [serial 1293]
 


Theorem (677)                               [serial 1284] 
P [187] << ((c = (numberof t~time
  in et .. now 
  that ((AS
        and ATR_ENABLE))@t ))
 and E(last_as)
 and ATR_ENABLE
 and ((AS
 and ATR_ENABLE))@last_as
 and (last_as = now)) >>
S [189] asCount!(c)
Q [190] << DC() >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 676:
Theorem (676) [serial 1293] used for:
    normalization of [serial 1284]
 


Theorem (678)                               [serial 1044] 
P [153] << ((DC()
 and AS@now))
 and ((ATR_ENABLE)@now) >>
S [182] << (((AS
 and ATR_ENABLE))@now
 and DC()) >>
skip
;
<< ((((c + 1)) = (numberof t~time
  in et .. now 
  that ((AS
        and ATR_ENABLE))@t ))
 and ((AS
 and ATR_ENABLE))@now
 and E(now)) >>
|c,last_as := (c + 1),now|  
;
<< ((c = (numberof t~time
  in et .. now 
  that ((AS
        and ATR_ENABLE))@t ))
 and E(last_as)
 and ATR_ENABLE
 and ((AS
 and ATR_ENABLE))@last_as
 and (last_as = now)) >>
asCount!(c)
<< DC() >>
Q [151] << DC() >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 613 614 625 650 677:
Theorem (613) [serial 1280] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 1044]
 
Theorem (614) [serial 1281] used for:
  <<Q2>> -> <<Q>> in sequential composition for [serial 1044]
 
Theorem (625) [serial 1282] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1044]
 
Theorem (650) [serial 1283] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1044]
 
Theorem (677) [serial 1284] used for:
  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 1044]
 


Theorem (679)                               [serial 1032] 
P [134] <<   >>
S [138] ->
Q [134] << AsCounter.imp proof obligations >>
by Initial Thread Obligations
and theorems 492 494 497 501 502 504 507 519 584 586 609 678:
Theorem (492) [serial 1033] used for:
  <<M(wait)>> -> <<I>> from invariant I when complete state wait has Assertion <<M(wait)>> in its definition.
 
Theorem (494) [serial 1034] used for:
  <<M(go)>> -> <<I>> from invariant I when complete state go has Assertion <<M(go)>> in its definition.
 
Theorem (497) [serial 1035] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_wait, <<M(check_wait)>> -> <<e1 or e2 or . . . en>>
 
Theorem (501) [serial 1036] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_go, <<M(check_go)>> -> <<e1 or e2 or . . . en>>
 
Theorem (502) [serial 1037] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
 
Theorem (504) [serial 1038] used for:
   <<M(start)>> -> <<M(wait)>> for dc_begin:start-[ ]->wait{};
 
Theorem (507) [serial 1039] used for:
   <<M(wait) and x>> -> <<M(check_wait)>> for dc_was:wait-[x]->check_wait{};
 
Theorem (519) [serial 1040] used for:
   <<M(check_wait) and x>> A <<M(wait)>> for dc_wnen:check_wait-[x]->wait{A};
 
Theorem (584) [serial 1041] used for:
   <<M(check_wait) and x>> A <<M(go)>> for dc_wen:check_wait-[x]->go{A};
 
Theorem (586) [serial 1042] used for:
   <<M(go) and x>> -> <<M(check_go)>> for dc_gas:go-[x]->check_go{};
 
Theorem (609) [serial 1043] used for:
   <<M(check_go) and x>> A <<M(wait)>> for dc_gnen:check_go-[x]->wait{A};
 
Theorem (678) [serial 1044] used for:
   <<M(check_go) and x>> A <<M(go)>> for dc_ggo:check_go-[x]->go{A};
 


Theorem (680)                               [serial 2007] 
P [154] << LAST(now)
 and LRL_A(now)
 and (PAV(now) or 
SAV(now) or 
VAI(now)) >>
S [154] ->
Q [102] << LRL_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (681)                               [serial 1047] 
P [154] << (LRL_A(now)
 and ((SAV(now) or 
PAV(now) or 
VAI(now)))
 and LAST(now)) >>
S [154] ->
Q [102] << LRL_A(now) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 680:
Theorem (680) [serial 2007] used for:
    normalization of [serial 1047]
 


Theorem (682)                               [serial 2012] 
P [196] << LAST(now)
 and LRL_A(now)
 and PAV(now) >>
S [154] ->
Q [163] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (683)                               [serial 2013] 
P [196] << LAST(now)
 and LRL_A(now)
 and PAV(now) >>
S [154] ->
Q [155] << LRL_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (684)                               [serial 2018] 
P [196] << LAST(now)
 and LRL_A(now)
 and PAV(now) >>
S [154] ->
Q [157] << PAV(now) or 
SAV(now) or 
VAI(now) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (685)                               [serial 2014] 
P [196] << LAST(now)
 and LRL_A(now)
 and PAV(now) >>
S [154] ->
Q [157] << (PAV(now) or 
SAV(now) or 
VAI(now)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 684:
Theorem (684) [serial 2018] used for:
    normalization of [serial 2014]
 


Theorem (686)                               [serial 2010] 
P [196] << LAST(now)
 and LRL_A(now)
 and PAV(now) >>
S [154] ->
Q [154] << LAST(now)
 and LRL_A(now)
 and (PAV(now) or 
SAV(now) or 
VAI(now)) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 682 683 685:
Theorem (682) [serial 2012] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2010]
 
Theorem (683) [serial 2013] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2010]
 
Theorem (685) [serial 2014] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2010]
 


Theorem (687)                               [serial 1048] 
P [196] << (PAV(now)
 and LRL_A(now)
 and LAST(now)) >>
S [154] ->
Q [154] << (LRL_A(now)
 and ((SAV(now) or 
PAV(now) or 
VAI(now)))
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 686:
Theorem (686) [serial 2010] used for:
    normalization of [serial 1048]
 


Theorem (688)                               [serial 2023] 
P [190] << LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [154] ->
Q [163] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (689)                               [serial 2024] 
P [190] << LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [154] ->
Q [155] << LRL_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (690)                               [serial 2029] 
P [190] << LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [154] ->
Q [157] << PAV(now) or 
SAV(now) or 
VAI(now) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (691)                               [serial 2025] 
P [190] << LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [154] ->
Q [157] << (PAV(now) or 
SAV(now) or 
VAI(now)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 690:
Theorem (690) [serial 2029] used for:
    normalization of [serial 2025]
 


Theorem (692)                               [serial 2021] 
P [190] << LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [154] ->
Q [154] << LAST(now)
 and LRL_A(now)
 and (PAV(now) or 
SAV(now) or 
VAI(now)) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 688 689 691:
Theorem (688) [serial 2023] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2021]
 
Theorem (689) [serial 2024] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2021]
 
Theorem (691) [serial 2025] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2021]
 


Theorem (693)                               [serial 1049] 
P [190] << (SAV(now)
 and LRL_A(now)
 and LAST(now)) >>
S [154] ->
Q [154] << (LRL_A(now)
 and ((SAV(now) or 
PAV(now) or 
VAI(now)))
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 692:
Theorem (692) [serial 2021] used for:
    normalization of [serial 1049]
 


Theorem (694)                               [serial 2034] 
P [200] << LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [154] ->
Q [163] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (695)                               [serial 2035] 
P [200] << LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [154] ->
Q [155] << LRL_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (696)                               [serial 2040] 
P [200] << LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [154] ->
Q [157] << PAV(now) or 
SAV(now) or 
VAI(now) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (697)                               [serial 2036] 
P [200] << LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [154] ->
Q [157] << (PAV(now) or 
SAV(now) or 
VAI(now)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 696:
Theorem (696) [serial 2040] used for:
    normalization of [serial 2036]
 


Theorem (698)                               [serial 2032] 
P [200] << LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [154] ->
Q [154] << LAST(now)
 and LRL_A(now)
 and (PAV(now) or 
SAV(now) or 
VAI(now)) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 694 695 697:
Theorem (694) [serial 2034] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2032]
 
Theorem (695) [serial 2035] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2032]
 
Theorem (697) [serial 2036] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2032]
 


Theorem (699)                               [serial 1050] 
P [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
S [154] ->
Q [154] << (LRL_A(now)
 and ((SAV(now) or 
PAV(now) or 
VAI(now)))
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 698:
Theorem (698) [serial 2032] used for:
    normalization of [serial 1050]
 


Theorem (700)                               [serial 2059] 
P [198] << V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now) >>
S [198] ->
Q [198] << true >>
by True Conclusion Schema (tc): P->true


Theorem (701)                               [serial 2057] 
P [198] << V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now) >>
S [198] ->
Q [198] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 700:
Theorem (700) [serial 2059] used for:
    normalization of [serial 2057]
 


Theorem (702)                               [serial 2056] 
P [198] << V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now) >>
S [198] ->
Q [198] << (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 701:
Theorem (701) [serial 2057] used for:
  Law of And-Simplification:  P and P is P [serial 2056]
 


Theorem (703)                               [serial 2055] 
P [198] << V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now) >>
S [198] ->
Q [198] << (true)
 and (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 702:
Theorem (702) [serial 2056] used for:
  Law of And-Simplification:  P and P is P [serial 2055]
 


Theorem (704)                               [serial 2054] 
P [198] << V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now) >>
S [198] ->
Q [198] << (SV@now or 
TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now)
 and (not TNV@now or 
TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now)
 and (not (now - last_vp_or_vs) < VRP@now or 
TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 703:
Theorem (703) [serial 2055] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2054]
 


Theorem (705)                               [serial 2051] 
P [198] << V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now) >>
S [198] ->
Q [198] << TNV@now or 
not SV@now or 
(SV@now
 and not TNV@now
 and not (now - last_vp_or_vs) < VRP@now) or 
(now - last_vp_or_vs) < VRP@now >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 704:
Theorem (704) [serial 2054] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 2051]
 


Theorem (706)                               [serial 2049] 
P [198] << V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now) >>
S [198] ->
Q [198] << TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now or 
(SV@now
 and not TNV@now
 and not (now - last_vp_or_vs) < VRP@now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 705:
Theorem (705) [serial 2051] used for:
    normalization of [serial 2049]
 


Theorem (707)                               [serial 2047] 
P [198] << V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now) >>
S [198] ->
Q [198] << (SV@now
 and not TNV@now
 and not (now - last_vp_or_vs) < VRP@now) or 
(TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now) >>
by Associativity: (b.c).a = a.b.c
and theorem 706:
Theorem (706) [serial 2049] used for:
  Associativity: (b.c).a = a.b.c [serial 2047]
 


Theorem (708)                               [serial 2045] 
P [198] << V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now) >>
S [198] ->
Q [198] << ((not ((now - last_vp_or_vs) < VRP@now))
 and SV@now
 and not TNV@now) or 
(TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 707:
Theorem (707) [serial 2047] used for:
    normalization of [serial 2045]
 


Theorem (709)                               [serial 2043] 
P [198] << V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now) >>
S [198] ->
Q [198] << (VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now) or 
(TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 708:
Theorem (708) [serial 2045] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2043]
 


Theorem (710)                               [serial 1051] 
P [198] << (V@now
 and PAV(now)
 and LRL_A(now)
 and LAST(now)) >>
S [198] ->
Q [198] << ((not ((SV)@now) or 
(TNV)@now or 
(((VRP)@now > ((now - last_vp_or_vs)))))) or 
(((SV)@now
 and not (TNV)@now
 and (((VRP)@now <= ((now - last_vp_or_vs)))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 709:
Theorem (709) [serial 2043] used for:
    normalization of [serial 1051]
 


Theorem (711)                               [serial 1052] 
P [187] << (((now = 0))
 and ((CCI = LRL))) >>
S [187] ->
Q [187] << true >>
by True Conclusion Schema (tc): P->true


Theorem (712)                               [serial 2071] 
P [192] << V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [192] ->
Q [192] << true >>
by True Conclusion Schema (tc): P->true


Theorem (713)                               [serial 2069] 
P [192] << V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [192] ->
Q [192] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 712:
Theorem (712) [serial 2071] used for:
    normalization of [serial 2069]
 


Theorem (714)                               [serial 2068] 
P [192] << V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [192] ->
Q [192] << (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 713:
Theorem (713) [serial 2069] used for:
  Law of And-Simplification:  P and P is P [serial 2068]
 


Theorem (715)                               [serial 2067] 
P [192] << V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [192] ->
Q [192] << (true)
 and (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 714:
Theorem (714) [serial 2068] used for:
  Law of And-Simplification:  P and P is P [serial 2067]
 


Theorem (716)                               [serial 2066] 
P [192] << V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [192] ->
Q [192] << (TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now or 
(not ((now - last_vp_or_vs) < VRP@now)))
 and (TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now or 
SV@now)
 and (TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now or 
not TNV@now) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 715:
Theorem (715) [serial 2067] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2066]
 


Theorem (717)                               [serial 2065] 
P [192] << V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [192] ->
Q [192] << ((not ((now - last_vp_or_vs) < VRP@now)) or 
(TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now))
 and (SV@now or 
(TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now))
 and (not TNV@now or 
(TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now)) >>
by Associativity: (b.c).a = a.b.c
and theorem 716:
Theorem (716) [serial 2066] used for:
  Associativity: (b.c).a = a.b.c [serial 2065]
 


Theorem (718)                               [serial 2064] 
P [192] << V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [192] ->
Q [192] << ((not ((now - last_vp_or_vs) < VRP@now))
 and SV@now
 and not TNV@now) or 
(TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 717:
Theorem (717) [serial 2065] used for:
  Distributing Postcondition Or-Over-And [serial 2064]
 


Theorem (719)                               [serial 2062] 
P [192] << V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [192] ->
Q [192] << (VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now) or 
(TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 718:
Theorem (718) [serial 2064] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2062]
 


Theorem (720)                               [serial 1053] 
P [192] << (V@now
 and SAV(now)
 and LRL_A(now)
 and LAST(now)) >>
S [192] ->
Q [192] << ((not (SV)@now or 
(TNV)@now or 
(((VRP)@now > ((now - last_vp_or_vs)))))) or 
(((SV)@now
 and not (TNV)@now
 and (((VRP)@now <= ((now - last_vp_or_vs)))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 719:
Theorem (719) [serial 2062] used for:
    normalization of [serial 1053]
 


Theorem (721)                               [serial 2090] 
P [202] << A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [202] ->
Q [202] << true >>
by True Conclusion Schema (tc): P->true


Theorem (722)                               [serial 2088] 
P [202] << A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [202] ->
Q [202] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 721:
Theorem (721) [serial 2090] used for:
    normalization of [serial 2088]
 


Theorem (723)                               [serial 2087] 
P [202] << A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [202] ->
Q [202] << (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 722:
Theorem (722) [serial 2088] used for:
  Law of And-Simplification:  P and P is P [serial 2087]
 


Theorem (724)                               [serial 2086] 
P [202] << A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [202] ->
Q [202] << (true)
 and (true)
 and (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 723:
Theorem (723) [serial 2087] used for:
  Law of And-Simplification:  P and P is P [serial 2086]
 


Theorem (725)                               [serial 2085] 
P [202] << A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [202] ->
Q [202] << (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 724:
Theorem (724) [serial 2086] used for:
  Law of And-Simplification:  P and P is P [serial 2085]
 


Theorem (726)                               [serial 2084] 
P [202] << A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [202] ->
Q [202] << (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 725:
Theorem (725) [serial 2085] used for:
  Law of And-Simplification:  P and P is P [serial 2084]
 


Theorem (727)                               [serial 2083] 
P [202] << A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [202] ->
Q [202] << (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 726:
Theorem (726) [serial 2084] used for:
  Law of And-Simplification:  P and P is P [serial 2083]
 


Theorem (728)                               [serial 2082] 
P [202] << A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [202] ->
Q [202] << (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 727:
Theorem (727) [serial 2083] used for:
  Law of And-Simplification:  P and P is P [serial 2082]
 


Theorem (729)                               [serial 2081] 
P [202] << A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [202] ->
Q [202] << (SA@now or 
SA@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not FB@now or 
SA@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not TNA@now or 
SA@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < ARP@now or 
SA@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < URL@now or 
SA@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < DAV_A()@now or 
SA@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
SA@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_vp_or_vs) < PVARP@now or 
SA@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (SA@now or 
not FB@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not FB@now or 
not FB@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not TNA@now or 
not FB@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < ARP@now or 
not FB@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < URL@now or 
not FB@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < DAV_A()@now or 
not FB@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
not FB@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_vp_or_vs) < PVARP@now or 
not FB@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (SA@now or 
not TNA@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not FB@now or 
not TNA@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not TNA@now or 
not TNA@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < ARP@now or 
not TNA@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < URL@now or 
not TNA@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < DAV_A()@now or 
not TNA@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
not TNA@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_vp_or_vs) < PVARP@now or 
not TNA@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (SA@now or 
not (now - last_ap_or_as) < ARP@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not FB@now or 
not (now - last_ap_or_as) < ARP@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not TNA@now or 
not (now - last_ap_or_as) < ARP@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < ARP@now or 
not (now - last_ap_or_as) < ARP@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < URL@now or 
not (now - last_ap_or_as) < ARP@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < DAV_A()@now or 
not (now - last_ap_or_as) < ARP@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
not (now - last_ap_or_as) < ARP@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_vp_or_vs) < PVARP@now or 
not (now - last_ap_or_as) < ARP@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (SA@now or 
not (now - last_ap_or_as) < DAV_A()@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not FB@now or 
not (now - last_ap_or_as) < DAV_A()@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not TNA@now or 
not (now - last_ap_or_as) < DAV_A()@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < ARP@now or 
not (now - last_ap_or_as) < DAV_A()@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < URL@now or 
not (now - last_ap_or_as) < DAV_A()@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < DAV_A()@now or 
not (now - last_ap_or_as) < DAV_A()@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
not (now - last_ap_or_as) < DAV_A()@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_vp_or_vs) < PVARP@now or 
not (now - last_ap_or_as) < DAV_A()@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (SA@now or 
not (now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not FB@now or 
not (now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not TNA@now or 
not (now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < ARP@now or 
not (now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < URL@now or 
not (now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < DAV_A()@now or 
not (now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
not (now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_vp_or_vs) < PVARP@now or 
not (now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (SA@now or 
not (now - last_vp_or_vs) < PVARP@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not FB@now or 
not (now - last_vp_or_vs) < PVARP@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not TNA@now or 
not (now - last_vp_or_vs) < PVARP@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < ARP@now or 
not (now - last_vp_or_vs) < PVARP@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < URL@now or 
not (now - last_vp_or_vs) < PVARP@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < DAV_A()@now or 
not (now - last_vp_or_vs) < PVARP@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
not (now - last_vp_or_vs) < PVARP@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_vp_or_vs) < PVARP@now or 
not (now - last_vp_or_vs) < PVARP@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (SA@now or 
(now - last_ap_or_as) < URL@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not FB@now or 
(now - last_ap_or_as) < URL@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not TNA@now or 
(now - last_ap_or_as) < URL@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < URL@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < URL@now or 
(now - last_ap_or_as) < URL@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < URL@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_ap_or_as) < URL@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now)
 and (not (now - last_vp_or_vs) < PVARP@now or 
(now - last_ap_or_as) < URL@now or 
FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 728:
Theorem (728) [serial 2082] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2081]
 


Theorem (730)                               [serial 2079] 
P [202] << A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [202] ->
Q [202] << FB@now or 
TNA@now or 
not SA@now or 
(SA@now
 and not FB@now
 and not TNA@now
 and not (now - last_ap_or_as) < ARP@now
 and not (now - last_ap_or_as) < URL@now
 and not (now - last_ap_or_as) < DAV_A()@now
 and not (now - last_ap_or_as) < (SAVO@now + DAV_A()@now)
 and not (now - last_vp_or_vs) < PVARP@now) or 
(SA@now
 and not FB@now
 and not TNA@now
 and not (now - last_ap_or_as) < ARP@now
 and not (now - last_ap_or_as) < DAV_A()@now
 and not (now - last_ap_or_as) < (SAVO@now + DAV_A()@now)
 and not (now - last_vp_or_vs) < PVARP@now
 and (now - last_ap_or_as) < URL@now) or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 729:
Theorem (729) [serial 2081] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 2079]
 


Theorem (731)                               [serial 2077] 
P [202] << A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [202] ->
Q [202] << FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now or 
((not ((now - last_ap_or_as) < ARP@now))
 and (not ((now - last_vp_or_vs) < PVARP@now))
 and (not ((now - last_ap_or_as) < URL@now))
 and (not ((now - last_ap_or_as) < DAV_A()@now))
 and (not ((now - last_ap_or_as) < (SAVO@now + DAV_A()@now)))
 and SA@now
 and not FB@now
 and not TNA@now) or 
((not ((now - last_ap_or_as) < ARP@now))
 and (not ((now - last_vp_or_vs) < PVARP@now))
 and (not ((now - last_ap_or_as) < DAV_A()@now))
 and (not ((now - last_ap_or_as) < (SAVO@now + DAV_A()@now)))
 and SA@now
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 730:
Theorem (730) [serial 2079] used for:
    normalization of [serial 2077]
 


Theorem (732)                               [serial 2076] 
P [202] << A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [202] ->
Q [202] << ((not ((now - last_ap_or_as) < ARP@now))
 and (not ((now - last_vp_or_vs) < PVARP@now))
 and (not ((now - last_ap_or_as) < URL@now))
 and (not ((now - last_ap_or_as) < DAV_A()@now))
 and (not ((now - last_ap_or_as) < (SAVO@now + DAV_A()@now)))
 and SA@now
 and not FB@now
 and not TNA@now) or 
((not ((now - last_ap_or_as) < ARP@now))
 and (not ((now - last_vp_or_vs) < PVARP@now))
 and (not ((now - last_ap_or_as) < DAV_A()@now))
 and (not ((now - last_ap_or_as) < (SAVO@now + DAV_A()@now)))
 and SA@now
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now) or 
(FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now) >>
by Associativity: (b.c).a = a.b.c
and theorem 731:
Theorem (731) [serial 2077] used for:
  Associativity: (b.c).a = a.b.c [serial 2076]
 


Theorem (733)                               [serial 2074] 
P [202] << A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [202] ->
Q [202] << (ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and SA@now
 and not FB@now
 and not TNA@now) or 
(ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and SA@now
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now) or 
(FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 732:
Theorem (732) [serial 2076] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2074]
 


Theorem (734)                               [serial 1054] 
P [202] << (A@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
S [202] ->
Q [202] << (((SA)@now
 and not (TNA)@now
 and not (FB)@now
 and (((PVARP)@now <= ((now - last_vp_or_vs))))
 and (((ARP)@now <= ((now - last_ap_or_as))))
 and (((((DAV_A())@now + (SAVO)@now)) <= ((now - last_ap_or_as))))
 and (((DAV_A())@now <= ((now - last_ap_or_as))))
 and (((URL)@now <= ((now - last_ap_or_as)))))) or 
(((SA)@now
 and not (TNA)@now
 and not (FB)@now
 and (((PVARP)@now <= ((now - last_vp_or_vs))))
 and (((ARP)@now <= ((now - last_ap_or_as))))
 and (((((DAV_A())@now + (SAVO)@now)) <= ((now - last_ap_or_as))))
 and (((DAV_A())@now <= ((now - last_ap_or_as))))
 and ((((now - last_ap_or_as)) < (URL)@now)))) or 
((not (SA)@now or 
(TNA)@now or 
(FB)@now or 
(((PVARP)@now > ((now - last_vp_or_vs)))) or 
(((ARP)@now > ((now - last_ap_or_as)))) or 
(((((DAV_A())@now + (SAVO)@now)) > ((now - last_ap_or_as)))) or 
(((DAV_A())@now > ((now - last_ap_or_as)))))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 733:
Theorem (733) [serial 2074] used for:
    normalization of [serial 1054]
 


Theorem (735)                               [serial 2105] 
P [205] << V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [205] ->
Q [205] << true >>
by True Conclusion Schema (tc): P->true


Theorem (736)                               [serial 2103] 
P [205] << V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [205] ->
Q [205] << (true) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 735:
Theorem (735) [serial 2105] used for:
    normalization of [serial 2103]
 


Theorem (737)                               [serial 2102] 
P [205] << V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [205] ->
Q [205] << (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 736:
Theorem (736) [serial 2103] used for:
  Law of And-Simplification:  P and P is P [serial 2102]
 


Theorem (738)                               [serial 2101] 
P [205] << V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [205] ->
Q [205] << (true)
 and (true)
 and (true) >>
by Law of And-Simplification:  P and P is P
and theorem 737:
Theorem (737) [serial 2102] used for:
  Law of And-Simplification:  P and P is P [serial 2101]
 


Theorem (739)                               [serial 2100] 
P [205] << V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [205] ->
Q [205] << (SV@now or 
TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now)
 and (not TNV@now or 
TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now)
 and (not (now - last_vp_or_vs) < VRP@now or 
TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now) >>
by Law of Excluded Middle: P or not P is tautology
and theorem 738:
Theorem (738) [serial 2101] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2100]
 


Theorem (740)                               [serial 2098] 
P [205] << V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [205] ->
Q [205] << TNV@now or 
not SV@now or 
(SV@now
 and not TNV@now
 and not (now - last_vp_or_vs) < VRP@now) or 
(now - last_vp_or_vs) < VRP@now >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 739:
Theorem (739) [serial 2100] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and while transforming into
  conjunctive normal form [serial 2098]
 


Theorem (741)                               [serial 2096] 
P [205] << V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [205] ->
Q [205] << TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now or 
((not ((now - last_vp_or_vs) < VRP@now))
 and SV@now
 and not TNV@now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 740:
Theorem (740) [serial 2098] used for:
    normalization of [serial 2096]
 


Theorem (742)                               [serial 2095] 
P [205] << V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [205] ->
Q [205] << ((not ((now - last_vp_or_vs) < VRP@now))
 and SV@now
 and not TNV@now) or 
(TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now) >>
by Associativity: (b.c).a = a.b.c
and theorem 741:
Theorem (741) [serial 2096] used for:
  Associativity: (b.c).a = a.b.c [serial 2095]
 


Theorem (743)                               [serial 2093] 
P [205] << V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [205] ->
Q [205] << (VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now) or 
(TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now) >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 742:
Theorem (742) [serial 2095] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2093]
 


Theorem (744)                               [serial 1055] 
P [205] << (V@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
S [205] ->
Q [205] << (((TNV)@now or 
not (SV)@now or 
(((VRP)@now > ((now - last_vp_or_vs)))))) or 
(((SV)@now
 and not (TNV)@now
 and (((VRP)@now <= ((now - last_vp_or_vs)))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 743:
Theorem (743) [serial 2093] used for:
    normalization of [serial 1055]
 


Theorem (745)                               [serial 2111] 
P [194] << AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [194] << true >>
by True Conclusion Schema (tc): P->true


Theorem (746)                               [serial 2110] 
P [194] << AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [194] << (not ((now - min_cci) < last_vp_or_vs)) or 
(now - min_cci) < last_vp_or_vs >>
by Law of Excluded Middle: P or not P is tautology
and theorem 745:
Theorem (745) [serial 2111] used for:
  Law of Excluded Middle: P or not P is tautology [serial 2110]
 


Theorem (747)                               [serial 2108] 
P [194] << AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [194] << last_vp_or_vs <= (now - min_cci) or 
(now - min_cci) < last_vp_or_vs >>
by At Most Is Not Less Than: (a<=b) = not(b<a)
and theorem 746:
Theorem (746) [serial 2110] used for:
  At Most Is Not Less Than: (a<=b) = not(b<a) [serial 2108]
 


Theorem (748)                               [serial 1056] 
P [194] << (AS@((now-((dav+savo))))
 and SAV(now)
 and LRL_A(now)
 and LAST(now)) >>
S [194] ->
Q [194] << ((last_vp_or_vs > ((now - min_cci)))) or 
((last_vp_or_vs <= ((now - min_cci)))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 747:
Theorem (747) [serial 2108] used for:
    normalization of [serial 1056]
 


Theorem (749)                               [serial 2116] 
P [187] << 0 = now
 and CCI = LRL >>
S [187] ->
Q [210] << 0 = now
 and CCI = LRL >>
by Identity (id):  P->P is tautology


Theorem (750)                               [serial 2112] 
P [187] << (((now = 0))
 and ((CCI = LRL))) >>
S [187] ->
Q [210] << (((now = 0))
 and ((CCI = LRL))) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 749:
Theorem (749) [serial 2116] used for:
    normalization of [serial 2112]
 


Theorem (751)                               [serial 2187] 
P [229] << last_ap_or_as <= last_vp_or_vs
 and LAST(now)
 and LRL_A(now) >>
S [200] ->
Q [200] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (752)                               [serial 2188] 
P [229] << last_ap_or_as <= last_vp_or_vs
 and LAST(now)
 and LRL_A(now) >>
S [200] ->
Q [200] << LRL_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (753)                               [serial 2289] 
P [229] << last_ap_or_as <= last_vp_or_vs
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [200] ->
Q [200] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (754)                               [serial 2231] 
P [229] << last_ap_or_as <= last_vp_or_vs
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [200] ->
Q [200] << not (exists t~time
  in last_vp_or_vs ,, now 
  that (AP or 
       AS)@t ) >>
by Extend Existential Quantification Range:  
and theorem 753:
Theorem (753) [serial 2289] used for:
  Extend Existential Quantification Range:   [serial 2231]
 


Theorem (755)                               [serial 2223] 
P [229] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and last_ap_or_as <= last_vp_or_vs
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [200] ->
Q [200] << not (exists t~time
  in last_vp_or_vs ,, now 
  that (AP or 
       AS)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 754:
Theorem (754) [serial 2231] used for:
    normalization of [serial 2223]
 


Theorem (756)                               [serial 2221] 
P [229] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and last_ap_or_as <= last_vp_or_vs
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [200] ->
Q [200] << not (exists t~time
  in last_vp_or_vs ,, now 
  that (AP or 
       AS)@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 755:
Theorem (755) [serial 2223] used for:
  Associativity: (b.c).a = a.b.c [serial 2221]
 


Theorem (757)                               [serial 2213] 
P [229] << last_ap_or_as <= last_vp_or_vs
 and ((not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [200] ->
Q [200] << not (exists t~time
  in last_vp_or_vs ,, now 
  that (AP or 
       AS)@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 756:
Theorem (756) [serial 2221] used for:
  Associativity: (b.c).a = a.b.c [serial 2213]
 


Theorem (758)                               [serial 2203] 
P [229] << last_ap_or_as <= last_vp_or_vs
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) ) >>
S [200] ->
Q [200] << (not (exists t~time
  in last_vp_or_vs ,, now 
  that ((AS or 
       AP))@t )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 757:
Theorem (757) [serial 2213] used for:
    normalization of [serial 2203]
 


Theorem (759)                               [serial 2198] 
P [229] << last_ap_or_as <= last_vp_or_vs
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) ) >>
S [200] ->
Q [200] << (not (exists t~time
  in last_vp_or_vs ,, now 
  that ((AS or 
       AP))@t )) >>
by Substitution of Assertion Labels
and theorem 758:
Theorem (758) [serial 2203] used for:
  substituted Assertions' predicates for  labels  [serial 2198]
 


Theorem (760)                               [serial 2189] 
P [229] << last_ap_or_as <= last_vp_or_vs
 and LAST(now)
 and LRL_A(now) >>
S [200] ->
Q [200] << VAI(now) >>
by Substitution of Assertion Labels
and theorem 759:
Theorem (759) [serial 2198] used for:
  substituted Assertions' predicates for  labels  [serial 2189]
 


Theorem (761)                               [serial 2118] 
P [229] << last_ap_or_as <= last_vp_or_vs
 and LAST(now)
 and LRL_A(now) >>
S [200] ->
Q [200] << LAST(now)
 and LRL_A(now)
 and VAI(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 751 752 760:
Theorem (751) [serial 2187] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2118]
 
Theorem (752) [serial 2188] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2118]
 
Theorem (760) [serial 2189] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2118]
 


Theorem (762)                               [serial 2113] 
P [229] << (LAST(now)
 and LRL_A(now)
 and (last_ap_or_as <= last_vp_or_vs)) >>
S [200] ->
Q [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 761:
Theorem (761) [serial 2118] used for:
    normalization of [serial 2113]
 


Theorem (763)                               [serial 2178] 
P [210] << 0 = now
 and CCI = LRL >>
S [211] ->
Q [211] << 0 = now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (764)                               [serial 2160] 
P [210] << 0 = now
 and CCI = LRL >>
S [211] ->
Q [211] << (0 = now) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 763:
Theorem (763) [serial 2178] used for:
    normalization of [serial 2160]
 


Theorem (765)                               [serial 2134] 
P [210] << 0 = now
 and CCI = LRL >>
S [211] ->
Q [211] << 0 = now
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 764:
Theorem (764) [serial 2160] used for:
  Law of And-Simplification:  P and true is P [serial 2134]
 


Theorem (766)                               [serial 2178] 
P [210] << 0 = now
 and CCI = LRL >>
S [211] ->
Q [211] << 0 = now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (767)                               [serial 2160] 
P [210] << 0 = now
 and CCI = LRL >>
S [211] ->
Q [211] << (0 = now) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 766:
Theorem (766) [serial 2178] used for:
    normalization of [serial 2160]
 


Theorem (768)                               [serial 2134] 
P [210] << 0 = now
 and CCI = LRL >>
S [211] ->
Q [211] << 0 = now
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 767:
Theorem (767) [serial 2160] used for:
  Law of And-Simplification:  P and true is P [serial 2134]
 


Theorem (769)                               [serial 2125] 
P [210] << 0 = now
 and CCI = LRL >>
S [211] ->
Q [211] << 0 = now
 and AXIOM_VS() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 768 768:
Theorem (768) [serial 2134] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (768) [serial 2134] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (770)                               [serial 2126] 
P [210] << 0 = now
 and CCI = LRL >>
S [215] ->
Q [215] << CCI = LRL >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (771)                               [serial 2180] 
P [210] << 0 = now
 and CCI = LRL >>
S [222] ->
Q [222] << 0 = now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (772)                               [serial 2161] 
P [210] << 0 = now
 and CCI = LRL >>
S [222] ->
Q [222] << (0 = now) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 771:
Theorem (771) [serial 2180] used for:
    normalization of [serial 2161]
 


Theorem (773)                               [serial 2135] 
P [210] << 0 = now
 and CCI = LRL >>
S [222] ->
Q [222] << 0 = now
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 772:
Theorem (772) [serial 2161] used for:
  Law of And-Simplification:  P and true is P [serial 2135]
 


Theorem (774)                               [serial 2180] 
P [210] << 0 = now
 and CCI = LRL >>
S [222] ->
Q [222] << 0 = now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (775)                               [serial 2161] 
P [210] << 0 = now
 and CCI = LRL >>
S [222] ->
Q [222] << (0 = now) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 774:
Theorem (774) [serial 2180] used for:
    normalization of [serial 2161]
 


Theorem (776)                               [serial 2135] 
P [210] << 0 = now
 and CCI = LRL >>
S [222] ->
Q [222] << 0 = now
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 775:
Theorem (775) [serial 2161] used for:
  Law of And-Simplification:  P and true is P [serial 2135]
 


Theorem (777)                               [serial 2127] 
P [210] << 0 = now
 and CCI = LRL >>
S [222] ->
Q [222] << 0 = now
 and AXIOM_AS() >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 776 776:
Theorem (776) [serial 2135] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (776) [serial 2135] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (778)                               [serial 2195] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [229] << true >>
by True Conclusion Schema (tc): P->true


Theorem (779)                               [serial 2194] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [229] << now <= now >>
by Partial Order Law 1:  a<=a by definition
and theorem 778:
Theorem (778) [serial 2195] used for:
  Partial Order Law 1:  a<=a by definition [serial 2194]
 


Theorem (780)                               [serial 2193] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [229] << now <= last_vp_or_vs >>
by Guided Substitution of Equals
and theorem 779:
Theorem (779) [serial 2194] used for:
  Guided Substitution of Equals
 replacing "last_vp_or_vs" with its = "now" in its postcondition [serial 2193]
 


Theorem (781)                               [serial 2190] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [229] << last_ap_or_as <= last_vp_or_vs >>
by Guided Substitution of Equals
and theorem 780:
Theorem (780) [serial 2193] used for:
  Guided Substitution of Equals
 replacing "last_ap_or_as" with its = "now" in its postcondition [serial 2190]
 


Theorem (782)                               [serial 2286] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [176] << true >>
by True Conclusion Schema (tc): P->true


Theorem (783)                               [serial 2282] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [176] << not (false) >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 782:
Theorem (782) [serial 2286] used for:
    normalization of [serial 2282]
 


Theorem (784)                               [serial 2279] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [176] << not (exists t~time
  in now ,, now 
  that (AP or 
       AS)@t ) >>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 783:
Theorem (783) [serial 2282] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 2279]
 


Theorem (785)                               [serial 2265] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by Guided Substitution of Equals
and theorem 784:
Theorem (784) [serial 2279] used for:
  Guided Substitution of Equals
 replacing "last_ap_or_as" with its = "now" in its postcondition [serial 2265]
 


Theorem (786)                               [serial 2284] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [170] << true >>
by True Conclusion Schema (tc): P->true


Theorem (787)                               [serial 2281] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [170] << not (false) >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 786:
Theorem (786) [serial 2284] used for:
    normalization of [serial 2281]
 


Theorem (788)                               [serial 2269] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [170] << not (exists t~time
  in now ,, now 
  that (VP or 
       VS)@t ) >>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 787:
Theorem (787) [serial 2281] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 2269]
 


Theorem (789)                               [serial 2266] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [170] << not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t ) >>
by Guided Substitution of Equals
and theorem 788:
Theorem (788) [serial 2269] used for:
  Guided Substitution of Equals
 replacing "last_vp_or_vs" with its = "now" in its postcondition [serial 2266]
 


Theorem (790)                               [serial 2280] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [175] << AP@now or 
AS@now >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (791)                               [serial 2273] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Guided Substitution of Equals
and theorem 790:
Theorem (790) [serial 2280] used for:
  Guided Substitution of Equals
 replacing "last_ap_or_as" with its = "now" in its postcondition [serial 2273]
 


Theorem (792)                               [serial 2267] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [175] << (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 791:
Theorem (791) [serial 2273] used for:
    normalization of [serial 2267]
 


Theorem (793)                               [serial 2276] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [169] << VP@now or 
VS@now >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (794)                               [serial 2270] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [169] << (VP@now or 
VS@now) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 793:
Theorem (793) [serial 2276] used for:
    normalization of [serial 2270]
 


Theorem (795)                               [serial 2268] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [169] << (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
by Guided Substitution of Equals
and theorem 794:
Theorem (794) [serial 2270] used for:
  Guided Substitution of Equals
 replacing "last_vp_or_vs" with its = "now" in its postcondition [serial 2268]
 


Theorem (796)                               [serial 2229] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [229] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 785 789 792 795:
Theorem (785) [serial 2265] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2229]
 
Theorem (789) [serial 2266] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2229]
 
Theorem (792) [serial 2267] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2229]
 
Theorem (795) [serial 2268] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2229]
 


Theorem (797)                               [serial 2222] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [229] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 796:
Theorem (796) [serial 2229] used for:
    normalization of [serial 2222]
 


Theorem (798)                               [serial 2215] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [229] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)) >>
by Associativity: (b.c).a = a.b.c
and theorem 797:
Theorem (797) [serial 2222] used for:
  Associativity: (b.c).a = a.b.c [serial 2215]
 


Theorem (799)                               [serial 2204] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [229] << ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t ))))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 798:
Theorem (798) [serial 2215] used for:
    normalization of [serial 2204]
 


Theorem (800)                               [serial 2199] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [229] << ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now))) >>
by Substitution of Assertion Labels
and theorem 799:
Theorem (799) [serial 2204] used for:
  substituted Assertions' predicates for  labels  [serial 2199]
 


Theorem (801)                               [serial 2191] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [229] << LAST(now) >>
by Substitution of Assertion Labels
and theorem 800:
Theorem (800) [serial 2199] used for:
  substituted Assertions' predicates for  labels  [serial 2191]
 


Theorem (802)                               [serial 2243] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [229] << VS@now or 
(exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (803)                               [serial 2241] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [229] << (exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(VS@now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 802:
Theorem (802) [serial 2243] used for:
    normalization of [serial 2241]
 


Theorem (804)                               [serial 2240] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [229] << (exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ) >>
by Introduction of Existential Quantification
and theorem 803:
Theorem (803) [serial 2241] used for:
  replace exists with upper or lower bound [serial 2240]
 


Theorem (805)                               [serial 2207] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [229] << exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t  >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 804:
Theorem (804) [serial 2240] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 2207]
 


Theorem (806)                               [serial 2200] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [229] << (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 805:
Theorem (805) [serial 2207] used for:
    normalization of [serial 2200]
 


Theorem (807)                               [serial 2192] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [229] << LRL_A(now) >>
by Substitution of Assertion Labels
and theorem 806:
Theorem (806) [serial 2200] used for:
  substituted Assertions' predicates for  labels  [serial 2192]
 


Theorem (808)                               [serial 2139] 
P [211] << AS@now
 and VS@now
 and CCI = LRL
 and last_ap_or_as = now
 and last_vp_or_vs = now >>
S [213] ->
Q [229] << last_ap_or_as <= last_vp_or_vs
 and LAST(now)
 and LRL_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 781 801 807:
Theorem (781) [serial 2190] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2139]
 
Theorem (801) [serial 2191] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2139]
 
Theorem (807) [serial 2192] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2139]
 


Theorem (809)                               [serial 2128] 
P [211] << VS@now
 and (CCI = LRL)
 and (last_vp_or_vs = now)
 and AS@now
 and (last_ap_or_as = now) >>
S [213] ->
Q [229] << last_ap_or_as <= last_vp_or_vs
 and LAST(now)
 and LRL_A(now) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 808:
Theorem (808) [serial 2139] used for:
    normalization of [serial 2128]
 


Theorem (810)                               [serial 2253] 
P [211] << 0 = now
 and VS >>
S [212] ->
Q [38] << VS >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (811)                               [serial 2251] 
P [211] << 0 = now
 and (VS) >>
S [212] ->
Q [38] << VS >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 810:
Theorem (810) [serial 2253] used for:
    normalization of [serial 2251]
 


Theorem (812)                               [serial 2249] 
P [211] << 0 = now
 and (VS iff true) >>
S [212] ->
Q [38] << VS >>
by Superfluity of Equivalence:  true <-> a is a
and theorem 811:
Theorem (811) [serial 2251] used for:
  Superfluity of Equivalence:  true <-> a is a [serial 2249]
 


Theorem (813)                               [serial 2247] 
P [211] << (0 = now)
 and (VS iff (true)) >>
S [212] ->
Q [38] << VS >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 812:
Theorem (812) [serial 2249] used for:
    normalization of [serial 2247]
 


Theorem (814)                               [serial 2246] 
P [211] << (0 = now)
 and (VS iff (true or 
(SV@0
 and V@0
 and not TNV@0))) >>
S [212] ->
Q [38] << VS >>
by Law of Or-Simplification: P or true is tautology
and theorem 813:
Theorem (813) [serial 2247] used for:
  Law of Or-Simplification: P or true is tautology [serial 2246]
 


Theorem (815)                               [serial 2245] 
P [211] << (0 = now)
 and (VS iff (0 = 0 or 
(SV@0
 and V@0
 and not TNV@0))) >>
S [212] ->
Q [38] << VS >>
by Equality Law (idistr):  a=a <-> true
and theorem 814:
Theorem (814) [serial 2246] used for:
  Equality Law (idistr):  a=a <-> true [serial 2245]
 


Theorem (816)                               [serial 2209] 
P [211] << 0 = now
 and (VS iff (0 = now or 
(SV@now
 and V@now
 and not TNV@now))) >>
S [212] ->
Q [38] << VS >>
by Substituting Equals Within Conjunction
and theorem 815:
Theorem (815) [serial 2245] used for:
  Substituting Equals Within Conjunction [serial 2209]
 


Theorem (817)                               [serial 2201] 
P [211] << 0 = now
 and ((VS iff ((((SV@now
 and V@now
 and not TNV@now)) or 
(now = 0))))) >>
S [212] ->
Q [38] << VS >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 816:
Theorem (816) [serial 2209] used for:
    normalization of [serial 2201]
 


Theorem (818)                               [serial 2196] 
P [211] << 0 = now
 and ((VS iff ((VS_A(now) or 
(now = 0))))) >>
S [212] ->
Q [38] << VS >>
by Substitution of Assertion Labels
and theorem 817:
Theorem (817) [serial 2201] used for:
  substituted Assertions' predicates for  labels  [serial 2196]
 


Theorem (819)                               [serial 2148] 
P [211] << 0 = now
 and AXIOM_VS() >>
S [212] ->
Q [38] << VS >>
by Substitution of Assertion Labels
and theorem 818:
Theorem (818) [serial 2196] used for:
  substituted Assertions' predicates for  labels  [serial 2148]
 


Theorem (820)                               [serial 2172] 
P [212] << VS@now
 and 0 = now
 and AXIOM_VS() >>
S [212] ->
Q [213] << VS@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (821)                               [serial 2156] 
P [212] << 0 = now
 and AXIOM_VS()
 and VS@now >>
S [212] ->
Q [213] << VS@now >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 820:
Theorem (820) [serial 2172] used for:
    normalization of [serial 2156]
 


Theorem (822)                               [serial 2149] 
P [212] << (0 = now
 and AXIOM_VS())
 and VS@now >>
S [212] ->
Q [213] << VS@now >>
by Associativity: (b.c).a = a.b.c
and theorem 821:
Theorem (821) [serial 2156] used for:
  Associativity: (b.c).a = a.b.c [serial 2149]
 


Theorem (823)                               [serial 2129] 
P [211] << 0 = now
 and AXIOM_VS() >>
S [212] vs!
Q [213] << VS@now >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 819 822:
Theorem (819) [serial 2148] used for:
  applied port output <<pre>> -> <<M[vs]>> [serial 2129]
 
Theorem (822) [serial 2149] used for:
  applied port output <<pre and M[vs]@now>> -> <<post>> [serial 2129]
 


Theorem (824)                               [serial 2166] 
P [216] << (LRL@now = cci)@now
 and CCI = LRL >>
S [216] ->
Q [217] << CCI = LRL >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (825)                               [serial 2150] 
P [216] << (CCI = LRL)
 and (cci = (LRL)@now)@now >>
S [216] ->
Q [217] << CCI = LRL >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 824:
Theorem (824) [serial 2166] used for:
    normalization of [serial 2150]
 


Theorem (826)                               [serial 2239] 
P [216] << CCI = LRL
 and CCI = LRL >>
S [216] ->
Q [216] << true >>
by True Conclusion Schema (tc): P->true


Theorem (827)                               [serial 2237] 
P [216] << (LRL@now = CCI)@now
 and CCI = LRL >>
S [216] ->
Q [216] << true >>
by Assume Present:  P = P@now = P^0 
and theorem 826:
Theorem (826) [serial 2239] used for:
  Assume Present:  P = P@now = P^0  [serial 2237]
 


Theorem (828)                               [serial 2235] 
P [216] << (LRL@now = CCI)@now
 and CCI = LRL >>
S [216] ->
Q [216] << (true)@now >>
by Normalization
  Normalization Axiom:
    Constants are always the same
and theorem 827:
Theorem (827) [serial 2237] used for:
    normalization of [serial 2235]
 


Theorem (829)                               [serial 2234] 
P [216] << (LRL@now = CCI)@now
 and CCI = LRL >>
S [216] ->
Q [216] << (CCI = CCI)@now >>
by Equality Law (idistr):  a=a <-> true
and theorem 828:
Theorem (828) [serial 2235] used for:
  Equality Law (idistr):  a=a <-> true [serial 2234]
 


Theorem (830)                               [serial 2168] 
P [216] << (LRL@now = cci)@now
 and CCI = LRL >>
S [216] ->
Q [216] << (CCI = cci)@now >>
by Replacing port names with BLESS::Assertion properties
and theorem 829:
Theorem (829) [serial 2234] used for:
  Replacing port names with BLESS::Assertion properties [serial 2168]
 


Theorem (831)                               [serial 2151] 
P [216] << (CCI = LRL)
 and (cci = (LRL)@now)@now >>
S [216] ->
Q [216] << (cci = CCI)@now >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 830:
Theorem (830) [serial 2168] used for:
    normalization of [serial 2151]
 


Theorem (832)                               [serial 2130] 
P [215] << CCI = LRL >>
S [216] cci!(lrl?)
Q [217] << CCI = LRL >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 825 831:
Theorem (825) [serial 2150] used for:
  applied port output <<pre and (cci=(LRL)@now)@now>> -> <<post>> [serial 2130]
 
Theorem (831) [serial 2151] used for:
  applied port output <<pre and (cci=(LRL)@now)@now>> -> <<(cci=CCI)@now>> [serial 2130]
 


Theorem (833)                               [serial 2157] 
P [210] << 0 = now
 and CCI = LRL >>
S [219] ->
Q [220] << true >>
by True Conclusion Schema (tc): P->true


Theorem (834)                               [serial 2152] 
P [210] << 0 = now
 and CCI = LRL >>
S [219] ->
Q [220] << now = now >>
by Equality Law (idistr):  a=a <-> true
and theorem 833:
Theorem (833) [serial 2157] used for:
  Equality Law (idistr):  a=a <-> true [serial 2152]
 


Theorem (835)                               [serial 2131] 
P [210] << 0 = now
 and CCI = LRL >>
S [219] last_vp_or_vs := now
Q [220] << last_vp_or_vs = now >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 834:
Theorem (834) [serial 2152] used for:
  applied wp for assignment [serial 2131]
 


Theorem (836)                               [serial 2263] 
P [222] << 0 = now
 and AS >>
S [223] ->
Q [34] << AS >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (837)                               [serial 2261] 
P [222] << 0 = now
 and (AS) >>
S [223] ->
Q [34] << AS >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 836:
Theorem (836) [serial 2263] used for:
    normalization of [serial 2261]
 


Theorem (838)                               [serial 2259] 
P [222] << 0 = now
 and (AS iff true) >>
S [223] ->
Q [34] << AS >>
by Superfluity of Equivalence:  true <-> a is a
and theorem 837:
Theorem (837) [serial 2261] used for:
  Superfluity of Equivalence:  true <-> a is a [serial 2259]
 


Theorem (839)                               [serial 2257] 
P [222] << (0 = now)
 and (AS iff (true)) >>
S [223] ->
Q [34] << AS >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 838:
Theorem (838) [serial 2259] used for:
    normalization of [serial 2257]
 


Theorem (840)                               [serial 2256] 
P [222] << (0 = now)
 and (AS iff (true or 
(A@0
 and SA@0
 and not FB@0
 and not TNA@0))) >>
S [223] ->
Q [34] << AS >>
by Law of Or-Simplification: P or true is tautology
and theorem 839:
Theorem (839) [serial 2257] used for:
  Law of Or-Simplification: P or true is tautology [serial 2256]
 


Theorem (841)                               [serial 2255] 
P [222] << (0 = now)
 and (AS iff (0 = 0 or 
(A@0
 and SA@0
 and not FB@0
 and not TNA@0))) >>
S [223] ->
Q [34] << AS >>
by Equality Law (idistr):  a=a <-> true
and theorem 840:
Theorem (840) [serial 2256] used for:
  Equality Law (idistr):  a=a <-> true [serial 2255]
 


Theorem (842)                               [serial 2211] 
P [222] << 0 = now
 and (AS iff (0 = now or 
(A@now
 and SA@now
 and not FB@now
 and not TNA@now))) >>
S [223] ->
Q [34] << AS >>
by Substituting Equals Within Conjunction
and theorem 841:
Theorem (841) [serial 2255] used for:
  Substituting Equals Within Conjunction [serial 2211]
 


Theorem (843)                               [serial 2202] 
P [222] << 0 = now
 and ((AS iff ((((SA@now
 and A@now
 and not TNA@now
 and not FB@now)) or 
(now = 0))))) >>
S [223] ->
Q [34] << AS >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 842:
Theorem (842) [serial 2211] used for:
    normalization of [serial 2202]
 


Theorem (844)                               [serial 2197] 
P [222] << 0 = now
 and ((AS iff ((AS_A(now) or 
(now = 0))))) >>
S [223] ->
Q [34] << AS >>
by Substitution of Assertion Labels
and theorem 843:
Theorem (843) [serial 2202] used for:
  substituted Assertions' predicates for  labels  [serial 2197]
 


Theorem (845)                               [serial 2153] 
P [222] << 0 = now
 and AXIOM_AS() >>
S [223] ->
Q [34] << AS >>
by Substitution of Assertion Labels
and theorem 844:
Theorem (844) [serial 2197] used for:
  substituted Assertions' predicates for  labels  [serial 2153]
 


Theorem (846)                               [serial 2175] 
P [223] << AS@now
 and 0 = now
 and AXIOM_AS() >>
S [223] ->
Q [224] << AS@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (847)                               [serial 2158] 
P [223] << 0 = now
 and AXIOM_AS()
 and AS@now >>
S [223] ->
Q [224] << AS@now >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 846:
Theorem (846) [serial 2175] used for:
    normalization of [serial 2158]
 


Theorem (848)                               [serial 2154] 
P [223] << (0 = now
 and AXIOM_AS())
 and AS@now >>
S [223] ->
Q [224] << AS@now >>
by Associativity: (b.c).a = a.b.c
and theorem 847:
Theorem (847) [serial 2158] used for:
  Associativity: (b.c).a = a.b.c [serial 2154]
 


Theorem (849)                               [serial 2132] 
P [222] << 0 = now
 and AXIOM_AS() >>
S [223] as!
Q [224] << AS@now >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 845 848:
Theorem (845) [serial 2153] used for:
  applied port output <<pre>> -> <<M[as]>> [serial 2132]
 
Theorem (848) [serial 2154] used for:
  applied port output <<pre and M[as]@now>> -> <<post>> [serial 2132]
 


Theorem (850)                               [serial 2159] 
P [210] << 0 = now
 and CCI = LRL >>
S [226] ->
Q [227] << true >>
by True Conclusion Schema (tc): P->true


Theorem (851)                               [serial 2155] 
P [210] << 0 = now
 and CCI = LRL >>
S [226] ->
Q [227] << now = now >>
by Equality Law (idistr):  a=a <-> true
and theorem 850:
Theorem (850) [serial 2159] used for:
  Equality Law (idistr):  a=a <-> true [serial 2155]
 


Theorem (852)                               [serial 2133] 
P [210] << 0 = now
 and CCI = LRL >>
S [226] last_ap_or_as := now
Q [227] << last_ap_or_as = now >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 851:
Theorem (851) [serial 2155] used for:
  applied wp for assignment [serial 2133]
 


Theorem (853)                               [serial 2124] 
P [210] << 0 = now
 and CCI = LRL >>
S [211] << 0 = now
 and AXIOM_VS() >>
vs!
<< VS@now >>
&
<< CCI = LRL >>
cci!(lrl?)
<< CCI = LRL >>
&
last_vp_or_vs := now
<< last_vp_or_vs = now >>
&
<< 0 = now
 and AXIOM_AS() >>
as!
<< AS@now >>
&
last_ap_or_as := now
<< last_ap_or_as = now >>
Q [229] << last_ap_or_as <= last_vp_or_vs
 and LAST(now)
 and LRL_A(now) >>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 769 770 777 809 823 832 835 849 852:
Theorem (769) [serial 2125] used for:
  P -> P1 in concurrent composition for [serial 2124]
 
Theorem (770) [serial 2126] used for:
  P -> P2 in concurrent composition for [serial 2124]
 
Theorem (777) [serial 2127] used for:
  P -> P4 in concurrent composition for [serial 2124]
 
Theorem (809) [serial 2128] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 2124]
 
Theorem (823) [serial 2129] used for:
  <<P1>> S1 <<Q1>> in concurrent composition for [serial 2124]
 
Theorem (832) [serial 2130] used for:
  <<P2>> S2 <<Q2>> in concurrent composition for [serial 2124]
 
Theorem (835) [serial 2131] used for:
  <<P>> S3 <<Q3>> in concurrent composition for [serial 2124]
 
Theorem (849) [serial 2132] used for:
  <<P4>> S4 <<Q4>> in concurrent composition for [serial 2124]
 
Theorem (852) [serial 2133] used for:
  <<P>> S5 <<Q5>> in concurrent composition for [serial 2124]
 


Theorem (854)                               [serial 2120] 
P [210] << 0 = now
 and CCI = LRL >>
S [211]   {
  << 0 = now
   and AXIOM_VS() >>
  vs!
  << VS@now >>
  &
  << CCI = LRL >>
  cci!(lrl?)
  << CCI = LRL >>
  &
  last_vp_or_vs := now
  << last_vp_or_vs = now >>
  &
  << 0 = now
   and AXIOM_AS() >>
  as!
  << AS@now >>
  &
  last_ap_or_as := now
  << last_ap_or_as = now >>
  } 
Q [229] << last_ap_or_as <= last_vp_or_vs
 and LAST(now)
 and LRL_A(now) >>
by Introduction of Existential Quantification (bl.elq)
and theorem 853:
Theorem (853) [serial 2124] used for:
  <<P>> T <<Q>> in existential lattice quantification for [serial 2120]
 


Theorem (855)                               [serial 2114] 
P [210] << (((now = 0))
 and ((CCI = LRL))) >>
S [211]   {
  << ((now = 0)
   and AXIOM_VS()) >>
  vs!
  << VS@now >>
  &
  << (CCI = LRL) >>
  cci!(lrl?)
  << (CCI = LRL) >>
  &
  last_vp_or_vs := now
  << (last_vp_or_vs = now) >>
  &
  << ((now = 0)
   and AXIOM_AS()) >>
  as!
  << AS@now >>
  &
  last_ap_or_as := now
  << (last_ap_or_as = now) >>
  } 
Q [229] << (LAST(now)
 and LRL_A(now)
 and (last_ap_or_as <= last_vp_or_vs)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 854:
Theorem (854) [serial 2120] used for:
    normalization of [serial 2114]
 


Theorem (856)                               [serial 1057] 
P [187] << (((now = 0))
 and ((CCI = LRL))) >>
S [210] << (((now = 0))
 and ((CCI = LRL))) >>
  {
  << ((now = 0)
   and AXIOM_VS()) >>
  vs!
  << VS@now >>
  &
  << (CCI = LRL) >>
  cci!(lrl?)
  << (CCI = LRL) >>
  &
  last_vp_or_vs := now
  << (last_vp_or_vs = now) >>
  &
  << ((now = 0)
   and AXIOM_AS()) >>
  as!
  << AS@now >>
  &
  last_ap_or_as := now
  << (last_ap_or_as = now) >>
  } 
<< (LAST(now)
 and LRL_A(now)
 and (last_ap_or_as <= last_vp_or_vs)) >>
Q [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Introduction of Existential Quantification (bl.aab)
and theorems 750 762 855:
Theorem (750) [serial 2112] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1057]
 
Theorem (762) [serial 2113] used for:
  as <<post>> -> <<Q>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1057]
 
Theorem (855) [serial 2114] used for:
  as <<pre>> S <<post>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1057]
 


Theorem (857)                               [serial 2505] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (858)                               [serial 2512] 
P [233] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [233] ->
Q [238] << LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (859)                               [serial 2510] 
P [233] << (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) )
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [233] ->
Q [238] << LAST_AP_OR_AS_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 858:
Theorem (858) [serial 2512] used for:
  Associativity: (b.c).a = a.b.c [serial 2510]
 


Theorem (860)                               [serial 2508] 
P [233] << (vp or 
vs)@(now-max_cci)
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that ((AS or 
       AP))@t ))
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [238] << LAST_AP_OR_AS_A(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 859:
Theorem (859) [serial 2510] used for:
    normalization of [serial 2508]
 


Theorem (861)                               [serial 2506] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [238] << LAST_AP_OR_AS_A(now) >>
by Substitution of Assertion Labels
and theorem 860:
Theorem (860) [serial 2508] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2506]
 


Theorem (862)                               [serial 2507] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [235] << not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (863)                               [serial 2339] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 857 861 862:
Theorem (857) [serial 2505] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2339]
 
Theorem (861) [serial 2506] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2339]
 
Theorem (862) [serial 2507] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2339]
 


Theorem (864)                               [serial 2330] 
P [233] << (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 863:
Theorem (863) [serial 2339] used for:
    normalization of [serial 2330]
 


Theorem (865)                               [serial 2326] 
P [233] << not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) )
 and ((vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ))
 and (LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 864:
Theorem (864) [serial 2330] used for:
  Associativity: (b.c).a = a.b.c [serial 2326]
 


Theorem (866)                               [serial 2311] 
P [233] << not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) )
 and ((vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ))
 and (LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and true
 and true
 and true
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 865:
Theorem (865) [serial 2326] used for:
  Law of And-Simplification:  P and true is P [serial 2311]
 


Theorem (867)                               [serial 2300] 
P [233] << ((LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )))
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [233] ->
Q [234] << (((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and true
 and true
 and LAST_AP_OR_AS_A(now)
 and true
 and true) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 866:
Theorem (866) [serial 2311] used for:
    normalization of [serial 2300]
 


Theorem (868)                               [serial 2505] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (869)                               [serial 2512] 
P [233] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [233] ->
Q [238] << LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (870)                               [serial 2510] 
P [233] << (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) )
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [233] ->
Q [238] << LAST_AP_OR_AS_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 869:
Theorem (869) [serial 2512] used for:
  Associativity: (b.c).a = a.b.c [serial 2510]
 


Theorem (871)                               [serial 2508] 
P [233] << (vp or 
vs)@(now-max_cci)
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that ((AS or 
       AP))@t ))
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [238] << LAST_AP_OR_AS_A(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 870:
Theorem (870) [serial 2510] used for:
    normalization of [serial 2508]
 


Theorem (872)                               [serial 2506] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [238] << LAST_AP_OR_AS_A(now) >>
by Substitution of Assertion Labels
and theorem 871:
Theorem (871) [serial 2508] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2506]
 


Theorem (873)                               [serial 2507] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [235] << not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (874)                               [serial 2339] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 868 872 873:
Theorem (868) [serial 2505] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2339]
 
Theorem (872) [serial 2506] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2339]
 
Theorem (873) [serial 2507] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2339]
 


Theorem (875)                               [serial 2330] 
P [233] << (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 874:
Theorem (874) [serial 2339] used for:
    normalization of [serial 2330]
 


Theorem (876)                               [serial 2326] 
P [233] << not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) )
 and ((vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ))
 and (LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 875:
Theorem (875) [serial 2330] used for:
  Associativity: (b.c).a = a.b.c [serial 2326]
 


Theorem (877)                               [serial 2311] 
P [233] << not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) )
 and ((vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ))
 and (LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and true
 and true
 and true
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 876:
Theorem (876) [serial 2326] used for:
  Law of And-Simplification:  P and true is P [serial 2311]
 


Theorem (878)                               [serial 2300] 
P [233] << ((LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )))
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [233] ->
Q [234] << (((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and true
 and true
 and LAST_AP_OR_AS_A(now)
 and true
 and true) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 877:
Theorem (877) [serial 2311] used for:
    normalization of [serial 2300]
 


Theorem (879)                               [serial 2290] 
P [233] << ((LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )))
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [233] ->
Q [234] << (((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 878 878:
Theorem (878) [serial 2300] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (878) [serial 2300] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (880)                               [serial 2398] 
P [255] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and last_ap_or_as <= tops
 and VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now >>
S [200] ->
Q [175] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (881)                               [serial 2396] 
P [255] << last_ap_or_as <= tops
 and VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)) >>
S [200] ->
Q [175] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by Associativity: (b.c).a = a.b.c
and theorem 880:
Theorem (880) [serial 2398] used for:
  Associativity: (b.c).a = a.b.c [serial 2396]
 


Theorem (882)                               [serial 2394] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and ((last_ap_or_as <= tops))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t ))) >>
S [200] ->
Q [175] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 881:
Theorem (881) [serial 2396] used for:
    normalization of [serial 2394]
 


Theorem (883)                               [serial 2378] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [175] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by Substitution of Assertion Labels
and theorem 882:
Theorem (882) [serial 2394] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2378]
 


Theorem (884)                               [serial 2375] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [175] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 883:
Theorem (883) [serial 2378] used for:
    normalization of [serial 2375]
 


Theorem (885)                               [serial 2392] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [169] << VP@now or 
VS@now >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (886)                               [serial 2389] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [169] << ((VP@now or 
VS@now)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 885:
Theorem (885) [serial 2392] used for:
    normalization of [serial 2389]
 


Theorem (887)                               [serial 2387] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [169] << true
 and (VP@now or 
VS@now) >>
by Law of And-Simplification:  P and true is P
and theorem 886:
Theorem (886) [serial 2389] used for:
  Law of And-Simplification:  P and true is P [serial 2387]
 


Theorem (888)                               [serial 2384] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [169] << not (false)
 and (VP@now or 
VS@now) >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 887:
Theorem (887) [serial 2387] used for:
    normalization of [serial 2384]
 


Theorem (889)                               [serial 2383] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [169] << not (exists t~time
  in now ,, now 
  that (VP or 
       VS)@t )
 and (VP@now or 
VS@now) >>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 888:
Theorem (888) [serial 2384] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 2383]
 


Theorem (890)                               [serial 2380] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [169] << not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
by Guided Substitution of Equals
and theorem 889:
Theorem (889) [serial 2383] used for:
  Guided Substitution of Equals
 replacing "last_vp_or_vs" with its = "now" in its postcondition [serial 2380]
 


Theorem (891)                               [serial 2376] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [169] << (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 890:
Theorem (890) [serial 2380] used for:
    normalization of [serial 2376]
 


Theorem (892)                               [serial 2373] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 884 891:
Theorem (884) [serial 2375] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2373]
 
Theorem (891) [serial 2376] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2373]
 


Theorem (893)                               [serial 2371] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))
 and ((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t ))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 892:
Theorem (892) [serial 2373] used for:
    normalization of [serial 2371]
 


Theorem (894)                               [serial 2350] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
by Substitution of Assertion Labels
and theorem 893:
Theorem (893) [serial 2371] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2350]
 


Theorem (895)                               [serial 2346] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 894:
Theorem (894) [serial 2350] used for:
    normalization of [serial 2346]
 


Theorem (896)                               [serial 2369] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [79] << VP@now or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (897)                               [serial 2366] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [79] << (VP@now) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 896:
Theorem (896) [serial 2369] used for:
    normalization of [serial 2366]
 


Theorem (898)                               [serial 2365] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [79] << (exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ) >>
by Introduction of Existential Quantification
and theorem 897:
Theorem (897) [serial 2366] used for:
  replace exists with upper or lower bound [serial 2365]
 


Theorem (899)                               [serial 2352] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [79] << exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t  >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 898:
Theorem (898) [serial 2365] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 2352]
 


Theorem (900)                               [serial 2347] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [79] << (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 899:
Theorem (899) [serial 2352] used for:
    normalization of [serial 2347]
 


Theorem (901)                               [serial 2363] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [120] << true >>
by True Conclusion Schema (tc): P->true


Theorem (902)                               [serial 2359] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [120] << not (false) >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 901:
Theorem (901) [serial 2363] used for:
    normalization of [serial 2359]
 


Theorem (903)                               [serial 2358] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [120] << not (exists t~time
  in now ,, now 
  that (AP or 
       AS)@t ) >>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 902:
Theorem (902) [serial 2359] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 2358]
 


Theorem (904)                               [serial 2354] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [120] << not (exists t~time
  in last_vp_or_vs ,, now 
  that (AP or 
       AS)@t ) >>
by Guided Substitution of Equals
and theorem 903:
Theorem (903) [serial 2358] used for:
  Guided Substitution of Equals
 replacing "last_vp_or_vs" with its = "now" in its postcondition [serial 2354]
 


Theorem (905)                               [serial 2348] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [120] << (not (exists t~time
  in last_vp_or_vs ,, now 
  that ((AS or 
       AP))@t )) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 904:
Theorem (904) [serial 2354] used for:
    normalization of [serial 2348]
 


Theorem (906)                               [serial 2345] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that ((AS or 
       AP))@t )) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 895 900 905:
Theorem (895) [serial 2346] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2345]
 
Theorem (900) [serial 2347] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2345]
 
Theorem (905) [serial 2348] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2345]
 


Theorem (907)                               [serial 2305] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << LAST(now)
 and LRL_A(now)
 and VAI(now) >>
by Substitution of Assertion Labels
and theorem 906:
Theorem (906) [serial 2345] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2305]
 


Theorem (908)                               [serial 2291] 
P [255] << (VP@last_vp_or_vs
 and VP@now
 and AXIOM_LAST_AS_LE_TOPS()
 and ((last_vp_or_vs = now))
 and LAST_AP_OR_AS_A(now)) >>
S [200] ->
Q [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 907:
Theorem (907) [serial 2305] used for:
    normalization of [serial 2291]
 


Theorem (909)                               [serial 2498] 
P [234] << last_ap_or_as <= tops
 and not (exists #0#~time
  in last_ap_or_as ,, now 
  that AP@#0# or 
       AS@#0# )
 and not (exists #1#~time
  in now - MAX_CCI ,, now 
  that VP@#1# or 
       VS@#1# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [143] << not (exists #2#~time
  in now - MAX_CCI ,, now 
  that VP@#2# or 
       VS@#2# ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (910)                               [serial 2489] 
P [234] << last_ap_or_as <= tops
 and not (exists #0#~time
  in last_ap_or_as ,, now 
  that AP@#0# or 
       AS@#0# )
 and not (exists #1#~time
  in now - MAX_CCI ,, now 
  that VP@#1# or 
       VS@#1# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [143] << not (exists #2#~time
  in now - MIN_CCI ,, now 
  that VP@#2# or 
       VS@#2# ) >>
by Extend Existential Quantification Range:  
and theorem 909:
Theorem (909) [serial 2498] used for:
  Extend Existential Quantification Range:   [serial 2489]
 


Theorem (911)                               [serial 2428] 
P [234] << last_ap_or_as <= tops
 and not (exists #0#~time
  in last_ap_or_as ,, now 
  that AP@#0# or 
       AS@#0# )
 and not (exists #1#~time
  in now - max_cci ,, now 
  that VP@#1# or 
       VS@#1# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << not (exists #2#~time
  in now - MIN_CCI ,, now 
  that VP@#2# or 
       VS@#2# ) >>
by Replacing port names with BLESS::Assertion properties
and theorem 910:
Theorem (910) [serial 2489] used for:
  Replacing port names with BLESS::Assertion properties [serial 2428]
 


Theorem (912)                               [serial 2425] 
P [234] << last_ap_or_as <= tops
 and ((VP)@(now-max_cci) or 
(VS)@(now-max_cci))
 and not (exists #0#~time
  in last_ap_or_as ,, now 
  that ((AP)@#0# or 
       (AS)@#0#) )
 and not (exists #1#~time
  in now - max_cci ,, now 
  that ((VP)@#1# or 
       (VS)@#1#) )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << not (exists #2#~time
  in now - MIN_CCI ,, now 
  that VP@#2# or 
       VS@#2# ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 911:
Theorem (911) [serial 2428] used for:
    normalization of [serial 2425]
 


Theorem (913)                               [serial 2423] 
P [234] << last_ap_or_as <= tops
 and (VP or 
VS)@(now-max_cci)
 and not (exists #0#~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@#0# )
 and not (exists #1#~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@#1# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << not (exists #2#~time
  in now - MIN_CCI ,, now 
  that VP@#2# or 
       VS@#2# ) >>
by Distribute @
and theorem 912:
Theorem (912) [serial 2425] used for:
  Distribute @ [serial 2423]
 


Theorem (914)                               [serial 2421] 
P [234] << last_ap_or_as <= tops
 and (VP or 
VS)@(now-max_cci)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 913:
Theorem (913) [serial 2423] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2421]
 


Theorem (915)                               [serial 2416] 
P [234] << last_ap_or_as <= tops
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Replacing port names with BLESS::Assertion properties
and theorem 914:
Theorem (914) [serial 2421] used for:
  Replacing port names with BLESS::Assertion properties [serial 2416]
 


Theorem (916)                               [serial 2413] 
P [234] << last_ap_or_as <= tops
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << (not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 915:
Theorem (915) [serial 2416] used for:
    normalization of [serial 2413]
 


Theorem (917)                               [serial 2411] 
P [234] << last_ap_or_as <= tops
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << URL_A(now) >>
by Substitution of Assertion Labels
and theorem 916:
Theorem (916) [serial 2413] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2411]
 


Theorem (918)                               [serial 2490] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - MAX_CCI ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [209] << AP@(now-AV) or 
AS@(now-(SAVO+DAV_A())) or 
VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (919)                               [serial 2459] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << AP@(now-AV) or 
AS@(now-(SAVO+DAV_A())) or 
VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) >>
by Replacing port names with BLESS::Assertion properties
and theorem 918:
Theorem (918) [serial 2490] used for:
  Replacing port names with BLESS::Assertion properties [serial 2459]
 


Theorem (920)                               [serial 2449] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << (AP@(now-AV) or 
AS@(now-(SAVO+DAV_A())) or 
VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 919:
Theorem (919) [serial 2459] used for:
    normalization of [serial 2449]
 


Theorem (921)                               [serial 2491] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - MAX_CCI ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [209] << AP@(now-AV) or 
AS@(now-(SAVO+DAV_A())) or 
not (exists #5#~time
  in now - MAX_CCI ,, now 
  that VP@#5# or 
       VS@#5# ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (922)                               [serial 2482] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << AP@(now-AV) or 
AS@(now-(SAVO+DAV_A())) or 
not (exists #5#~time
  in now - MAX_CCI ,, now 
  that VP@#5# or 
       VS@#5# ) >>
by Replacing port names with BLESS::Assertion properties
and theorem 921:
Theorem (921) [serial 2491] used for:
  Replacing port names with BLESS::Assertion properties [serial 2482]
 


Theorem (923)                               [serial 2461] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << AP@(now-AV) or 
AS@(now-(SAVO+DAV_A())) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 922:
Theorem (922) [serial 2482] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2461]
 


Theorem (924)                               [serial 2450] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << (AP@(now-AV) or 
AS@(now-(SAVO+DAV_A())) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 923:
Theorem (923) [serial 2461] used for:
    normalization of [serial 2450]
 


Theorem (925)                               [serial 2492] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - MAX_CCI ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [209] << AP@(now-AV) or 
VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
not (exists #6#~time
  in now - MIN_CCI ,, now 
  that VP@#6# or 
       VS@#6# ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (926)                               [serial 2483] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << AP@(now-AV) or 
VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
not (exists #6#~time
  in now - MIN_CCI ,, now 
  that VP@#6# or 
       VS@#6# ) >>
by Replacing port names with BLESS::Assertion properties
and theorem 925:
Theorem (925) [serial 2492] used for:
  Replacing port names with BLESS::Assertion properties [serial 2483]
 


Theorem (927)                               [serial 2463] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << AP@(now-AV) or 
VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 926:
Theorem (926) [serial 2483] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2463]
 


Theorem (928)                               [serial 2451] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << (AP@(now-AV) or 
VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 927:
Theorem (927) [serial 2463] used for:
    normalization of [serial 2451]
 


Theorem (929)                               [serial 2493] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - MAX_CCI ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [209] << AP@(now-AV) or 
not (exists #7#~time
  in now - MAX_CCI ,, now 
  that VP@#7# or 
       VS@#7# ) or 
not (exists #8#~time
  in now - MIN_CCI ,, now 
  that VP@#8# or 
       VS@#8# ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (930)                               [serial 2484] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << AP@(now-AV) or 
not (exists #7#~time
  in now - MAX_CCI ,, now 
  that VP@#7# or 
       VS@#7# ) or 
not (exists #8#~time
  in now - MIN_CCI ,, now 
  that VP@#8# or 
       VS@#8# ) >>
by Replacing port names with BLESS::Assertion properties
and theorem 929:
Theorem (929) [serial 2493] used for:
  Replacing port names with BLESS::Assertion properties [serial 2484]
 


Theorem (931)                               [serial 2465] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << AP@(now-AV) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 930:
Theorem (930) [serial 2484] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2465]
 


Theorem (932)                               [serial 2452] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << (AP@(now-AV) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 931:
Theorem (931) [serial 2465] used for:
    normalization of [serial 2452]
 


Theorem (933)                               [serial 2494] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - MAX_CCI ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [209] << AS@(now-(SAVO+DAV_A())) or 
VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
not (exists #9#~time
  in now - MIN_CCI ,, now 
  that VP@#9# or 
       VS@#9# ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (934)                               [serial 2485] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << AS@(now-(SAVO+DAV_A())) or 
VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
not (exists #9#~time
  in now - MIN_CCI ,, now 
  that VP@#9# or 
       VS@#9# ) >>
by Replacing port names with BLESS::Assertion properties
and theorem 933:
Theorem (933) [serial 2494] used for:
  Replacing port names with BLESS::Assertion properties [serial 2485]
 


Theorem (935)                               [serial 2467] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << AS@(now-(SAVO+DAV_A())) or 
VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 934:
Theorem (934) [serial 2485] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2467]
 


Theorem (936)                               [serial 2453] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << (AS@(now-(SAVO+DAV_A())) or 
VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 935:
Theorem (935) [serial 2467] used for:
    normalization of [serial 2453]
 


Theorem (937)                               [serial 2495] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - MAX_CCI ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [209] << AS@(now-(SAVO+DAV_A())) or 
not (exists #10#~time
  in now - MAX_CCI ,, now 
  that VP@#10# or 
       VS@#10# ) or 
not (exists #11#~time
  in now - MIN_CCI ,, now 
  that VP@#11# or 
       VS@#11# ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (938)                               [serial 2486] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << AS@(now-(SAVO+DAV_A())) or 
not (exists #10#~time
  in now - MAX_CCI ,, now 
  that VP@#10# or 
       VS@#10# ) or 
not (exists #11#~time
  in now - MIN_CCI ,, now 
  that VP@#11# or 
       VS@#11# ) >>
by Replacing port names with BLESS::Assertion properties
and theorem 937:
Theorem (937) [serial 2495] used for:
  Replacing port names with BLESS::Assertion properties [serial 2486]
 


Theorem (939)                               [serial 2469] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << AS@(now-(SAVO+DAV_A())) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 938:
Theorem (938) [serial 2486] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2469]
 


Theorem (940)                               [serial 2454] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << (AS@(now-(SAVO+DAV_A())) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 939:
Theorem (939) [serial 2469] used for:
    normalization of [serial 2454]
 


Theorem (941)                               [serial 2496] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - MAX_CCI ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [209] << VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
not (exists #12#~time
  in now - MIN_CCI ,, now 
  that VP@#12# or 
       VS@#12# ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (942)                               [serial 2487] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
not (exists #12#~time
  in now - MIN_CCI ,, now 
  that VP@#12# or 
       VS@#12# ) >>
by Replacing port names with BLESS::Assertion properties
and theorem 941:
Theorem (941) [serial 2496] used for:
  Replacing port names with BLESS::Assertion properties [serial 2487]
 


Theorem (943)                               [serial 2471] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 942:
Theorem (942) [serial 2487] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2471]
 


Theorem (944)                               [serial 2455] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 943:
Theorem (943) [serial 2471] used for:
    normalization of [serial 2455]
 


Theorem (945)                               [serial 2497] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - MAX_CCI ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [209] << not (exists #13#~time
  in now - MAX_CCI ,, now 
  that VP@#13# or 
       VS@#13# ) or 
not (exists #14#~time
  in now - MIN_CCI ,, now 
  that VP@#14# or 
       VS@#14# ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (946)                               [serial 2488] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << not (exists #13#~time
  in now - MAX_CCI ,, now 
  that VP@#13# or 
       VS@#13# ) or 
not (exists #14#~time
  in now - MIN_CCI ,, now 
  that VP@#14# or 
       VS@#14# ) >>
by Replacing port names with BLESS::Assertion properties
and theorem 945:
Theorem (945) [serial 2497] used for:
  Replacing port names with BLESS::Assertion properties [serial 2488]
 


Theorem (947)                               [serial 2473] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 946:
Theorem (946) [serial 2488] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2473]
 


Theorem (948)                               [serial 2456] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << (not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 947:
Theorem (947) [serial 2473] used for:
    normalization of [serial 2456]
 


Theorem (949)                               [serial 2447] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << (AP@(now-AV) or 
AS@(now-(SAVO+DAV_A())) or 
VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (AP@(now-AV) or 
AS@(now-(SAVO+DAV_A())) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ))
 and (AP@(now-AV) or 
VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ))
 and (AP@(now-AV) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ))
 and (AS@(now-(SAVO+DAV_A())) or 
VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ))
 and (AS@(now-(SAVO+DAV_A())) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ))
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ))
 and (not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 920 924 928 932 936 940 944 948:
Theorem (920) [serial 2449] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2447]
 
Theorem (924) [serial 2450] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2447]
 
Theorem (928) [serial 2451] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2447]
 
Theorem (932) [serial 2452] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2447]
 
Theorem (936) [serial 2453] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2447]
 
Theorem (940) [serial 2454] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2447]
 
Theorem (944) [serial 2455] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2447]
 
Theorem (948) [serial 2456] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2447]
 


Theorem (950)                               [serial 2444] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << (AP@(now-AV) or 
AS@(now-(SAVO+DAV_A())) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ))
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
AP@(now-AV) or 
AS@(now-(SAVO+DAV_A())))
 and (AP@(now-AV) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ))
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
AP@(now-AV) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ))
 and (AS@(now-(SAVO+DAV_A())) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ))
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
AS@(now-(SAVO+DAV_A())) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ))
 and (not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ))
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 949:
Theorem (949) [serial 2447] used for:
    normalization of [serial 2444]
 


Theorem (951)                               [serial 2443] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << (AP@(now-AV) or 
AS@(now-(SAVO+DAV_A())) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ))
 and (AP@(now-AV) or 
AS@(now-(SAVO+DAV_A())) or 
(VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI)))
 and (AP@(now-AV) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ))
 and (AP@(now-AV) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) or 
(VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI)))
 and (AS@(now-(SAVO+DAV_A())) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ))
 and (AS@(now-(SAVO+DAV_A())) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) or 
(VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI)))
 and (not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ))
 and (not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) or 
(VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))) >>
by Associativity: (b.c).a = a.b.c
and theorem 950:
Theorem (950) [serial 2444] used for:
  Associativity: (b.c).a = a.b.c [serial 2443]
 


Theorem (952)                               [serial 2441] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << (AP@(now-AV) or 
AS@(now-(SAVO+DAV_A())) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ))
 and (AP@(now-AV) or 
AS@(now-(SAVO+DAV_A())) or 
(VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI)))
 and (AP@(now-AV) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ))
 and (AP@(now-AV) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) or 
(VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI)))
 and (AS@(now-(SAVO+DAV_A())) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ))
 and (AS@(now-(SAVO+DAV_A())) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) or 
(VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI)))
 and (not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ))
 and (not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) or 
(VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))) >>
by Law of Or-Simplification: P or P is P
and theorem 951:
Theorem (951) [serial 2443] used for:
  Law of Or-Simplification: P or P is P [serial 2441]
 


Theorem (953)                               [serial 2438] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << (AP@(now-AV) or 
AS@(now-(SAVO+DAV_A())) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ))
 and (not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) or 
AS@(now-(SAVO+DAV_A())) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ))
 and (AP@(now-AV) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ))
 and (not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) or 
not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t ))
 and (AP@(now-AV) or 
AS@(now-(SAVO+DAV_A())) or 
(VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI)))
 and (not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) or 
AS@(now-(SAVO+DAV_A())) or 
(VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI)))
 and (AP@(now-AV) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) or 
(VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI)))
 and (not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) or 
not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) or 
(VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 952:
Theorem (952) [serial 2441] used for:
    normalization of [serial 2438]
 


Theorem (954)                               [serial 2436] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << (AP@(now-AV)
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )) or 
(AS@(now-(SAVO+DAV_A()))
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )) or 
(not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t )
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 953:
Theorem (953) [serial 2438] used for:
  Distributing Postcondition Or-Over-And [serial 2436]
 


Theorem (955)                               [serial 2433] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << ((AP@((now-AV))
 and not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) ))) or 
((((VP@((now-MAX_CCI)) or 
VS@((now-MAX_CCI))))
 and not (exists t~time
  in ((now - MAX_CCI)) ,, now 
  that ((VS@t or 
       VP@t)) ))) or 
((AS@((now-((DAV_A()+SAVO))))
 and not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 954:
Theorem (954) [serial 2436] used for:
    normalization of [serial 2433]
 


Theorem (956)                               [serial 2430] 
P [234] << last_ap_or_as <= tops
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that AP@#3# or 
       AS@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that VP@#4# or 
       VS@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_MaxCCI(now) or 
PACE_ON_SAV_DELAY(now) >>
by Substitution of Assertion Labels
and theorem 955:
Theorem (955) [serial 2433] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2430]
 


Theorem (957)                               [serial 2426] 
P [234] << last_ap_or_as <= tops
 and ((VP)@(now-max_cci) or 
(VS)@(now-max_cci))
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that ((AP)@#3# or 
       (AS)@#3#) )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that ((VP)@#4# or 
       (VS)@#4#) )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_MaxCCI(now) or 
PACE_ON_SAV_DELAY(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 956:
Theorem (956) [serial 2430] used for:
    normalization of [serial 2426]
 


Theorem (958)                               [serial 2424] 
P [234] << last_ap_or_as <= tops
 and (VP or 
VS)@(now-max_cci)
 and not (exists #3#~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@#3# )
 and not (exists #4#~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@#4# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_MaxCCI(now) or 
PACE_ON_SAV_DELAY(now) >>
by Distribute @
and theorem 957:
Theorem (957) [serial 2426] used for:
  Distribute @ [serial 2424]
 


Theorem (959)                               [serial 2422] 
P [234] << last_ap_or_as <= tops
 and (VP or 
VS)@(now-max_cci)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_MaxCCI(now) or 
PACE_ON_SAV_DELAY(now) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 958:
Theorem (958) [serial 2424] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2422]
 


Theorem (960)                               [serial 2418] 
P [234] << last_ap_or_as <= tops
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_MaxCCI(now) or 
PACE_ON_SAV_DELAY(now) >>
by Replacing port names with BLESS::Assertion properties
and theorem 959:
Theorem (959) [serial 2422] used for:
  Replacing port names with BLESS::Assertion properties [serial 2418]
 


Theorem (961)                               [serial 2414] 
P [234] << last_ap_or_as <= tops
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << ((PACE_ON_MaxCCI(now) or 
PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_SAV_DELAY(now))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 960:
Theorem (960) [serial 2418] used for:
    normalization of [serial 2414]
 


Theorem (962)                               [serial 2412] 
P [234] << last_ap_or_as <= tops
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [143] << VP_A(now) >>
by Substitution of Assertion Labels
and theorem 961:
Theorem (961) [serial 2414] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2412]
 


Theorem (963)                               [serial 2409] 
P [234] << last_ap_or_as <= tops
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [31] << URL_A(now)
 and VP_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 917 962:
Theorem (917) [serial 2411] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2409]
 
Theorem (962) [serial 2412] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2409]
 


Theorem (964)                               [serial 2407] 
P [234] << last_ap_or_as <= tops
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [31] << ((URL_A(now)
 and VP_A(now))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 963:
Theorem (963) [serial 2409] used for:
    normalization of [serial 2407]
 


Theorem (965)                               [serial 2405] 
P [234] << last_ap_or_as <= tops
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [31] << VP >>
by Guided Substitution of Equals
and theorem 964:
Theorem (964) [serial 2407] used for:
  Guided Substitution of Equals
 replacing "VP" with its iff "((URL_A(now)
 and VP_A(now)))" in its postcondition [serial 2405]
 


Theorem (966)                               [serial 2403] 
P [234] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and last_ap_or_as <= tops
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [31] << VP >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 965:
Theorem (965) [serial 2405] used for:
    normalization of [serial 2403]
 


Theorem (967)                               [serial 2401] 
P [234] << last_ap_or_as <= tops
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [31] << VP >>
by Associativity: (b.c).a = a.b.c
and theorem 966:
Theorem (966) [serial 2403] used for:
  Associativity: (b.c).a = a.b.c [serial 2401]
 


Theorem (968)                               [serial 2399] 
P [234] << (vp or 
vs)@(now-max_cci)
 and ((last_ap_or_as <= tops))
 and ((((now - max_cci)) < ((now - min_cci))))
 and ((VP iff ((VP_A(now)
 and URL_A(now)))))
 and ((VS iff ((VS_A(now) or 
(now = 0)))))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [239] ->
Q [31] << VP >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 967:
Theorem (967) [serial 2401] used for:
    normalization of [serial 2399]
 


Theorem (969)                               [serial 2307] 
P [234] << (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [239] ->
Q [31] << VP >>
by Substitution of Assertion Labels
and theorem 968:
Theorem (968) [serial 2399] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2307]
 


Theorem (970)                               [serial 2295] 
P [234] << (((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [239] ->
Q [31] << VP >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 969:
Theorem (969) [serial 2307] used for:
    normalization of [serial 2295]
 


Theorem (971)                               [serial 2331] 
P [239] << (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and VP@now >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (972)                               [serial 2327] 
P [239] << VP@now
 and ((vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 971:
Theorem (971) [serial 2331] used for:
  Associativity: (b.c).a = a.b.c [serial 2327]
 


Theorem (973)                               [serial 2313] 
P [239] << VP@now
 and ((vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 972:
Theorem (972) [serial 2327] used for:
  Law of And-Simplification:  P and true is P [serial 2313]
 


Theorem (974)                               [serial 2301] 
P [239] << ((((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)))
 and VP@now >>
S [239] ->
Q [240] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and true) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 973:
Theorem (973) [serial 2313] used for:
    normalization of [serial 2301]
 


Theorem (975)                               [serial 2331] 
P [239] << (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and VP@now >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (976)                               [serial 2327] 
P [239] << VP@now
 and ((vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 975:
Theorem (975) [serial 2331] used for:
  Associativity: (b.c).a = a.b.c [serial 2327]
 


Theorem (977)                               [serial 2313] 
P [239] << VP@now
 and ((vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 976:
Theorem (976) [serial 2327] used for:
  Law of And-Simplification:  P and true is P [serial 2313]
 


Theorem (978)                               [serial 2301] 
P [239] << ((((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)))
 and VP@now >>
S [239] ->
Q [240] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and true) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 977:
Theorem (977) [serial 2313] used for:
    normalization of [serial 2301]
 


Theorem (979)                               [serial 2296] 
P [239] << ((((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)))
 and VP@now >>
S [239] ->
Q [240] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 978 978:
Theorem (978) [serial 2301] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (978) [serial 2301] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (980)                               [serial 2292] 
P [234] << (((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [239] vp!
Q [240] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 970 979:
Theorem (970) [serial 2295] used for:
  applied port output <<pre>> -> <<M[vp]>> [serial 2292]
 
Theorem (979) [serial 2296] used for:
  applied port output <<pre and M[vp]@now>> -> <<post>> [serial 2292]
 


Theorem (981)                               [serial 2513] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (982)                               [serial 2517] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [251] << (VP or 
VS)@(now-max_cci) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (983)                               [serial 2514] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [251] << (VP or 
VS)@(now-max_cci) >>
by Replacing port names with BLESS::Assertion properties
and theorem 982:
Theorem (982) [serial 2517] used for:
  Replacing port names with BLESS::Assertion properties [serial 2514]
 


Theorem (984)                               [serial 2515] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [252] << LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (985)                               [serial 2518] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [248] << not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (986)                               [serial 2516] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Replacing port names with BLESS::Assertion properties
and theorem 985:
Theorem (985) [serial 2518] used for:
  Replacing port names with BLESS::Assertion properties [serial 2516]
 


Theorem (987)                               [serial 2341] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 981 983 984 986:
Theorem (981) [serial 2513] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2341]
 
Theorem (983) [serial 2514] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2341]
 
Theorem (984) [serial 2515] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2341]
 
Theorem (986) [serial 2516] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2341]
 


Theorem (988)                               [serial 2332] 
P [247] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and (cci = (now - last_vp_or_vs))@now >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 987:
Theorem (987) [serial 2341] used for:
    normalization of [serial 2332]
 


Theorem (989)                               [serial 2328] 
P [247] << (cci = (now - last_vp_or_vs))@now
 and (VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 988:
Theorem (988) [serial 2332] used for:
  Associativity: (b.c).a = a.b.c [serial 2328]
 


Theorem (990)                               [serial 2315] 
P [247] << (cci = (now - last_vp_or_vs))@now
 and (VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t )
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 989:
Theorem (989) [serial 2328] used for:
  Law of And-Simplification:  P and true is P [serial 2315]
 


Theorem (991)                               [serial 2302] 
P [247] << ((VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)))
 and (cci = ((now - last_vp_or_vs)))@now >>
S [247] ->
Q [248] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and true) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 990:
Theorem (990) [serial 2315] used for:
    normalization of [serial 2302]
 


Theorem (992)                               [serial 2513] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (993)                               [serial 2517] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [251] << (VP or 
VS)@(now-max_cci) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (994)                               [serial 2514] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [251] << (VP or 
VS)@(now-max_cci) >>
by Replacing port names with BLESS::Assertion properties
and theorem 993:
Theorem (993) [serial 2517] used for:
  Replacing port names with BLESS::Assertion properties [serial 2514]
 


Theorem (995)                               [serial 2515] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [252] << LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (996)                               [serial 2518] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [248] << not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (997)                               [serial 2516] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Replacing port names with BLESS::Assertion properties
and theorem 996:
Theorem (996) [serial 2518] used for:
  Replacing port names with BLESS::Assertion properties [serial 2516]
 


Theorem (998)                               [serial 2341] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 992 994 995 997:
Theorem (992) [serial 2513] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2341]
 
Theorem (994) [serial 2514] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2341]
 
Theorem (995) [serial 2515] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2341]
 
Theorem (997) [serial 2516] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2341]
 


Theorem (999)                               [serial 2332] 
P [247] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and (cci = (now - last_vp_or_vs))@now >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 998:
Theorem (998) [serial 2341] used for:
    normalization of [serial 2332]
 


Theorem (1000)                               [serial 2328] 
P [247] << (cci = (now - last_vp_or_vs))@now
 and (VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 999:
Theorem (999) [serial 2332] used for:
  Associativity: (b.c).a = a.b.c [serial 2328]
 


Theorem (1001)                               [serial 2315] 
P [247] << (cci = (now - last_vp_or_vs))@now
 and (VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t )
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1000:
Theorem (1000) [serial 2328] used for:
  Law of And-Simplification:  P and true is P [serial 2315]
 


Theorem (1002)                               [serial 2302] 
P [247] << ((VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)))
 and (cci = ((now - last_vp_or_vs)))@now >>
S [247] ->
Q [248] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and true) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1001:
Theorem (1001) [serial 2315] used for:
    normalization of [serial 2302]
 


Theorem (1003)                               [serial 2297] 
P [247] << ((VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)))
 and (cci = ((now - last_vp_or_vs)))@now >>
S [247] ->
Q [248] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1002 1002:
Theorem (1002) [serial 2302] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1002) [serial 2302] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1004)                               [serial 2503] 
P [247] << VP@now
 and (CCI = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-MAX_CCI)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [247] << true >>
by True Conclusion Schema (tc): P->true


Theorem (1005)                               [serial 2501] 
P [247] << VP@now
 and (CCI = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-MAX_CCI)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [247] << (true)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Constants are always the same
and theorem 1004:
Theorem (1004) [serial 2503] used for:
    normalization of [serial 2501]
 


Theorem (1006)                               [serial 2500] 
P [247] << VP@now
 and (CCI = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-MAX_CCI)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [247] << (CCI = CCI)@now >>
by Equality Law (idistr):  a=a <-> true
and theorem 1005:
Theorem (1005) [serial 2501] used for:
  Equality Law (idistr):  a=a <-> true [serial 2500]
 


Theorem (1007)                               [serial 2499] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [247] << (CCI = cci)@now >>
by Replacing port names with BLESS::Assertion properties
and theorem 1006:
Theorem (1006) [serial 2500] used for:
  Replacing port names with BLESS::Assertion properties [serial 2499]
 


Theorem (1008)                               [serial 2337] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [247] << (CCI = cci)@now >>
by Replacing port names with BLESS::Assertion properties
and theorem 1007:
Theorem (1007) [serial 2499] used for:
  Replacing port names with BLESS::Assertion properties [serial 2337]
 


Theorem (1009)                               [serial 2325] 
P [247] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and (cci = (now - last_vp_or_vs))@now >>
S [247] ->
Q [247] << (CCI = cci)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1008:
Theorem (1008) [serial 2337] used for:
    normalization of [serial 2325]
 


Theorem (1010)                               [serial 2309] 
P [247] << (cci = (now - last_vp_or_vs))@now
 and (VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )) >>
S [247] ->
Q [247] << (CCI = cci)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 1009:
Theorem (1009) [serial 2325] used for:
  Associativity: (b.c).a = a.b.c [serial 2309]
 


Theorem (1011)                               [serial 2298] 
P [247] << ((VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)))
 and (cci = ((now - last_vp_or_vs)))@now >>
S [247] ->
Q [247] << (cci = CCI)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1010:
Theorem (1010) [serial 2309] used for:
    normalization of [serial 2298]
 


Theorem (1012)                               [serial 2293] 
P [240] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [247] cci!((now - last_vp_or_vs))
Q [248] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 1003 1011:
Theorem (1003) [serial 2297] used for:
  applied port output <<pre and (cci=(now - last_vp_or_vs))@now>> -> <<post>> [serial 2293]
 
Theorem (1011) [serial 2298] used for:
  applied port output <<pre and (cci=(now - last_vp_or_vs))@now>> -> <<(cci=CCI)@now>> [serial 2293]
 


Theorem (1013)                               [serial 2333] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1014)                               [serial 2329] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and VP@now
 and true
 and LAST_AP_OR_AS_A(now)
 and true >>
by Law of And-Simplification:  P and P is P
and theorem 1013:
Theorem (1013) [serial 2333] used for:
  Law of And-Simplification:  P and P is P [serial 2329]
 


Theorem (1015)                               [serial 2317] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and VP@now
 and now = now
 and LAST_AP_OR_AS_A(now)
 and true >>
by Equality Law (idistr):  a=a <-> true
and theorem 1014:
Theorem (1014) [serial 2329] used for:
  Equality Law (idistr):  a=a <-> true [serial 2317]
 


Theorem (1016)                               [serial 2303] 
P [248] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [254] ->
Q [255] << (VP@now
 and VP@now
 and true
 and ((now = now))
 and LAST_AP_OR_AS_A(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1015:
Theorem (1015) [serial 2317] used for:
    normalization of [serial 2303]
 


Theorem (1017)                               [serial 2333] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1018)                               [serial 2329] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and VP@now
 and true
 and LAST_AP_OR_AS_A(now)
 and true >>
by Law of And-Simplification:  P and P is P
and theorem 1017:
Theorem (1017) [serial 2333] used for:
  Law of And-Simplification:  P and P is P [serial 2329]
 


Theorem (1019)                               [serial 2317] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and VP@now
 and now = now
 and LAST_AP_OR_AS_A(now)
 and true >>
by Equality Law (idistr):  a=a <-> true
and theorem 1018:
Theorem (1018) [serial 2329] used for:
  Equality Law (idistr):  a=a <-> true [serial 2317]
 


Theorem (1020)                               [serial 2303] 
P [248] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [254] ->
Q [255] << (VP@now
 and VP@now
 and true
 and ((now = now))
 and LAST_AP_OR_AS_A(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1019:
Theorem (1019) [serial 2317] used for:
    normalization of [serial 2303]
 


Theorem (1021)                               [serial 2299] 
P [248] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [254] ->
Q [255] << (VP@now
 and VP@now
 and AXIOM_LAST_AS_LE_TOPS()
 and ((now = now))
 and LAST_AP_OR_AS_A(now)) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1020 1020:
Theorem (1020) [serial 2303] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1020) [serial 2303] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1022)                               [serial 2294] 
P [248] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [254] last_vp_or_vs := now
Q [255] << (VP@last_vp_or_vs
 and VP@now
 and AXIOM_LAST_AS_LE_TOPS()
 and ((last_vp_or_vs = now))
 and LAST_AP_OR_AS_A(now)) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1021:
Theorem (1021) [serial 2299] used for:
  applied wp for assignment [serial 2294]
 


Theorem (1023)                               [serial 1058] 
P [233] << ((LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )))
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [234] << (((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
vp!
<< (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
;
cci!((now - last_vp_or_vs))
<< (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
;
last_vp_or_vs := now
<< (VP@last_vp_or_vs
 and VP@now
 and AXIOM_LAST_AS_LE_TOPS()
 and ((last_vp_or_vs = now))
 and LAST_AP_OR_AS_A(now)) >>
Q [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 879 908 980 1012 1022:
Theorem (879) [serial 2290] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 1058]
 
Theorem (908) [serial 2291] used for:
  <<Q2>> -> <<Q>> in sequential composition for [serial 1058]
 
Theorem (980) [serial 2292] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1058]
 
Theorem (1012) [serial 2293] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1058]
 
Theorem (1022) [serial 2294] used for:
  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 1058]
 


Theorem (1024)                               [serial 2597] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1025)                               [serial 2725] 
P [233] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t ))
 and not ((exists t~time
  in last_vp_or_vs ,, now 
  that VP@t ) or 
(exists t~time
  in last_vp_or_vs ,, now 
  that VS@t ))
 and not ((exists t~time
  in now - max_cci ,, now 
  that vp@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that vs@t ))
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that not ((exists t~time
         in u - max_cci ,, u 
         that vp@t ) or 
       (exists t~time
         in u - max_cci ,, u 
         that vs@t ))
        and (vp@(u-max_cci) or 
       vs@(u-max_cci)) )
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and ((exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t ) or 
(exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that ((exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu ) or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VS@tu )) ))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (vp@(now-max_cci) or 
vs@(now-max_cci)) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1026)                               [serial 2723] 
P [233] << not (exists t~time
  in last_ap_or_as ,, now 
  that AP@t or 
       AS@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that VP@t or 
       VS@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that vp@t or 
       vs@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that not (exists t~time
         in u - max_cci ,, u 
         that vp@t or 
              vs@t )
        and (vp@(u-max_cci) or 
       vs@(u-max_cci)) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (vp@(now-max_cci) or 
vs@(now-max_cci)) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1025:
Theorem (1025) [serial 2725] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 2723]
 


Theorem (1027)                               [serial 2721] 
P [233] << (vp@(now-max_cci) or 
vs@(now-max_cci))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP@t or 
       AS@t) )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP@t or 
       VS@t) )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp@t or 
       vs@t) )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp@(u-max_cci) or 
       vs@(u-max_cci))
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp@t or 
              vs@t) ) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1026:
Theorem (1026) [serial 2723] used for:
    normalization of [serial 2721]
 


Theorem (1028)                               [serial 2719] 
P [233] << (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1027:
Theorem (1027) [serial 2721] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 2719]
 


Theorem (1029)                               [serial 2717] 
P [233] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1028:
Theorem (1028) [serial 2719] used for:
    normalization of [serial 2717]
 


Theorem (1030)                               [serial 2716] 
P [233] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Associativity: (b.c).a = a.b.c
and theorem 1029:
Theorem (1029) [serial 2717] used for:
  Associativity: (b.c).a = a.b.c [serial 2716]
 


Theorem (1031)                               [serial 2714] 
P [233] << (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and ((not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (SAVO + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Associativity: (b.c).a = a.b.c
and theorem 1030:
Theorem (1030) [serial 2716] used for:
  Associativity: (b.c).a = a.b.c [serial 2714]
 


Theorem (1032)                               [serial 2712] 
P [233] << (vp or 
vs)@(now-max_cci)
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)) + 
  SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1031:
Theorem (1031) [serial 2714] used for:
    normalization of [serial 2712]
 


Theorem (1033)                               [serial 2711] 
P [233] << (vp or 
vs)@(now-max_cci)
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((DAV_A() + SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Substitution of Assertion Labels
and theorem 1032:
Theorem (1032) [serial 2712] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2711]
 


Theorem (1034)                               [serial 2631] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Substitution of Assertion Labels
and theorem 1033:
Theorem (1033) [serial 2711] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2631]
 


Theorem (1035)                               [serial 2626] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 1034:
Theorem (1034) [serial 2631] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 2626]
 


Theorem (1036)                               [serial 2732] 
P [233] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1037)                               [serial 2731] 
P [233] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Associativity: (b.c).a = a.b.c
and theorem 1036:
Theorem (1036) [serial 2732] used for:
  Associativity: (b.c).a = a.b.c [serial 2731]
 


Theorem (1038)                               [serial 2729] 
P [233] << (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and ((not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (SAVO + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Associativity: (b.c).a = a.b.c
and theorem 1037:
Theorem (1037) [serial 2731] used for:
  Associativity: (b.c).a = a.b.c [serial 2729]
 


Theorem (1039)                               [serial 2727] 
P [233] << (vp or 
vs)@(now-max_cci)
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)) + 
  SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1038:
Theorem (1038) [serial 2729] used for:
    normalization of [serial 2727]
 


Theorem (1040)                               [serial 2726] 
P [233] << (vp or 
vs)@(now-max_cci)
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((DAV_A() + SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Substitution of Assertion Labels
and theorem 1039:
Theorem (1039) [serial 2727] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2726]
 


Theorem (1041)                               [serial 2638] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Substitution of Assertion Labels
and theorem 1040:
Theorem (1040) [serial 2726] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2638]
 


Theorem (1042)                               [serial 2627] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [175] << (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1041:
Theorem (1041) [serial 2638] used for:
    normalization of [serial 2627]
 


Theorem (1043)                               [serial 2619] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [238] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1035 1042:
Theorem (1035) [serial 2626] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2619]
 
Theorem (1042) [serial 2627] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2619]
 


Theorem (1044)                               [serial 2607] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [238] << ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1043:
Theorem (1043) [serial 2619] used for:
    normalization of [serial 2607]
 


Theorem (1045)                               [serial 2598] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [238] << LAST_AP_OR_AS_A(now) >>
by Substitution of Assertion Labels
and theorem 1044:
Theorem (1044) [serial 2607] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2598]
 


Theorem (1046)                               [serial 2599] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [235] << not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1047)                               [serial 2591] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1024 1045 1046:
Theorem (1024) [serial 2597] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2591]
 
Theorem (1045) [serial 2598] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2591]
 
Theorem (1046) [serial 2599] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2591]
 


Theorem (1048)                               [serial 2581] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and true
 and true
 and true
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1047:
Theorem (1047) [serial 2591] used for:
  Law of And-Simplification:  P and true is P [serial 2581]
 


Theorem (1049)                               [serial 2572] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and true
 and true
 and true
 and true
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1048:
Theorem (1048) [serial 2581] used for:
    normalization of [serial 2572]
 


Theorem (1050)                               [serial 2597] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1051)                               [serial 2725] 
P [233] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t ))
 and not ((exists t~time
  in last_vp_or_vs ,, now 
  that VP@t ) or 
(exists t~time
  in last_vp_or_vs ,, now 
  that VS@t ))
 and not ((exists t~time
  in now - max_cci ,, now 
  that vp@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that vs@t ))
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that not ((exists t~time
         in u - max_cci ,, u 
         that vp@t ) or 
       (exists t~time
         in u - max_cci ,, u 
         that vs@t ))
        and (vp@(u-max_cci) or 
       vs@(u-max_cci)) )
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and ((exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t ) or 
(exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that ((exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu ) or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VS@tu )) ))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (vp@(now-max_cci) or 
vs@(now-max_cci)) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1052)                               [serial 2723] 
P [233] << not (exists t~time
  in last_ap_or_as ,, now 
  that AP@t or 
       AS@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that VP@t or 
       VS@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that vp@t or 
       vs@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that not (exists t~time
         in u - max_cci ,, u 
         that vp@t or 
              vs@t )
        and (vp@(u-max_cci) or 
       vs@(u-max_cci)) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (vp@(now-max_cci) or 
vs@(now-max_cci)) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1051:
Theorem (1051) [serial 2725] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 2723]
 


Theorem (1053)                               [serial 2721] 
P [233] << (vp@(now-max_cci) or 
vs@(now-max_cci))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP@t or 
       AS@t) )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP@t or 
       VS@t) )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp@t or 
       vs@t) )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp@(u-max_cci) or 
       vs@(u-max_cci))
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp@t or 
              vs@t) ) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1052:
Theorem (1052) [serial 2723] used for:
    normalization of [serial 2721]
 


Theorem (1054)                               [serial 2719] 
P [233] << (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1053:
Theorem (1053) [serial 2721] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 2719]
 


Theorem (1055)                               [serial 2717] 
P [233] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1054:
Theorem (1054) [serial 2719] used for:
    normalization of [serial 2717]
 


Theorem (1056)                               [serial 2716] 
P [233] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Associativity: (b.c).a = a.b.c
and theorem 1055:
Theorem (1055) [serial 2717] used for:
  Associativity: (b.c).a = a.b.c [serial 2716]
 


Theorem (1057)                               [serial 2714] 
P [233] << (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and ((not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (SAVO + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Associativity: (b.c).a = a.b.c
and theorem 1056:
Theorem (1056) [serial 2716] used for:
  Associativity: (b.c).a = a.b.c [serial 2714]
 


Theorem (1058)                               [serial 2712] 
P [233] << (vp or 
vs)@(now-max_cci)
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)) + 
  SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1057:
Theorem (1057) [serial 2714] used for:
    normalization of [serial 2712]
 


Theorem (1059)                               [serial 2711] 
P [233] << (vp or 
vs)@(now-max_cci)
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((DAV_A() + SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Substitution of Assertion Labels
and theorem 1058:
Theorem (1058) [serial 2712] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2711]
 


Theorem (1060)                               [serial 2631] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Substitution of Assertion Labels
and theorem 1059:
Theorem (1059) [serial 2711] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2631]
 


Theorem (1061)                               [serial 2626] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 1060:
Theorem (1060) [serial 2631] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 2626]
 


Theorem (1062)                               [serial 2732] 
P [233] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1063)                               [serial 2731] 
P [233] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Associativity: (b.c).a = a.b.c
and theorem 1062:
Theorem (1062) [serial 2732] used for:
  Associativity: (b.c).a = a.b.c [serial 2731]
 


Theorem (1064)                               [serial 2729] 
P [233] << (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and ((not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (SAVO + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Associativity: (b.c).a = a.b.c
and theorem 1063:
Theorem (1063) [serial 2731] used for:
  Associativity: (b.c).a = a.b.c [serial 2729]
 


Theorem (1065)                               [serial 2727] 
P [233] << (vp or 
vs)@(now-max_cci)
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)) + 
  SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1064:
Theorem (1064) [serial 2729] used for:
    normalization of [serial 2727]
 


Theorem (1066)                               [serial 2726] 
P [233] << (vp or 
vs)@(now-max_cci)
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((DAV_A() + SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Substitution of Assertion Labels
and theorem 1065:
Theorem (1065) [serial 2727] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2726]
 


Theorem (1067)                               [serial 2638] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Substitution of Assertion Labels
and theorem 1066:
Theorem (1066) [serial 2726] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2638]
 


Theorem (1068)                               [serial 2627] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [175] << (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1067:
Theorem (1067) [serial 2638] used for:
    normalization of [serial 2627]
 


Theorem (1069)                               [serial 2619] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [238] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1061 1068:
Theorem (1061) [serial 2626] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2619]
 
Theorem (1068) [serial 2627] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2619]
 


Theorem (1070)                               [serial 2607] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [238] << ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1069:
Theorem (1069) [serial 2619] used for:
    normalization of [serial 2607]
 


Theorem (1071)                               [serial 2598] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [238] << LAST_AP_OR_AS_A(now) >>
by Substitution of Assertion Labels
and theorem 1070:
Theorem (1070) [serial 2607] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2598]
 


Theorem (1072)                               [serial 2599] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [235] << not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1073)                               [serial 2591] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1050 1071 1072:
Theorem (1050) [serial 2597] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2591]
 
Theorem (1071) [serial 2598] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2591]
 
Theorem (1072) [serial 2599] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2591]
 


Theorem (1074)                               [serial 2581] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and true
 and true
 and true
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1073:
Theorem (1073) [serial 2591] used for:
  Law of And-Simplification:  P and true is P [serial 2581]
 


Theorem (1075)                               [serial 2572] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and true
 and true
 and true
 and true
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1074:
Theorem (1074) [serial 2581] used for:
    normalization of [serial 2572]
 


Theorem (1076)                               [serial 2559] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1075 1075:
Theorem (1075) [serial 2572] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1075) [serial 2572] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1077)                               [serial 2550] 
P [233] << (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1076:
Theorem (1076) [serial 2559] used for:
    normalization of [serial 2550]
 


Theorem (1078)                               [serial 2530] 
P [233] << not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and ((vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ))
 and (LAST(now)
 and LRL_A(now)
 and SAV(now)) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 1077:
Theorem (1077) [serial 2550] used for:
  Associativity: (b.c).a = a.b.c [serial 2530]
 


Theorem (1079)                               [serial 2519] 
P [233] << ((SAV(now)
 and LRL_A(now)
 and LAST(now)))
 and (((vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )))
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that ((as@(u-((dav+savo)))
        and not (exists t~time
         in u - ((dav + savo)) ,, u 
         that as@t ))) )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [233] ->
Q [234] << (((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1078:
Theorem (1078) [serial 2530] used for:
    normalization of [serial 2519]
 


Theorem (1080)                               [serial 2624] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1081)                               [serial 2697] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << VP@now or 
VS@now >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1082)                               [serial 2695] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << ((VP@now or 
VS@now)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1081:
Theorem (1081) [serial 2697] used for:
    normalization of [serial 2695]
 


Theorem (1083)                               [serial 2693] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << true
 and (VP@now or 
VS@now) >>
by Law of And-Simplification:  P and true is P
and theorem 1082:
Theorem (1082) [serial 2695] used for:
  Law of And-Simplification:  P and true is P [serial 2693]
 


Theorem (1084)                               [serial 2691] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << ((((VP@now or 
VS@now))
 and not (false))) >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1083:
Theorem (1083) [serial 2693] used for:
    normalization of [serial 2691]
 


Theorem (1085)                               [serial 2690] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << ((((VP@now or 
VS@now))
 and not (exists t~time
  in now ,, now 
  that ((VS or 
       VP))@t ))) >>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 1084:
Theorem (1084) [serial 2691] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 2690]
 


Theorem (1086)                               [serial 2689] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << ((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t ))) >>
by Guided Substitution of Equals
and theorem 1085:
Theorem (1085) [serial 2690] used for:
  Guided Substitution of Equals
 replacing "last_vp_or_vs" with its = "now" in its postcondition [serial 2689]
 


Theorem (1087)                               [serial 2625] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << LAST_VP_OR_VS_A(now) >>
by Substitution of Assertion Labels
and theorem 1086:
Theorem (1086) [serial 2689] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2625]
 


Theorem (1088)                               [serial 2613] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1080 1087:
Theorem (1080) [serial 2624] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2613]
 
Theorem (1087) [serial 2625] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2613]
 


Theorem (1089)                               [serial 2604] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1088:
Theorem (1088) [serial 2613] used for:
    normalization of [serial 2604]
 


Theorem (1090)                               [serial 2594] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << LAST(now) >>
by Substitution of Assertion Labels
and theorem 1089:
Theorem (1089) [serial 2604] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2594]
 


Theorem (1091)                               [serial 2687] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << VP@now or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1092)                               [serial 2685] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << (VP@now) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1091:
Theorem (1091) [serial 2687] used for:
    normalization of [serial 2685]
 


Theorem (1093)                               [serial 2684] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << (exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ) >>
by Introduction of Existential Quantification
and theorem 1092:
Theorem (1092) [serial 2685] used for:
  replace exists with upper or lower bound [serial 2684]
 


Theorem (1094)                               [serial 2615] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t  >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1093:
Theorem (1093) [serial 2684] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 2615]
 


Theorem (1095)                               [serial 2605] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1094:
Theorem (1094) [serial 2615] used for:
    normalization of [serial 2605]
 


Theorem (1096)                               [serial 2595] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << LRL_A(now) >>
by Substitution of Assertion Labels
and theorem 1095:
Theorem (1095) [serial 2605] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2595]
 


Theorem (1097)                               [serial 2709] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << true >>
by True Conclusion Schema (tc): P->true


Theorem (1098)                               [serial 2707] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << not ((false)) >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1097:
Theorem (1097) [serial 2709] used for:
    normalization of [serial 2707]
 


Theorem (1099)                               [serial 2706] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << not ((false) or 
(false)) >>
by Law of Or-Simplification: P or P is P
and theorem 1098:
Theorem (1098) [serial 2707] used for:
  Law of Or-Simplification: P or P is P [serial 2706]
 


Theorem (1100)                               [serial 2705] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << not ((exists t~time
  in now ,, now 
  that AP@t ) or 
(exists t~time
  in now ,, now 
  that AS@t )) >>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 1099:
Theorem (1099) [serial 2706] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 2705]
 


Theorem (1101)                               [serial 2630] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << not ((exists t~time
  in last_vp_or_vs ,, now 
  that AP@t ) or 
(exists t~time
  in last_vp_or_vs ,, now 
  that AS@t )) >>
by Guided Substitution of Equals
and theorem 1100:
Theorem (1100) [serial 2705] used for:
  Guided Substitution of Equals
 replacing "last_vp_or_vs" with its = "now" in its postcondition [serial 2630]
 


Theorem (1102)                               [serial 2617] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << not (exists t~time
  in last_vp_or_vs ,, now 
  that (AP or 
       AS)@t ) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 1101:
Theorem (1101) [serial 2630] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 2617]
 


Theorem (1103)                               [serial 2606] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << (not (exists t~time
  in last_vp_or_vs ,, now 
  that ((AS or 
       AP))@t )) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1102:
Theorem (1102) [serial 2617] used for:
    normalization of [serial 2606]
 


Theorem (1104)                               [serial 2596] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << VAI(now) >>
by Substitution of Assertion Labels
and theorem 1103:
Theorem (1103) [serial 2606] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2596]
 


Theorem (1105)                               [serial 2532] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << LAST(now)
 and LRL_A(now)
 and VAI(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1090 1096 1104:
Theorem (1090) [serial 2594] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2532]
 
Theorem (1096) [serial 2595] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2532]
 
Theorem (1104) [serial 2596] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2532]
 


Theorem (1106)                               [serial 2520] 
P [255] << (VP@last_vp_or_vs
 and VP@now
 and AXIOM_LAST_AS_LE_TOPS()
 and ((last_vp_or_vs = now))
 and LAST_AP_OR_AS_A(now)) >>
S [200] ->
Q [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1105:
Theorem (1105) [serial 2532] used for:
    normalization of [serial 2520]
 


Theorem (1107)                               [serial 2671] 
P [234] << last_ap_or_as <= tops
 and not (exists #15#~time
  in last_ap_or_as ,, now 
  that AP@#15# or 
       AS@#15# )
 and not (exists #16#~time
  in now - MAX_CCI ,, now 
  that VP@#16# or 
       VS@#16# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [94] << not (exists #17#~time
  in now - MAX_CCI ,, now 
  that VP@#17# or 
       VS@#17# ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1108)                               [serial 2670] 
P [234] << last_ap_or_as <= tops
 and not (exists t~time
  in last_ap_or_as ,, now 
  that AP@t or 
       AS@t )
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [94] << not (exists tu~time
  in now - MAX_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 1107:
Theorem (1107) [serial 2671] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2670]
 


Theorem (1109)                               [serial 2668] 
P [234] << last_ap_or_as <= tops
 and not (exists t~time
  in last_ap_or_as ,, now 
  that AP@t or 
       AS@t )
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [94] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Extend Existential Quantification Range:  
and theorem 1108:
Theorem (1108) [serial 2670] used for:
  Extend Existential Quantification Range:   [serial 2668]
 


Theorem (1110)                               [serial 2666] 
P [234] << last_ap_or_as <= tops
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP@t or 
       AS@t) )
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP@t or 
       VS@t) )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [94] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1109:
Theorem (1109) [serial 2668] used for:
    normalization of [serial 2666]
 


Theorem (1111)                               [serial 2665] 
P [234] << last_ap_or_as <= tops
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP@t or 
       AS@t) )
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP@t or 
       VS@t) )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [94] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Replacing port names with BLESS::Assertion properties
and theorem 1110:
Theorem (1110) [serial 2666] used for:
  Replacing port names with BLESS::Assertion properties [serial 2665]
 


Theorem (1112)                               [serial 2660] 
P [234] << last_ap_or_as <= tops
 and (VP or 
VS)@(now-max_cci)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [94] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1111:
Theorem (1111) [serial 2665] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 2660]
 


Theorem (1113)                               [serial 2657] 
P [234] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and last_ap_or_as <= tops
 and (VP or 
VS)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [94] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1112:
Theorem (1112) [serial 2660] used for:
    normalization of [serial 2657]
 


Theorem (1114)                               [serial 2677] 
P [234] << last_ap_or_as <= tops
 and not (exists t~time
  in last_ap_or_as ,, now 
  that AP@t or 
       AS@t )
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [209] << (AP@(now-AV)
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )) or 
(AS@(now-(SAVO+DAV_A()))
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )) or 
(not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t )
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))) >>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (1115)                               [serial 2675] 
P [234] << last_ap_or_as <= tops
 and not (exists t~time
  in last_ap_or_as ,, now 
  that AP@t or 
       AS@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that VP@t or 
       VS@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << (AP@(now-AV)
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )) or 
(AS@(now-(SAVO+DAV_A()))
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )) or 
(not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t )
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))) >>
by Replacing port names with BLESS::Assertion properties
and theorem 1114:
Theorem (1114) [serial 2677] used for:
  Replacing port names with BLESS::Assertion properties [serial 2675]
 


Theorem (1116)                               [serial 2673] 
P [234] << last_ap_or_as <= tops
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP@t or 
       AS@t) )
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP@t or 
       VS@t) )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << ((AP@((now-AV))
 and not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) ))) or 
((((VP@((now-MAX_CCI)) or 
VS@((now-MAX_CCI))))
 and not (exists t~time
  in ((now - MAX_CCI)) ,, now 
  that ((VS@t or 
       VP@t)) ))) or 
((AS@((now-((DAV_A()+SAVO))))
 and not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1115:
Theorem (1115) [serial 2675] used for:
    normalization of [serial 2673]
 


Theorem (1117)                               [serial 2672] 
P [234] << last_ap_or_as <= tops
 and (VP or 
VS)@(now-max_cci)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << ((AP@((now-AV))
 and not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) ))) or 
((((VP@((now-MAX_CCI)) or 
VS@((now-MAX_CCI))))
 and not (exists t~time
  in ((now - MAX_CCI)) ,, now 
  that ((VS@t or 
       VP@t)) ))) or 
((AS@((now-((DAV_A()+SAVO))))
 and not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) ))) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1116:
Theorem (1116) [serial 2673] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 2672]
 


Theorem (1118)                               [serial 2662] 
P [234] << last_ap_or_as <= tops
 and (VP or 
VS)@(now-max_cci)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_MaxCCI(now) or 
PACE_ON_SAV_DELAY(now) >>
by Substitution of Assertion Labels
and theorem 1117:
Theorem (1117) [serial 2672] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2662]
 


Theorem (1119)                               [serial 2658] 
P [234] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and last_ap_or_as <= tops
 and (VP or 
VS)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << (PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_MaxCCI(now) or 
PACE_ON_SAV_DELAY(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1118:
Theorem (1118) [serial 2662] used for:
    normalization of [serial 2658]
 


Theorem (1120)                               [serial 2656] 
P [234] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and last_ap_or_as <= tops
 and (VP or 
VS)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [31] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )
 and (PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_MaxCCI(now) or 
PACE_ON_SAV_DELAY(now)) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1113 1119:
Theorem (1113) [serial 2657] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2656]
 
Theorem (1119) [serial 2658] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2656]
 


Theorem (1121)                               [serial 2654] 
P [234] << last_ap_or_as <= tops
 and (VP or 
VS)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t )
 and (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [31] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )
 and (PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_MaxCCI(now) or 
PACE_ON_SAV_DELAY(now)) >>
by Associativity: (b.c).a = a.b.c
and theorem 1120:
Theorem (1120) [serial 2656] used for:
  Associativity: (b.c).a = a.b.c [serial 2654]
 


Theorem (1122)                               [serial 2652] 
P [234] << last_ap_or_as <= tops
 and (VP or 
VS)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t )
 and (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [31] << (((not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) ))
 and ((PACE_ON_MaxCCI(now) or 
PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_SAV_DELAY(now))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1121:
Theorem (1121) [serial 2654] used for:
    normalization of [serial 2652]
 


Theorem (1123)                               [serial 2651] 
P [234] << last_ap_or_as <= tops
 and (VP or 
VS)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t )
 and (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [31] << ((URL_A(now)
 and VP_A(now))) >>
by Substitution of Assertion Labels
and theorem 1122:
Theorem (1122) [serial 2652] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2651]
 


Theorem (1124)                               [serial 2649] 
P [234] << last_ap_or_as <= tops
 and (VP or 
VS)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t )
 and (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [31] << VP >>
by Guided Substitution of Equals
and theorem 1123:
Theorem (1123) [serial 2651] used for:
  Guided Substitution of Equals
 replacing "VP" with its iff "((URL_A(now)
 and VP_A(now)))" in its postcondition [serial 2649]
 


Theorem (1125)                               [serial 2647] 
P [234] << (VP or 
VS)@(now-max_cci)
 and ((last_ap_or_as <= tops))
 and ((((now - max_cci)) < ((now - min_cci))))
 and ((VP iff ((VP_A(now)
 and URL_A(now)))))
 and ((VS iff ((VS_A(now) or 
(now = 0)))))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [239] ->
Q [31] << VP >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1124:
Theorem (1124) [serial 2649] used for:
    normalization of [serial 2647]
 


Theorem (1126)                               [serial 2646] 
P [234] << (VP or 
VS)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [239] ->
Q [31] << VP >>
by Substitution of Assertion Labels
and theorem 1125:
Theorem (1125) [serial 2647] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2646]
 


Theorem (1127)                               [serial 2534] 
P [234] << (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [239] ->
Q [31] << VP >>
by Replacing port names with BLESS::Assertion properties
and theorem 1126:
Theorem (1126) [serial 2646] used for:
  Replacing port names with BLESS::Assertion properties [serial 2534]
 


Theorem (1128)                               [serial 2524] 
P [234] << (((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [239] ->
Q [31] << VP >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1127:
Theorem (1127) [serial 2534] used for:
    normalization of [serial 2524]
 


Theorem (1129)                               [serial 2592] 
P [239] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1130)                               [serial 2583] 
P [239] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1129:
Theorem (1129) [serial 2592] used for:
  Law of And-Simplification:  P and true is P [serial 2583]
 


Theorem (1131)                               [serial 2573] 
P [239] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and true
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1130:
Theorem (1130) [serial 2583] used for:
    normalization of [serial 2573]
 


Theorem (1132)                               [serial 2592] 
P [239] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1133)                               [serial 2583] 
P [239] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1132:
Theorem (1132) [serial 2592] used for:
  Law of And-Simplification:  P and true is P [serial 2583]
 


Theorem (1134)                               [serial 2573] 
P [239] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and true
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1133:
Theorem (1133) [serial 2583] used for:
    normalization of [serial 2573]
 


Theorem (1135)                               [serial 2561] 
P [239] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1134 1134:
Theorem (1134) [serial 2573] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1134) [serial 2573] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1136)                               [serial 2551] 
P [239] << (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and VP@now >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1135:
Theorem (1135) [serial 2561] used for:
    normalization of [serial 2551]
 


Theorem (1137)                               [serial 2536] 
P [239] << VP@now
 and ((vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 1136:
Theorem (1136) [serial 2551] used for:
  Associativity: (b.c).a = a.b.c [serial 2536]
 


Theorem (1138)                               [serial 2525] 
P [239] << ((((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)))
 and VP@now >>
S [239] ->
Q [240] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1137:
Theorem (1137) [serial 2536] used for:
    normalization of [serial 2525]
 


Theorem (1139)                               [serial 2521] 
P [234] << (((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [239] vp!
Q [240] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 1128 1138:
Theorem (1128) [serial 2524] used for:
  applied port output <<pre>> -> <<M[vp]>> [serial 2521]
 
Theorem (1138) [serial 2525] used for:
  applied port output <<pre and M[vp]@now>> -> <<post>> [serial 2521]
 


Theorem (1140)                               [serial 2600] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1141)                               [serial 2734] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP@t or 
       VS@t) ) >>
S [247] ->
Q [251] << VP@(now-max_cci) or 
VS@(now-max_cci) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1142)                               [serial 2733] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [251] << VP@(now-max_cci) or 
VS@(now-max_cci) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1141:
Theorem (1141) [serial 2734] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 2733]
 


Theorem (1143)                               [serial 2640] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [251] << VP@(now-max_cci) or 
VS@(now-max_cci) >>
by Replacing port names with BLESS::Assertion properties
and theorem 1142:
Theorem (1142) [serial 2733] used for:
  Replacing port names with BLESS::Assertion properties [serial 2640]
 


Theorem (1144)                               [serial 2628] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [251] << (VP@(now-max_cci) or 
VS@(now-max_cci)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1143:
Theorem (1143) [serial 2640] used for:
    normalization of [serial 2628]
 


Theorem (1145)                               [serial 2601] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [251] << (VP or 
VS)@(now-max_cci) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 1144:
Theorem (1144) [serial 2628] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 2601]
 


Theorem (1146)                               [serial 2602] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [252] << LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1147)                               [serial 2703] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t ))
 and (VP@(now-max_cci) or 
VS@(now-max_cci)) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1148)                               [serial 2701] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1147:
Theorem (1147) [serial 2703] used for:
    normalization of [serial 2701]
 


Theorem (1149)                               [serial 2700] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP@t or 
       VS@t) ) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1148:
Theorem (1148) [serial 2701] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 2700]
 


Theorem (1150)                               [serial 2699] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1149:
Theorem (1149) [serial 2700] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 2699]
 


Theorem (1151)                               [serial 2629] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by Replacing port names with BLESS::Assertion properties
and theorem 1150:
Theorem (1150) [serial 2699] used for:
  Replacing port names with BLESS::Assertion properties [serial 2629]
 


Theorem (1152)                               [serial 2603] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 1151:
Theorem (1151) [serial 2629] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 2603]
 


Theorem (1153)                               [serial 2593] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1140 1145 1146 1152:
Theorem (1140) [serial 2600] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2593]
 
Theorem (1145) [serial 2601] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2593]
 
Theorem (1146) [serial 2602] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2593]
 
Theorem (1152) [serial 2603] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2593]
 


Theorem (1154)                               [serial 2585] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t )
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1153:
Theorem (1153) [serial 2593] used for:
  Law of And-Simplification:  P and true is P [serial 2585]
 


Theorem (1155)                               [serial 2574] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and true
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1154:
Theorem (1154) [serial 2585] used for:
    normalization of [serial 2574]
 


Theorem (1156)                               [serial 2600] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1157)                               [serial 2734] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP@t or 
       VS@t) ) >>
S [247] ->
Q [251] << VP@(now-max_cci) or 
VS@(now-max_cci) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1158)                               [serial 2733] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [251] << VP@(now-max_cci) or 
VS@(now-max_cci) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1157:
Theorem (1157) [serial 2734] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 2733]
 


Theorem (1159)                               [serial 2640] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [251] << VP@(now-max_cci) or 
VS@(now-max_cci) >>
by Replacing port names with BLESS::Assertion properties
and theorem 1158:
Theorem (1158) [serial 2733] used for:
  Replacing port names with BLESS::Assertion properties [serial 2640]
 


Theorem (1160)                               [serial 2628] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [251] << (VP@(now-max_cci) or 
VS@(now-max_cci)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1159:
Theorem (1159) [serial 2640] used for:
    normalization of [serial 2628]
 


Theorem (1161)                               [serial 2601] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [251] << (VP or 
VS)@(now-max_cci) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 1160:
Theorem (1160) [serial 2628] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 2601]
 


Theorem (1162)                               [serial 2602] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [252] << LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1163)                               [serial 2703] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t ))
 and (VP@(now-max_cci) or 
VS@(now-max_cci)) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1164)                               [serial 2701] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1163:
Theorem (1163) [serial 2703] used for:
    normalization of [serial 2701]
 


Theorem (1165)                               [serial 2700] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP@t or 
       VS@t) ) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1164:
Theorem (1164) [serial 2701] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 2700]
 


Theorem (1166)                               [serial 2699] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1165:
Theorem (1165) [serial 2700] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 2699]
 


Theorem (1167)                               [serial 2629] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by Replacing port names with BLESS::Assertion properties
and theorem 1166:
Theorem (1166) [serial 2699] used for:
  Replacing port names with BLESS::Assertion properties [serial 2629]
 


Theorem (1168)                               [serial 2603] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 1167:
Theorem (1167) [serial 2629] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 2603]
 


Theorem (1169)                               [serial 2593] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1156 1161 1162 1168:
Theorem (1156) [serial 2600] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2593]
 
Theorem (1161) [serial 2601] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2593]
 
Theorem (1162) [serial 2602] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2593]
 
Theorem (1168) [serial 2603] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2593]
 


Theorem (1170)                               [serial 2585] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t )
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1169:
Theorem (1169) [serial 2593] used for:
  Law of And-Simplification:  P and true is P [serial 2585]
 


Theorem (1171)                               [serial 2574] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and true
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1170:
Theorem (1170) [serial 2585] used for:
    normalization of [serial 2574]
 


Theorem (1172)                               [serial 2563] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1171 1171:
Theorem (1171) [serial 2574] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1171) [serial 2574] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1173)                               [serial 2552] 
P [247] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and (cci = (now - last_vp_or_vs))@now >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1172:
Theorem (1172) [serial 2563] used for:
    normalization of [serial 2552]
 


Theorem (1174)                               [serial 2538] 
P [247] << (cci = (now - last_vp_or_vs))@now
 and (VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 1173:
Theorem (1173) [serial 2552] used for:
  Associativity: (b.c).a = a.b.c [serial 2538]
 


Theorem (1175)                               [serial 2526] 
P [247] << ((VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)))
 and (cci = ((now - last_vp_or_vs)))@now >>
S [247] ->
Q [248] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1174:
Theorem (1174) [serial 2538] used for:
    normalization of [serial 2526]
 


Theorem (1176)                               [serial 2682] 
P [247] << VP@now
 and (CCI = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-MAX_CCI)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [247] << true >>
by True Conclusion Schema (tc): P->true


Theorem (1177)                               [serial 2680] 
P [247] << VP@now
 and (CCI = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-MAX_CCI)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [247] << (true)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Constants are always the same
and theorem 1176:
Theorem (1176) [serial 2682] used for:
    normalization of [serial 2680]
 


Theorem (1178)                               [serial 2679] 
P [247] << VP@now
 and (CCI = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-MAX_CCI)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [247] << (CCI = CCI)@now >>
by Equality Law (idistr):  a=a <-> true
and theorem 1177:
Theorem (1177) [serial 2680] used for:
  Equality Law (idistr):  a=a <-> true [serial 2679]
 


Theorem (1179)                               [serial 2678] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [247] << (CCI = cci)@now >>
by Replacing port names with BLESS::Assertion properties
and theorem 1178:
Theorem (1178) [serial 2679] used for:
  Replacing port names with BLESS::Assertion properties [serial 2678]
 


Theorem (1180)                               [serial 2565] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [247] << (CCI = cci)@now >>
by Replacing port names with BLESS::Assertion properties
and theorem 1179:
Theorem (1179) [serial 2678] used for:
  Replacing port names with BLESS::Assertion properties [serial 2565]
 


Theorem (1181)                               [serial 2553] 
P [247] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and (cci = (now - last_vp_or_vs))@now >>
S [247] ->
Q [247] << (CCI = cci)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1180:
Theorem (1180) [serial 2565] used for:
    normalization of [serial 2553]
 


Theorem (1182)                               [serial 2540] 
P [247] << (cci = (now - last_vp_or_vs))@now
 and (VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )) >>
S [247] ->
Q [247] << (CCI = cci)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 1181:
Theorem (1181) [serial 2553] used for:
  Associativity: (b.c).a = a.b.c [serial 2540]
 


Theorem (1183)                               [serial 2527] 
P [247] << ((VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)))
 and (cci = ((now - last_vp_or_vs)))@now >>
S [247] ->
Q [247] << (cci = CCI)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1182:
Theorem (1182) [serial 2540] used for:
    normalization of [serial 2527]
 


Theorem (1184)                               [serial 2522] 
P [240] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [247] cci!((now - last_vp_or_vs))
Q [248] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 1175 1183:
Theorem (1175) [serial 2526] used for:
  applied port output <<pre and (cci=(now - last_vp_or_vs))@now>> -> <<post>> [serial 2522]
 
Theorem (1183) [serial 2527] used for:
  applied port output <<pre and (cci=(now - last_vp_or_vs))@now>> -> <<(cci=CCI)@now>> [serial 2522]
 


Theorem (1185)                               [serial 2590] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1186)                               [serial 2579] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and LAST_AP_OR_AS_A(now)
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1185:
Theorem (1185) [serial 2590] used for:
  Law of And-Simplification:  P and true is P [serial 2579]
 


Theorem (1187)                               [serial 2571] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and true
 and LAST_AP_OR_AS_A(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1186:
Theorem (1186) [serial 2579] used for:
    normalization of [serial 2571]
 


Theorem (1188)                               [serial 2590] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1189)                               [serial 2579] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and LAST_AP_OR_AS_A(now)
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1188:
Theorem (1188) [serial 2590] used for:
  Law of And-Simplification:  P and true is P [serial 2579]
 


Theorem (1190)                               [serial 2571] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and true
 and LAST_AP_OR_AS_A(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1189:
Theorem (1189) [serial 2579] used for:
    normalization of [serial 2571]
 


Theorem (1191)                               [serial 2555] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1190 1190:
Theorem (1190) [serial 2571] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1190) [serial 2571] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1192)                               [serial 2554] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and VP@now
 and true
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
by Law of And-Simplification:  P and P is P
and theorem 1191:
Theorem (1191) [serial 2555] used for:
  Law of And-Simplification:  P and P is P [serial 2554]
 


Theorem (1193)                               [serial 2542] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and VP@now
 and now = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
by Equality Law (idistr):  a=a <-> true
and theorem 1192:
Theorem (1192) [serial 2554] used for:
  Equality Law (idistr):  a=a <-> true [serial 2542]
 


Theorem (1194)                               [serial 2528] 
P [248] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [254] ->
Q [255] << (VP@now
 and VP@now
 and AXIOM_LAST_AS_LE_TOPS()
 and ((now = now))
 and LAST_AP_OR_AS_A(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1193:
Theorem (1193) [serial 2542] used for:
    normalization of [serial 2528]
 


Theorem (1195)                               [serial 2523] 
P [248] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [254] last_vp_or_vs := now
Q [255] << (VP@last_vp_or_vs
 and VP@now
 and AXIOM_LAST_AS_LE_TOPS()
 and ((last_vp_or_vs = now))
 and LAST_AP_OR_AS_A(now)) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1194:
Theorem (1194) [serial 2528] used for:
  applied wp for assignment [serial 2523]
 


Theorem (1196)                               [serial 1059] 
P [233] << ((SAV(now)
 and LRL_A(now)
 and LAST(now)))
 and (((vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )))
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that ((as@(u-((dav+savo)))
        and not (exists t~time
         in u - ((dav + savo)) ,, u 
         that as@t ))) )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [234] << (((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
vp!
<< (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
;
cci!((now - last_vp_or_vs))
<< (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
;
last_vp_or_vs := now
<< (VP@last_vp_or_vs
 and VP@now
 and AXIOM_LAST_AS_LE_TOPS()
 and ((last_vp_or_vs = now))
 and LAST_AP_OR_AS_A(now)) >>
Q [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1079 1106 1139 1184 1195:
Theorem (1079) [serial 2519] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 1059]
 
Theorem (1106) [serial 2520] used for:
  <<Q2>> -> <<Q>> in sequential composition for [serial 1059]
 
Theorem (1139) [serial 2521] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1059]
 
Theorem (1184) [serial 2522] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1059]
 
Theorem (1195) [serial 2523] used for:
  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 1059]
 


Theorem (1197)                               [serial 2813] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1198)                               [serial 2938] 
P [233] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t ))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not ((exists t~time
  in last_vp_or_vs ,, now 
  that VP@t ) or 
(exists t~time
  in last_vp_or_vs ,, now 
  that VS@t ))
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that not ((exists t~time
         in u - max_cci ,, u 
         that vp@t ) or 
       (exists t~time
         in u - max_cci ,, u 
         that vs@t ))
        and (vp@(u-max_cci) or 
       vs@(u-max_cci)) )
 and not ((exists t~time
  in now - max_cci ,, now 
  that vp@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that vs@t ))
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AP@t )
 and (vp@(now-max_cci) or 
vs@(now-max_cci)) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1199)                               [serial 2937] 
P [233] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP@t or 
       AS@t) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP@t or 
       VS@t) )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that not ((exists t~time
         in u - max_cci ,, u 
         that vp@t ) or 
       (exists t~time
         in u - max_cci ,, u 
         that vs@t ))
        and (vp@(u-max_cci) or 
       vs@(u-max_cci)) )
 and not ((exists t~time
  in now - max_cci ,, now 
  that vp@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that vs@t ))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AP@t )
 and (vp@(now-max_cci) or 
vs@(now-max_cci)) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1198:
Theorem (1198) [serial 2938] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 2937]
 


Theorem (1200)                               [serial 2936] 
P [233] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that not ((exists t~time
         in u - max_cci ,, u 
         that vp@t ) or 
       (exists t~time
         in u - max_cci ,, u 
         that vs@t ))
        and (vp@(u-max_cci) or 
       vs@(u-max_cci)) )
 and not ((exists t~time
  in now - max_cci ,, now 
  that vp@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that vs@t ))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AP@t )
 and (vp@(now-max_cci) or 
vs@(now-max_cci)) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1199:
Theorem (1199) [serial 2937] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 2936]
 


Theorem (1201)                               [serial 2935] 
P [233] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that not ((exists t~time
         in u - max_cci ,, u 
         that vp@t ) or 
       (exists t~time
         in u - max_cci ,, u 
         that vs@t ))
        and (vp@(u-max_cci) or 
       vs@(u-max_cci)) )
 and not ((exists t~time
  in now - max_cci ,, now 
  that vp@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that vs@t ))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AP@t )
 and (vp@(now-max_cci) or 
vs@(now-max_cci)) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Associativity: (b.c).a = a.b.c
and theorem 1200:
Theorem (1200) [serial 2936] used for:
  Associativity: (b.c).a = a.b.c [serial 2935]
 


Theorem (1202)                               [serial 2933] 
P [233] << not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that not ((exists t~time
         in u - max_cci ,, u 
         that vp@t ) or 
       (exists t~time
         in u - max_cci ,, u 
         that vs@t ))
        and (vp@(u-max_cci) or 
       vs@(u-max_cci)) )
 and not ((exists t~time
  in now - max_cci ,, now 
  that vp@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that vs@t ))
 and ((not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AP@t )
 and (vp@(now-max_cci) or 
vs@(now-max_cci)) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Associativity: (b.c).a = a.b.c
and theorem 1201:
Theorem (1201) [serial 2935] used for:
  Associativity: (b.c).a = a.b.c [serial 2933]
 


Theorem (1203)                               [serial 2931] 
P [233] << (vp@(now-max_cci) or 
vs@(now-max_cci))
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)))) .. now 
  that AP@t )
 and not ((exists t~time
  in now - max_cci ,, now 
  that vp@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that vs@t ))
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp@(u-max_cci) or 
       vs@(u-max_cci))
        and not ((exists t~time
         in u - max_cci ,, u 
         that vp@t ) or 
       (exists t~time
         in u - max_cci ,, u 
         that vs@t )) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1202:
Theorem (1202) [serial 2933] used for:
    normalization of [serial 2931]
 


Theorem (1204)                               [serial 2930] 
P [233] << (vp@(now-max_cci) or 
vs@(now-max_cci))
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)))) .. now 
  that AP@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp@t or 
       vs@t) )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp@(u-max_cci) or 
       vs@(u-max_cci))
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp@t or 
              vs@t) ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1203:
Theorem (1203) [serial 2931] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 2930]
 


Theorem (1205)                               [serial 2929] 
P [233] << (vp or 
vs)@(now-max_cci)
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)))) .. now 
  that AP@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1204:
Theorem (1204) [serial 2930] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 2929]
 


Theorem (1206)                               [serial 2928] 
P [233] << (vp or 
vs)@(now-max_cci)
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - DAV_A())) .. now 
  that AP@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Substitution of Assertion Labels
and theorem 1205:
Theorem (1205) [serial 2929] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2928]
 


Theorem (1207)                               [serial 2847] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Substitution of Assertion Labels
and theorem 1206:
Theorem (1206) [serial 2928] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2847]
 


Theorem (1208)                               [serial 2842] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 1207:
Theorem (1207) [serial 2847] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 2842]
 


Theorem (1209)                               [serial 2945] 
P [233] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AP@t ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1210)                               [serial 2944] 
P [233] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AP@t ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Associativity: (b.c).a = a.b.c
and theorem 1209:
Theorem (1209) [serial 2945] used for:
  Associativity: (b.c).a = a.b.c [serial 2944]
 


Theorem (1211)                               [serial 2942] 
P [233] << (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and ((not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AP@t ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Associativity: (b.c).a = a.b.c
and theorem 1210:
Theorem (1210) [serial 2944] used for:
  Associativity: (b.c).a = a.b.c [serial 2942]
 


Theorem (1212)                               [serial 2940] 
P [233] << (vp or 
vs)@(now-max_cci)
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)))) .. now 
  that AP@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1211:
Theorem (1211) [serial 2942] used for:
    normalization of [serial 2940]
 


Theorem (1213)                               [serial 2939] 
P [233] << (vp or 
vs)@(now-max_cci)
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - DAV_A())) .. now 
  that AP@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Substitution of Assertion Labels
and theorem 1212:
Theorem (1212) [serial 2940] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2939]
 


Theorem (1214)                               [serial 2854] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Substitution of Assertion Labels
and theorem 1213:
Theorem (1213) [serial 2939] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2854]
 


Theorem (1215)                               [serial 2843] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [175] << (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1214:
Theorem (1214) [serial 2854] used for:
    normalization of [serial 2843]
 


Theorem (1216)                               [serial 2835] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [238] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1208 1215:
Theorem (1208) [serial 2842] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2835]
 
Theorem (1215) [serial 2843] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2835]
 


Theorem (1217)                               [serial 2823] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [238] << ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1216:
Theorem (1216) [serial 2835] used for:
    normalization of [serial 2823]
 


Theorem (1218)                               [serial 2814] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [238] << LAST_AP_OR_AS_A(now) >>
by Substitution of Assertion Labels
and theorem 1217:
Theorem (1217) [serial 2823] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2814]
 


Theorem (1219)                               [serial 2815] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [235] << not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1220)                               [serial 2807] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1197 1218 1219:
Theorem (1197) [serial 2813] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2807]
 
Theorem (1218) [serial 2814] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2807]
 
Theorem (1219) [serial 2815] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2807]
 


Theorem (1221)                               [serial 2797] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and true
 and true
 and true
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1220:
Theorem (1220) [serial 2807] used for:
  Law of And-Simplification:  P and true is P [serial 2797]
 


Theorem (1222)                               [serial 2788] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and true
 and true
 and true
 and true
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1221:
Theorem (1221) [serial 2797] used for:
    normalization of [serial 2788]
 


Theorem (1223)                               [serial 2813] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1224)                               [serial 2938] 
P [233] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t ))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not ((exists t~time
  in last_vp_or_vs ,, now 
  that VP@t ) or 
(exists t~time
  in last_vp_or_vs ,, now 
  that VS@t ))
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that not ((exists t~time
         in u - max_cci ,, u 
         that vp@t ) or 
       (exists t~time
         in u - max_cci ,, u 
         that vs@t ))
        and (vp@(u-max_cci) or 
       vs@(u-max_cci)) )
 and not ((exists t~time
  in now - max_cci ,, now 
  that vp@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that vs@t ))
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AP@t )
 and (vp@(now-max_cci) or 
vs@(now-max_cci)) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1225)                               [serial 2937] 
P [233] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP@t or 
       AS@t) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP@t or 
       VS@t) )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that not ((exists t~time
         in u - max_cci ,, u 
         that vp@t ) or 
       (exists t~time
         in u - max_cci ,, u 
         that vs@t ))
        and (vp@(u-max_cci) or 
       vs@(u-max_cci)) )
 and not ((exists t~time
  in now - max_cci ,, now 
  that vp@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that vs@t ))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AP@t )
 and (vp@(now-max_cci) or 
vs@(now-max_cci)) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1224:
Theorem (1224) [serial 2938] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 2937]
 


Theorem (1226)                               [serial 2936] 
P [233] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that not ((exists t~time
         in u - max_cci ,, u 
         that vp@t ) or 
       (exists t~time
         in u - max_cci ,, u 
         that vs@t ))
        and (vp@(u-max_cci) or 
       vs@(u-max_cci)) )
 and not ((exists t~time
  in now - max_cci ,, now 
  that vp@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that vs@t ))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AP@t )
 and (vp@(now-max_cci) or 
vs@(now-max_cci)) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1225:
Theorem (1225) [serial 2937] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 2936]
 


Theorem (1227)                               [serial 2935] 
P [233] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that not ((exists t~time
         in u - max_cci ,, u 
         that vp@t ) or 
       (exists t~time
         in u - max_cci ,, u 
         that vs@t ))
        and (vp@(u-max_cci) or 
       vs@(u-max_cci)) )
 and not ((exists t~time
  in now - max_cci ,, now 
  that vp@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that vs@t ))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AP@t )
 and (vp@(now-max_cci) or 
vs@(now-max_cci)) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Associativity: (b.c).a = a.b.c
and theorem 1226:
Theorem (1226) [serial 2936] used for:
  Associativity: (b.c).a = a.b.c [serial 2935]
 


Theorem (1228)                               [serial 2933] 
P [233] << not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that not ((exists t~time
         in u - max_cci ,, u 
         that vp@t ) or 
       (exists t~time
         in u - max_cci ,, u 
         that vs@t ))
        and (vp@(u-max_cci) or 
       vs@(u-max_cci)) )
 and not ((exists t~time
  in now - max_cci ,, now 
  that vp@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that vs@t ))
 and ((not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AP@t )
 and (vp@(now-max_cci) or 
vs@(now-max_cci)) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Associativity: (b.c).a = a.b.c
and theorem 1227:
Theorem (1227) [serial 2935] used for:
  Associativity: (b.c).a = a.b.c [serial 2933]
 


Theorem (1229)                               [serial 2931] 
P [233] << (vp@(now-max_cci) or 
vs@(now-max_cci))
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)))) .. now 
  that AP@t )
 and not ((exists t~time
  in now - max_cci ,, now 
  that vp@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that vs@t ))
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp@(u-max_cci) or 
       vs@(u-max_cci))
        and not ((exists t~time
         in u - max_cci ,, u 
         that vp@t ) or 
       (exists t~time
         in u - max_cci ,, u 
         that vs@t )) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1228:
Theorem (1228) [serial 2933] used for:
    normalization of [serial 2931]
 


Theorem (1230)                               [serial 2930] 
P [233] << (vp@(now-max_cci) or 
vs@(now-max_cci))
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)))) .. now 
  that AP@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp@t or 
       vs@t) )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp@(u-max_cci) or 
       vs@(u-max_cci))
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp@t or 
              vs@t) ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1229:
Theorem (1229) [serial 2931] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 2930]
 


Theorem (1231)                               [serial 2929] 
P [233] << (vp or 
vs)@(now-max_cci)
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)))) .. now 
  that AP@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1230:
Theorem (1230) [serial 2930] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 2929]
 


Theorem (1232)                               [serial 2928] 
P [233] << (vp or 
vs)@(now-max_cci)
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - DAV_A())) .. now 
  that AP@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Substitution of Assertion Labels
and theorem 1231:
Theorem (1231) [serial 2929] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2928]
 


Theorem (1233)                               [serial 2847] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [176] << not ((exists t~time
  in last_ap_or_as ,, now 
  that AP@t ) or 
(exists t~time
  in last_ap_or_as ,, now 
  that AS@t )) >>
by Substitution of Assertion Labels
and theorem 1232:
Theorem (1232) [serial 2928] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2847]
 


Theorem (1234)                               [serial 2842] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 1233:
Theorem (1233) [serial 2847] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 2842]
 


Theorem (1235)                               [serial 2945] 
P [233] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AP@t ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1236)                               [serial 2944] 
P [233] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AP@t ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Associativity: (b.c).a = a.b.c
and theorem 1235:
Theorem (1235) [serial 2945] used for:
  Associativity: (b.c).a = a.b.c [serial 2944]
 


Theorem (1237)                               [serial 2942] 
P [233] << (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and ((not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AP@t ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Associativity: (b.c).a = a.b.c
and theorem 1236:
Theorem (1236) [serial 2944] used for:
  Associativity: (b.c).a = a.b.c [serial 2942]
 


Theorem (1238)                               [serial 2940] 
P [233] << (vp or 
vs)@(now-max_cci)
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)))) .. now 
  that AP@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1237:
Theorem (1237) [serial 2942] used for:
    normalization of [serial 2940]
 


Theorem (1239)                               [serial 2939] 
P [233] << (vp or 
vs)@(now-max_cci)
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - DAV_A())) .. now 
  that AP@t )
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Substitution of Assertion Labels
and theorem 1238:
Theorem (1238) [serial 2940] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2939]
 


Theorem (1240)                               [serial 2854] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Substitution of Assertion Labels
and theorem 1239:
Theorem (1239) [serial 2939] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2854]
 


Theorem (1241)                               [serial 2843] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [175] << (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1240:
Theorem (1240) [serial 2854] used for:
    normalization of [serial 2843]
 


Theorem (1242)                               [serial 2835] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [238] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1234 1241:
Theorem (1234) [serial 2842] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2835]
 
Theorem (1241) [serial 2843] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2835]
 


Theorem (1243)                               [serial 2823] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [238] << ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1242:
Theorem (1242) [serial 2835] used for:
    normalization of [serial 2823]
 


Theorem (1244)                               [serial 2814] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [238] << LAST_AP_OR_AS_A(now) >>
by Substitution of Assertion Labels
and theorem 1243:
Theorem (1243) [serial 2823] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2814]
 


Theorem (1245)                               [serial 2815] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [235] << not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1246)                               [serial 2807] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1223 1244 1245:
Theorem (1223) [serial 2813] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2807]
 
Theorem (1244) [serial 2814] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2807]
 
Theorem (1245) [serial 2815] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2807]
 


Theorem (1247)                               [serial 2797] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and true
 and true
 and true
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1246:
Theorem (1246) [serial 2807] used for:
  Law of And-Simplification:  P and true is P [serial 2797]
 


Theorem (1248)                               [serial 2788] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and true
 and true
 and true
 and true
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1247:
Theorem (1247) [serial 2797] used for:
    normalization of [serial 2788]
 


Theorem (1249)                               [serial 2775] 
P [233] << (vp or 
vs)@(now-max_cci)
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1248 1248:
Theorem (1248) [serial 2788] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1248) [serial 2788] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1250)                               [serial 2766] 
P [233] << (vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1249:
Theorem (1249) [serial 2775] used for:
    normalization of [serial 2766]
 


Theorem (1251)                               [serial 2746] 
P [233] << not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and ((vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ))
 and (LAST(now)
 and LRL_A(now)
 and PAV(now)) >>
S [233] ->
Q [234] << (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 1250:
Theorem (1250) [serial 2766] used for:
  Associativity: (b.c).a = a.b.c [serial 2746]
 


Theorem (1252)                               [serial 2735] 
P [233] << ((PAV(now)
 and LRL_A(now)
 and LAST(now)))
 and (((vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )))
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [233] ->
Q [234] << (((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1251:
Theorem (1251) [serial 2746] used for:
    normalization of [serial 2735]
 


Theorem (1253)                               [serial 2840] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1254)                               [serial 2914] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << VP@now or 
VS@now >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1255)                               [serial 2912] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << ((VP@now or 
VS@now)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1254:
Theorem (1254) [serial 2914] used for:
    normalization of [serial 2912]
 


Theorem (1256)                               [serial 2910] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << true
 and (VP@now or 
VS@now) >>
by Law of And-Simplification:  P and true is P
and theorem 1255:
Theorem (1255) [serial 2912] used for:
  Law of And-Simplification:  P and true is P [serial 2910]
 


Theorem (1257)                               [serial 2908] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << ((((VP@now or 
VS@now))
 and not (false))) >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1256:
Theorem (1256) [serial 2910] used for:
    normalization of [serial 2908]
 


Theorem (1258)                               [serial 2907] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << ((((VP@now or 
VS@now))
 and not (exists t~time
  in now ,, now 
  that ((VS or 
       VP))@t ))) >>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 1257:
Theorem (1257) [serial 2908] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 2907]
 


Theorem (1259)                               [serial 2906] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << ((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t ))) >>
by Guided Substitution of Equals
and theorem 1258:
Theorem (1258) [serial 2907] used for:
  Guided Substitution of Equals
 replacing "last_vp_or_vs" with its = "now" in its postcondition [serial 2906]
 


Theorem (1260)                               [serial 2841] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << LAST_VP_OR_VS_A(now) >>
by Substitution of Assertion Labels
and theorem 1259:
Theorem (1259) [serial 2906] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2841]
 


Theorem (1261)                               [serial 2829] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1253 1260:
Theorem (1253) [serial 2840] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2829]
 
Theorem (1260) [serial 2841] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2829]
 


Theorem (1262)                               [serial 2820] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1261:
Theorem (1261) [serial 2829] used for:
    normalization of [serial 2820]
 


Theorem (1263)                               [serial 2810] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << LAST(now) >>
by Substitution of Assertion Labels
and theorem 1262:
Theorem (1262) [serial 2820] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2810]
 


Theorem (1264)                               [serial 2904] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << VP@now or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1265)                               [serial 2902] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << (VP@now) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1264:
Theorem (1264) [serial 2904] used for:
    normalization of [serial 2902]
 


Theorem (1266)                               [serial 2901] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << (exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ) >>
by Introduction of Existential Quantification
and theorem 1265:
Theorem (1265) [serial 2902] used for:
  replace exists with upper or lower bound [serial 2901]
 


Theorem (1267)                               [serial 2831] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t  >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1266:
Theorem (1266) [serial 2901] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 2831]
 


Theorem (1268)                               [serial 2821] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1267:
Theorem (1267) [serial 2831] used for:
    normalization of [serial 2821]
 


Theorem (1269)                               [serial 2811] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << LRL_A(now) >>
by Substitution of Assertion Labels
and theorem 1268:
Theorem (1268) [serial 2821] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2811]
 


Theorem (1270)                               [serial 2926] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << true >>
by True Conclusion Schema (tc): P->true


Theorem (1271)                               [serial 2924] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << not ((false)) >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1270:
Theorem (1270) [serial 2926] used for:
    normalization of [serial 2924]
 


Theorem (1272)                               [serial 2923] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << not ((false) or 
(false)) >>
by Law of Or-Simplification: P or P is P
and theorem 1271:
Theorem (1271) [serial 2924] used for:
  Law of Or-Simplification: P or P is P [serial 2923]
 


Theorem (1273)                               [serial 2922] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << not ((exists t~time
  in now ,, now 
  that AP@t ) or 
(exists t~time
  in now ,, now 
  that AS@t )) >>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 1272:
Theorem (1272) [serial 2923] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 2922]
 


Theorem (1274)                               [serial 2846] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << not ((exists t~time
  in last_vp_or_vs ,, now 
  that AP@t ) or 
(exists t~time
  in last_vp_or_vs ,, now 
  that AS@t )) >>
by Guided Substitution of Equals
and theorem 1273:
Theorem (1273) [serial 2922] used for:
  Guided Substitution of Equals
 replacing "last_vp_or_vs" with its = "now" in its postcondition [serial 2846]
 


Theorem (1275)                               [serial 2833] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << not (exists t~time
  in last_vp_or_vs ,, now 
  that (AP or 
       AS)@t ) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 1274:
Theorem (1274) [serial 2846] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 2833]
 


Theorem (1276)                               [serial 2822] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << (not (exists t~time
  in last_vp_or_vs ,, now 
  that ((AS or 
       AP))@t )) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1275:
Theorem (1275) [serial 2833] used for:
    normalization of [serial 2822]
 


Theorem (1277)                               [serial 2812] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << VAI(now) >>
by Substitution of Assertion Labels
and theorem 1276:
Theorem (1276) [serial 2822] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2812]
 


Theorem (1278)                               [serial 2748] 
P [255] << VP@last_vp_or_vs
 and VP@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << LAST(now)
 and LRL_A(now)
 and VAI(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1263 1269 1277:
Theorem (1263) [serial 2810] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2748]
 
Theorem (1269) [serial 2811] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2748]
 
Theorem (1277) [serial 2812] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2748]
 


Theorem (1279)                               [serial 2736] 
P [255] << (VP@last_vp_or_vs
 and VP@now
 and AXIOM_LAST_AS_LE_TOPS()
 and ((last_vp_or_vs = now))
 and LAST_AP_OR_AS_A(now)) >>
S [200] ->
Q [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1278:
Theorem (1278) [serial 2748] used for:
    normalization of [serial 2736]
 


Theorem (1280)                               [serial 2895] 
P [234] << last_ap_or_as <= tops
 and not (exists #18#~time
  in last_ap_or_as ,, now 
  that AP@#18# or 
       AS@#18# )
 and not (exists #19#~time
  in now - MAX_CCI ,, now 
  that VP@#19# or 
       VS@#19# )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [94] << not (exists #20#~time
  in now - MAX_CCI ,, now 
  that VP@#20# or 
       VS@#20# ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1281)                               [serial 2894] 
P [234] << last_ap_or_as <= tops
 and not (exists t~time
  in last_ap_or_as ,, now 
  that AP@t or 
       AS@t )
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [94] << not (exists tu~time
  in now - MAX_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 1280:
Theorem (1280) [serial 2895] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 2894]
 


Theorem (1282)                               [serial 2892] 
P [234] << last_ap_or_as <= tops
 and not (exists t~time
  in last_ap_or_as ,, now 
  that AP@t or 
       AS@t )
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [94] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Extend Existential Quantification Range:  
and theorem 1281:
Theorem (1281) [serial 2894] used for:
  Extend Existential Quantification Range:   [serial 2892]
 


Theorem (1283)                               [serial 2890] 
P [234] << last_ap_or_as <= tops
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP@t or 
       AS@t) )
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP@t or 
       VS@t) )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - MAX_CCI) < (now - MIN_CCI) >>
S [239] ->
Q [94] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1282:
Theorem (1282) [serial 2892] used for:
    normalization of [serial 2890]
 


Theorem (1284)                               [serial 2889] 
P [234] << last_ap_or_as <= tops
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP@t or 
       AS@t) )
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP@t or 
       VS@t) )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [94] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Replacing port names with BLESS::Assertion properties
and theorem 1283:
Theorem (1283) [serial 2890] used for:
  Replacing port names with BLESS::Assertion properties [serial 2889]
 


Theorem (1285)                               [serial 2884] 
P [234] << last_ap_or_as <= tops
 and (VP or 
VS)@(now-MAX_CCI)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [94] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1284:
Theorem (1284) [serial 2889] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 2884]
 


Theorem (1286)                               [serial 2881] 
P [234] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and last_ap_or_as <= tops
 and (VP or 
VS)@(now-MAX_CCI)
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [94] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1285:
Theorem (1285) [serial 2884] used for:
    normalization of [serial 2881]
 


Theorem (1287)                               [serial 2899] 
P [234] << last_ap_or_as <= tops
 and not (exists t~time
  in last_ap_or_as ,, now 
  that AP@t or 
       AS@t )
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << (AP@(now-AV)
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )) or 
(AS@(now-(SAVO+DAV_A()))
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )) or 
(not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t )
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))) >>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (1288)                               [serial 2897] 
P [234] << last_ap_or_as <= tops
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP@t or 
       AS@t) )
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP@t or 
       VS@t) )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << ((AP@((now-AV))
 and not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) ))) or 
((((VP@((now-MAX_CCI)) or 
VS@((now-MAX_CCI))))
 and not (exists t~time
  in ((now - MAX_CCI)) ,, now 
  that ((VS@t or 
       VP@t)) ))) or 
((AS@((now-((DAV_A()+SAVO))))
 and not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1287:
Theorem (1287) [serial 2899] used for:
    normalization of [serial 2897]
 


Theorem (1289)                               [serial 2896] 
P [234] << last_ap_or_as <= tops
 and (VP or 
VS)@(now-MAX_CCI)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << ((AP@((now-AV))
 and not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) ))) or 
((((VP@((now-MAX_CCI)) or 
VS@((now-MAX_CCI))))
 and not (exists t~time
  in ((now - MAX_CCI)) ,, now 
  that ((VS@t or 
       VP@t)) ))) or 
((AS@((now-((DAV_A()+SAVO))))
 and not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) ))) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1288:
Theorem (1288) [serial 2897] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 2896]
 


Theorem (1290)                               [serial 2886] 
P [234] << last_ap_or_as <= tops
 and (VP or 
VS)@(now-MAX_CCI)
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_MaxCCI(now) or 
PACE_ON_SAV_DELAY(now) >>
by Substitution of Assertion Labels
and theorem 1289:
Theorem (1289) [serial 2896] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2886]
 


Theorem (1291)                               [serial 2882] 
P [234] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and last_ap_or_as <= tops
 and (VP or 
VS)@(now-MAX_CCI)
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [209] << (PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_MaxCCI(now) or 
PACE_ON_SAV_DELAY(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1290:
Theorem (1290) [serial 2886] used for:
    normalization of [serial 2882]
 


Theorem (1292)                               [serial 2880] 
P [234] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and last_ap_or_as <= tops
 and (VP or 
VS)@(now-MAX_CCI)
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t )
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [31] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )
 and (PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_MaxCCI(now) or 
PACE_ON_SAV_DELAY(now)) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1286 1291:
Theorem (1286) [serial 2881] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2880]
 
Theorem (1291) [serial 2882] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2880]
 


Theorem (1293)                               [serial 2878] 
P [234] << last_ap_or_as <= tops
 and (VP or 
VS)@(now-MAX_CCI)
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t )
 and (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [31] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )
 and (PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_MaxCCI(now) or 
PACE_ON_SAV_DELAY(now)) >>
by Associativity: (b.c).a = a.b.c
and theorem 1292:
Theorem (1292) [serial 2880] used for:
  Associativity: (b.c).a = a.b.c [serial 2878]
 


Theorem (1294)                               [serial 2876] 
P [234] << last_ap_or_as <= tops
 and (VP or 
VS)@(now-MAX_CCI)
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t )
 and (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [31] << (((not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) ))
 and ((PACE_ON_MaxCCI(now) or 
PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_SAV_DELAY(now))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1293:
Theorem (1293) [serial 2878] used for:
    normalization of [serial 2876]
 


Theorem (1295)                               [serial 2875] 
P [234] << last_ap_or_as <= tops
 and (VP or 
VS)@(now-MAX_CCI)
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t )
 and (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [31] << ((URL_A(now)
 and VP_A(now))) >>
by Substitution of Assertion Labels
and theorem 1294:
Theorem (1294) [serial 2876] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 2875]
 


Theorem (1296)                               [serial 2873] 
P [234] << last_ap_or_as <= tops
 and (VP or 
VS)@(now-MAX_CCI)
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t )
 and (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (VP iff (URL_A(now)
 and VP_A(now)))
 and (VS iff (0 = now or 
VS_A(now)))
 and (now - max_cci) < (now - min_cci) >>
S [239] ->
Q [31] << VP >>
by Guided Substitution of Equals
and theorem 1295:
Theorem (1295) [serial 2875] used for:
  Guided Substitution of Equals
 replacing "VP" with its iff "((URL_A(now)
 and VP_A(now)))" in its postcondition [serial 2873]
 


Theorem (1297)                               [serial 2871] 
P [234] << (VP or 
VS)@(now-MAX_CCI)
 and ((last_ap_or_as <= tops))
 and ((((now - max_cci)) < ((now - min_cci))))
 and ((VP iff ((VP_A(now)
 and URL_A(now)))))
 and ((VS iff ((VS_A(now) or 
(now = 0)))))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t ) >>
S [239] ->
Q [31] << VP >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1296:
Theorem (1296) [serial 2873] used for:
    normalization of [serial 2871]
 


Theorem (1298)                               [serial 2864] 
P [234] << (VP or 
VS)@(now-MAX_CCI)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t ) >>
S [239] ->
Q [31] << VP >>
by Substitution of Assertion Labels
and theorem 1297:
Theorem (1297) [serial 2871] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2864]
 


Theorem (1299)                               [serial 2862] 
P [234] << (VP or 
VS)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [239] ->
Q [31] << VP >>
by Replacing port names with BLESS::Assertion properties
and theorem 1298:
Theorem (1298) [serial 2864] used for:
  Replacing port names with BLESS::Assertion properties [serial 2862]
 


Theorem (1300)                               [serial 2750] 
P [234] << (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [239] ->
Q [31] << VP >>
by Replacing port names with BLESS::Assertion properties
and theorem 1299:
Theorem (1299) [serial 2862] used for:
  Replacing port names with BLESS::Assertion properties [serial 2750]
 


Theorem (1301)                               [serial 2740] 
P [234] << (((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [239] ->
Q [31] << VP >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1300:
Theorem (1300) [serial 2750] used for:
    normalization of [serial 2740]
 


Theorem (1302)                               [serial 2808] 
P [239] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1303)                               [serial 2799] 
P [239] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1302:
Theorem (1302) [serial 2808] used for:
  Law of And-Simplification:  P and true is P [serial 2799]
 


Theorem (1304)                               [serial 2789] 
P [239] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and true
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1303:
Theorem (1303) [serial 2799] used for:
    normalization of [serial 2789]
 


Theorem (1305)                               [serial 2808] 
P [239] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1306)                               [serial 2799] 
P [239] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1305:
Theorem (1305) [serial 2808] used for:
  Law of And-Simplification:  P and true is P [serial 2799]
 


Theorem (1307)                               [serial 2789] 
P [239] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and true
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1306:
Theorem (1306) [serial 2799] used for:
    normalization of [serial 2789]
 


Theorem (1308)                               [serial 2777] 
P [239] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1307 1307:
Theorem (1307) [serial 2789] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1307) [serial 2789] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1309)                               [serial 2767] 
P [239] << (vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and VP@now >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1308:
Theorem (1308) [serial 2777] used for:
    normalization of [serial 2767]
 


Theorem (1310)                               [serial 2752] 
P [239] << VP@now
 and ((vp or 
vs)@(now-max_cci)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )) >>
S [239] ->
Q [240] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 1309:
Theorem (1309) [serial 2767] used for:
  Associativity: (b.c).a = a.b.c [serial 2752]
 


Theorem (1311)                               [serial 2741] 
P [239] << ((((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)))
 and VP@now >>
S [239] ->
Q [240] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1310:
Theorem (1310) [serial 2752] used for:
    normalization of [serial 2741]
 


Theorem (1312)                               [serial 2737] 
P [234] << (((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [239] vp!
Q [240] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 1301 1311:
Theorem (1301) [serial 2740] used for:
  applied port output <<pre>> -> <<M[vp]>> [serial 2737]
 
Theorem (1311) [serial 2741] used for:
  applied port output <<pre and M[vp]@now>> -> <<post>> [serial 2737]
 


Theorem (1313)                               [serial 2816] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1314)                               [serial 2947] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP@t or 
       VS@t) ) >>
S [247] ->
Q [251] << VP@(now-max_cci) or 
VS@(now-max_cci) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1315)                               [serial 2946] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [251] << VP@(now-max_cci) or 
VS@(now-max_cci) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1314:
Theorem (1314) [serial 2947] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 2946]
 


Theorem (1316)                               [serial 2856] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [251] << VP@(now-max_cci) or 
VS@(now-max_cci) >>
by Replacing port names with BLESS::Assertion properties
and theorem 1315:
Theorem (1315) [serial 2946] used for:
  Replacing port names with BLESS::Assertion properties [serial 2856]
 


Theorem (1317)                               [serial 2844] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [251] << (VP@(now-max_cci) or 
VS@(now-max_cci)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1316:
Theorem (1316) [serial 2856] used for:
    normalization of [serial 2844]
 


Theorem (1318)                               [serial 2817] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [251] << (VP or 
VS)@(now-max_cci) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 1317:
Theorem (1317) [serial 2844] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 2817]
 


Theorem (1319)                               [serial 2818] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [252] << LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1320)                               [serial 2920] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t ))
 and (VP@(now-max_cci) or 
VS@(now-max_cci)) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1321)                               [serial 2918] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1320:
Theorem (1320) [serial 2920] used for:
    normalization of [serial 2918]
 


Theorem (1322)                               [serial 2917] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP@t or 
       VS@t) ) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1321:
Theorem (1321) [serial 2918] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 2917]
 


Theorem (1323)                               [serial 2916] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1322:
Theorem (1322) [serial 2917] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 2916]
 


Theorem (1324)                               [serial 2845] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by Replacing port names with BLESS::Assertion properties
and theorem 1323:
Theorem (1323) [serial 2916] used for:
  Replacing port names with BLESS::Assertion properties [serial 2845]
 


Theorem (1325)                               [serial 2819] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 1324:
Theorem (1324) [serial 2845] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 2819]
 


Theorem (1326)                               [serial 2809] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1313 1318 1319 1325:
Theorem (1313) [serial 2816] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2809]
 
Theorem (1318) [serial 2817] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2809]
 
Theorem (1319) [serial 2818] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2809]
 
Theorem (1325) [serial 2819] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2809]
 


Theorem (1327)                               [serial 2801] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t )
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1326:
Theorem (1326) [serial 2809] used for:
  Law of And-Simplification:  P and true is P [serial 2801]
 


Theorem (1328)                               [serial 2790] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and true
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1327:
Theorem (1327) [serial 2801] used for:
    normalization of [serial 2790]
 


Theorem (1329)                               [serial 2816] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1330)                               [serial 2947] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP@t or 
       VS@t) ) >>
S [247] ->
Q [251] << VP@(now-max_cci) or 
VS@(now-max_cci) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1331)                               [serial 2946] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [251] << VP@(now-max_cci) or 
VS@(now-max_cci) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1330:
Theorem (1330) [serial 2947] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 2946]
 


Theorem (1332)                               [serial 2856] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [251] << VP@(now-max_cci) or 
VS@(now-max_cci) >>
by Replacing port names with BLESS::Assertion properties
and theorem 1331:
Theorem (1331) [serial 2946] used for:
  Replacing port names with BLESS::Assertion properties [serial 2856]
 


Theorem (1333)                               [serial 2844] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [251] << (VP@(now-max_cci) or 
VS@(now-max_cci)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1332:
Theorem (1332) [serial 2856] used for:
    normalization of [serial 2844]
 


Theorem (1334)                               [serial 2817] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [251] << (VP or 
VS)@(now-max_cci) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 1333:
Theorem (1333) [serial 2844] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 2817]
 


Theorem (1335)                               [serial 2818] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [252] << LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1336)                               [serial 2920] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t ))
 and (VP@(now-max_cci) or 
VS@(now-max_cci)) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1337)                               [serial 2918] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1336:
Theorem (1336) [serial 2920] used for:
    normalization of [serial 2918]
 


Theorem (1338)                               [serial 2917] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP@(now-max_cci) or 
VS@(now-max_cci))
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP@t or 
       VS@t) ) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1337:
Theorem (1337) [serial 2918] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 2917]
 


Theorem (1339)                               [serial 2916] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1338:
Theorem (1338) [serial 2917] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 2916]
 


Theorem (1340)                               [serial 2845] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << not ((exists t~time
  in now - max_cci ,, now 
  that VP@t ) or 
(exists t~time
  in now - max_cci ,, now 
  that VS@t )) >>
by Replacing port names with BLESS::Assertion properties
and theorem 1339:
Theorem (1339) [serial 2916] used for:
  Replacing port names with BLESS::Assertion properties [serial 2845]
 


Theorem (1341)                               [serial 2819] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Distribution of preconditions, and over or, and distribution of postcondtitions, or over and
and theorem 1340:
Theorem (1340) [serial 2845] used for:
  Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 2819]
 


Theorem (1342)                               [serial 2809] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1329 1334 1335 1341:
Theorem (1329) [serial 2816] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2809]
 
Theorem (1334) [serial 2817] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2809]
 
Theorem (1335) [serial 2818] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2809]
 
Theorem (1341) [serial 2819] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2809]
 


Theorem (1343)                               [serial 2801] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t )
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1342:
Theorem (1342) [serial 2809] used for:
  Law of And-Simplification:  P and true is P [serial 2801]
 


Theorem (1344)                               [serial 2790] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and true
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1343:
Theorem (1343) [serial 2801] used for:
    normalization of [serial 2790]
 


Theorem (1345)                               [serial 2779] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1344 1344:
Theorem (1344) [serial 2790] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1344) [serial 2790] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1346)                               [serial 2768] 
P [247] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and (cci = (now - last_vp_or_vs))@now >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1345:
Theorem (1345) [serial 2779] used for:
    normalization of [serial 2768]
 


Theorem (1347)                               [serial 2754] 
P [247] << (cci = (now - last_vp_or_vs))@now
 and (VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )) >>
S [247] ->
Q [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 1346:
Theorem (1346) [serial 2768] used for:
  Associativity: (b.c).a = a.b.c [serial 2754]
 


Theorem (1348)                               [serial 2742] 
P [247] << ((VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)))
 and (cci = ((now - last_vp_or_vs)))@now >>
S [247] ->
Q [248] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1347:
Theorem (1347) [serial 2754] used for:
    normalization of [serial 2742]
 


Theorem (1349)                               [serial 2869] 
P [247] << VP@now
 and (CCI = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-MAX_CCI)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [247] << true >>
by True Conclusion Schema (tc): P->true


Theorem (1350)                               [serial 2866] 
P [247] << VP@now
 and (CCI = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-MAX_CCI)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [247] << (true)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Constants are always the same
and theorem 1349:
Theorem (1349) [serial 2869] used for:
    normalization of [serial 2866]
 


Theorem (1351)                               [serial 2865] 
P [247] << VP@now
 and (CCI = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-MAX_CCI)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - MAX_CCI ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [247] << (CCI = CCI)@now >>
by Equality Law (idistr):  a=a <-> true
and theorem 1350:
Theorem (1350) [serial 2866] used for:
  Equality Law (idistr):  a=a <-> true [serial 2865]
 


Theorem (1352)                               [serial 2863] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [247] ->
Q [247] << (CCI = cci)@now >>
by Replacing port names with BLESS::Assertion properties
and theorem 1351:
Theorem (1351) [serial 2865] used for:
  Replacing port names with BLESS::Assertion properties [serial 2863]
 


Theorem (1353)                               [serial 2781] 
P [247] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t ) >>
S [247] ->
Q [247] << (CCI = cci)@now >>
by Replacing port names with BLESS::Assertion properties
and theorem 1352:
Theorem (1352) [serial 2863] used for:
  Replacing port names with BLESS::Assertion properties [serial 2781]
 


Theorem (1354)                               [serial 2769] 
P [247] << VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )
 and (cci = (now - last_vp_or_vs))@now >>
S [247] ->
Q [247] << (CCI = cci)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1353:
Theorem (1353) [serial 2781] used for:
    normalization of [serial 2769]
 


Theorem (1355)                               [serial 2756] 
P [247] << (cci = (now - last_vp_or_vs))@now
 and (VP@now
 and (vp or 
vs)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )) >>
S [247] ->
Q [247] << (CCI = cci)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 1354:
Theorem (1354) [serial 2769] used for:
  Associativity: (b.c).a = a.b.c [serial 2756]
 


Theorem (1356)                               [serial 2743] 
P [247] << ((VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)))
 and (cci = ((now - last_vp_or_vs)))@now >>
S [247] ->
Q [247] << (cci = CCI)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1355:
Theorem (1355) [serial 2756] used for:
    normalization of [serial 2743]
 


Theorem (1357)                               [serial 2738] 
P [240] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [247] cci!((now - last_vp_or_vs))
Q [248] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 1348 1356:
Theorem (1348) [serial 2742] used for:
  applied port output <<pre and (cci=(now - last_vp_or_vs))@now>> -> <<post>> [serial 2738]
 
Theorem (1356) [serial 2743] used for:
  applied port output <<pre and (cci=(now - last_vp_or_vs))@now>> -> <<(cci=CCI)@now>> [serial 2738]
 


Theorem (1358)                               [serial 2806] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1359)                               [serial 2795] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and LAST_AP_OR_AS_A(now)
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1358:
Theorem (1358) [serial 2806] used for:
  Law of And-Simplification:  P and true is P [serial 2795]
 


Theorem (1360)                               [serial 2787] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and true
 and LAST_AP_OR_AS_A(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1359:
Theorem (1359) [serial 2795] used for:
    normalization of [serial 2787]
 


Theorem (1361)                               [serial 2806] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1362)                               [serial 2795] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and LAST_AP_OR_AS_A(now)
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1361:
Theorem (1361) [serial 2806] used for:
  Law of And-Simplification:  P and true is P [serial 2795]
 


Theorem (1363)                               [serial 2787] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and true
 and LAST_AP_OR_AS_A(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1362:
Theorem (1362) [serial 2795] used for:
    normalization of [serial 2787]
 


Theorem (1364)                               [serial 2771] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1363 1363:
Theorem (1363) [serial 2787] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1363) [serial 2787] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1365)                               [serial 2770] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and VP@now
 and true
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
by Law of And-Simplification:  P and P is P
and theorem 1364:
Theorem (1364) [serial 2771] used for:
  Law of And-Simplification:  P and P is P [serial 2770]
 


Theorem (1366)                               [serial 2758] 
P [248] << VP@now
 and (VP or 
VS)@(now-max_cci)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and not (exists t~time
  in now - max_cci ,, now 
  that (VP or 
       VS)@t ) >>
S [254] ->
Q [255] << VP@now
 and VP@now
 and now = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
by Equality Law (idistr):  a=a <-> true
and theorem 1365:
Theorem (1365) [serial 2770] used for:
  Equality Law (idistr):  a=a <-> true [serial 2758]
 


Theorem (1367)                               [serial 2744] 
P [248] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [254] ->
Q [255] << (VP@now
 and VP@now
 and AXIOM_LAST_AS_LE_TOPS()
 and ((now = now))
 and LAST_AP_OR_AS_A(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1366:
Theorem (1366) [serial 2758] used for:
    normalization of [serial 2744]
 


Theorem (1368)                               [serial 2739] 
P [248] << (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [254] last_vp_or_vs := now
Q [255] << (VP@last_vp_or_vs
 and VP@now
 and AXIOM_LAST_AS_LE_TOPS()
 and ((last_vp_or_vs = now))
 and LAST_AP_OR_AS_A(now)) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1367:
Theorem (1367) [serial 2744] used for:
  applied wp for assignment [serial 2739]
 


Theorem (1369)                               [serial 1060] 
P [233] << ((PAV(now)
 and LRL_A(now)
 and LAST(now)))
 and (((vp or 
vs)@(now-max_cci)
 and not (exists t~time
  in now - max_cci ,, now 
  that (vp or 
       vs)@t )))
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [234] << (((vp or 
vs))@((now-max_cci))
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and AXIOM_VP()
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LAST_AS_LE_TOPS()
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
vp!
<< (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((vp or 
       vs))@t )
 and ((vp or 
vs))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
;
cci!((now - last_vp_or_vs))
<< (VP@now
 and not (exists t~time
  in ((now - max_cci)) ,, now 
  that ((VP or 
       VS))@t )
 and ((VP or 
VS))@((now-max_cci))
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
;
last_vp_or_vs := now
<< (VP@last_vp_or_vs
 and VP@now
 and AXIOM_LAST_AS_LE_TOPS()
 and ((last_vp_or_vs = now))
 and LAST_AP_OR_AS_A(now)) >>
Q [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1252 1279 1312 1357 1368:
Theorem (1252) [serial 2735] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 1060]
 
Theorem (1279) [serial 2736] used for:
  <<Q2>> -> <<Q>> in sequential composition for [serial 1060]
 
Theorem (1312) [serial 2737] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1060]
 
Theorem (1357) [serial 2738] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1060]
 
Theorem (1368) [serial 2739] used for:
  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 1060]
 


Theorem (1370)                               [serial 2951] 
P [260] << LAST(now)
 and LRL_A(now)
 and SAV(now)
 and V@now
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [259] ->
Q [192] << V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1371)                               [serial 2949] 
P [260] << V@now
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and (LAST(now)
 and LRL_A(now)
 and SAV(now)) >>
S [259] ->
Q [192] << V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1370:
Theorem (1370) [serial 2951] used for:
  Associativity: (b.c).a = a.b.c [serial 2949]
 


Theorem (1372)                               [serial 1061] 
P [260] << ((SAV(now)
 and LRL_A(now)
 and LAST(now)))
 and V@now
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that ((as@(u-((dav+savo)))
        and not (exists t~time
         in u - ((dav + savo)) ,, u 
         that as@t ))) )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [259] ->
Q [192] << (V@now
 and SAV(now)
 and LRL_A(now)
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1371:
Theorem (1371) [serial 2949] used for:
    normalization of [serial 1061]
 


Theorem (1373)                               [serial 2955] 
P [192] << V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and (TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now) >>
S [265] ->
Q [190] << LAST(now)
 and LRL_A(now)
 and SAV(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1374)                               [serial 2953] 
P [192] << (V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now))
 and (TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now) >>
S [265] ->
Q [190] << LAST(now)
 and LRL_A(now)
 and SAV(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1373:
Theorem (1373) [serial 2955] used for:
  Associativity: (b.c).a = a.b.c [serial 2953]
 


Theorem (1375)                               [serial 1062] 
P [192] << ((V@now
 and SAV(now)
 and LRL_A(now)
 and LAST(now)))
 and ((not (SV)@now or 
(TNV)@now or 
(((VRP)@now > ((now - last_vp_or_vs)))))) >>
S [265] ->
Q [190] << (SAV(now)
 and LRL_A(now)
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1374:
Theorem (1374) [serial 2953] used for:
    normalization of [serial 1062]
 


Theorem (1376)                               [serial 3099] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [192] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1377)                               [serial 3097] 
P [192] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and not TNV@now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [192] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1376:
Theorem (1376) [serial 3099] used for:
    normalization of [serial 3097]
 


Theorem (1378)                               [serial 3096] 
P [192] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and not TNV@now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [192] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 1377:
Theorem (1377) [serial 3097] used for:
  Associativity: (b.c).a = a.b.c [serial 3096]
 


Theorem (1379)                               [serial 3094] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and not TNV@now
 and ((not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (SAVO + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [192] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 1378:
Theorem (1378) [serial 3096] used for:
  Associativity: (b.c).a = a.b.c [serial 3094]
 


Theorem (1380)                               [serial 3092] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)) + 
  SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) )
 and not TNV@now >>
S [192] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1379:
Theorem (1379) [serial 3094] used for:
    normalization of [serial 3092]
 


Theorem (1381)                               [serial 3091] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((DAV_A() + SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) )
 and not TNV@now >>
S [192] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by Substitution of Assertion Labels
and theorem 1380:
Theorem (1380) [serial 3092] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3091]
 


Theorem (1382)                               [serial 3041] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by Substitution of Assertion Labels
and theorem 1381:
Theorem (1381) [serial 3091] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3041]
 


Theorem (1383)                               [serial 3109] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [192] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1384)                               [serial 3107] 
P [192] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and not TNV@now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [192] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1383:
Theorem (1383) [serial 3109] used for:
    normalization of [serial 3107]
 


Theorem (1385)                               [serial 3106] 
P [192] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and not TNV@now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [192] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Associativity: (b.c).a = a.b.c
and theorem 1384:
Theorem (1384) [serial 3107] used for:
  Associativity: (b.c).a = a.b.c [serial 3106]
 


Theorem (1386)                               [serial 3104] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and not TNV@now
 and ((not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (SAVO + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [192] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Associativity: (b.c).a = a.b.c
and theorem 1385:
Theorem (1385) [serial 3106] used for:
  Associativity: (b.c).a = a.b.c [serial 3104]
 


Theorem (1387)                               [serial 3102] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)) + 
  SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) )
 and not TNV@now >>
S [192] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1386:
Theorem (1386) [serial 3104] used for:
    normalization of [serial 3102]
 


Theorem (1388)                               [serial 3101] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((DAV_A() + SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) )
 and not TNV@now >>
S [192] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Substitution of Assertion Labels
and theorem 1387:
Theorem (1387) [serial 3102] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3101]
 


Theorem (1389)                               [serial 3051] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Substitution of Assertion Labels
and theorem 1388:
Theorem (1388) [serial 3101] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3051]
 


Theorem (1390)                               [serial 3042] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [175] << (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1389:
Theorem (1389) [serial 3051] used for:
    normalization of [serial 3042]
 


Theorem (1391)                               [serial 3031] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [271] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1382 1390:
Theorem (1382) [serial 3041] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3031]
 
Theorem (1390) [serial 3042] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3031]
 


Theorem (1392)                               [serial 3020] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [271] << ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1391:
Theorem (1391) [serial 3031] used for:
    normalization of [serial 3020]
 


Theorem (1393)                               [serial 3015] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [271] << LAST_AP_OR_AS_A(now) >>
by Substitution of Assertion Labels
and theorem 1392:
Theorem (1392) [serial 3020] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3015]
 


Theorem (1394)                               [serial 3033] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [271] << SV@now
 and V@now
 and not TNV@now >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1395)                               [serial 3021] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [271] << ((SV@now
 and V@now
 and not TNV@now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1394:
Theorem (1394) [serial 3033] used for:
    normalization of [serial 3021]
 


Theorem (1396)                               [serial 3016] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [271] << VS_A(now) >>
by Substitution of Assertion Labels
and theorem 1395:
Theorem (1395) [serial 3021] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3016]
 


Theorem (1397)                               [serial 3011] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [271] << LAST_AP_OR_AS_A(now)
 and VS_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1393 1396:
Theorem (1393) [serial 3015] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3011]
 
Theorem (1396) [serial 3016] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3011]
 


Theorem (1398)                               [serial 3009] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [271] << true
 and LAST_AP_OR_AS_A(now)
 and VS_A(now) >>
by Law of And-Simplification:  P and true is P
and theorem 1397:
Theorem (1397) [serial 3011] used for:
  Law of And-Simplification:  P and true is P [serial 3009]
 


Theorem (1399)                               [serial 3099] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [192] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1400)                               [serial 3097] 
P [192] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and not TNV@now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [192] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1399:
Theorem (1399) [serial 3099] used for:
    normalization of [serial 3097]
 


Theorem (1401)                               [serial 3096] 
P [192] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and not TNV@now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [192] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 1400:
Theorem (1400) [serial 3097] used for:
  Associativity: (b.c).a = a.b.c [serial 3096]
 


Theorem (1402)                               [serial 3094] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and not TNV@now
 and ((not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (SAVO + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [192] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 1401:
Theorem (1401) [serial 3096] used for:
  Associativity: (b.c).a = a.b.c [serial 3094]
 


Theorem (1403)                               [serial 3092] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)) + 
  SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) )
 and not TNV@now >>
S [192] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1402:
Theorem (1402) [serial 3094] used for:
    normalization of [serial 3092]
 


Theorem (1404)                               [serial 3091] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((DAV_A() + SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) )
 and not TNV@now >>
S [192] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by Substitution of Assertion Labels
and theorem 1403:
Theorem (1403) [serial 3092] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3091]
 


Theorem (1405)                               [serial 3041] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by Substitution of Assertion Labels
and theorem 1404:
Theorem (1404) [serial 3091] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3041]
 


Theorem (1406)                               [serial 3109] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [192] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1407)                               [serial 3107] 
P [192] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and not TNV@now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [192] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1406:
Theorem (1406) [serial 3109] used for:
    normalization of [serial 3107]
 


Theorem (1408)                               [serial 3106] 
P [192] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and not TNV@now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [192] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Associativity: (b.c).a = a.b.c
and theorem 1407:
Theorem (1407) [serial 3107] used for:
  Associativity: (b.c).a = a.b.c [serial 3106]
 


Theorem (1409)                               [serial 3104] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and not TNV@now
 and ((not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (SAVO + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [192] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Associativity: (b.c).a = a.b.c
and theorem 1408:
Theorem (1408) [serial 3106] used for:
  Associativity: (b.c).a = a.b.c [serial 3104]
 


Theorem (1410)                               [serial 3102] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)) + 
  SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) )
 and not TNV@now >>
S [192] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1409:
Theorem (1409) [serial 3104] used for:
    normalization of [serial 3102]
 


Theorem (1411)                               [serial 3101] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((DAV_A() + SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) )
 and not TNV@now >>
S [192] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Substitution of Assertion Labels
and theorem 1410:
Theorem (1410) [serial 3102] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3101]
 


Theorem (1412)                               [serial 3051] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [175] << AP@last_ap_or_as or 
AS@last_ap_or_as >>
by Substitution of Assertion Labels
and theorem 1411:
Theorem (1411) [serial 3101] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3051]
 


Theorem (1413)                               [serial 3042] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [175] << (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1412:
Theorem (1412) [serial 3051] used for:
    normalization of [serial 3042]
 


Theorem (1414)                               [serial 3031] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [271] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1405 1413:
Theorem (1405) [serial 3041] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3031]
 
Theorem (1413) [serial 3042] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3031]
 


Theorem (1415)                               [serial 3020] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [271] << ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1414:
Theorem (1414) [serial 3031] used for:
    normalization of [serial 3020]
 


Theorem (1416)                               [serial 3015] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [271] << LAST_AP_OR_AS_A(now) >>
by Substitution of Assertion Labels
and theorem 1415:
Theorem (1415) [serial 3020] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3015]
 


Theorem (1417)                               [serial 3033] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [271] << SV@now
 and V@now
 and not TNV@now >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1418)                               [serial 3021] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [271] << ((SV@now
 and V@now
 and not TNV@now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1417:
Theorem (1417) [serial 3033] used for:
    normalization of [serial 3021]
 


Theorem (1419)                               [serial 3016] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [271] << VS_A(now) >>
by Substitution of Assertion Labels
and theorem 1418:
Theorem (1418) [serial 3021] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3016]
 


Theorem (1420)                               [serial 3011] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [271] << LAST_AP_OR_AS_A(now)
 and VS_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1416 1419:
Theorem (1416) [serial 3015] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3011]
 
Theorem (1419) [serial 3016] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3011]
 


Theorem (1421)                               [serial 3009] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [271] << true
 and LAST_AP_OR_AS_A(now)
 and VS_A(now) >>
by Law of And-Simplification:  P and true is P
and theorem 1420:
Theorem (1420) [serial 3011] used for:
  Law of And-Simplification:  P and true is P [serial 3009]
 


Theorem (1422)                               [serial 2996] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not TNV@now >>
S [192] ->
Q [271] << AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and VS_A(now) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1421 1421:
Theorem (1421) [serial 3009] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1421) [serial 3009] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1423)                               [serial 2987] 
P [192] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [192] ->
Q [271] << AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and VS_A(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1422:
Theorem (1422) [serial 2996] used for:
    normalization of [serial 2987]
 


Theorem (1424)                               [serial 2967] 
P [192] << (VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now)
 and (V@now
 and LAST(now)
 and LRL_A(now)
 and SAV(now)) >>
S [192] ->
Q [271] << AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and VS_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1423:
Theorem (1423) [serial 2987] used for:
  Associativity: (b.c).a = a.b.c [serial 2967]
 


Theorem (1425)                               [serial 2956] 
P [192] << ((V@now
 and SAV(now)
 and LRL_A(now)
 and LAST(now)))
 and (((SV)@now
 and not (TNV)@now
 and (((VRP)@now <= ((now - last_vp_or_vs)))))) >>
S [192] ->
Q [271] << (VS_A(now)
 and LAST_AP_OR_AS_A(now)
 and AXIOM_VS()) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1424:
Theorem (1424) [serial 2967] used for:
    normalization of [serial 2956]
 


Theorem (1426)                               [serial 3039] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1427)                               [serial 3089] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << VP@now or 
VS@now >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1428)                               [serial 3087] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << ((VP@now or 
VS@now)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1427:
Theorem (1427) [serial 3089] used for:
    normalization of [serial 3087]
 


Theorem (1429)                               [serial 3085] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << true
 and (VP@now or 
VS@now) >>
by Law of And-Simplification:  P and true is P
and theorem 1428:
Theorem (1428) [serial 3087] used for:
  Law of And-Simplification:  P and true is P [serial 3085]
 


Theorem (1430)                               [serial 3083] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << ((((VP@now or 
VS@now))
 and not (false))) >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1429:
Theorem (1429) [serial 3085] used for:
    normalization of [serial 3083]
 


Theorem (1431)                               [serial 3082] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << ((((VP@now or 
VS@now))
 and not (exists t~time
  in now ,, now 
  that ((VS or 
       VP))@t ))) >>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 1430:
Theorem (1430) [serial 3083] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 3082]
 


Theorem (1432)                               [serial 3081] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << ((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t ))) >>
by Guided Substitution of Equals
and theorem 1431:
Theorem (1431) [serial 3082] used for:
  Guided Substitution of Equals
 replacing "last_vp_or_vs" with its = "now" in its postcondition [serial 3081]
 


Theorem (1433)                               [serial 3040] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [117] << LAST_VP_OR_VS_A(now) >>
by Substitution of Assertion Labels
and theorem 1432:
Theorem (1432) [serial 3081] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3040]
 


Theorem (1434)                               [serial 3025] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1426 1433:
Theorem (1426) [serial 3039] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3025]
 
Theorem (1433) [serial 3040] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3025]
 


Theorem (1435)                               [serial 3017] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1434:
Theorem (1434) [serial 3025] used for:
    normalization of [serial 3017]
 


Theorem (1436)                               [serial 3012] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << LAST(now) >>
by Substitution of Assertion Labels
and theorem 1435:
Theorem (1435) [serial 3017] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3012]
 


Theorem (1437)                               [serial 3074] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << VS@now or 
(exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1438)                               [serial 3072] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << (exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(VS@now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1437:
Theorem (1437) [serial 3074] used for:
    normalization of [serial 3072]
 


Theorem (1439)                               [serial 3071] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << (exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ) >>
by Introduction of Existential Quantification
and theorem 1438:
Theorem (1438) [serial 3072] used for:
  replace exists with upper or lower bound [serial 3071]
 


Theorem (1440)                               [serial 3027] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t  >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1439:
Theorem (1439) [serial 3071] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 3027]
 


Theorem (1441)                               [serial 3018] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1440:
Theorem (1440) [serial 3027] used for:
    normalization of [serial 3018]
 


Theorem (1442)                               [serial 3013] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << LRL_A(now) >>
by Substitution of Assertion Labels
and theorem 1441:
Theorem (1441) [serial 3018] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3013]
 


Theorem (1443)                               [serial 3079] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << true >>
by True Conclusion Schema (tc): P->true


Theorem (1444)                               [serial 3077] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << not (false) >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1443:
Theorem (1443) [serial 3079] used for:
    normalization of [serial 3077]
 


Theorem (1445)                               [serial 3076] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << not (exists t~time
  in now ,, now 
  that (AP or 
       AS)@t ) >>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 1444:
Theorem (1444) [serial 3077] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 3076]
 


Theorem (1446)                               [serial 3029] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << not (exists t~time
  in last_vp_or_vs ,, now 
  that (AP or 
       AS)@t ) >>
by Guided Substitution of Equals
and theorem 1445:
Theorem (1445) [serial 3076] used for:
  Guided Substitution of Equals
 replacing "last_vp_or_vs" with its = "now" in its postcondition [serial 3029]
 


Theorem (1447)                               [serial 3019] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << (not (exists t~time
  in last_vp_or_vs ,, now 
  that ((AS or 
       AP))@t )) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1446:
Theorem (1446) [serial 3029] used for:
    normalization of [serial 3019]
 


Theorem (1448)                               [serial 3014] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << VAI(now) >>
by Substitution of Assertion Labels
and theorem 1447:
Theorem (1447) [serial 3019] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3014]
 


Theorem (1449)                               [serial 2969] 
P [279] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
S [200] ->
Q [200] << LAST(now)
 and LRL_A(now)
 and VAI(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1436 1442 1448:
Theorem (1436) [serial 3012] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2969]
 
Theorem (1442) [serial 3013] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2969]
 
Theorem (1448) [serial 3014] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2969]
 


Theorem (1450)                               [serial 2957] 
P [279] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and (last_vp_or_vs = now)
 and AXIOM_LAST_AS_LE_TOPS()) >>
S [200] ->
Q [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1449:
Theorem (1449) [serial 2969] used for:
    normalization of [serial 2957]
 


Theorem (1451)                               [serial 3064] 
P [271] << SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
S [272] ->
Q [38] << 0 = now or 
(SV@now
 and V@now
 and not TNV@now) >>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (1452)                               [serial 3062] 
P [271] << SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
S [272] ->
Q [38] << 0 = now or 
((SV@now
 and V@now
 and not TNV@now)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1451:
Theorem (1451) [serial 3064] used for:
    normalization of [serial 3062]
 


Theorem (1453)                               [serial 3060] 
P [271] << SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
S [272] ->
Q [38] << 0 = now or 
VS_A(now) >>
by Substitution of Assertion Labels
and theorem 1452:
Theorem (1452) [serial 3062] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3060]
 


Theorem (1454)                               [serial 3058] 
P [271] << SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VS iff (0 = now or 
VS_A(now))) >>
S [272] ->
Q [38] << ((0 = now or 
VS_A(now))) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1453:
Theorem (1453) [serial 3060] used for:
    normalization of [serial 3058]
 


Theorem (1455)                               [serial 3057] 
P [271] << SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VS iff (0 = now or 
VS_A(now))) >>
S [272] ->
Q [38] << VS >>
by Guided Substitution of Equals
and theorem 1454:
Theorem (1454) [serial 3058] used for:
  Guided Substitution of Equals
 replacing "VS" with its iff "((0 = now or 
VS_A(now)))" in its postcondition [serial 3057]
 


Theorem (1456)                               [serial 3055] 
P [271] << (SV@now
 and V@now
 and not TNV@now)
 and (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (VS iff (0 = now or 
VS_A(now))) >>
S [272] ->
Q [38] << VS >>
by Associativity: (b.c).a = a.b.c
and theorem 1455:
Theorem (1455) [serial 3057] used for:
  Associativity: (b.c).a = a.b.c [serial 3055]
 


Theorem (1457)                               [serial 3053] 
P [271] << ((VS iff ((VS_A(now) or 
(now = 0)))))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))
 and ((SV@now
 and V@now
 and not TNV@now)) >>
S [272] ->
Q [38] << VS >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1456:
Theorem (1456) [serial 3055] used for:
    normalization of [serial 3053]
 


Theorem (1458)                               [serial 2971] 
P [271] << AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and VS_A(now) >>
S [272] ->
Q [38] << VS >>
by Substitution of Assertion Labels
and theorem 1457:
Theorem (1457) [serial 3053] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 2971]
 


Theorem (1459)                               [serial 2961] 
P [271] << (VS_A(now)
 and LAST_AP_OR_AS_A(now)
 and AXIOM_VS()) >>
S [272] ->
Q [38] << VS >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1458:
Theorem (1458) [serial 2971] used for:
    normalization of [serial 2961]
 


Theorem (1460)                               [serial 2998] 
P [272] << VS@now
 and AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and VS_A(now) >>
S [272] ->
Q [273] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1461)                               [serial 2988] 
P [272] << AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and VS_A(now)
 and VS@now >>
S [272] ->
Q [273] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1460:
Theorem (1460) [serial 2998] used for:
    normalization of [serial 2988]
 


Theorem (1462)                               [serial 2973] 
P [272] << VS@now
 and (AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and VS_A(now)) >>
S [272] ->
Q [273] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1461:
Theorem (1461) [serial 2988] used for:
  Associativity: (b.c).a = a.b.c [serial 2973]
 


Theorem (1463)                               [serial 2962] 
P [272] << ((VS_A(now)
 and LAST_AP_OR_AS_A(now)
 and AXIOM_VS()))
 and VS@now >>
S [272] ->
Q [273] << (VS@now
 and LAST_AP_OR_AS_A(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1462:
Theorem (1462) [serial 2973] used for:
    normalization of [serial 2962]
 


Theorem (1464)                               [serial 2958] 
P [271] << (VS_A(now)
 and LAST_AP_OR_AS_A(now)
 and AXIOM_VS()) >>
S [272] vs!
Q [273] << (VS@now
 and LAST_AP_OR_AS_A(now)) >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 1459 1463:
Theorem (1459) [serial 2961] used for:
  applied port output <<pre>> -> <<M[vs]>> [serial 2958]
 
Theorem (1463) [serial 2962] used for:
  applied port output <<pre and M[vs]@now>> -> <<post>> [serial 2958]
 


Theorem (1465)                               [serial 3000] 
P [275] << VS@now
 and (cci = (now - last_vp_or_vs))@now
 and LAST_AP_OR_AS_A(now) >>
S [275] ->
Q [276] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1466)                               [serial 2989] 
P [275] << VS@now
 and LAST_AP_OR_AS_A(now)
 and (cci = (now - last_vp_or_vs))@now >>
S [275] ->
Q [276] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1465:
Theorem (1465) [serial 3000] used for:
    normalization of [serial 2989]
 


Theorem (1467)                               [serial 2975] 
P [275] << (cci = (now - last_vp_or_vs))@now
 and (VS@now
 and LAST_AP_OR_AS_A(now)) >>
S [275] ->
Q [276] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1466:
Theorem (1466) [serial 2989] used for:
  Associativity: (b.c).a = a.b.c [serial 2975]
 


Theorem (1468)                               [serial 2963] 
P [275] << ((VS@now
 and LAST_AP_OR_AS_A(now)))
 and (cci = ((now - last_vp_or_vs)))@now >>
S [275] ->
Q [276] << (VS@now
 and LAST_AP_OR_AS_A(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1467:
Theorem (1467) [serial 2975] used for:
    normalization of [serial 2963]
 


Theorem (1469)                               [serial 3069] 
P [275] << VS@now
 and (CCI = (now - last_vp_or_vs))@now
 and LAST_AP_OR_AS_A(now) >>
S [275] ->
Q [275] << true >>
by True Conclusion Schema (tc): P->true


Theorem (1470)                               [serial 3067] 
P [275] << VS@now
 and (CCI = (now - last_vp_or_vs))@now
 and LAST_AP_OR_AS_A(now) >>
S [275] ->
Q [275] << (true)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Constants are always the same
and theorem 1469:
Theorem (1469) [serial 3069] used for:
    normalization of [serial 3067]
 


Theorem (1471)                               [serial 3066] 
P [275] << VS@now
 and (CCI = (now - last_vp_or_vs))@now
 and LAST_AP_OR_AS_A(now) >>
S [275] ->
Q [275] << (CCI = CCI)@now >>
by Equality Law (idistr):  a=a <-> true
and theorem 1470:
Theorem (1470) [serial 3067] used for:
  Equality Law (idistr):  a=a <-> true [serial 3066]
 


Theorem (1472)                               [serial 3002] 
P [275] << VS@now
 and (cci = (now - last_vp_or_vs))@now
 and LAST_AP_OR_AS_A(now) >>
S [275] ->
Q [275] << (CCI = cci)@now >>
by Replacing port names with BLESS::Assertion properties
and theorem 1471:
Theorem (1471) [serial 3066] used for:
  Replacing port names with BLESS::Assertion properties [serial 3002]
 


Theorem (1473)                               [serial 2990] 
P [275] << VS@now
 and LAST_AP_OR_AS_A(now)
 and (cci = (now - last_vp_or_vs))@now >>
S [275] ->
Q [275] << (CCI = cci)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1472:
Theorem (1472) [serial 3002] used for:
    normalization of [serial 2990]
 


Theorem (1474)                               [serial 2977] 
P [275] << (cci = (now - last_vp_or_vs))@now
 and (VS@now
 and LAST_AP_OR_AS_A(now)) >>
S [275] ->
Q [275] << (CCI = cci)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 1473:
Theorem (1473) [serial 2990] used for:
  Associativity: (b.c).a = a.b.c [serial 2977]
 


Theorem (1475)                               [serial 2964] 
P [275] << ((VS@now
 and LAST_AP_OR_AS_A(now)))
 and (cci = ((now - last_vp_or_vs)))@now >>
S [275] ->
Q [275] << (cci = CCI)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1474:
Theorem (1474) [serial 2977] used for:
    normalization of [serial 2964]
 


Theorem (1476)                               [serial 2959] 
P [273] << (VS@now
 and LAST_AP_OR_AS_A(now)) >>
S [275] cci!((now - last_vp_or_vs))
Q [276] << (VS@now
 and LAST_AP_OR_AS_A(now)) >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 1468 1475:
Theorem (1468) [serial 2963] used for:
  applied port output <<pre and (cci=(now - last_vp_or_vs))@now>> -> <<post>> [serial 2959]
 
Theorem (1475) [serial 2964] used for:
  applied port output <<pre and (cci=(now - last_vp_or_vs))@now>> -> <<(cci=CCI)@now>> [serial 2959]
 


Theorem (1477)                               [serial 3010] 
P [276] << VS@now
 and LAST_AP_OR_AS_A(now) >>
S [278] ->
Q [279] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by Identity (id):  P->P is tautology


Theorem (1478)                               [serial 3008] 
P [276] << VS@now
 and LAST_AP_OR_AS_A(now) >>
S [278] ->
Q [279] << VS@now
 and true
 and LAST_AP_OR_AS_A(now) >>
by Law of And-Simplification:  P and true is P
and theorem 1477:
Theorem (1477) [serial 3010] used for:
  Law of And-Simplification:  P and true is P [serial 3008]
 


Theorem (1479)                               [serial 3010] 
P [276] << VS@now
 and LAST_AP_OR_AS_A(now) >>
S [278] ->
Q [279] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by Identity (id):  P->P is tautology


Theorem (1480)                               [serial 3008] 
P [276] << VS@now
 and LAST_AP_OR_AS_A(now) >>
S [278] ->
Q [279] << VS@now
 and true
 and LAST_AP_OR_AS_A(now) >>
by Law of And-Simplification:  P and true is P
and theorem 1479:
Theorem (1479) [serial 3010] used for:
  Law of And-Simplification:  P and true is P [serial 3008]
 


Theorem (1481)                               [serial 2992] 
P [276] << VS@now
 and LAST_AP_OR_AS_A(now) >>
S [278] ->
Q [279] << VS@now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1480 1480:
Theorem (1480) [serial 3008] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1480) [serial 3008] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1482)                               [serial 2991] 
P [276] << VS@now
 and LAST_AP_OR_AS_A(now) >>
S [278] ->
Q [279] << VS@now
 and true
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
by Law of And-Simplification:  P and true is P
and theorem 1481:
Theorem (1481) [serial 2992] used for:
  Law of And-Simplification:  P and true is P [serial 2991]
 


Theorem (1483)                               [serial 2979] 
P [276] << VS@now
 and LAST_AP_OR_AS_A(now) >>
S [278] ->
Q [279] << VS@now
 and now = now
 and AXIOM_LAST_AS_LE_TOPS()
 and LAST_AP_OR_AS_A(now) >>
by Equality Law (idistr):  a=a <-> true
and theorem 1482:
Theorem (1482) [serial 2991] used for:
  Equality Law (idistr):  a=a <-> true [serial 2979]
 


Theorem (1484)                               [serial 2965] 
P [276] << (VS@now
 and LAST_AP_OR_AS_A(now)) >>
S [278] ->
Q [279] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and (now = now)
 and AXIOM_LAST_AS_LE_TOPS()) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1483:
Theorem (1483) [serial 2979] used for:
    normalization of [serial 2965]
 


Theorem (1485)                               [serial 2960] 
P [276] << (VS@now
 and LAST_AP_OR_AS_A(now)) >>
S [278] last_vp_or_vs := now
Q [279] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and (last_vp_or_vs = now)
 and AXIOM_LAST_AS_LE_TOPS()) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1484:
Theorem (1484) [serial 2965] used for:
  applied wp for assignment [serial 2960]
 


Theorem (1486)                               [serial 1063] 
P [192] << ((V@now
 and SAV(now)
 and LRL_A(now)
 and LAST(now)))
 and (((SV)@now
 and not (TNV)@now
 and (((VRP)@now <= ((now - last_vp_or_vs)))))) >>
S [271] << (VS_A(now)
 and LAST_AP_OR_AS_A(now)
 and AXIOM_VS()) >>
vs!
<< (VS@now
 and LAST_AP_OR_AS_A(now)) >>
;
cci!((now - last_vp_or_vs))
<< (VS@now
 and LAST_AP_OR_AS_A(now)) >>
;
last_vp_or_vs := now
<< (VS@now
 and LAST_AP_OR_AS_A(now)
 and (last_vp_or_vs = now)
 and AXIOM_LAST_AS_LE_TOPS()) >>
Q [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1425 1450 1464 1476 1485:
Theorem (1425) [serial 2956] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 1063]
 
Theorem (1450) [serial 2957] used for:
  <<Q2>> -> <<Q>> in sequential composition for [serial 1063]
 
Theorem (1464) [serial 2958] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1063]
 
Theorem (1476) [serial 2959] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1063]
 
Theorem (1485) [serial 2960] used for:
  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 1063]
 


Theorem (1487)                               [serial 3121] 
P [283] << AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists t~time
  in now - (dav + savo) ,, now 
  that AS@t )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that AS@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that AS@t ) )
 and not (exists u~time
  in tops ,, now 
  that (VP or 
       VS)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (VP or 
              VS)@t ) ) >>
S [282] ->
Q [194] << AS@(now-(dav+savo)) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1488)                               [serial 3119] 
P [283] << AS@(now-(dav+savo))
 and not (exists t~time
  in now - (dav + savo) ,, now 
  that AS@t )
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that AS@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that AS@t ) )
 and not (exists u~time
  in tops ,, now 
  that (VP or 
       VS)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (VP or 
              VS)@t ) ) >>
S [282] ->
Q [194] << AS@(now-(dav+savo)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1487:
Theorem (1487) [serial 3121] used for:
    normalization of [serial 3119]
 


Theorem (1489)                               [serial 3115] 
P [283] << as@(now-(dav+savo))
 and not (exists t~time
  in now - (dav + savo) ,, now 
  that as@t )
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [282] ->
Q [194] << AS@(now-(dav+savo)) >>
by Replacing port names with BLESS::Assertion properties
and theorem 1488:
Theorem (1488) [serial 3119] used for:
  Replacing port names with BLESS::Assertion properties [serial 3115]
 


Theorem (1490)                               [serial 3116] 
P [283] << as@(now-(dav+savo))
 and not (exists t~time
  in now - (dav + savo) ,, now 
  that as@t )
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [282] ->
Q [194] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1491)                               [serial 3117] 
P [283] << as@(now-(dav+savo))
 and not (exists t~time
  in now - (dav + savo) ,, now 
  that as@t )
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [282] ->
Q [194] << LRL_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1492)                               [serial 3118] 
P [283] << as@(now-(dav+savo))
 and not (exists t~time
  in now - (dav + savo) ,, now 
  that as@t )
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [282] ->
Q [194] << SAV(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1493)                               [serial 3114] 
P [283] << as@(now-(dav+savo))
 and not (exists t~time
  in now - (dav + savo) ,, now 
  that as@t )
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [282] ->
Q [194] << AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1489 1490 1491 1492:
Theorem (1489) [serial 3115] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3114]
 
Theorem (1490) [serial 3116] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3114]
 
Theorem (1491) [serial 3117] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3114]
 
Theorem (1492) [serial 3118] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3114]
 


Theorem (1494)                               [serial 3112] 
P [283] << not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that as@(u-(dav+savo))
        and not (exists t~time
         in u - (dav + savo) ,, u 
         that as@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and (as@(now-(dav+savo))
 and not (exists t~time
  in now - (dav + savo) ,, now 
  that as@t ))
 and (LAST(now)
 and LRL_A(now)
 and SAV(now)) >>
S [282] ->
Q [194] << AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1493:
Theorem (1493) [serial 3114] used for:
  Associativity: (b.c).a = a.b.c [serial 3112]
 


Theorem (1495)                               [serial 1064] 
P [283] << ((SAV(now)
 and LRL_A(now)
 and LAST(now)))
 and ((as@(now-((dav+savo)))
 and not (exists t~time
  in now - ((dav + savo)) ,, now 
  that as@t )))
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that ((as@(u-((dav+savo)))
        and not (exists t~time
         in u - ((dav + savo)) ,, u 
         that as@t ))) )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [282] ->
Q [194] << (AS@((now-((dav+savo))))
 and SAV(now)
 and LRL_A(now)
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1494:
Theorem (1494) [serial 3112] used for:
    normalization of [serial 1064]
 


Theorem (1496)                               [serial 3126] 
P [194] << AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and (now - min_cci) < last_vp_or_vs >>
S [285] ->
Q [190] << LAST(now)
 and LRL_A(now)
 and SAV(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1497)                               [serial 3124] 
P [194] << (AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now))
 and (now - min_cci) < last_vp_or_vs >>
S [285] ->
Q [190] << LAST(now)
 and LRL_A(now)
 and SAV(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1496:
Theorem (1496) [serial 3126] used for:
  Associativity: (b.c).a = a.b.c [serial 3124]
 


Theorem (1498)                               [serial 1065] 
P [194] << ((AS@((now-((dav+savo))))
 and SAV(now)
 and LRL_A(now)
 and LAST(now)))
 and ((last_vp_or_vs > ((now - min_cci)))) >>
S [285] ->
Q [190] << (SAV(now)
 and LRL_A(now)
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1497:
Theorem (1497) [serial 3124] used for:
    normalization of [serial 1065]
 


Theorem (1499)                               [serial 3195] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [292] << last_vp_or_vs <= (now - min_cci) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1500)                               [serial 3196] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [291] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1501)                               [serial 3251] 
P [194] << last_vp_or_vs <= (now - MIN_CCI)
 and AS@(now-(SAVO+DAV_A()))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [231] << AS@(now-(SAVO+DAV_A())) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1502)                               [serial 3249] 
P [194] << last_vp_or_vs <= (now - MIN_CCI)
 and AS@(now-(DAV_A()+SAVO))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [231] << AS@(now-(SAVO+DAV_A())) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
and theorem 1501:
Theorem (1501) [serial 3251] used for:
    normalization of [serial 3249]
 


Theorem (1503)                               [serial 3247] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [231] << AS@(now-(SAVO+DAV_A())) >>
by Replacing port names with BLESS::Assertion properties
and theorem 1502:
Theorem (1502) [serial 3249] used for:
  Replacing port names with BLESS::Assertion properties [serial 3247]
 


Theorem (1504)                               [serial 3269] 
P [194] << last_vp_or_vs <= (now - MIN_CCI)
 and AS@(now-(SAVO+DAV_A()))
 and not (exists #21#~time
  in last_ap_or_as ,, now 
  that AP@#21# or 
       AS@#21# )
 and not (exists #22#~time
  in last_vp_or_vs ,, now 
  that VP@#22# or 
       VS@#22# )
 and (exists #23#~time
  in now - MAX_CCI .. now 
  that VP@#23# or 
       VS@#23# )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists #24#~time
         in now - MAX_CCI .. now 
         that VP@#24# or 
              VS@#24# ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [194] ->
Q [233] << not (exists #25#~time
  in last_vp_or_vs ,, now 
  that VP@#25# or 
       VS@#25# ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1505)                               [serial 3268] 
P [194] << last_vp_or_vs <= (now - MIN_CCI)
 and AS@(now-(DAV_A()+SAVO))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that AP@t or 
       AS@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [194] ->
Q [233] << not (exists tu~time
  in last_vp_or_vs ,, now 
  that VP@tu or 
       VS@tu ) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 1504:
Theorem (1504) [serial 3269] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 3268]
 


Theorem (1506)                               [serial 3267] 
P [194] << last_vp_or_vs <= (now - MIN_CCI)
 and AS@(now-(DAV_A()+SAVO))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that AP@t or 
       AS@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Extend Existential Quantification Range:  
and theorem 1505:
Theorem (1505) [serial 3268] used for:
  Extend Existential Quantification Range:   [serial 3267]
 


Theorem (1507)                               [serial 3265] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that AP@t or 
       AS@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Replacing port names with BLESS::Assertion properties
and theorem 1506:
Theorem (1506) [serial 3267] used for:
  Replacing port names with BLESS::Assertion properties [serial 3265]
 


Theorem (1508)                               [serial 3263] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP@t or 
       AS@t) )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP@t or 
       VS@t) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1507:
Theorem (1507) [serial 3265] used for:
    normalization of [serial 3263]
 


Theorem (1509)                               [serial 3261] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1508:
Theorem (1508) [serial 3263] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 3261]
 


Theorem (1510)                               [serial 3259] 
P [194] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1509:
Theorem (1509) [serial 3261] used for:
    normalization of [serial 3259]
 


Theorem (1511)                               [serial 3258] 
P [194] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Associativity: (b.c).a = a.b.c
and theorem 1510:
Theorem (1510) [serial 3259] used for:
  Associativity: (b.c).a = a.b.c [serial 3258]
 


Theorem (1512)                               [serial 3256] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and ((not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (SAVO + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Associativity: (b.c).a = a.b.c
and theorem 1511:
Theorem (1511) [serial 3258] used for:
  Associativity: (b.c).a = a.b.c [serial 3256]
 


Theorem (1513)                               [serial 3254] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)) + 
  SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) ) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1512:
Theorem (1512) [serial 3256] used for:
    normalization of [serial 3254]
 


Theorem (1514)                               [serial 3253] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((DAV_A() + SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) ) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Substitution of Assertion Labels
and theorem 1513:
Theorem (1513) [serial 3254] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3253]
 


Theorem (1515)                               [serial 3248] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Substitution of Assertion Labels
and theorem 1514:
Theorem (1514) [serial 3253] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3248]
 


Theorem (1516)                               [serial 3245] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [291] << AS@(now-(SAVO+DAV_A()))
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1503 1515:
Theorem (1503) [serial 3247] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3245]
 
Theorem (1515) [serial 3248] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3245]
 


Theorem (1517)                               [serial 3243] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [291] << ((AS@((now-((DAV_A()+SAVO))))
 and not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1516:
Theorem (1516) [serial 3245] used for:
    normalization of [serial 3243]
 


Theorem (1518)                               [serial 3197] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [291] << PACE_ON_SAV_DELAY(now) >>
by Substitution of Assertion Labels
and theorem 1517:
Theorem (1517) [serial 3243] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3197]
 


Theorem (1519)                               [serial 3191] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [291] << last_vp_or_vs <= (now - min_cci)
 and LAST(now)
 and PACE_ON_SAV_DELAY(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1499 1500 1518:
Theorem (1499) [serial 3195] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3191]
 
Theorem (1500) [serial 3196] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3191]
 
Theorem (1518) [serial 3197] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3191]
 


Theorem (1520)                               [serial 3187] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [291] << last_vp_or_vs <= (now - min_cci)
 and LAST(now)
 and PACE_ON_SAV_DELAY(now)
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1519:
Theorem (1519) [serial 3191] used for:
  Law of And-Simplification:  P and true is P [serial 3187]
 


Theorem (1521)                               [serial 3180] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [291] << last_vp_or_vs <= (now - min_cci)
 and true
 and LAST(now)
 and PACE_ON_SAV_DELAY(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1520:
Theorem (1520) [serial 3187] used for:
    normalization of [serial 3180]
 


Theorem (1522)                               [serial 3195] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [292] << last_vp_or_vs <= (now - min_cci) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1523)                               [serial 3196] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [291] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1524)                               [serial 3251] 
P [194] << last_vp_or_vs <= (now - MIN_CCI)
 and AS@(now-(SAVO+DAV_A()))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [231] << AS@(now-(SAVO+DAV_A())) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1525)                               [serial 3249] 
P [194] << last_vp_or_vs <= (now - MIN_CCI)
 and AS@(now-(DAV_A()+SAVO))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [231] << AS@(now-(SAVO+DAV_A())) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
and theorem 1524:
Theorem (1524) [serial 3251] used for:
    normalization of [serial 3249]
 


Theorem (1526)                               [serial 3247] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [231] << AS@(now-(SAVO+DAV_A())) >>
by Replacing port names with BLESS::Assertion properties
and theorem 1525:
Theorem (1525) [serial 3249] used for:
  Replacing port names with BLESS::Assertion properties [serial 3247]
 


Theorem (1527)                               [serial 3269] 
P [194] << last_vp_or_vs <= (now - MIN_CCI)
 and AS@(now-(SAVO+DAV_A()))
 and not (exists #21#~time
  in last_ap_or_as ,, now 
  that AP@#21# or 
       AS@#21# )
 and not (exists #22#~time
  in last_vp_or_vs ,, now 
  that VP@#22# or 
       VS@#22# )
 and (exists #23#~time
  in now - MAX_CCI .. now 
  that VP@#23# or 
       VS@#23# )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists #24#~time
         in now - MAX_CCI .. now 
         that VP@#24# or 
              VS@#24# ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [194] ->
Q [233] << not (exists #25#~time
  in last_vp_or_vs ,, now 
  that VP@#25# or 
       VS@#25# ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1528)                               [serial 3268] 
P [194] << last_vp_or_vs <= (now - MIN_CCI)
 and AS@(now-(DAV_A()+SAVO))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that AP@t or 
       AS@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [194] ->
Q [233] << not (exists tu~time
  in last_vp_or_vs ,, now 
  that VP@tu or 
       VS@tu ) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 1527:
Theorem (1527) [serial 3269] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 3268]
 


Theorem (1529)                               [serial 3267] 
P [194] << last_vp_or_vs <= (now - MIN_CCI)
 and AS@(now-(DAV_A()+SAVO))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that AP@t or 
       AS@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Extend Existential Quantification Range:  
and theorem 1528:
Theorem (1528) [serial 3268] used for:
  Extend Existential Quantification Range:   [serial 3267]
 


Theorem (1530)                               [serial 3265] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that AP@t or 
       AS@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Replacing port names with BLESS::Assertion properties
and theorem 1529:
Theorem (1529) [serial 3267] used for:
  Replacing port names with BLESS::Assertion properties [serial 3265]
 


Theorem (1531)                               [serial 3263] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP@t or 
       AS@t) )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP@t or 
       VS@t) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1530:
Theorem (1530) [serial 3265] used for:
    normalization of [serial 3263]
 


Theorem (1532)                               [serial 3261] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + SAVO + (CCI * ((AV - MIN_AV) / (LRL - URL)))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1531:
Theorem (1531) [serial 3263] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 3261]
 


Theorem (1533)                               [serial 3259] 
P [194] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1532:
Theorem (1532) [serial 3261] used for:
    normalization of [serial 3259]
 


Theorem (1534)                               [serial 3258] 
P [194] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))) + SAVO) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Associativity: (b.c).a = a.b.c
and theorem 1533:
Theorem (1533) [serial 3259] used for:
  Associativity: (b.c).a = a.b.c [serial 3258]
 


Theorem (1535)                               [serial 3256] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and ((not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (SAVO + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Associativity: (b.c).a = a.b.c
and theorem 1534:
Theorem (1534) [serial 3258] used for:
  Associativity: (b.c).a = a.b.c [serial 3256]
 


Theorem (1536)                               [serial 3254] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV)) + 
  SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) ) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1535:
Theorem (1535) [serial 3256] used for:
    normalization of [serial 3254]
 


Theorem (1537)                               [serial 3253] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((DAV_A() + SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) ) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Substitution of Assertion Labels
and theorem 1536:
Theorem (1536) [serial 3254] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3253]
 


Theorem (1538)                               [serial 3248] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [233] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Substitution of Assertion Labels
and theorem 1537:
Theorem (1537) [serial 3253] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3248]
 


Theorem (1539)                               [serial 3245] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [291] << AS@(now-(SAVO+DAV_A()))
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1526 1538:
Theorem (1526) [serial 3247] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3245]
 
Theorem (1538) [serial 3248] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3245]
 


Theorem (1540)                               [serial 3243] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [291] << ((AS@((now-((DAV_A()+SAVO))))
 and not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1539:
Theorem (1539) [serial 3245] used for:
    normalization of [serial 3243]
 


Theorem (1541)                               [serial 3197] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [291] << PACE_ON_SAV_DELAY(now) >>
by Substitution of Assertion Labels
and theorem 1540:
Theorem (1540) [serial 3243] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3197]
 


Theorem (1542)                               [serial 3191] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [291] << last_vp_or_vs <= (now - min_cci)
 and LAST(now)
 and PACE_ON_SAV_DELAY(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1522 1523 1541:
Theorem (1522) [serial 3195] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3191]
 
Theorem (1523) [serial 3196] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3191]
 
Theorem (1541) [serial 3197] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3191]
 


Theorem (1543)                               [serial 3187] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [291] << last_vp_or_vs <= (now - min_cci)
 and LAST(now)
 and PACE_ON_SAV_DELAY(now)
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1542:
Theorem (1542) [serial 3191] used for:
  Law of And-Simplification:  P and true is P [serial 3187]
 


Theorem (1544)                               [serial 3180] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [291] << last_vp_or_vs <= (now - min_cci)
 and true
 and LAST(now)
 and PACE_ON_SAV_DELAY(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1543:
Theorem (1543) [serial 3187] used for:
    normalization of [serial 3180]
 


Theorem (1545)                               [serial 3167] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now) >>
S [194] ->
Q [291] << last_vp_or_vs <= (now - min_cci)
 and AXIOM_VP()
 and LAST(now)
 and PACE_ON_SAV_DELAY(now) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1544 1544:
Theorem (1544) [serial 3180] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1544) [serial 3180] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1546)                               [serial 3158] 
P [194] << AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now)
 and last_vp_or_vs <= (now - min_cci) >>
S [194] ->
Q [291] << last_vp_or_vs <= (now - min_cci)
 and AXIOM_VP()
 and LAST(now)
 and PACE_ON_SAV_DELAY(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1545:
Theorem (1545) [serial 3167] used for:
    normalization of [serial 3158]
 


Theorem (1547)                               [serial 3138] 
P [194] << last_vp_or_vs <= (now - min_cci)
 and (AS@(now-(dav+savo))
 and LAST(now)
 and LRL_A(now)
 and SAV(now)) >>
S [194] ->
Q [291] << last_vp_or_vs <= (now - min_cci)
 and AXIOM_VP()
 and LAST(now)
 and PACE_ON_SAV_DELAY(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1546:
Theorem (1546) [serial 3158] used for:
  Associativity: (b.c).a = a.b.c [serial 3138]
 


Theorem (1548)                               [serial 3127] 
P [194] << ((AS@((now-((dav+savo))))
 and SAV(now)
 and LRL_A(now)
 and LAST(now)))
 and ((last_vp_or_vs <= ((now - min_cci)))) >>
S [194] ->
Q [291] << (PACE_ON_SAV_DELAY(now)
 and LAST(now)
 and AXIOM_VP()
 and ((last_vp_or_vs <= ((now - min_cci))))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1547:
Theorem (1547) [serial 3138] used for:
    normalization of [serial 3127]
 


Theorem (1549)                               [serial 3192] 
P [300] << VP@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST(now) >>
S [200] ->
Q [200] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1550)                               [serial 3235] 
P [300] << VP@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST(now) >>
S [200] ->
Q [200] << VP@now or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1551)                               [serial 3233] 
P [300] << VP@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST(now) >>
S [200] ->
Q [200] << (VP@now) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1550:
Theorem (1550) [serial 3235] used for:
    normalization of [serial 3233]
 


Theorem (1552)                               [serial 3232] 
P [300] << VP@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST(now) >>
S [200] ->
Q [200] << (exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ) >>
by Introduction of Existential Quantification
and theorem 1551:
Theorem (1551) [serial 3233] used for:
  replace exists with upper or lower bound [serial 3232]
 


Theorem (1553)                               [serial 3230] 
P [300] << VP@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST(now) >>
S [200] ->
Q [200] << exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t  >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1552:
Theorem (1552) [serial 3232] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 3230]
 


Theorem (1554)                               [serial 3228] 
P [300] << VP@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST(now) >>
S [200] ->
Q [200] << (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1553:
Theorem (1553) [serial 3230] used for:
    normalization of [serial 3228]
 


Theorem (1555)                               [serial 3193] 
P [300] << VP@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST(now) >>
S [200] ->
Q [200] << LRL_A(now) >>
by Substitution of Assertion Labels
and theorem 1554:
Theorem (1554) [serial 3228] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3193]
 


Theorem (1556)                               [serial 3241] 
P [300] << VP@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST(now) >>
S [200] ->
Q [200] << true >>
by True Conclusion Schema (tc): P->true


Theorem (1557)                               [serial 3239] 
P [300] << VP@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST(now) >>
S [200] ->
Q [200] << (not (false)) >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1556:
Theorem (1556) [serial 3241] used for:
    normalization of [serial 3239]
 


Theorem (1558)                               [serial 3238] 
P [300] << VP@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST(now) >>
S [200] ->
Q [200] << (not (exists t~time
  in now ,, now 
  that ((AS or 
       AP))@t )) >>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 1557:
Theorem (1557) [serial 3239] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 3238]
 


Theorem (1559)                               [serial 3237] 
P [300] << VP@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST(now) >>
S [200] ->
Q [200] << (not (exists t~time
  in last_vp_or_vs ,, now 
  that ((AS or 
       AP))@t )) >>
by Guided Substitution of Equals
and theorem 1558:
Theorem (1558) [serial 3238] used for:
  Guided Substitution of Equals
 replacing "last_vp_or_vs" with its = "now" in its postcondition [serial 3237]
 


Theorem (1560)                               [serial 3194] 
P [300] << VP@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST(now) >>
S [200] ->
Q [200] << VAI(now) >>
by Substitution of Assertion Labels
and theorem 1559:
Theorem (1559) [serial 3237] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3194]
 


Theorem (1561)                               [serial 3140] 
P [300] << VP@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST(now) >>
S [200] ->
Q [200] << LAST(now)
 and LRL_A(now)
 and VAI(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1549 1555 1560:
Theorem (1549) [serial 3192] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3140]
 
Theorem (1555) [serial 3193] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3140]
 
Theorem (1560) [serial 3194] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3140]
 


Theorem (1562)                               [serial 3128] 
P [300] << ((last_vp_or_vs = now)
 and VP@now
 and LAST(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [200] ->
Q [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1561:
Theorem (1561) [serial 3140] used for:
    normalization of [serial 3128]
 


Theorem (1563)                               [serial 3214] 
P [291] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(SAVO+DAV_A()))
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )
 and (VP iff (URL_A(now)
 and VP_A(now))) >>
S [293] ->
Q [94] << not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1564)                               [serial 3211] 
P [291] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(SAVO+DAV_A()))
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )
 and (VP iff (URL_A(now)
 and VP_A(now))) >>
S [293] ->
Q [94] << (not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1563:
Theorem (1563) [serial 3214] used for:
    normalization of [serial 3211]
 


Theorem (1565)                               [serial 3221] 
P [291] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(SAVO+DAV_A()))
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )
 and (VP iff (URL_A(now)
 and VP_A(now))) >>
S [293] ->
Q [209] << (AP@(now-AV)
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )) or 
(AS@(now-(SAVO+DAV_A()))
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )) or 
(not (exists t~time
  in now - MAX_CCI ,, now 
  that VP@t or 
       VS@t )
 and (VP@(now-MAX_CCI) or 
VS@(now-MAX_CCI))) >>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (1566)                               [serial 3219] 
P [291] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(SAVO+DAV_A()))
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )
 and (VP iff (URL_A(now)
 and VP_A(now))) >>
S [293] ->
Q [209] << ((AP@((now-AV))
 and not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) ))) or 
((((VP@((now-MAX_CCI)) or 
VS@((now-MAX_CCI))))
 and not (exists t~time
  in ((now - MAX_CCI)) ,, now 
  that ((VS@t or 
       VP@t)) ))) or 
((AS@((now-((DAV_A()+SAVO))))
 and not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1565:
Theorem (1565) [serial 3221] used for:
    normalization of [serial 3219]
 


Theorem (1567)                               [serial 3216] 
P [291] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(SAVO+DAV_A()))
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )
 and (VP iff (URL_A(now)
 and VP_A(now))) >>
S [293] ->
Q [209] << PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_MaxCCI(now) or 
PACE_ON_SAV_DELAY(now) >>
by Substitution of Assertion Labels
and theorem 1566:
Theorem (1566) [serial 3219] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3216]
 


Theorem (1568)                               [serial 3212] 
P [291] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(SAVO+DAV_A()))
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )
 and (VP iff (URL_A(now)
 and VP_A(now))) >>
S [293] ->
Q [209] << ((PACE_ON_MaxCCI(now) or 
PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_SAV_DELAY(now))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1567:
Theorem (1567) [serial 3216] used for:
    normalization of [serial 3212]
 


Theorem (1569)                               [serial 3210] 
P [291] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(SAVO+DAV_A()))
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )
 and (VP iff (URL_A(now)
 and VP_A(now))) >>
S [293] ->
Q [31] << (not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) ))
 and ((PACE_ON_MaxCCI(now) or 
PACE_ON_FIXED_AV_DELAY(now) or 
PACE_ON_SAV_DELAY(now))) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1564 1568:
Theorem (1564) [serial 3211] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3210]
 
Theorem (1568) [serial 3212] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3210]
 


Theorem (1570)                               [serial 3208] 
P [291] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(SAVO+DAV_A()))
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )
 and (VP iff (URL_A(now)
 and VP_A(now))) >>
S [293] ->
Q [31] << URL_A(now)
 and VP_A(now) >>
by Substitution of Assertion Labels
and theorem 1569:
Theorem (1569) [serial 3210] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3208]
 


Theorem (1571)                               [serial 3206] 
P [291] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(SAVO+DAV_A()))
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )
 and (VP iff (URL_A(now)
 and VP_A(now))) >>
S [293] ->
Q [31] << ((URL_A(now)
 and VP_A(now))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1570:
Theorem (1570) [serial 3208] used for:
    normalization of [serial 3206]
 


Theorem (1572)                               [serial 3204] 
P [291] << last_vp_or_vs <= (now - min_cci)
 and AS@(now-(SAVO+DAV_A()))
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )
 and (VP iff (URL_A(now)
 and VP_A(now))) >>
S [293] ->
Q [31] << VP >>
by Guided Substitution of Equals
and theorem 1571:
Theorem (1571) [serial 3206] used for:
  Guided Substitution of Equals
 replacing "VP" with its iff "((URL_A(now)
 and VP_A(now)))" in its postcondition [serial 3204]
 


Theorem (1573)                               [serial 3202] 
P [291] << AS@(now-(SAVO+DAV_A()))
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu )
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and last_vp_or_vs <= (now - min_cci)
 and (VP iff (URL_A(now)
 and VP_A(now))) >>
S [293] ->
Q [31] << VP >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1572:
Theorem (1572) [serial 3204] used for:
    normalization of [serial 3202]
 


Theorem (1574)                               [serial 3200] 
P [291] << last_vp_or_vs <= (now - min_cci)
 and (AS@(now-(SAVO+DAV_A()))
 and not (exists tu~time
  in now - MIN_CCI ,, now 
  that VP@tu or 
       VS@tu ))
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (VP iff (URL_A(now)
 and VP_A(now))) >>
S [293] ->
Q [31] << VP >>
by Associativity: (b.c).a = a.b.c
and theorem 1573:
Theorem (1573) [serial 3202] used for:
  Associativity: (b.c).a = a.b.c [serial 3200]
 


Theorem (1575)                               [serial 3198] 
P [291] << last_vp_or_vs <= (now - min_cci)
 and ((VP iff ((VP_A(now)
 and URL_A(now)))))
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and ((AS@((now-((DAV_A()+SAVO))))
 and not (exists tu~time
  in ((now - MIN_CCI)) ,, now 
  that ((VS@tu or 
       VP@tu)) ))) >>
S [293] ->
Q [31] << VP >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1574:
Theorem (1574) [serial 3200] used for:
    normalization of [serial 3198]
 


Theorem (1576)                               [serial 3142] 
P [291] << last_vp_or_vs <= (now - min_cci)
 and AXIOM_VP()
 and LAST(now)
 and PACE_ON_SAV_DELAY(now) >>
S [293] ->
Q [31] << VP >>
by Substitution of Assertion Labels
and theorem 1575:
Theorem (1575) [serial 3198] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3142]
 


Theorem (1577)                               [serial 3132] 
P [291] << (PACE_ON_SAV_DELAY(now)
 and LAST(now)
 and AXIOM_VP()
 and ((last_vp_or_vs <= ((now - min_cci))))) >>
S [293] ->
Q [31] << VP >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1576:
Theorem (1576) [serial 3142] used for:
    normalization of [serial 3132]
 


Theorem (1578)                               [serial 3169] 
P [293] << last_vp_or_vs <= (now - min_cci)
 and VP@now
 and AXIOM_VP()
 and LAST(now)
 and PACE_ON_SAV_DELAY(now) >>
S [293] ->
Q [294] << VP@now
 and LAST(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1579)                               [serial 3159] 
P [293] << last_vp_or_vs <= (now - min_cci)
 and AXIOM_VP()
 and LAST(now)
 and PACE_ON_SAV_DELAY(now)
 and VP@now >>
S [293] ->
Q [294] << VP@now
 and LAST(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1578:
Theorem (1578) [serial 3169] used for:
    normalization of [serial 3159]
 


Theorem (1580)                               [serial 3144] 
P [293] << VP@now
 and (last_vp_or_vs <= (now - min_cci)
 and AXIOM_VP()
 and LAST(now)
 and PACE_ON_SAV_DELAY(now)) >>
S [293] ->
Q [294] << VP@now
 and LAST(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1579:
Theorem (1579) [serial 3159] used for:
  Associativity: (b.c).a = a.b.c [serial 3144]
 


Theorem (1581)                               [serial 3133] 
P [293] << ((PACE_ON_SAV_DELAY(now)
 and LAST(now)
 and AXIOM_VP()
 and ((last_vp_or_vs <= ((now - min_cci))))))
 and VP@now >>
S [293] ->
Q [294] << (VP@now
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1580:
Theorem (1580) [serial 3144] used for:
    normalization of [serial 3133]
 


Theorem (1582)                               [serial 3129] 
P [291] << (PACE_ON_SAV_DELAY(now)
 and LAST(now)
 and AXIOM_VP()
 and ((last_vp_or_vs <= ((now - min_cci))))) >>
S [293] vp!
Q [294] << (VP@now
 and LAST(now)) >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 1577 1581:
Theorem (1577) [serial 3132] used for:
  applied port output <<pre>> -> <<M[vp]>> [serial 3129]
 
Theorem (1581) [serial 3133] used for:
  applied port output <<pre and M[vp]@now>> -> <<post>> [serial 3129]
 


Theorem (1583)                               [serial 3171] 
P [296] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and LAST(now) >>
S [296] ->
Q [297] << VP@now
 and LAST(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1584)                               [serial 3160] 
P [296] << VP@now
 and LAST(now)
 and (cci = (now - last_vp_or_vs))@now >>
S [296] ->
Q [297] << VP@now
 and LAST(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1583:
Theorem (1583) [serial 3171] used for:
    normalization of [serial 3160]
 


Theorem (1585)                               [serial 3146] 
P [296] << (cci = (now - last_vp_or_vs))@now
 and (VP@now
 and LAST(now)) >>
S [296] ->
Q [297] << VP@now
 and LAST(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1584:
Theorem (1584) [serial 3160] used for:
  Associativity: (b.c).a = a.b.c [serial 3146]
 


Theorem (1586)                               [serial 3134] 
P [296] << ((VP@now
 and LAST(now)))
 and (cci = ((now - last_vp_or_vs)))@now >>
S [296] ->
Q [297] << (VP@now
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1585:
Theorem (1585) [serial 3146] used for:
    normalization of [serial 3134]
 


Theorem (1587)                               [serial 3226] 
P [296] << VP@now
 and (CCI = (now - last_vp_or_vs))@now
 and LAST(now) >>
S [296] ->
Q [296] << true >>
by True Conclusion Schema (tc): P->true


Theorem (1588)                               [serial 3224] 
P [296] << VP@now
 and (CCI = (now - last_vp_or_vs))@now
 and LAST(now) >>
S [296] ->
Q [296] << (true)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Constants are always the same
and theorem 1587:
Theorem (1587) [serial 3226] used for:
    normalization of [serial 3224]
 


Theorem (1589)                               [serial 3223] 
P [296] << VP@now
 and (CCI = (now - last_vp_or_vs))@now
 and LAST(now) >>
S [296] ->
Q [296] << (CCI = CCI)@now >>
by Equality Law (idistr):  a=a <-> true
and theorem 1588:
Theorem (1588) [serial 3224] used for:
  Equality Law (idistr):  a=a <-> true [serial 3223]
 


Theorem (1590)                               [serial 3173] 
P [296] << VP@now
 and (cci = (now - last_vp_or_vs))@now
 and LAST(now) >>
S [296] ->
Q [296] << (CCI = cci)@now >>
by Replacing port names with BLESS::Assertion properties
and theorem 1589:
Theorem (1589) [serial 3223] used for:
  Replacing port names with BLESS::Assertion properties [serial 3173]
 


Theorem (1591)                               [serial 3161] 
P [296] << VP@now
 and LAST(now)
 and (cci = (now - last_vp_or_vs))@now >>
S [296] ->
Q [296] << (CCI = cci)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1590:
Theorem (1590) [serial 3173] used for:
    normalization of [serial 3161]
 


Theorem (1592)                               [serial 3148] 
P [296] << (cci = (now - last_vp_or_vs))@now
 and (VP@now
 and LAST(now)) >>
S [296] ->
Q [296] << (CCI = cci)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 1591:
Theorem (1591) [serial 3161] used for:
  Associativity: (b.c).a = a.b.c [serial 3148]
 


Theorem (1593)                               [serial 3135] 
P [296] << ((VP@now
 and LAST(now)))
 and (cci = ((now - last_vp_or_vs)))@now >>
S [296] ->
Q [296] << (cci = CCI)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1592:
Theorem (1592) [serial 3148] used for:
    normalization of [serial 3135]
 


Theorem (1594)                               [serial 3130] 
P [294] << (VP@now
 and LAST(now)) >>
S [296] cci!((now - last_vp_or_vs))
Q [297] << (VP@now
 and LAST(now)) >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 1586 1593:
Theorem (1586) [serial 3134] used for:
  applied port output <<pre and (cci=(now - last_vp_or_vs))@now>> -> <<post>> [serial 3130]
 
Theorem (1593) [serial 3135] used for:
  applied port output <<pre and (cci=(now - last_vp_or_vs))@now>> -> <<(cci=CCI)@now>> [serial 3130]
 


Theorem (1595)                               [serial 3190] 
P [297] << VP@now
 and LAST(now) >>
S [299] ->
Q [300] << VP@now
 and LAST(now) >>
by Identity (id):  P->P is tautology


Theorem (1596)                               [serial 3185] 
P [297] << VP@now
 and LAST(now) >>
S [299] ->
Q [300] << VP@now
 and LAST(now)
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1595:
Theorem (1595) [serial 3190] used for:
  Law of And-Simplification:  P and true is P [serial 3185]
 


Theorem (1597)                               [serial 3179] 
P [297] << VP@now
 and LAST(now) >>
S [299] ->
Q [300] << VP@now
 and true
 and LAST(now) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1596:
Theorem (1596) [serial 3185] used for:
    normalization of [serial 3179]
 


Theorem (1598)                               [serial 3190] 
P [297] << VP@now
 and LAST(now) >>
S [299] ->
Q [300] << VP@now
 and LAST(now) >>
by Identity (id):  P->P is tautology


Theorem (1599)                               [serial 3185] 
P [297] << VP@now
 and LAST(now) >>
S [299] ->
Q [300] << VP@now
 and LAST(now)
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1598:
Theorem (1598) [serial 3190] used for:
  Law of And-Simplification:  P and true is P [serial 3185]
 


Theorem (1600)                               [serial 3179] 
P [297] << VP@now
 and LAST(now) >>
S [299] ->
Q [300] << VP@now
 and true
 and LAST(now) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1599:
Theorem (1599) [serial 3185] used for:
    normalization of [serial 3179]
 


Theorem (1601)                               [serial 3163] 
P [297] << VP@now
 and LAST(now) >>
S [299] ->
Q [300] << VP@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST(now) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1600 1600:
Theorem (1600) [serial 3179] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1600) [serial 3179] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1602)                               [serial 3162] 
P [297] << VP@now
 and LAST(now) >>
S [299] ->
Q [300] << VP@now
 and true
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST(now) >>
by Law of And-Simplification:  P and true is P
and theorem 1601:
Theorem (1601) [serial 3163] used for:
  Law of And-Simplification:  P and true is P [serial 3162]
 


Theorem (1603)                               [serial 3150] 
P [297] << VP@now
 and LAST(now) >>
S [299] ->
Q [300] << VP@now
 and now = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST(now) >>
by Equality Law (idistr):  a=a <-> true
and theorem 1602:
Theorem (1602) [serial 3162] used for:
  Equality Law (idistr):  a=a <-> true [serial 3150]
 


Theorem (1604)                               [serial 3136] 
P [297] << (VP@now
 and LAST(now)) >>
S [299] ->
Q [300] << ((now = now)
 and VP@now
 and LAST(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1603:
Theorem (1603) [serial 3150] used for:
    normalization of [serial 3136]
 


Theorem (1605)                               [serial 3131] 
P [297] << (VP@now
 and LAST(now)) >>
S [299] last_vp_or_vs := now
Q [300] << ((last_vp_or_vs = now)
 and VP@now
 and LAST(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1604:
Theorem (1604) [serial 3136] used for:
  applied wp for assignment [serial 3131]
 


Theorem (1606)                               [serial 1066] 
P [194] << ((AS@((now-((dav+savo))))
 and SAV(now)
 and LRL_A(now)
 and LAST(now)))
 and ((last_vp_or_vs <= ((now - min_cci)))) >>
S [291] << (PACE_ON_SAV_DELAY(now)
 and LAST(now)
 and AXIOM_VP()
 and ((last_vp_or_vs <= ((now - min_cci))))) >>
vp!
<< (VP@now
 and LAST(now)) >>
;
cci!((now - last_vp_or_vs))
<< (VP@now
 and LAST(now)) >>
;
last_vp_or_vs := now
<< ((last_vp_or_vs = now)
 and VP@now
 and LAST(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
Q [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1548 1562 1582 1594 1605:
Theorem (1548) [serial 3127] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 1066]
 
Theorem (1562) [serial 3128] used for:
  <<Q2>> -> <<Q>> in sequential composition for [serial 1066]
 
Theorem (1582) [serial 3129] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1066]
 
Theorem (1594) [serial 3130] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1066]
 
Theorem (1605) [serial 3131] used for:
  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 1066]
 


Theorem (1607)                               [serial 3273] 
P [305] << LAST(now)
 and LRL_A(now)
 and PAV(now)
 and V@now
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) ) >>
S [304] ->
Q [198] << V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1608)                               [serial 3271] 
P [305] << V@now
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and (LAST(now)
 and LRL_A(now)
 and PAV(now)) >>
S [304] ->
Q [198] << V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1607:
Theorem (1607) [serial 3273] used for:
  Associativity: (b.c).a = a.b.c [serial 3271]
 


Theorem (1609)                               [serial 1067] 
P [305] << ((PAV(now)
 and LRL_A(now)
 and LAST(now)))
 and V@now
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [304] ->
Q [198] << (V@now
 and PAV(now)
 and LRL_A(now)
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1608:
Theorem (1608) [serial 3271] used for:
    normalization of [serial 1067]
 


Theorem (1610)                               [serial 3277] 
P [198] << V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now)
 and (TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now) >>
S [307] ->
Q [196] << LAST(now)
 and LRL_A(now)
 and PAV(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1611)                               [serial 3275] 
P [198] << (V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now))
 and (TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now) >>
S [307] ->
Q [196] << LAST(now)
 and LRL_A(now)
 and PAV(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1610:
Theorem (1610) [serial 3277] used for:
  Associativity: (b.c).a = a.b.c [serial 3275]
 


Theorem (1612)                               [serial 1068] 
P [198] << ((V@now
 and PAV(now)
 and LRL_A(now)
 and LAST(now)))
 and ((not ((SV)@now) or 
(TNV)@now or 
(((VRP)@now > ((now - last_vp_or_vs)))))) >>
S [307] ->
Q [196] << (PAV(now)
 and LRL_A(now)
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1611:
Theorem (1611) [serial 3275] used for:
    normalization of [serial 1068]
 


Theorem (1613)                               [serial 3318] 
P [198] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now) >>
S [198] ->
Q [312] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1614)                               [serial 3316] 
P [198] << (VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now)
 and (V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now)) >>
S [198] ->
Q [312] << LAST(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1613:
Theorem (1613) [serial 3318] used for:
  Associativity: (b.c).a = a.b.c [serial 3316]
 


Theorem (1615)                               [serial 3323] 
P [198] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now) >>
S [198] ->
Q [312] << SV@now
 and V@now
 and not TNV@now >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1616)                               [serial 3321] 
P [198] << (VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now)
 and (V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now)) >>
S [198] ->
Q [312] << SV@now
 and V@now
 and not TNV@now >>
by Associativity: (b.c).a = a.b.c
and theorem 1615:
Theorem (1615) [serial 3323] used for:
  Associativity: (b.c).a = a.b.c [serial 3321]
 


Theorem (1617)                               [serial 3319] 
P [198] << (VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now)
 and (V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now)) >>
S [198] ->
Q [312] << ((SV@now
 and V@now
 and not TNV@now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1616:
Theorem (1616) [serial 3321] used for:
    normalization of [serial 3319]
 


Theorem (1618)                               [serial 3317] 
P [198] << (VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now)
 and (V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now)) >>
S [198] ->
Q [312] << VS_A(now) >>
by Substitution of Assertion Labels
and theorem 1617:
Theorem (1617) [serial 3319] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3317]
 


Theorem (1619)                               [serial 3296] 
P [198] << (VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now)
 and (V@now
 and LAST(now)
 and LRL_A(now)
 and PAV(now)) >>
S [198] ->
Q [312] << LAST(now)
 and VS_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1614 1618:
Theorem (1614) [serial 3316] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3296]
 
Theorem (1618) [serial 3317] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3296]
 


Theorem (1620)                               [serial 3278] 
P [198] << ((V@now
 and PAV(now)
 and LRL_A(now)
 and LAST(now)))
 and (((SV)@now
 and not (TNV)@now
 and (((VRP)@now <= ((now - last_vp_or_vs)))))) >>
S [198] ->
Q [312] << (VS_A(now)
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1619:
Theorem (1619) [serial 3296] used for:
    normalization of [serial 3278]
 


Theorem (1621)                               [serial 3332] 
P [325] << VS@now
 and last_vp_or_vs = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
S [200] ->
Q [117] << LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1622)                               [serial 3333] 
P [325] << VS@now
 and last_vp_or_vs = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
S [200] ->
Q [117] << LAST_VP_OR_VS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1623)                               [serial 3341] 
P [325] << VS@now
 and last_vp_or_vs = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
S [200] ->
Q [79] << VS@now or 
(exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1624)                               [serial 3339] 
P [325] << VS@now
 and last_vp_or_vs = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
S [200] ->
Q [79] << (exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(VS@now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1623:
Theorem (1623) [serial 3341] used for:
    normalization of [serial 3339]
 


Theorem (1625)                               [serial 3337] 
P [325] << VS@now
 and last_vp_or_vs = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
S [200] ->
Q [79] << (exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ) >>
by Introduction of Existential Quantification
and theorem 1624:
Theorem (1624) [serial 3339] used for:
  replace exists with upper or lower bound [serial 3337]
 


Theorem (1626)                               [serial 3335] 
P [325] << VS@now
 and last_vp_or_vs = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
S [200] ->
Q [79] << ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1625:
Theorem (1625) [serial 3337] used for:
    normalization of [serial 3335]
 


Theorem (1627)                               [serial 3334] 
P [325] << VS@now
 and last_vp_or_vs = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
S [200] ->
Q [79] << (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1626:
Theorem (1626) [serial 3335] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 3334]
 


Theorem (1628)                               [serial 3331] 
P [325] << VS@now
 and last_vp_or_vs = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
S [200] ->
Q [200] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1621 1622 1627:
Theorem (1621) [serial 3332] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3331]
 
Theorem (1622) [serial 3333] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3331]
 
Theorem (1627) [serial 3334] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3331]
 


Theorem (1629)                               [serial 3330] 
P [325] << VS@now
 and last_vp_or_vs = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
S [200] ->
Q [200] << (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
by Associativity: (b.c).a = a.b.c
and theorem 1628:
Theorem (1628) [serial 3331] used for:
  Associativity: (b.c).a = a.b.c [serial 3330]
 


Theorem (1630)                               [serial 3328] 
P [325] << VS@now
 and last_vp_or_vs = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
S [200] ->
Q [200] << true
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
by Law of And-Simplification:  P and true is P
and theorem 1629:
Theorem (1629) [serial 3330] used for:
  Law of And-Simplification:  P and true is P [serial 3328]
 


Theorem (1631)                               [serial 3326] 
P [325] << VS@now
 and last_vp_or_vs = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
S [200] ->
Q [200] << ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (not (false)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Complement
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1630:
Theorem (1630) [serial 3328] used for:
    normalization of [serial 3326]
 


Theorem (1632)                               [serial 3325] 
P [325] << VS@now
 and last_vp_or_vs = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
S [200] ->
Q [200] << ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (not (exists t~time
  in now ,, now 
  that ((AS or 
       AP))@t )) >>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 1631:
Theorem (1631) [serial 3326] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 3325]
 


Theorem (1633)                               [serial 3324] 
P [325] << VS@now
 and last_vp_or_vs = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
S [200] ->
Q [200] << ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that ((AS or 
       AP))@t )) >>
by Guided Substitution of Equals
and theorem 1632:
Theorem (1632) [serial 3325] used for:
  Guided Substitution of Equals
 replacing "last_vp_or_vs" with its = "now" in its postcondition [serial 3324]
 


Theorem (1634)                               [serial 3298] 
P [325] << VS@now
 and last_vp_or_vs = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
S [200] ->
Q [200] << LAST(now)
 and LRL_A(now)
 and VAI(now) >>
by Substitution of Assertion Labels
and theorem 1633:
Theorem (1633) [serial 3324] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3298]
 


Theorem (1635)                               [serial 3279] 
P [325] << (VS@now
 and ((last_vp_or_vs = now))
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)) >>
S [200] ->
Q [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1634:
Theorem (1634) [serial 3298] used for:
    normalization of [serial 3279]
 


Theorem (1636)                               [serial 3363] 
P [312] << SV@now
 and V@now
 and not TNV@now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
S [312] ->
Q [314] << LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1637)                               [serial 3361] 
P [312] << (SV@now
 and V@now
 and not TNV@now)
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)) >>
S [312] ->
Q [314] << LAST_AP_OR_AS_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1636:
Theorem (1636) [serial 3363] used for:
  Associativity: (b.c).a = a.b.c [serial 3361]
 


Theorem (1638)                               [serial 3359] 
P [312] << ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and ((SV@now
 and V@now
 and not TNV@now)) >>
S [312] ->
Q [314] << LAST_AP_OR_AS_A(now) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1637:
Theorem (1637) [serial 3361] used for:
    normalization of [serial 3359]
 


Theorem (1639)                               [serial 3357] 
P [312] << LAST(now)
 and VS_A(now) >>
S [312] ->
Q [314] << LAST_AP_OR_AS_A(now) >>
by Substitution of Assertion Labels
and theorem 1638:
Theorem (1638) [serial 3359] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3357]
 


Theorem (1640)                               [serial 3358] 
P [312] << LAST(now)
 and VS_A(now) >>
S [312] ->
Q [314] << VS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1641)                               [serial 3302] 
P [312] << LAST(now)
 and VS_A(now) >>
S [312] ->
Q [314] << LAST_AP_OR_AS_A(now)
 and VS_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1639 1640:
Theorem (1639) [serial 3357] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3302]
 
Theorem (1640) [serial 3358] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3302]
 


Theorem (1642)                               [serial 3291] 
P [312] << (VS_A(now)
 and LAST(now)) >>
S [312] ->
Q [314] << (VS_A(now)
 and LAST_AP_OR_AS_A(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1641:
Theorem (1641) [serial 3302] used for:
    normalization of [serial 3291]
 


Theorem (1643)                               [serial 3287] 
P [312] << (VS_A(now)
 and LAST(now)) >>
S [312] ->
Q [314] << (VS_A(now)
 and LAST_AP_OR_AS_A(now)
 and true) >>
by Law of And-Simplification:  P and true is P
and theorem 1642:
Theorem (1642) [serial 3291] used for:
  Law of And-Simplification:  P and true is P [serial 3287]
 


Theorem (1644)                               [serial 3363] 
P [312] << SV@now
 and V@now
 and not TNV@now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
S [312] ->
Q [314] << LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1645)                               [serial 3361] 
P [312] << (SV@now
 and V@now
 and not TNV@now)
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)) >>
S [312] ->
Q [314] << LAST_AP_OR_AS_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1644:
Theorem (1644) [serial 3363] used for:
  Associativity: (b.c).a = a.b.c [serial 3361]
 


Theorem (1646)                               [serial 3359] 
P [312] << ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and ((SV@now
 and V@now
 and not TNV@now)) >>
S [312] ->
Q [314] << LAST_AP_OR_AS_A(now) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1645:
Theorem (1645) [serial 3361] used for:
    normalization of [serial 3359]
 


Theorem (1647)                               [serial 3357] 
P [312] << LAST(now)
 and VS_A(now) >>
S [312] ->
Q [314] << LAST_AP_OR_AS_A(now) >>
by Substitution of Assertion Labels
and theorem 1646:
Theorem (1646) [serial 3359] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3357]
 


Theorem (1648)                               [serial 3358] 
P [312] << LAST(now)
 and VS_A(now) >>
S [312] ->
Q [314] << VS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1649)                               [serial 3302] 
P [312] << LAST(now)
 and VS_A(now) >>
S [312] ->
Q [314] << LAST_AP_OR_AS_A(now)
 and VS_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1647 1648:
Theorem (1647) [serial 3357] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3302]
 
Theorem (1648) [serial 3358] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3302]
 


Theorem (1650)                               [serial 3291] 
P [312] << (VS_A(now)
 and LAST(now)) >>
S [312] ->
Q [314] << (VS_A(now)
 and LAST_AP_OR_AS_A(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1649:
Theorem (1649) [serial 3302] used for:
    normalization of [serial 3291]
 


Theorem (1651)                               [serial 3287] 
P [312] << (VS_A(now)
 and LAST(now)) >>
S [312] ->
Q [314] << (VS_A(now)
 and LAST_AP_OR_AS_A(now)
 and true) >>
by Law of And-Simplification:  P and true is P
and theorem 1650:
Theorem (1650) [serial 3291] used for:
  Law of And-Simplification:  P and true is P [serial 3287]
 


Theorem (1652)                               [serial 3282] 
P [312] << (VS_A(now)
 and LAST(now)) >>
S [312] ->
Q [314] << (VS_A(now)
 and LAST_AP_OR_AS_A(now)
 and AXIOM_VS()) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1651 1651:
Theorem (1651) [serial 3287] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1651) [serial 3287] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1653)                               [serial 3343] 
P [323] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [325] ->
Q [325] << VS@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1654)                               [serial 3344] 
P [323] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [325] ->
Q [325] << last_vp_or_vs = now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1655)                               [serial 3345] 
P [323] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [325] ->
Q [326] << LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1656)                               [serial 3355] 
P [323] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [325] ->
Q [326] << VP@now or 
VS@now >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1657)                               [serial 3353] 
P [323] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [325] ->
Q [326] << ((VP@now or 
VS@now)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1656:
Theorem (1656) [serial 3355] used for:
    normalization of [serial 3353]
 


Theorem (1658)                               [serial 3351] 
P [323] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [325] ->
Q [326] << true
 and (VP@now or 
VS@now) >>
by Law of And-Simplification:  P and true is P
and theorem 1657:
Theorem (1657) [serial 3353] used for:
  Law of And-Simplification:  P and true is P [serial 3351]
 


Theorem (1659)                               [serial 3349] 
P [323] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [325] ->
Q [326] << ((((VP@now or 
VS@now))
 and not (false))) >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1658:
Theorem (1658) [serial 3351] used for:
    normalization of [serial 3349]
 


Theorem (1660)                               [serial 3348] 
P [323] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [325] ->
Q [326] << ((((VP@now or 
VS@now))
 and not (exists t~time
  in now ,, now 
  that ((VS or 
       VP))@t ))) >>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 1659:
Theorem (1659) [serial 3349] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 3348]
 


Theorem (1661)                               [serial 3347] 
P [323] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [325] ->
Q [326] << ((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t ))) >>
by Guided Substitution of Equals
and theorem 1660:
Theorem (1660) [serial 3348] used for:
  Guided Substitution of Equals
 replacing "last_vp_or_vs" with its = "now" in its postcondition [serial 3347]
 


Theorem (1662)                               [serial 3346] 
P [323] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [325] ->
Q [326] << LAST_VP_OR_VS_A(now) >>
by Substitution of Assertion Labels
and theorem 1661:
Theorem (1661) [serial 3347] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3346]
 


Theorem (1663)                               [serial 3300] 
P [323] << VS@now
 and last_vp_or_vs = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [325] ->
Q [325] << VS@now
 and last_vp_or_vs = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1653 1654 1655 1662:
Theorem (1653) [serial 3343] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3300]
 
Theorem (1654) [serial 3344] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3300]
 
Theorem (1655) [serial 3345] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3300]
 
Theorem (1662) [serial 3346] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3300]
 


Theorem (1664)                               [serial 3283] 
P [323] << (((last_vp_or_vs = now))
 and VS@now
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [325] ->
Q [325] << (VS@now
 and ((last_vp_or_vs = now))
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1663:
Theorem (1663) [serial 3300] used for:
    normalization of [serial 3283]
 


Theorem (1665)                               [serial 3381] 
P [314] << SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
S [315] ->
Q [38] << 0 = now or 
(SV@now
 and V@now
 and not TNV@now) >>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (1666)                               [serial 3379] 
P [314] << SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
S [315] ->
Q [38] << 0 = now or 
((SV@now
 and V@now
 and not TNV@now)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1665:
Theorem (1665) [serial 3381] used for:
    normalization of [serial 3379]
 


Theorem (1667)                               [serial 3377] 
P [314] << SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
S [315] ->
Q [38] << 0 = now or 
VS_A(now) >>
by Substitution of Assertion Labels
and theorem 1666:
Theorem (1666) [serial 3379] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3377]
 


Theorem (1668)                               [serial 3375] 
P [314] << SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
S [315] ->
Q [38] << ((0 = now or 
VS_A(now))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1667:
Theorem (1667) [serial 3377] used for:
    normalization of [serial 3375]
 


Theorem (1669)                               [serial 3373] 
P [314] << SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
S [315] ->
Q [38] << VS >>
by Guided Substitution of Equals
and theorem 1668:
Theorem (1668) [serial 3375] used for:
  Guided Substitution of Equals
 replacing "VS" with its iff "((0 = now or 
VS_A(now)))" in its postcondition [serial 3373]
 


Theorem (1670)                               [serial 3371] 
P [314] << SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VS iff (0 = now or 
VS_A(now))) >>
S [315] ->
Q [38] << VS >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1669:
Theorem (1669) [serial 3373] used for:
    normalization of [serial 3371]
 


Theorem (1671)                               [serial 3369] 
P [314] << (SV@now
 and V@now
 and not TNV@now)
 and (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (VS iff (0 = now or 
VS_A(now))) >>
S [315] ->
Q [38] << VS >>
by Associativity: (b.c).a = a.b.c
and theorem 1670:
Theorem (1670) [serial 3371] used for:
  Associativity: (b.c).a = a.b.c [serial 3369]
 


Theorem (1672)                               [serial 3367] 
P [314] << ((VS iff ((VS_A(now) or 
(now = 0)))))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))
 and ((SV@now
 and V@now
 and not TNV@now)) >>
S [315] ->
Q [38] << VS >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1671:
Theorem (1671) [serial 3369] used for:
    normalization of [serial 3367]
 


Theorem (1673)                               [serial 3364] 
P [314] << AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and VS_A(now) >>
S [315] ->
Q [38] << VS >>
by Substitution of Assertion Labels
and theorem 1672:
Theorem (1672) [serial 3367] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3364]
 


Theorem (1674)                               [serial 3366] 
P [315] << AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and VS_A(now)
 and VS@now >>
S [315] ->
Q [316] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1675)                               [serial 3365] 
P [315] << (AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and VS_A(now))
 and VS@now >>
S [315] ->
Q [316] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1674:
Theorem (1674) [serial 3366] used for:
  Associativity: (b.c).a = a.b.c [serial 3365]
 


Theorem (1676)                               [serial 3304] 
P [314] << AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and VS_A(now) >>
S [315] vs!
Q [316] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 1673 1675:
Theorem (1673) [serial 3364] used for:
  applied port output <<pre>> -> <<M[vs]>> [serial 3304]
 
Theorem (1675) [serial 3365] used for:
  applied port output <<pre and M[vs]@now>> -> <<post>> [serial 3304]
 


Theorem (1677)                               [serial 3292] 
P [314] << (VS_A(now)
 and LAST_AP_OR_AS_A(now)
 and AXIOM_VS()) >>
S [315] vs!
Q [316] << (VS@now
 and LAST_AP_OR_AS_A(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1676:
Theorem (1676) [serial 3304] used for:
    normalization of [serial 3292]
 


Theorem (1678)                               [serial 3288] 
P [314] << (VS_A(now)
 and LAST_AP_OR_AS_A(now)
 and AXIOM_VS()) >>
S [315] vs!
Q [316] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and true) >>
by Law of And-Simplification:  P and true is P
and theorem 1677:
Theorem (1677) [serial 3292] used for:
  Law of And-Simplification:  P and true is P [serial 3288]
 


Theorem (1679)                               [serial 3381] 
P [314] << SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
S [315] ->
Q [38] << 0 = now or 
(SV@now
 and V@now
 and not TNV@now) >>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (1680)                               [serial 3379] 
P [314] << SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
S [315] ->
Q [38] << 0 = now or 
((SV@now
 and V@now
 and not TNV@now)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1679:
Theorem (1679) [serial 3381] used for:
    normalization of [serial 3379]
 


Theorem (1681)                               [serial 3377] 
P [314] << SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
S [315] ->
Q [38] << 0 = now or 
VS_A(now) >>
by Substitution of Assertion Labels
and theorem 1680:
Theorem (1680) [serial 3379] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3377]
 


Theorem (1682)                               [serial 3375] 
P [314] << SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
S [315] ->
Q [38] << ((0 = now or 
VS_A(now))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1681:
Theorem (1681) [serial 3377] used for:
    normalization of [serial 3375]
 


Theorem (1683)                               [serial 3373] 
P [314] << SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (VS iff (0 = now or 
VS_A(now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
S [315] ->
Q [38] << VS >>
by Guided Substitution of Equals
and theorem 1682:
Theorem (1682) [serial 3375] used for:
  Guided Substitution of Equals
 replacing "VS" with its iff "((0 = now or 
VS_A(now)))" in its postcondition [serial 3373]
 


Theorem (1684)                               [serial 3371] 
P [314] << SV@now
 and V@now
 and not TNV@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VS iff (0 = now or 
VS_A(now))) >>
S [315] ->
Q [38] << VS >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1683:
Theorem (1683) [serial 3373] used for:
    normalization of [serial 3371]
 


Theorem (1685)                               [serial 3369] 
P [314] << (SV@now
 and V@now
 and not TNV@now)
 and (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (VS iff (0 = now or 
VS_A(now))) >>
S [315] ->
Q [38] << VS >>
by Associativity: (b.c).a = a.b.c
and theorem 1684:
Theorem (1684) [serial 3371] used for:
  Associativity: (b.c).a = a.b.c [serial 3369]
 


Theorem (1686)                               [serial 3367] 
P [314] << ((VS iff ((VS_A(now) or 
(now = 0)))))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))
 and ((SV@now
 and V@now
 and not TNV@now)) >>
S [315] ->
Q [38] << VS >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1685:
Theorem (1685) [serial 3369] used for:
    normalization of [serial 3367]
 


Theorem (1687)                               [serial 3364] 
P [314] << AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and VS_A(now) >>
S [315] ->
Q [38] << VS >>
by Substitution of Assertion Labels
and theorem 1686:
Theorem (1686) [serial 3367] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3364]
 


Theorem (1688)                               [serial 3366] 
P [315] << AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and VS_A(now)
 and VS@now >>
S [315] ->
Q [316] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1689)                               [serial 3365] 
P [315] << (AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and VS_A(now))
 and VS@now >>
S [315] ->
Q [316] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1688:
Theorem (1688) [serial 3366] used for:
  Associativity: (b.c).a = a.b.c [serial 3365]
 


Theorem (1690)                               [serial 3304] 
P [314] << AXIOM_VS()
 and LAST_AP_OR_AS_A(now)
 and VS_A(now) >>
S [315] vs!
Q [316] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 1687 1689:
Theorem (1687) [serial 3364] used for:
  applied port output <<pre>> -> <<M[vs]>> [serial 3304]
 
Theorem (1689) [serial 3365] used for:
  applied port output <<pre and M[vs]@now>> -> <<post>> [serial 3304]
 


Theorem (1691)                               [serial 3292] 
P [314] << (VS_A(now)
 and LAST_AP_OR_AS_A(now)
 and AXIOM_VS()) >>
S [315] vs!
Q [316] << (VS@now
 and LAST_AP_OR_AS_A(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1690:
Theorem (1690) [serial 3304] used for:
    normalization of [serial 3292]
 


Theorem (1692)                               [serial 3288] 
P [314] << (VS_A(now)
 and LAST_AP_OR_AS_A(now)
 and AXIOM_VS()) >>
S [315] vs!
Q [316] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and true) >>
by Law of And-Simplification:  P and true is P
and theorem 1691:
Theorem (1691) [serial 3292] used for:
  Law of And-Simplification:  P and true is P [serial 3288]
 


Theorem (1693)                               [serial 3284] 
P [314] << (VS_A(now)
 and LAST_AP_OR_AS_A(now)
 and AXIOM_VS()) >>
S [315] vs!
Q [316] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1692 1692:
Theorem (1692) [serial 3288] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1692) [serial 3288] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1694)                               [serial 3385] 
P [319] << VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and (cci = ((now - last_vp_or_vs)))@now >>
S [319] ->
Q [320] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1695)                               [serial 3383] 
P [319] << (VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now))
 and (cci = ((now - last_vp_or_vs)))@now >>
S [319] ->
Q [320] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1694:
Theorem (1694) [serial 3385] used for:
  Associativity: (b.c).a = a.b.c [serial 3383]
 


Theorem (1696)                               [serial 3390] 
P [319] << VS@now
 and (CCI = (now - last_vp_or_vs))@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [319] ->
Q [319] << true >>
by True Conclusion Schema (tc): P->true


Theorem (1697)                               [serial 3388] 
P [319] << VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and (CCI = ((now - last_vp_or_vs)))@now >>
S [319] ->
Q [319] << (true)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Constants are always the same
and theorem 1696:
Theorem (1696) [serial 3390] used for:
    normalization of [serial 3388]
 


Theorem (1698)                               [serial 3387] 
P [319] << VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and (CCI = ((now - last_vp_or_vs)))@now >>
S [319] ->
Q [319] << (CCI = CCI)@now >>
by Equality Law (idistr):  a=a <-> true
and theorem 1697:
Theorem (1697) [serial 3388] used for:
  Equality Law (idistr):  a=a <-> true [serial 3387]
 


Theorem (1699)                               [serial 3386] 
P [319] << VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and (cci = ((now - last_vp_or_vs)))@now >>
S [319] ->
Q [319] << (cci = CCI)@now >>
by Replacing port names with BLESS::Assertion properties
and theorem 1698:
Theorem (1698) [serial 3387] used for:
  Replacing port names with BLESS::Assertion properties [serial 3386]
 


Theorem (1700)                               [serial 3384] 
P [319] << (VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now))
 and (cci = ((now - last_vp_or_vs)))@now >>
S [319] ->
Q [319] << (cci = CCI)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 1699:
Theorem (1699) [serial 3386] used for:
  Associativity: (b.c).a = a.b.c [serial 3384]
 


Theorem (1701)                               [serial 3306] 
P [316] << VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [319] cci!((now - last_vp_or_vs))
Q [320] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 1695 1700:
Theorem (1695) [serial 3383] used for:
  applied port output <<pre and (cci=(now - last_vp_or_vs))@now>> -> <<post>> [serial 3306]
 
Theorem (1700) [serial 3384] used for:
  applied port output <<pre and (cci=(now - last_vp_or_vs))@now>> -> <<(cci=CCI)@now>> [serial 3306]
 


Theorem (1702)                               [serial 3293] 
P [316] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [319] cci!((now - last_vp_or_vs))
Q [320] << (VS@now
 and LAST_AP_OR_AS_A(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1701:
Theorem (1701) [serial 3306] used for:
    normalization of [serial 3293]
 


Theorem (1703)                               [serial 3289] 
P [316] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [319] cci!((now - last_vp_or_vs))
Q [320] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and true) >>
by Law of And-Simplification:  P and true is P
and theorem 1702:
Theorem (1702) [serial 3293] used for:
  Law of And-Simplification:  P and true is P [serial 3289]
 


Theorem (1704)                               [serial 3385] 
P [319] << VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and (cci = ((now - last_vp_or_vs)))@now >>
S [319] ->
Q [320] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1705)                               [serial 3383] 
P [319] << (VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now))
 and (cci = ((now - last_vp_or_vs)))@now >>
S [319] ->
Q [320] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1704:
Theorem (1704) [serial 3385] used for:
  Associativity: (b.c).a = a.b.c [serial 3383]
 


Theorem (1706)                               [serial 3390] 
P [319] << VS@now
 and (CCI = (now - last_vp_or_vs))@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [319] ->
Q [319] << true >>
by True Conclusion Schema (tc): P->true


Theorem (1707)                               [serial 3388] 
P [319] << VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and (CCI = ((now - last_vp_or_vs)))@now >>
S [319] ->
Q [319] << (true)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Constants are always the same
and theorem 1706:
Theorem (1706) [serial 3390] used for:
    normalization of [serial 3388]
 


Theorem (1708)                               [serial 3387] 
P [319] << VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and (CCI = ((now - last_vp_or_vs)))@now >>
S [319] ->
Q [319] << (CCI = CCI)@now >>
by Equality Law (idistr):  a=a <-> true
and theorem 1707:
Theorem (1707) [serial 3388] used for:
  Equality Law (idistr):  a=a <-> true [serial 3387]
 


Theorem (1709)                               [serial 3386] 
P [319] << VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and (cci = ((now - last_vp_or_vs)))@now >>
S [319] ->
Q [319] << (cci = CCI)@now >>
by Replacing port names with BLESS::Assertion properties
and theorem 1708:
Theorem (1708) [serial 3387] used for:
  Replacing port names with BLESS::Assertion properties [serial 3386]
 


Theorem (1710)                               [serial 3384] 
P [319] << (VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now))
 and (cci = ((now - last_vp_or_vs)))@now >>
S [319] ->
Q [319] << (cci = CCI)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 1709:
Theorem (1709) [serial 3386] used for:
  Associativity: (b.c).a = a.b.c [serial 3384]
 


Theorem (1711)                               [serial 3306] 
P [316] << VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [319] cci!((now - last_vp_or_vs))
Q [320] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 1705 1710:
Theorem (1705) [serial 3383] used for:
  applied port output <<pre and (cci=(now - last_vp_or_vs))@now>> -> <<post>> [serial 3306]
 
Theorem (1710) [serial 3384] used for:
  applied port output <<pre and (cci=(now - last_vp_or_vs))@now>> -> <<(cci=CCI)@now>> [serial 3306]
 


Theorem (1712)                               [serial 3293] 
P [316] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [319] cci!((now - last_vp_or_vs))
Q [320] << (VS@now
 and LAST_AP_OR_AS_A(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1711:
Theorem (1711) [serial 3306] used for:
    normalization of [serial 3293]
 


Theorem (1713)                               [serial 3289] 
P [316] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [319] cci!((now - last_vp_or_vs))
Q [320] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and true) >>
by Law of And-Simplification:  P and true is P
and theorem 1712:
Theorem (1712) [serial 3293] used for:
  Law of And-Simplification:  P and true is P [serial 3289]
 


Theorem (1714)                               [serial 3285] 
P [316] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [319] cci!((now - last_vp_or_vs))
Q [320] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1713 1713:
Theorem (1713) [serial 3289] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1713) [serial 3289] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1715)                               [serial 3394] 
P [320] << VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [322] ->
Q [323] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1716)                               [serial 3393] 
P [320] << VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [322] ->
Q [323] << VS@now
 and true
 and LAST_AP_OR_AS_A(now) >>
by Law of And-Simplification:  P and true is P
and theorem 1715:
Theorem (1715) [serial 3394] used for:
  Law of And-Simplification:  P and true is P [serial 3393]
 


Theorem (1717)                               [serial 3392] 
P [320] << VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [322] ->
Q [323] << VS@now
 and now = now
 and LAST_AP_OR_AS_A(now) >>
by Equality Law (idistr):  a=a <-> true
and theorem 1716:
Theorem (1716) [serial 3393] used for:
  Equality Law (idistr):  a=a <-> true [serial 3392]
 


Theorem (1718)                               [serial 3308] 
P [320] << VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [322] last_vp_or_vs := now
Q [323] << VS@now
 and last_vp_or_vs = now
 and LAST_AP_OR_AS_A(now) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1717:
Theorem (1717) [serial 3392] used for:
  applied wp for assignment [serial 3308]
 


Theorem (1719)                               [serial 3294] 
P [320] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [322] last_vp_or_vs := now
Q [323] << (((last_vp_or_vs = now))
 and VS@now
 and LAST_AP_OR_AS_A(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1718:
Theorem (1718) [serial 3308] used for:
    normalization of [serial 3294]
 


Theorem (1720)                               [serial 3290] 
P [320] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [322] last_vp_or_vs := now
Q [323] << (((last_vp_or_vs = now))
 and VS@now
 and LAST_AP_OR_AS_A(now)
 and true) >>
by Law of And-Simplification:  P and true is P
and theorem 1719:
Theorem (1719) [serial 3294] used for:
  Law of And-Simplification:  P and true is P [serial 3290]
 


Theorem (1721)                               [serial 3394] 
P [320] << VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [322] ->
Q [323] << VS@now
 and LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1722)                               [serial 3393] 
P [320] << VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [322] ->
Q [323] << VS@now
 and true
 and LAST_AP_OR_AS_A(now) >>
by Law of And-Simplification:  P and true is P
and theorem 1721:
Theorem (1721) [serial 3394] used for:
  Law of And-Simplification:  P and true is P [serial 3393]
 


Theorem (1723)                               [serial 3392] 
P [320] << VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [322] ->
Q [323] << VS@now
 and now = now
 and LAST_AP_OR_AS_A(now) >>
by Equality Law (idistr):  a=a <-> true
and theorem 1722:
Theorem (1722) [serial 3393] used for:
  Equality Law (idistr):  a=a <-> true [serial 3392]
 


Theorem (1724)                               [serial 3308] 
P [320] << VS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now) >>
S [322] last_vp_or_vs := now
Q [323] << VS@now
 and last_vp_or_vs = now
 and LAST_AP_OR_AS_A(now) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1723:
Theorem (1723) [serial 3392] used for:
  applied wp for assignment [serial 3308]
 


Theorem (1725)                               [serial 3294] 
P [320] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [322] last_vp_or_vs := now
Q [323] << (((last_vp_or_vs = now))
 and VS@now
 and LAST_AP_OR_AS_A(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1724:
Theorem (1724) [serial 3308] used for:
    normalization of [serial 3294]
 


Theorem (1726)                               [serial 3290] 
P [320] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [322] last_vp_or_vs := now
Q [323] << (((last_vp_or_vs = now))
 and VS@now
 and LAST_AP_OR_AS_A(now)
 and true) >>
by Law of And-Simplification:  P and true is P
and theorem 1725:
Theorem (1725) [serial 3294] used for:
  Law of And-Simplification:  P and true is P [serial 3290]
 


Theorem (1727)                               [serial 3286] 
P [320] << (VS@now
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [322] last_vp_or_vs := now
Q [323] << (((last_vp_or_vs = now))
 and VS@now
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1726 1726:
Theorem (1726) [serial 3290] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1726) [serial 3290] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1728)                               [serial 3281] 
P [312] << (VS_A(now)
 and LAST(now)) >>
S [314] << (VS_A(now)
 and LAST_AP_OR_AS_A(now)
 and AXIOM_VS()) >>
vs!
<< (VS@now
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
;
cci!((now - last_vp_or_vs))
<< (VS@now
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
;
last_vp_or_vs := now
<< (((last_vp_or_vs = now))
 and VS@now
 and LAST_AP_OR_AS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
Q [325] << (VS@now
 and ((last_vp_or_vs = now))
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)) >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1652 1664 1693 1714 1727:
Theorem (1652) [serial 3282] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 3281]
 
Theorem (1664) [serial 3283] used for:
  <<Q2>> -> <<Q>> in sequential composition for [serial 3281]
 
Theorem (1693) [serial 3284] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 3281]
 
Theorem (1714) [serial 3285] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 3281]
 
Theorem (1727) [serial 3286] used for:
  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 3281]
 


Theorem (1729)                               [serial 3280] 
P [312] << (VS_A(now)
 and LAST(now)) >>
S [313]   {
  << (VS_A(now)
   and LAST_AP_OR_AS_A(now)
   and AXIOM_VS()) >>
  vs!
  << (VS@now
   and LAST_AP_OR_AS_A(now)
   and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
  ;
  cci!((now - last_vp_or_vs))
  << (VS@now
   and LAST_AP_OR_AS_A(now)
   and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
  ;
  last_vp_or_vs := now
  << (((last_vp_or_vs = now))
   and VS@now
   and LAST_AP_OR_AS_A(now)
   and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
  } 
Q [325] << (VS@now
 and ((last_vp_or_vs = now))
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)) >>
by Introduction of Existential Quantification (bl.elq)
and theorem 1728:
Theorem (1728) [serial 3281] used for:
  <<P>> T <<Q>> in existential lattice quantification for [serial 3280]
 


Theorem (1730)                               [serial 1069] 
P [198] << ((V@now
 and PAV(now)
 and LRL_A(now)
 and LAST(now)))
 and (((SV)@now
 and not (TNV)@now
 and (((VRP)@now <= ((now - last_vp_or_vs)))))) >>
S [312] << (VS_A(now)
 and LAST(now)) >>
  {
  << (VS_A(now)
   and LAST_AP_OR_AS_A(now)
   and AXIOM_VS()) >>
  vs!
  << (VS@now
   and LAST_AP_OR_AS_A(now)
   and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
  ;
  cci!((now - last_vp_or_vs))
  << (VS@now
   and LAST_AP_OR_AS_A(now)
   and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
  ;
  last_vp_or_vs := now
  << (((last_vp_or_vs = now))
   and VS@now
   and LAST_AP_OR_AS_A(now)
   and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
  } 
<< (VS@now
 and ((last_vp_or_vs = now))
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)) >>
Q [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Introduction of Existential Quantification (bl.aab)
and theorems 1620 1635 1729:
Theorem (1620) [serial 3278] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1069]
 
Theorem (1635) [serial 3279] used for:
  as <<post>> -> <<Q>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1069]
 
Theorem (1729) [serial 3280] used for:
  as <<pre>> S <<post>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1069]
 


Theorem (1731)                               [serial 3398] 
P [330] << LAST(now)
 and LRL_A(now)
 and VAI(now)
 and A@now
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [329] ->
Q [202] << A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1732)                               [serial 3396] 
P [330] << A@now
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) )
 and (LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [329] ->
Q [202] << A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1731:
Theorem (1731) [serial 3398] used for:
  Associativity: (b.c).a = a.b.c [serial 3396]
 


Theorem (1733)                               [serial 1070] 
P [330] << ((LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and A@now
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [329] ->
Q [202] << (A@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1732:
Theorem (1732) [serial 3396] used for:
    normalization of [serial 1070]
 


Theorem (1734)                               [serial 3521] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [344] ->
Q [344] << A@now
 and SA@now
 and not FB@now
 and not TNA@now >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1735)                               [serial 3519] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [344] ->
Q [344] << ((SA@now
 and A@now
 and not TNA@now
 and not FB@now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1734:
Theorem (1734) [serial 3521] used for:
    normalization of [serial 3519]
 


Theorem (1736)                               [serial 3516] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [344] ->
Q [344] << AS_A(now) >>
by Substitution of Assertion Labels
and theorem 1735:
Theorem (1735) [serial 3519] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3516]
 


Theorem (1737)                               [serial 3527] 
P [202] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))@now <= (now - last_ap_or_as)
 and (SAVO@now + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and not FB@now
 and not TNA@now
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (AP or 
       AS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [344] ->
Q [344] << LAST_VP_OR_VS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1738)                               [serial 3525] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))@now <= (now - last_ap_or_as)
 and (SAVO@now + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and not FB@now
 and not TNA@now
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (AP or 
       AS)@t )
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [344] ->
Q [344] << LAST_VP_OR_VS_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1737:
Theorem (1737) [serial 3527] used for:
  Associativity: (b.c).a = a.b.c [serial 3525]
 


Theorem (1739)                               [serial 3523] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and ((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV))@now <= (now - last_ap_or_as)
 and (SAVO@now + ((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV))@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that ((AS or 
       AP))@t ))
 and not FB@now
 and not TNA@now >>
S [344] ->
Q [344] << LAST_VP_OR_VS_A(now) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1738:
Theorem (1738) [serial 3525] used for:
    normalization of [serial 3523]
 


Theorem (1740)                               [serial 3517] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [344] ->
Q [344] << LAST_VP_OR_VS_A(now) >>
by Substitution of Assertion Labels
and theorem 1739:
Theorem (1739) [serial 3523] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3517]
 


Theorem (1741)                               [serial 3518] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [344] ->
Q [344] << LRL_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1742)                               [serial 3445] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [344] ->
Q [344] << AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1736 1740 1741:
Theorem (1736) [serial 3516] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3445]
 
Theorem (1740) [serial 3517] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3445]
 
Theorem (1741) [serial 3518] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3445]
 


Theorem (1743)                               [serial 3443] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [344] ->
Q [344] << AS_A(now)
 and true
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
by Law of And-Simplification:  P and true is P
and theorem 1742:
Theorem (1742) [serial 3445] used for:
  Law of And-Simplification:  P and true is P [serial 3443]
 


Theorem (1744)                               [serial 3521] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [344] ->
Q [344] << A@now
 and SA@now
 and not FB@now
 and not TNA@now >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1745)                               [serial 3519] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [344] ->
Q [344] << ((SA@now
 and A@now
 and not TNA@now
 and not FB@now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1744:
Theorem (1744) [serial 3521] used for:
    normalization of [serial 3519]
 


Theorem (1746)                               [serial 3516] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [344] ->
Q [344] << AS_A(now) >>
by Substitution of Assertion Labels
and theorem 1745:
Theorem (1745) [serial 3519] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3516]
 


Theorem (1747)                               [serial 3527] 
P [202] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))@now <= (now - last_ap_or_as)
 and (SAVO@now + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and not FB@now
 and not TNA@now
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (AP or 
       AS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [344] ->
Q [344] << LAST_VP_OR_VS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1748)                               [serial 3525] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))@now <= (now - last_ap_or_as)
 and (SAVO@now + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and not FB@now
 and not TNA@now
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (AP or 
       AS)@t )
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [344] ->
Q [344] << LAST_VP_OR_VS_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1747:
Theorem (1747) [serial 3527] used for:
  Associativity: (b.c).a = a.b.c [serial 3525]
 


Theorem (1749)                               [serial 3523] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and ((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV))@now <= (now - last_ap_or_as)
 and (SAVO@now + ((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV))@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that ((AS or 
       AP))@t ))
 and not FB@now
 and not TNA@now >>
S [344] ->
Q [344] << LAST_VP_OR_VS_A(now) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1748:
Theorem (1748) [serial 3525] used for:
    normalization of [serial 3523]
 


Theorem (1750)                               [serial 3517] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [344] ->
Q [344] << LAST_VP_OR_VS_A(now) >>
by Substitution of Assertion Labels
and theorem 1749:
Theorem (1749) [serial 3523] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3517]
 


Theorem (1751)                               [serial 3518] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [344] ->
Q [344] << LRL_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1752)                               [serial 3445] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [344] ->
Q [344] << AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1746 1750 1751:
Theorem (1746) [serial 3516] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3445]
 
Theorem (1750) [serial 3517] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3445]
 
Theorem (1751) [serial 3518] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3445]
 


Theorem (1753)                               [serial 3443] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [344] ->
Q [344] << AS_A(now)
 and true
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
by Law of And-Simplification:  P and true is P
and theorem 1752:
Theorem (1752) [serial 3445] used for:
  Law of And-Simplification:  P and true is P [serial 3443]
 


Theorem (1754)                               [serial 3420] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [344] ->
Q [344] << AS_A(now)
 and AXIOM_AS()
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1753 1753:
Theorem (1753) [serial 3443] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1753) [serial 3443] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1755)                               [serial 3415] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and SA@now
 and not FB@now
 and not TNA@now
 and A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [344] ->
Q [344] << AS_A(now)
 and AXIOM_AS()
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1754:
Theorem (1754) [serial 3420] used for:
    normalization of [serial 3415]
 


Theorem (1756)                               [serial 3404] 
P [202] << (ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and SA@now
 and not FB@now
 and not TNA@now)
 and (A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [344] ->
Q [344] << AS_A(now)
 and AXIOM_AS()
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1755:
Theorem (1755) [serial 3415] used for:
  Associativity: (b.c).a = a.b.c [serial 3404]
 


Theorem (1757)                               [serial 3399] 
P [202] << ((A@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((SA)@now
 and not (TNA)@now
 and not (FB)@now
 and (((PVARP)@now <= ((now - last_vp_or_vs))))
 and (((ARP)@now <= ((now - last_ap_or_as))))
 and (((((DAV_A())@now + (SAVO)@now)) <= ((now - last_ap_or_as))))
 and (((DAV_A())@now <= ((now - last_ap_or_as))))
 and (((URL)@now <= ((now - last_ap_or_as)))))) >>
S [344] ->
Q [344] << (AS_A(now)
 and LRL_A(now)
 and LAST_VP_OR_VS_A(now)
 and AXIOM_AS()) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1756:
Theorem (1756) [serial 3404] used for:
    normalization of [serial 3399]
 


Theorem (1758)                               [serial 3507] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [176] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1759)                               [serial 3508] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [170] << not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1760)                               [serial 3509] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [175] << (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1761)                               [serial 3510] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [169] << (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1762)                               [serial 3505] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [117] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1758 1759 1760 1761:
Theorem (1758) [serial 3507] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3505]
 
Theorem (1759) [serial 3508] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3505]
 
Theorem (1760) [serial 3509] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3505]
 
Theorem (1761) [serial 3510] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3505]
 


Theorem (1763)                               [serial 3503] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [117] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1762:
Theorem (1762) [serial 3505] used for:
    normalization of [serial 3503]
 


Theorem (1764)                               [serial 3493] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [117] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)) >>
by Associativity: (b.c).a = a.b.c
and theorem 1763:
Theorem (1763) [serial 3503] used for:
  Associativity: (b.c).a = a.b.c [serial 3493]
 


Theorem (1765)                               [serial 3490] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [117] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1764:
Theorem (1764) [serial 3493] used for:
    normalization of [serial 3490]
 


Theorem (1766)                               [serial 3484] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [117] << (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)) >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1765:
Theorem (1765) [serial 3490] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 3484]
 


Theorem (1767)                               [serial 3479] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [117] << (((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))
 and ((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1766:
Theorem (1766) [serial 3484] used for:
    normalization of [serial 3479]
 


Theorem (1768)                               [serial 3476] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [117] << (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)) >>
by Substitution of Assertion Labels
and theorem 1767:
Theorem (1767) [serial 3479] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3476]
 


Theorem (1769)                               [serial 3482] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [79] << exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t  >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1770)                               [serial 3477] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [79] << (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1769:
Theorem (1769) [serial 3482] used for:
    normalization of [serial 3477]
 


Theorem (1771)                               [serial 3501] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [124] << AS@now or 
(exists t~time
  in now - (SAVO + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))) .. now 
  that (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu ) or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VS@tu ) ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1772)                               [serial 3498] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [124] << (AS@now) or 
(exists t~time
  in now - (SAVO + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))) .. now 
  that (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu ) or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VS@tu ) ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1771:
Theorem (1771) [serial 3501] used for:
    normalization of [serial 3498]
 


Theorem (1773)                               [serial 3495] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [124] << (exists t~time
  in now - (SAVO + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))) .. now 
  that AS@t ) or 
(exists t~time
  in now - (SAVO + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))) .. now 
  that (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu ) or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VS@tu ) ) >>
by Introduction of Existential Quantification
and theorem 1772:
Theorem (1772) [serial 3498] used for:
  replace exists with upper or lower bound [serial 3495]
 


Theorem (1774)                               [serial 3491] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [124] << (exists t~time
  in now - (SAVO + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))) .. now 
  that AS@t ) or 
(exists t~time
  in now - (SAVO + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))) .. now 
  that ((exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu ) or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VS@tu )) ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1773:
Theorem (1773) [serial 3495] used for:
    normalization of [serial 3491]
 


Theorem (1775)                               [serial 3486] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [124] << exists t~time
  in now - (SAVO + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu )  >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1774:
Theorem (1774) [serial 3491] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 3486]
 


Theorem (1776)                               [serial 3480] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [124] << (exists t~time
  in now - (SAVO + ((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV))) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1775:
Theorem (1775) [serial 3486] used for:
    normalization of [serial 3480]
 


Theorem (1777)                               [serial 3478] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [124] << (exists t~time
  in now - (SAVO + DAV_A()) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
by Substitution of Assertion Labels
and theorem 1776:
Theorem (1776) [serial 3480] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3478]
 


Theorem (1778)                               [serial 3471] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [190] << (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (exists t~time
  in now - (SAVO + DAV_A()) .. now 
  that AS@t or 
       (exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu ) ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1768 1770 1777:
Theorem (1768) [serial 3476] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3471]
 
Theorem (1770) [serial 3477] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3471]
 
Theorem (1777) [serial 3478] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3471]
 


Theorem (1779)                               [serial 3468] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [190] << ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (exists t~time
  in ((now - ((DAV_A() + SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1778:
Theorem (1778) [serial 3471] used for:
    normalization of [serial 3468]
 


Theorem (1780)                               [serial 3460] 
P [344] << AS@now
 and last_ap_or_as = now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [190] << LAST(now)
 and LRL_A(now)
 and SAV(now) >>
by Substitution of Assertion Labels
and theorem 1779:
Theorem (1779) [serial 3468] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3460]
 


Theorem (1781)                               [serial 3456] 
P [344] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and AS@now
 and last_ap_or_as = now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [190] << LAST(now)
 and LRL_A(now)
 and SAV(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1780:
Theorem (1780) [serial 3460] used for:
    normalization of [serial 3456]
 


Theorem (1782)                               [serial 3452] 
P [344] << AS@now
 and last_ap_or_as = now
 and (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (now - max_cci) < (now - min_cci) >>
S [346] ->
Q [190] << LAST(now)
 and LRL_A(now)
 and SAV(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1781:
Theorem (1781) [serial 3456] used for:
  Associativity: (b.c).a = a.b.c [serial 3452]
 


Theorem (1783)                               [serial 3448] 
P [344] << AS@now
 and last_ap_or_as = now
 and ((((now - max_cci)) < ((now - min_cci))))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))
 and ((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) ) >>
S [346] ->
Q [190] << LAST(now)
 and LRL_A(now)
 and SAV(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1782:
Theorem (1782) [serial 3452] used for:
    normalization of [serial 3448]
 


Theorem (1784)                               [serial 3422] 
P [344] << AS@now
 and last_ap_or_as = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
S [346] ->
Q [190] << LAST(now)
 and LRL_A(now)
 and SAV(now) >>
by Substitution of Assertion Labels
and theorem 1783:
Theorem (1783) [serial 3448] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3422]
 


Theorem (1785)                               [serial 3416] 
P [344] << AS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now)
 and last_ap_or_as = now
 and LAST_AP_OR_AS_A(now) >>
S [346] ->
Q [190] << LAST(now)
 and LRL_A(now)
 and SAV(now) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1784:
Theorem (1784) [serial 3422] used for:
    normalization of [serial 3416]
 


Theorem (1786)                               [serial 3406] 
P [344] << (AS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now))
 and (last_ap_or_as = now
 and LAST_AP_OR_AS_A(now)) >>
S [346] ->
Q [190] << LAST(now)
 and LRL_A(now)
 and SAV(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1785:
Theorem (1785) [serial 3416] used for:
  Associativity: (b.c).a = a.b.c [serial 3406]
 


Theorem (1787)                               [serial 3400] 
P [344] << ((AS@now
 and LRL_A(now)
 and LAST_VP_OR_VS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)))
 and ((((last_ap_or_as = now))
 and LAST_AP_OR_AS_A(now))) >>
S [346] ->
Q [190] << (SAV(now)
 and LRL_A(now)
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1786:
Theorem (1786) [serial 3406] used for:
    normalization of [serial 3400]
 


Theorem (1788)                               [serial 3473] 
P [344] << A@now
 and SA@now
 and not FB@now
 and not TNA@now
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
AS_A(now)))
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [345] ->
Q [34] << 0 = now or 
(A@now
 and SA@now
 and not FB@now
 and not TNA@now) >>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (1789)                               [serial 3469] 
P [344] << A@now
 and SA@now
 and not FB@now
 and not TNA@now
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
AS_A(now)))
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [345] ->
Q [34] << 0 = now or 
((SA@now
 and A@now
 and not TNA@now
 and not FB@now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1788:
Theorem (1788) [serial 3473] used for:
    normalization of [serial 3469]
 


Theorem (1790)                               [serial 3466] 
P [344] << A@now
 and SA@now
 and not FB@now
 and not TNA@now
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
AS_A(now)))
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [345] ->
Q [34] << 0 = now or 
AS_A(now) >>
by Substitution of Assertion Labels
and theorem 1789:
Theorem (1789) [serial 3469] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3466]
 


Theorem (1791)                               [serial 3463] 
P [344] << A@now
 and SA@now
 and not FB@now
 and not TNA@now
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
AS_A(now)))
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [345] ->
Q [34] << ((0 = now or 
AS_A(now))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1790:
Theorem (1790) [serial 3466] used for:
    normalization of [serial 3463]
 


Theorem (1792)                               [serial 3458] 
P [344] << A@now
 and SA@now
 and not FB@now
 and not TNA@now
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
AS_A(now)))
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs) >>
S [345] ->
Q [34] << AS >>
by Guided Substitution of Equals
and theorem 1791:
Theorem (1791) [serial 3463] used for:
  Guided Substitution of Equals
 replacing "AS" with its iff "((0 = now or 
AS_A(now)))" in its postcondition [serial 3458]
 


Theorem (1793)                               [serial 3455] 
P [344] << A@now
 and SA@now
 and not FB@now
 and not TNA@now
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
AS_A(now))) >>
S [345] ->
Q [34] << AS >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1792:
Theorem (1792) [serial 3458] used for:
    normalization of [serial 3455]
 


Theorem (1794)                               [serial 3450] 
P [344] << (A@now
 and SA@now
 and not FB@now
 and not TNA@now)
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
AS_A(now))) >>
S [345] ->
Q [34] << AS >>
by Associativity: (b.c).a = a.b.c
and theorem 1793:
Theorem (1793) [serial 3455] used for:
  Associativity: (b.c).a = a.b.c [serial 3450]
 


Theorem (1795)                               [serial 3447] 
P [344] << ((SA@now
 and A@now
 and not TNA@now
 and not FB@now))
 and ((AS iff ((AS_A(now) or 
(now = 0)))))
 and ((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) ) >>
S [345] ->
Q [34] << AS >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1794:
Theorem (1794) [serial 3450] used for:
    normalization of [serial 3447]
 


Theorem (1796)                               [serial 3428] 
P [344] << AS_A(now)
 and AXIOM_AS()
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
S [345] ->
Q [34] << AS >>
by Substitution of Assertion Labels
and theorem 1795:
Theorem (1795) [serial 3447] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3428]
 


Theorem (1797)                               [serial 3446] 
P [345] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
S [345] ->
Q [346] << AS@now
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1798)                               [serial 3444] 
P [345] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
S [345] ->
Q [346] << AS@now
 and true
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
by Law of And-Simplification:  P and true is P
and theorem 1797:
Theorem (1797) [serial 3446] used for:
  Law of And-Simplification:  P and true is P [serial 3444]
 


Theorem (1799)                               [serial 3446] 
P [345] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
S [345] ->
Q [346] << AS@now
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1800)                               [serial 3444] 
P [345] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
S [345] ->
Q [346] << AS@now
 and true
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
by Law of And-Simplification:  P and true is P
and theorem 1799:
Theorem (1799) [serial 3446] used for:
  Law of And-Simplification:  P and true is P [serial 3444]
 


Theorem (1801)                               [serial 3438] 
P [345] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
S [345] ->
Q [346] << AS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1800 1800:
Theorem (1800) [serial 3444] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1800) [serial 3444] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1802)                               [serial 3431] 
P [345] << AS_A(now)
 and AXIOM_AS()
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now)
 and AS@now >>
S [345] ->
Q [346] << AS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
by Normalization
  Normalization Axiom:
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1801:
Theorem (1801) [serial 3438] used for:
    normalization of [serial 3431]
 


Theorem (1803)                               [serial 3429] 
P [345] << (AS_A(now)
 and AXIOM_AS()
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now))
 and AS@now >>
S [345] ->
Q [346] << AS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1802:
Theorem (1802) [serial 3431] used for:
  Associativity: (b.c).a = a.b.c [serial 3429]
 


Theorem (1804)                               [serial 3408] 
P [344] << AS_A(now)
 and AXIOM_AS()
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
S [345] as!
Q [346] << AS@now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST_VP_OR_VS_A(now)
 and LRL_A(now) >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 1796 1803:
Theorem (1796) [serial 3428] used for:
  applied port output <<pre>> -> <<M[as]>> [serial 3408]
 
Theorem (1803) [serial 3429] used for:
  applied port output <<pre and M[as]@now>> -> <<post>> [serial 3408]
 


Theorem (1805)                               [serial 3401] 
P [344] << (AS_A(now)
 and LRL_A(now)
 and LAST_VP_OR_VS_A(now)
 and AXIOM_AS()) >>
S [345] as!
Q [346] << (AS@now
 and LRL_A(now)
 and LAST_VP_OR_VS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1804:
Theorem (1804) [serial 3408] used for:
    normalization of [serial 3401]
 


Theorem (1806)                               [serial 3515] 
P [202] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))@now <= (now - last_ap_or_as)
 and (SAVO@now + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and not FB@now
 and not TNA@now
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (AP or 
       AS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [349] ->
Q [350] << LAST_AP_OR_AS_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1807)                               [serial 3513] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))@now <= (now - last_ap_or_as)
 and (SAVO@now + (MIN_AV + (CCI * ((AV - MIN_AV) / (LRL - URL))))@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and not FB@now
 and not TNA@now
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (AP or 
       AS)@t )
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [349] ->
Q [350] << LAST_AP_OR_AS_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1806:
Theorem (1806) [serial 3515] used for:
  Associativity: (b.c).a = a.b.c [serial 3513]
 


Theorem (1808)                               [serial 3511] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and ((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV))@now <= (now - last_ap_or_as)
 and (SAVO@now + ((((CCI * ((((AV - MIN_AV)) / ((LRL - URL)))))) + MIN_AV))@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that ((AS or 
       AP))@t ))
 and not FB@now
 and not TNA@now >>
S [349] ->
Q [350] << LAST_AP_OR_AS_A(now) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1807:
Theorem (1807) [serial 3513] used for:
    normalization of [serial 3511]
 


Theorem (1809)                               [serial 3440] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [349] ->
Q [350] << LAST_AP_OR_AS_A(now) >>
by Substitution of Assertion Labels
and theorem 1808:
Theorem (1808) [serial 3511] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3440]
 


Theorem (1810)                               [serial 3433] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [349] ->
Q [350] << (LAST_AP_OR_AS_A(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1809:
Theorem (1809) [serial 3440] used for:
    normalization of [serial 3433]
 


Theorem (1811)                               [serial 3432] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [349] ->
Q [350] << true
 and LAST_AP_OR_AS_A(now) >>
by Law of And-Simplification:  P and true is P
and theorem 1810:
Theorem (1810) [serial 3433] used for:
  Law of And-Simplification:  P and true is P [serial 3432]
 


Theorem (1812)                               [serial 3430] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [349] ->
Q [350] << now = now
 and LAST_AP_OR_AS_A(now) >>
by Equality Law (idistr):  a=a <-> true
and theorem 1811:
Theorem (1811) [serial 3432] used for:
  Equality Law (idistr):  a=a <-> true [serial 3430]
 


Theorem (1813)                               [serial 3424] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now >>
S [349] last_ap_or_as := now
Q [350] << last_ap_or_as = now
 and LAST_AP_OR_AS_A(now) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1812:
Theorem (1812) [serial 3430] used for:
  applied wp for assignment [serial 3424]
 


Theorem (1814)                               [serial 3417] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and SA@now
 and not FB@now
 and not TNA@now
 and A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [349] last_ap_or_as := now
Q [350] << last_ap_or_as = now
 and LAST_AP_OR_AS_A(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1813:
Theorem (1813) [serial 3424] used for:
    normalization of [serial 3417]
 


Theorem (1815)                               [serial 3410] 
P [202] << (ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and URL@now <= (now - last_ap_or_as)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and SA@now
 and not FB@now
 and not TNA@now)
 and (A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [349] last_ap_or_as := now
Q [350] << last_ap_or_as = now
 and LAST_AP_OR_AS_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1814:
Theorem (1814) [serial 3417] used for:
  Associativity: (b.c).a = a.b.c [serial 3410]
 


Theorem (1816)                               [serial 3402] 
P [202] << ((A@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((SA)@now
 and not (TNA)@now
 and not (FB)@now
 and (((PVARP)@now <= ((now - last_vp_or_vs))))
 and (((ARP)@now <= ((now - last_ap_or_as))))
 and (((((DAV_A())@now + (SAVO)@now)) <= ((now - last_ap_or_as))))
 and (((DAV_A())@now <= ((now - last_ap_or_as))))
 and (((URL)@now <= ((now - last_ap_or_as)))))) >>
S [349] last_ap_or_as := now
Q [350] << (((last_ap_or_as = now))
 and LAST_AP_OR_AS_A(now)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1815:
Theorem (1815) [serial 3410] used for:
    normalization of [serial 3402]
 


Theorem (1817)                               [serial 1071] 
P [202] << ((A@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((SA)@now
 and not (TNA)@now
 and not (FB)@now
 and (((PVARP)@now <= ((now - last_vp_or_vs))))
 and (((ARP)@now <= ((now - last_ap_or_as))))
 and (((((DAV_A())@now + (SAVO)@now)) <= ((now - last_ap_or_as))))
 and (((DAV_A())@now <= ((now - last_ap_or_as))))
 and (((URL)@now <= ((now - last_ap_or_as)))))) >>
S [344] << (AS_A(now)
 and LRL_A(now)
 and LAST_VP_OR_VS_A(now)
 and AXIOM_AS()) >>
as!
<< (AS@now
 and LRL_A(now)
 and LAST_VP_OR_VS_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
&
last_ap_or_as := now
<< (((last_ap_or_as = now))
 and LAST_AP_OR_AS_A(now)) >>
Q [190] << (SAV(now)
 and LRL_A(now)
 and LAST(now)) >>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 1757 1787 1805 1816:
Theorem (1757) [serial 3399] used for:
  P -> P1 in concurrent composition for [serial 1071]
 
Theorem (1787) [serial 3400] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 1071]
 
Theorem (1805) [serial 3401] used for:
  <<P1>> S1 <<Q1>> in concurrent composition for [serial 1071]
 
Theorem (1816) [serial 3402] used for:
  <<P>> S2 <<Q2>> in concurrent composition for [serial 1071]
 


Theorem (1818)                               [serial 3636] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now >>
S [202] ->
Q [365] << A@now
 and SA@now
 and not FB@now
 and not TNA@now >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1819)                               [serial 3634] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now >>
S [202] ->
Q [365] << ((SA@now
 and A@now
 and not TNA@now
 and not FB@now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1818:
Theorem (1818) [serial 3636] used for:
    normalization of [serial 3634]
 


Theorem (1820)                               [serial 3630] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now >>
S [202] ->
Q [365] << AS_A(now) >>
by Substitution of Assertion Labels
and theorem 1819:
Theorem (1819) [serial 3634] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3630]
 


Theorem (1821)                               [serial 3631] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now >>
S [202] ->
Q [365] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1822)                               [serial 3632] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now >>
S [202] ->
Q [365] << LRL_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1823)                               [serial 3639] 
P [202] << ARP <= (now - last_ap_or_as)
 and PVARP <= (now - last_vp_or_vs)
 and DAV_A() <= (now - last_ap_or_as)
 and (SAVO + DAV_A()) <= (now - last_ap_or_as)
 and A
 and SA
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB
 and not TNA
 and (now - last_ap_or_as) < URL >>
S [202] ->
Q [365] << (now - last_ap_or_as) < URL >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1824)                               [serial 3638] 
P [202] << ARP <= (now - last_ap_or_as)
 and PVARP <= (now - last_vp_or_vs)
 and DAV_A() <= (now - last_ap_or_as)
 and (SAVO + DAV_A()) <= (now - last_ap_or_as)
 and A
 and SA
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB
 and not TNA
 and (now - last_ap_or_as) < URL >>
S [202] ->
Q [365] << (now - last_ap_or_as) < url >>
by Replacing port names with BLESS::Assertion properties
and theorem 1823:
Theorem (1823) [serial 3639] used for:
  Replacing port names with BLESS::Assertion properties [serial 3638]
 


Theorem (1825)                               [serial 3633] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now >>
S [202] ->
Q [365] << (now - last_ap_or_as) < url >>
by Assume Present:  P = P@now = P^0 
and theorem 1824:
Theorem (1824) [serial 3638] used for:
  Assume Present:  P = P@now = P^0  [serial 3633]
 


Theorem (1826)                               [serial 3573] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now >>
S [202] ->
Q [365] << AS_A(now)
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1820 1821 1822 1825:
Theorem (1820) [serial 3630] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3573]
 
Theorem (1821) [serial 3631] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3573]
 
Theorem (1822) [serial 3632] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3573]
 
Theorem (1825) [serial 3633] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3573]
 


Theorem (1827)                               [serial 3566] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and SA@now
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now
 and A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [202] ->
Q [365] << AS_A(now)
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1826:
Theorem (1826) [serial 3573] used for:
    normalization of [serial 3566]
 


Theorem (1828)                               [serial 3563] 
P [202] << (ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and SA@now
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now)
 and (A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [202] ->
Q [365] << AS_A(now)
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
by Associativity: (b.c).a = a.b.c
and theorem 1827:
Theorem (1827) [serial 3566] used for:
  Associativity: (b.c).a = a.b.c [serial 3563]
 


Theorem (1829)                               [serial 3550] 
P [202] << (ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and SA@now
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now)
 and (A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [202] ->
Q [365] << AS_A(now)
 and LAST(now)
 and LRL_A(now)
 and true
 and (now - last_ap_or_as) < url >>
by Law of And-Simplification:  P and true is P
and theorem 1828:
Theorem (1828) [serial 3563] used for:
  Law of And-Simplification:  P and true is P [serial 3550]
 


Theorem (1830)                               [serial 3538] 
P [202] << ((A@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((SA)@now
 and not (TNA)@now
 and not (FB)@now
 and (((PVARP)@now <= ((now - last_vp_or_vs))))
 and (((ARP)@now <= ((now - last_ap_or_as))))
 and (((((DAV_A())@now + (SAVO)@now)) <= ((now - last_ap_or_as))))
 and (((DAV_A())@now <= ((now - last_ap_or_as))))
 and ((((now - last_ap_or_as)) < (URL)@now)))) >>
S [202] ->
Q [365] << (AS_A(now)
 and LRL_A(now)
 and LAST(now)
 and ((((now - last_ap_or_as)) < url))
 and true) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1829:
Theorem (1829) [serial 3550] used for:
    normalization of [serial 3538]
 


Theorem (1831)                               [serial 3636] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now >>
S [202] ->
Q [365] << A@now
 and SA@now
 and not FB@now
 and not TNA@now >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1832)                               [serial 3634] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now >>
S [202] ->
Q [365] << ((SA@now
 and A@now
 and not TNA@now
 and not FB@now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1831:
Theorem (1831) [serial 3636] used for:
    normalization of [serial 3634]
 


Theorem (1833)                               [serial 3630] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now >>
S [202] ->
Q [365] << AS_A(now) >>
by Substitution of Assertion Labels
and theorem 1832:
Theorem (1832) [serial 3634] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3630]
 


Theorem (1834)                               [serial 3631] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now >>
S [202] ->
Q [365] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1835)                               [serial 3632] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now >>
S [202] ->
Q [365] << LRL_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1836)                               [serial 3639] 
P [202] << ARP <= (now - last_ap_or_as)
 and PVARP <= (now - last_vp_or_vs)
 and DAV_A() <= (now - last_ap_or_as)
 and (SAVO + DAV_A()) <= (now - last_ap_or_as)
 and A
 and SA
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB
 and not TNA
 and (now - last_ap_or_as) < URL >>
S [202] ->
Q [365] << (now - last_ap_or_as) < URL >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1837)                               [serial 3638] 
P [202] << ARP <= (now - last_ap_or_as)
 and PVARP <= (now - last_vp_or_vs)
 and DAV_A() <= (now - last_ap_or_as)
 and (SAVO + DAV_A()) <= (now - last_ap_or_as)
 and A
 and SA
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB
 and not TNA
 and (now - last_ap_or_as) < URL >>
S [202] ->
Q [365] << (now - last_ap_or_as) < url >>
by Replacing port names with BLESS::Assertion properties
and theorem 1836:
Theorem (1836) [serial 3639] used for:
  Replacing port names with BLESS::Assertion properties [serial 3638]
 


Theorem (1838)                               [serial 3633] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now >>
S [202] ->
Q [365] << (now - last_ap_or_as) < url >>
by Assume Present:  P = P@now = P^0 
and theorem 1837:
Theorem (1837) [serial 3638] used for:
  Assume Present:  P = P@now = P^0  [serial 3633]
 


Theorem (1839)                               [serial 3573] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and A@now
 and SA@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now >>
S [202] ->
Q [365] << AS_A(now)
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1833 1834 1835 1838:
Theorem (1833) [serial 3630] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3573]
 
Theorem (1834) [serial 3631] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3573]
 
Theorem (1835) [serial 3632] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3573]
 
Theorem (1838) [serial 3633] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3573]
 


Theorem (1840)                               [serial 3566] 
P [202] << ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and SA@now
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now
 and A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [202] ->
Q [365] << AS_A(now)
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1839:
Theorem (1839) [serial 3573] used for:
    normalization of [serial 3566]
 


Theorem (1841)                               [serial 3563] 
P [202] << (ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and SA@now
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now)
 and (A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [202] ->
Q [365] << AS_A(now)
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
by Associativity: (b.c).a = a.b.c
and theorem 1840:
Theorem (1840) [serial 3566] used for:
  Associativity: (b.c).a = a.b.c [serial 3563]
 


Theorem (1842)                               [serial 3550] 
P [202] << (ARP@now <= (now - last_ap_or_as)
 and PVARP@now <= (now - last_vp_or_vs)
 and DAV_A()@now <= (now - last_ap_or_as)
 and (SAVO@now + DAV_A()@now) <= (now - last_ap_or_as)
 and SA@now
 and not FB@now
 and not TNA@now
 and (now - last_ap_or_as) < URL@now)
 and (A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [202] ->
Q [365] << AS_A(now)
 and LAST(now)
 and LRL_A(now)
 and true
 and (now - last_ap_or_as) < url >>
by Law of And-Simplification:  P and true is P
and theorem 1841:
Theorem (1841) [serial 3563] used for:
  Law of And-Simplification:  P and true is P [serial 3550]
 


Theorem (1843)                               [serial 3538] 
P [202] << ((A@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((SA)@now
 and not (TNA)@now
 and not (FB)@now
 and (((PVARP)@now <= ((now - last_vp_or_vs))))
 and (((ARP)@now <= ((now - last_ap_or_as))))
 and (((((DAV_A())@now + (SAVO)@now)) <= ((now - last_ap_or_as))))
 and (((DAV_A())@now <= ((now - last_ap_or_as))))
 and ((((now - last_ap_or_as)) < (URL)@now)))) >>
S [202] ->
Q [365] << (AS_A(now)
 and LRL_A(now)
 and LAST(now)
 and ((((now - last_ap_or_as)) < url))
 and true) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1842:
Theorem (1842) [serial 3550] used for:
    normalization of [serial 3538]
 


Theorem (1844)                               [serial 3528] 
P [202] << ((A@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((SA)@now
 and not (TNA)@now
 and not (FB)@now
 and (((PVARP)@now <= ((now - last_vp_or_vs))))
 and (((ARP)@now <= ((now - last_ap_or_as))))
 and (((((DAV_A())@now + (SAVO)@now)) <= ((now - last_ap_or_as))))
 and (((DAV_A())@now <= ((now - last_ap_or_as))))
 and ((((now - last_ap_or_as)) < (URL)@now)))) >>
S [202] ->
Q [365] << (AS_A(now)
 and LRL_A(now)
 and LAST(now)
 and ((((now - last_ap_or_as)) < url))
 and AXIOM_AS()) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1843 1843:
Theorem (1843) [serial 3538] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1843) [serial 3538] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1845)                               [serial 3596] 
P [375] << AS@now
 and AT@now
 and last_ap_or_as = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (now - max_cci) < (now - min_cci) >>
S [190] ->
Q [190] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1846)                               [serial 3594] 
P [375] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and AS@now
 and AT@now
 and last_ap_or_as = now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (now - max_cci) < (now - min_cci) >>
S [190] ->
Q [190] << ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1845:
Theorem (1845) [serial 3596] used for:
    normalization of [serial 3594]
 


Theorem (1847)                               [serial 3591] 
P [375] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and AS@now
 and AT@now
 and last_ap_or_as = now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (now - max_cci) < (now - min_cci) >>
S [190] ->
Q [190] << LAST(now) >>
by Substitution of Assertion Labels
and theorem 1846:
Theorem (1846) [serial 3594] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3591]
 


Theorem (1848)                               [serial 3583] 
P [375] << AS@now
 and AT@now
 and last_ap_or_as = now
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (now - max_cci) < (now - min_cci) >>
S [190] ->
Q [190] << LAST(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1847:
Theorem (1847) [serial 3591] used for:
  Associativity: (b.c).a = a.b.c [serial 3583]
 


Theorem (1849)                               [serial 3579] 
P [375] << AS@now
 and AT@now
 and last_ap_or_as = now
 and ((((now - max_cci)) < ((now - min_cci))))
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) ) >>
S [190] ->
Q [190] << LAST(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1848:
Theorem (1848) [serial 3583] used for:
    normalization of [serial 3579]
 


Theorem (1850)                               [serial 3600] 
P [375] << AS@now
 and AT@now
 and last_ap_or_as = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (now - max_cci) < (now - min_cci) >>
S [190] ->
Q [190] << exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t  >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1851)                               [serial 3598] 
P [375] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and AS@now
 and AT@now
 and last_ap_or_as = now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (now - max_cci) < (now - min_cci) >>
S [190] ->
Q [190] << (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1850:
Theorem (1850) [serial 3600] used for:
    normalization of [serial 3598]
 


Theorem (1852)                               [serial 3592] 
P [375] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and AS@now
 and AT@now
 and last_ap_or_as = now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (now - max_cci) < (now - min_cci) >>
S [190] ->
Q [190] << LRL_A(now) >>
by Substitution of Assertion Labels
and theorem 1851:
Theorem (1851) [serial 3598] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3592]
 


Theorem (1853)                               [serial 3585] 
P [375] << AS@now
 and AT@now
 and last_ap_or_as = now
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (now - max_cci) < (now - min_cci) >>
S [190] ->
Q [190] << LRL_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1852:
Theorem (1852) [serial 3592] used for:
  Associativity: (b.c).a = a.b.c [serial 3585]
 


Theorem (1854)                               [serial 3580] 
P [375] << AS@now
 and AT@now
 and last_ap_or_as = now
 and ((((now - max_cci)) < ((now - min_cci))))
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) ) >>
S [190] ->
Q [190] << LRL_A(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1853:
Theorem (1853) [serial 3585] used for:
    normalization of [serial 3580]
 


Theorem (1855)                               [serial 3610] 
P [375] << AS@now
 and AT@now
 and last_ap_or_as = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (now - max_cci) < (now - min_cci) >>
S [190] ->
Q [190] << AS@now or 
(exists tu~time
  in now - MAX_CCI .. now 
  that VP@tu or 
       VS@tu ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1856)                               [serial 3608] 
P [375] << AS@now
 and AT@now
 and last_ap_or_as = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (now - max_cci) < (now - min_cci) >>
S [190] ->
Q [190] << (AS@now) or 
(exists tu~time
  in now - MAX_CCI .. now 
  that VP@tu or 
       VS@tu ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1855:
Theorem (1855) [serial 3610] used for:
    normalization of [serial 3608]
 


Theorem (1857)                               [serial 3607] 
P [375] << AS@now
 and AT@now
 and last_ap_or_as = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (now - max_cci) < (now - min_cci) >>
S [190] ->
Q [190] << (exists t~time
  in now - (SAVO + DAV_A()) .. now 
  that AS@t ) or 
(exists tu~time
  in now - MAX_CCI .. now 
  that VP@tu or 
       VS@tu ) >>
by Introduction of Existential Quantification
and theorem 1856:
Theorem (1856) [serial 3608] used for:
  replace exists with upper or lower bound [serial 3607]
 


Theorem (1858)                               [serial 3605] 
P [375] << AS@now
 and AT@now
 and last_ap_or_as = now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (now - max_cci) < (now - min_cci) >>
S [190] ->
Q [190] << (exists t~time
  in now - (SAVO + DAV_A()) .. now 
  that AS@t ) or 
(exists t~time
  in now - (SAVO + DAV_A()) .. now 
  that exists tu~time
         in now - MAX_CCI .. now 
         that VP@tu or 
              VS@tu  ) >>
by Existential Quantification Introduction
and theorem 1857:
Theorem (1857) [serial 3607] used for:
  Existential Quantification Introduction [serial 3605]
 


Theorem (1859)                               [serial 3603] 
P [375] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and AS@now
 and AT@now
 and last_ap_or_as = now
 and ((exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ))
 and (now - max_cci) < (now - min_cci) >>
S [190] ->
Q [190] << ((exists t~time
  in ((now - ((DAV_A() + SAVO)))) .. now 
  that AS@t ) or 
(exists t~time
  in ((now - ((DAV_A() + SAVO)))) .. now 
  that (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) ) )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Addition: a+b=b+a
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1858:
Theorem (1858) [serial 3605] used for:
    normalization of [serial 3603]
 


Theorem (1860)                               [serial 3602] 
P [375] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and AS@now
 and AT@now
 and last_ap_or_as = now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (now - max_cci) < (now - min_cci) >>
S [190] ->
Q [190] << (exists t~time
  in ((now - ((DAV_A() + SAVO)))) .. now 
  that (AS@t or 
       (exists tu~time
         in ((now - MAX_CCI)) .. now 
         that ((VS@tu or 
              VP@tu)) )) ) >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1859:
Theorem (1859) [serial 3603] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 3602]
 


Theorem (1861)                               [serial 3593] 
P [375] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and AS@now
 and AT@now
 and last_ap_or_as = now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (now - max_cci) < (now - min_cci) >>
S [190] ->
Q [190] << SAV(now) >>
by Substitution of Assertion Labels
and theorem 1860:
Theorem (1860) [serial 3602] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3593]
 


Theorem (1862)                               [serial 3587] 
P [375] << AS@now
 and AT@now
 and last_ap_or_as = now
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (now - max_cci) < (now - min_cci) >>
S [190] ->
Q [190] << SAV(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1861:
Theorem (1861) [serial 3593] used for:
  Associativity: (b.c).a = a.b.c [serial 3587]
 


Theorem (1863)                               [serial 3581] 
P [375] << AS@now
 and AT@now
 and last_ap_or_as = now
 and ((((now - max_cci)) < ((now - min_cci))))
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) ) >>
S [190] ->
Q [190] << SAV(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1862:
Theorem (1862) [serial 3587] used for:
    normalization of [serial 3581]
 


Theorem (1864)                               [serial 3578] 
P [375] << AS@now
 and AT@now
 and last_ap_or_as = now
 and ((((now - max_cci)) < ((now - min_cci))))
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) ) >>
S [190] ->
Q [190] << LAST(now)
 and LRL_A(now)
 and SAV(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1849 1854 1863:
Theorem (1849) [serial 3579] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3578]
 
Theorem (1854) [serial 3580] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3578]
 
Theorem (1863) [serial 3581] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3578]
 


Theorem (1865)                               [serial 3542] 
P [375] << AS@now
 and AT@now
 and last_ap_or_as = now
 and AXIOM_LRLi_gt_URLi_LIMIT(now)
 and LAST(now)
 and LRL_A(now) >>
S [190] ->
Q [190] << LAST(now)
 and LRL_A(now)
 and SAV(now) >>
by Substitution of Assertion Labels
and theorem 1864:
Theorem (1864) [serial 3578] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3542]
 


Theorem (1866)                               [serial 3529] 
P [375] << (((last_ap_or_as = now))
 and LAST(now)
 and AT@now
 and AS@now
 and LRL_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
S [190] ->
Q [190] << (SAV(now)
 and LRL_A(now)
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1865:
Theorem (1865) [serial 3542] used for:
    normalization of [serial 3529]
 


Theorem (1867)                               [serial 3619] 
P [365] << (A@now
 and SA@now
 and not FB@now
 and not TNA@now)
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
AS_A(now)))
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [34] << 0 = now or 
(A@now
 and SA@now
 and not FB@now
 and not TNA@now) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1868)                               [serial 3617] 
P [365] << (A@now
 and SA@now
 and not FB@now
 and not TNA@now)
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
AS_A(now)))
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [34] << ((0 = now or 
((SA@now
 and A@now
 and not TNA@now
 and not FB@now)))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1867:
Theorem (1867) [serial 3619] used for:
    normalization of [serial 3617]
 


Theorem (1869)                               [serial 3616] 
P [365] << (A@now
 and SA@now
 and not FB@now
 and not TNA@now)
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
AS_A(now)))
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [34] << ((0 = now or 
AS_A(now))) >>
by Substitution of Assertion Labels
and theorem 1868:
Theorem (1868) [serial 3617] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3616]
 


Theorem (1870)                               [serial 3614] 
P [365] << (A@now
 and SA@now
 and not FB@now
 and not TNA@now)
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
AS_A(now)))
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [34] << AS >>
by Guided Substitution of Equals
and theorem 1869:
Theorem (1869) [serial 3616] used for:
  Guided Substitution of Equals
 replacing "AS" with its iff "((0 = now or 
AS_A(now)))" in its postcondition [serial 3614]
 


Theorem (1871)                               [serial 3612] 
P [365] << ((SA@now
 and A@now
 and not TNA@now
 and not FB@now))
 and ((AS iff ((AS_A(now) or 
(now = 0)))))
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [34] << AS >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1870:
Theorem (1870) [serial 3614] used for:
    normalization of [serial 3612]
 


Theorem (1872)                               [serial 3544] 
P [365] << AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [34] << AS >>
by Substitution of Assertion Labels
and theorem 1871:
Theorem (1871) [serial 3612] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3544]
 


Theorem (1873)                               [serial 3533] 
P [365] << (AS_A(now)
 and LRL_A(now)
 and LAST(now)
 and ((((now - last_ap_or_as)) < url))
 and AXIOM_AS()) >>
S [367] ->
Q [34] << AS >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1872:
Theorem (1872) [serial 3544] used for:
    normalization of [serial 3533]
 


Theorem (1874)                               [serial 3640] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [368] << AS@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1875)                               [serial 3648] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [110] << AS@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1876)                               [serial 3663] 
P [367] << A@now
 and AS@now
 and SA@now
 and not FB@now
 and not TNA@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP@t or 
       AS@t) )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP@t or 
       VS@t) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
(A@now
 and SA@now
 and not FB@now
 and not TNA@now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (now - last_ap_or_as) < URL >>
S [367] ->
Q [110] << (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1877)                               [serial 3661] 
P [367] << A@now
 and AS@now
 and SA@now
 and not FB@now
 and not TNA@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
(A@now
 and SA@now
 and not FB@now
 and not TNA@now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (now - last_ap_or_as) < URL >>
S [367] ->
Q [110] << (AP or 
AS)@last_ap_or_as >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1876:
Theorem (1876) [serial 3663] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 3661]
 


Theorem (1878)                               [serial 3659] 
P [367] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and A@now
 and SA@now
 and not FB@now
 and not TNA@now
 and AS@now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
(A@now
 and SA@now
 and not FB@now
 and not TNA@now)))
 and (now - last_ap_or_as) < URL >>
S [367] ->
Q [110] << (AP or 
AS)@last_ap_or_as >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1877:
Theorem (1877) [serial 3661] used for:
    normalization of [serial 3659]
 


Theorem (1879)                               [serial 3658] 
P [367] << A@now
 and SA@now
 and not FB@now
 and not TNA@now
 and (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and AS@now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
(A@now
 and SA@now
 and not FB@now
 and not TNA@now)))
 and (now - last_ap_or_as) < URL >>
S [367] ->
Q [110] << (AP or 
AS)@last_ap_or_as >>
by Associativity: (b.c).a = a.b.c
and theorem 1878:
Theorem (1878) [serial 3659] used for:
  Associativity: (b.c).a = a.b.c [serial 3658]
 


Theorem (1880)                               [serial 3656] 
P [367] << AS@now
 and (A@now
 and SA@now
 and not FB@now
 and not TNA@now)
 and ((not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
(A@now
 and SA@now
 and not FB@now
 and not TNA@now)))
 and (now - last_ap_or_as) < URL >>
S [367] ->
Q [110] << (AP or 
AS)@last_ap_or_as >>
by Associativity: (b.c).a = a.b.c
and theorem 1879:
Theorem (1879) [serial 3658] used for:
  Associativity: (b.c).a = a.b.c [serial 3656]
 


Theorem (1881)                               [serial 3654] 
P [367] << AS@now
 and ((SA@now
 and A@now
 and not TNA@now
 and not FB@now))
 and ((AS iff ((((SA@now
 and A@now
 and not TNA@now
 and not FB@now)) or 
(now = 0)))))
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (now - last_ap_or_as) < URL >>
S [367] ->
Q [110] << (AP or 
AS)@last_ap_or_as >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1880:
Theorem (1880) [serial 3656] used for:
    normalization of [serial 3654]
 


Theorem (1882)                               [serial 3653] 
P [367] << AS@now
 and ((SA@now
 and A@now
 and not TNA@now
 and not FB@now))
 and ((AS iff ((AS_A(now) or 
(now = 0)))))
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (now - last_ap_or_as) < URL >>
S [367] ->
Q [110] << (AP or 
AS)@last_ap_or_as >>
by Substitution of Assertion Labels
and theorem 1881:
Theorem (1881) [serial 3654] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3653]
 


Theorem (1883)                               [serial 3651] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < URL >>
S [367] ->
Q [110] << (AP or 
AS)@last_ap_or_as >>
by Substitution of Assertion Labels
and theorem 1882:
Theorem (1882) [serial 3653] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3651]
 


Theorem (1884)                               [serial 3649] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [110] << (AP or 
AS)@last_ap_or_as >>
by Replacing port names with BLESS::Assertion properties
and theorem 1883:
Theorem (1883) [serial 3651] used for:
  Replacing port names with BLESS::Assertion properties [serial 3649]
 


Theorem (1885)                               [serial 3652] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < URL >>
S [367] ->
Q [110] << (now - last_ap_or_as) < URL >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1886)                               [serial 3650] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [110] << (now - last_ap_or_as) < URL >>
by Replacing port names with BLESS::Assertion properties
and theorem 1885:
Theorem (1885) [serial 3652] used for:
  Replacing port names with BLESS::Assertion properties [serial 3650]
 


Theorem (1887)                               [serial 3646] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [369] << AS@now
 and (AP or 
AS)@last_ap_or_as
 and (now - last_ap_or_as) < URL >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1875 1884 1886:
Theorem (1875) [serial 3648] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3646]
 
Theorem (1884) [serial 3649] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3646]
 
Theorem (1886) [serial 3650] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3646]
 


Theorem (1888)                               [serial 3644] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [369] << ((AS@now
 and ((AS or 
AP))@last_ap_or_as
 and ((((now - last_ap_or_as)) < URL)))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1887:
Theorem (1887) [serial 3646] used for:
    normalization of [serial 3644]
 


Theorem (1889)                               [serial 3641] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [369] << AT_A(now) >>
by Substitution of Assertion Labels
and theorem 1888:
Theorem (1888) [serial 3644] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3641]
 


Theorem (1890)                               [serial 3642] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [368] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1891)                               [serial 3643] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [368] << LRL_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1892)                               [serial 3575] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [368] << AS@now
 and AT_A(now)
 and LAST(now)
 and LRL_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1874 1889 1890 1891:
Theorem (1874) [serial 3640] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3575]
 
Theorem (1889) [serial 3641] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3575]
 
Theorem (1890) [serial 3642] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3575]
 
Theorem (1891) [serial 3643] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3575]
 


Theorem (1893)                               [serial 3567] 
P [367] << AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url
 and AS@now >>
S [367] ->
Q [368] << AS@now
 and AT_A(now)
 and LAST(now)
 and LRL_A(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1892:
Theorem (1892) [serial 3575] used for:
    normalization of [serial 3567]
 


Theorem (1894)                               [serial 3564] 
P [367] << AS@now
 and (AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url) >>
S [367] ->
Q [368] << AS@now
 and AT_A(now)
 and LAST(now)
 and LRL_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1893:
Theorem (1893) [serial 3567] used for:
  Associativity: (b.c).a = a.b.c [serial 3564]
 


Theorem (1895)                               [serial 3552] 
P [367] << AS@now
 and (AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url) >>
S [367] ->
Q [368] << AS@now
 and AT_A(now)
 and LAST(now)
 and LRL_A(now)
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1894:
Theorem (1894) [serial 3564] used for:
  Law of And-Simplification:  P and true is P [serial 3552]
 


Theorem (1896)                               [serial 3539] 
P [367] << ((AS_A(now)
 and LRL_A(now)
 and LAST(now)
 and ((((now - last_ap_or_as)) < url))
 and AXIOM_AS()))
 and AS@now >>
S [367] ->
Q [368] << (AS@now
 and LRL_A(now)
 and LAST(now)
 and true
 and AT_A(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1895:
Theorem (1895) [serial 3552] used for:
    normalization of [serial 3539]
 


Theorem (1897)                               [serial 3640] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [368] << AS@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1898)                               [serial 3648] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [110] << AS@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1899)                               [serial 3663] 
P [367] << A@now
 and AS@now
 and SA@now
 and not FB@now
 and not TNA@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP@t or 
       AS@t) )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP@t or 
       VS@t) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
(A@now
 and SA@now
 and not FB@now
 and not TNA@now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (now - last_ap_or_as) < URL >>
S [367] ->
Q [110] << (AP@last_ap_or_as or 
AS@last_ap_or_as) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1900)                               [serial 3661] 
P [367] << A@now
 and AS@now
 and SA@now
 and not FB@now
 and not TNA@now
 and not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
(A@now
 and SA@now
 and not FB@now
 and not TNA@now)))
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and (now - last_ap_or_as) < URL >>
S [367] ->
Q [110] << (AP or 
AS)@last_ap_or_as >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 1899:
Theorem (1899) [serial 3663] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 3661]
 


Theorem (1901)                               [serial 3659] 
P [367] << not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as)
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)
 and A@now
 and SA@now
 and not FB@now
 and not TNA@now
 and AS@now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
(A@now
 and SA@now
 and not FB@now
 and not TNA@now)))
 and (now - last_ap_or_as) < URL >>
S [367] ->
Q [110] << (AP or 
AS)@last_ap_or_as >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1900:
Theorem (1900) [serial 3661] used for:
    normalization of [serial 3659]
 


Theorem (1902)                               [serial 3658] 
P [367] << A@now
 and SA@now
 and not FB@now
 and not TNA@now
 and (not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and AS@now
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
(A@now
 and SA@now
 and not FB@now
 and not TNA@now)))
 and (now - last_ap_or_as) < URL >>
S [367] ->
Q [110] << (AP or 
AS)@last_ap_or_as >>
by Associativity: (b.c).a = a.b.c
and theorem 1901:
Theorem (1901) [serial 3659] used for:
  Associativity: (b.c).a = a.b.c [serial 3658]
 


Theorem (1903)                               [serial 3656] 
P [367] << AS@now
 and (A@now
 and SA@now
 and not FB@now
 and not TNA@now)
 and ((not (exists t~time
  in last_ap_or_as ,, now 
  that (AP or 
       AS)@t )
 and (AP@last_ap_or_as or 
AS@last_ap_or_as))
 and (not (exists t~time
  in last_vp_or_vs ,, now 
  that (VP or 
       VS)@t )
 and (VP@last_vp_or_vs or 
VS@last_vp_or_vs)))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AS iff (0 = now or 
(A@now
 and SA@now
 and not FB@now
 and not TNA@now)))
 and (now - last_ap_or_as) < URL >>
S [367] ->
Q [110] << (AP or 
AS)@last_ap_or_as >>
by Associativity: (b.c).a = a.b.c
and theorem 1902:
Theorem (1902) [serial 3658] used for:
  Associativity: (b.c).a = a.b.c [serial 3656]
 


Theorem (1904)                               [serial 3654] 
P [367] << AS@now
 and ((SA@now
 and A@now
 and not TNA@now
 and not FB@now))
 and ((AS iff ((((SA@now
 and A@now
 and not TNA@now
 and not FB@now)) or 
(now = 0)))))
 and ((((((VP@last_vp_or_vs or 
VS@last_vp_or_vs))
 and not (exists t~time
  in last_vp_or_vs ,, now 
  that ((VS or 
       VP))@t )))
 and ((((AP@last_ap_or_as or 
AS@last_ap_or_as))
 and not (exists t~time
  in last_ap_or_as ,, now 
  that ((AS or 
       AP))@t )))))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (now - last_ap_or_as) < URL >>
S [367] ->
Q [110] << (AP or 
AS)@last_ap_or_as >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1903:
Theorem (1903) [serial 3656] used for:
    normalization of [serial 3654]
 


Theorem (1905)                               [serial 3653] 
P [367] << AS@now
 and ((SA@now
 and A@now
 and not TNA@now
 and not FB@now))
 and ((AS iff ((AS_A(now) or 
(now = 0)))))
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and (now - last_ap_or_as) < URL >>
S [367] ->
Q [110] << (AP or 
AS)@last_ap_or_as >>
by Substitution of Assertion Labels
and theorem 1904:
Theorem (1904) [serial 3654] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3653]
 


Theorem (1906)                               [serial 3651] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < URL >>
S [367] ->
Q [110] << (AP or 
AS)@last_ap_or_as >>
by Substitution of Assertion Labels
and theorem 1905:
Theorem (1905) [serial 3653] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3651]
 


Theorem (1907)                               [serial 3649] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [110] << (AP or 
AS)@last_ap_or_as >>
by Replacing port names with BLESS::Assertion properties
and theorem 1906:
Theorem (1906) [serial 3651] used for:
  Replacing port names with BLESS::Assertion properties [serial 3649]
 


Theorem (1908)                               [serial 3652] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < URL >>
S [367] ->
Q [110] << (now - last_ap_or_as) < URL >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1909)                               [serial 3650] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [110] << (now - last_ap_or_as) < URL >>
by Replacing port names with BLESS::Assertion properties
and theorem 1908:
Theorem (1908) [serial 3652] used for:
  Replacing port names with BLESS::Assertion properties [serial 3650]
 


Theorem (1910)                               [serial 3646] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [369] << AS@now
 and (AP or 
AS)@last_ap_or_as
 and (now - last_ap_or_as) < URL >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1898 1907 1909:
Theorem (1898) [serial 3648] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3646]
 
Theorem (1907) [serial 3649] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3646]
 
Theorem (1909) [serial 3650] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3646]
 


Theorem (1911)                               [serial 3644] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [369] << ((AS@now
 and ((AS or 
AP))@last_ap_or_as
 and ((((now - last_ap_or_as)) < URL)))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1910:
Theorem (1910) [serial 3646] used for:
    normalization of [serial 3644]
 


Theorem (1912)                               [serial 3641] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [369] << AT_A(now) >>
by Substitution of Assertion Labels
and theorem 1911:
Theorem (1911) [serial 3644] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3641]
 


Theorem (1913)                               [serial 3642] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [368] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1914)                               [serial 3643] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [368] << LRL_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1915)                               [serial 3575] 
P [367] << AS@now
 and AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url >>
S [367] ->
Q [368] << AS@now
 and AT_A(now)
 and LAST(now)
 and LRL_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1897 1912 1913 1914:
Theorem (1897) [serial 3640] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3575]
 
Theorem (1912) [serial 3641] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3575]
 
Theorem (1913) [serial 3642] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3575]
 
Theorem (1914) [serial 3643] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3575]
 


Theorem (1916)                               [serial 3567] 
P [367] << AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url
 and AS@now >>
S [367] ->
Q [368] << AS@now
 and AT_A(now)
 and LAST(now)
 and LRL_A(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1915:
Theorem (1915) [serial 3575] used for:
    normalization of [serial 3567]
 


Theorem (1917)                               [serial 3564] 
P [367] << AS@now
 and (AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url) >>
S [367] ->
Q [368] << AS@now
 and AT_A(now)
 and LAST(now)
 and LRL_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1916:
Theorem (1916) [serial 3567] used for:
  Associativity: (b.c).a = a.b.c [serial 3564]
 


Theorem (1918)                               [serial 3552] 
P [367] << AS@now
 and (AS_A(now)
 and AXIOM_AS()
 and LAST(now)
 and LRL_A(now)
 and (now - last_ap_or_as) < url) >>
S [367] ->
Q [368] << AS@now
 and AT_A(now)
 and LAST(now)
 and LRL_A(now)
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1917:
Theorem (1917) [serial 3564] used for:
  Law of And-Simplification:  P and true is P [serial 3552]
 


Theorem (1919)                               [serial 3539] 
P [367] << ((AS_A(now)
 and LRL_A(now)
 and LAST(now)
 and ((((now - last_ap_or_as)) < url))
 and AXIOM_AS()))
 and AS@now >>
S [367] ->
Q [368] << (AS@now
 and LRL_A(now)
 and LAST(now)
 and true
 and AT_A(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1918:
Theorem (1918) [serial 3552] used for:
    normalization of [serial 3539]
 


Theorem (1920)                               [serial 3534] 
P [367] << ((AS_A(now)
 and LRL_A(now)
 and LAST(now)
 and ((((now - last_ap_or_as)) < url))
 and AXIOM_AS()))
 and AS@now >>
S [367] ->
Q [368] << (AS@now
 and LRL_A(now)
 and LAST(now)
 and AXIOM_AT()
 and AT_A(now)) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1919 1919:
Theorem (1919) [serial 3539] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1919) [serial 3539] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1921)                               [serial 3530] 
P [365] << (AS_A(now)
 and LRL_A(now)
 and LAST(now)
 and ((((now - last_ap_or_as)) < url))
 and AXIOM_AS()) >>
S [367] as!
Q [368] << (AS@now
 and LRL_A(now)
 and LAST(now)
 and AXIOM_AT()
 and AT_A(now)) >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 1873 1920:
Theorem (1873) [serial 3533] used for:
  applied port output <<pre>> -> <<M[as]>> [serial 3530]
 
Theorem (1920) [serial 3534] used for:
  applied port output <<pre and M[as]@now>> -> <<post>> [serial 3530]
 


Theorem (1922)                               [serial 3628] 
P [368] << AS@now
 and (AS@now
 and (AP or 
AS)@last_ap_or_as
 and (now - last_ap_or_as) < URL)
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AT iff AT_A(now)) >>
S [371] ->
Q [36] << AS@now
 and (AP or 
AS)@last_ap_or_as
 and (now - last_ap_or_as) < URL >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1923)                               [serial 3626] 
P [368] << AS@now
 and (AS@now
 and (AP or 
AS)@last_ap_or_as
 and (now - last_ap_or_as) < URL)
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AT iff AT_A(now)) >>
S [371] ->
Q [36] << ((AS@now
 and ((AS or 
AP))@last_ap_or_as
 and ((((now - last_ap_or_as)) < URL)))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1922:
Theorem (1922) [serial 3628] used for:
    normalization of [serial 3626]
 


Theorem (1924)                               [serial 3625] 
P [368] << AS@now
 and (AS@now
 and (AP or 
AS)@last_ap_or_as
 and (now - last_ap_or_as) < URL)
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AT iff AT_A(now)) >>
S [371] ->
Q [36] << AT_A(now) >>
by Substitution of Assertion Labels
and theorem 1923:
Theorem (1923) [serial 3626] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3625]
 


Theorem (1925)                               [serial 3623] 
P [368] << AS@now
 and (AS@now
 and (AP or 
AS)@last_ap_or_as
 and (now - last_ap_or_as) < URL)
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (AT iff AT_A(now)) >>
S [371] ->
Q [36] << AT >>
by Guided Substitution of Equals
and theorem 1924:
Theorem (1924) [serial 3625] used for:
  Guided Substitution of Equals
 replacing "AT" with its iff "AT_A(now)" in its postcondition [serial 3623]
 


Theorem (1926)                               [serial 3621] 
P [368] << AS@now
 and ((AS@now
 and ((AS or 
AP))@last_ap_or_as
 and ((((now - last_ap_or_as)) < URL))))
 and ((AT iff AT_A(now)))
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) ) >>
S [371] ->
Q [36] << AT >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1925:
Theorem (1925) [serial 3623] used for:
    normalization of [serial 3621]
 


Theorem (1927)                               [serial 3546] 
P [368] << AS@now
 and AT_A(now)
 and AXIOM_AT()
 and LAST(now)
 and LRL_A(now) >>
S [371] ->
Q [36] << AT >>
by Substitution of Assertion Labels
and theorem 1926:
Theorem (1926) [serial 3621] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3546]
 


Theorem (1928)                               [serial 3535] 
P [368] << (AS@now
 and LRL_A(now)
 and LAST(now)
 and AXIOM_AT()
 and AT_A(now)) >>
S [371] ->
Q [36] << AT >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1927:
Theorem (1927) [serial 3546] used for:
    normalization of [serial 3535]
 


Theorem (1929)                               [serial 3562] 
P [371] << AS@now
 and AT_A(now)
 and AXIOM_AT()
 and LAST(now)
 and LRL_A(now)
 and AT@now >>
S [371] ->
Q [372] << AS@now
 and AT@now
 and LAST(now)
 and LRL_A(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1930)                               [serial 3548] 
P [371] << AT@now
 and (AS@now
 and AT_A(now)
 and AXIOM_AT()
 and LAST(now)
 and LRL_A(now)) >>
S [371] ->
Q [372] << AS@now
 and AT@now
 and LAST(now)
 and LRL_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1929:
Theorem (1929) [serial 3562] used for:
  Associativity: (b.c).a = a.b.c [serial 3548]
 


Theorem (1931)                               [serial 3536] 
P [371] << ((AS@now
 and LRL_A(now)
 and LAST(now)
 and AXIOM_AT()
 and AT_A(now)))
 and AT@now >>
S [371] ->
Q [372] << (AT@now
 and AS@now
 and LRL_A(now)
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1930:
Theorem (1930) [serial 3548] used for:
    normalization of [serial 3536]
 


Theorem (1932)                               [serial 3531] 
P [368] << (AS@now
 and LRL_A(now)
 and LAST(now)
 and AXIOM_AT()
 and AT_A(now)) >>
S [371] at!
Q [372] << (AT@now
 and AS@now
 and LRL_A(now)
 and LAST(now)) >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 1928 1931:
Theorem (1928) [serial 3535] used for:
  applied port output <<pre>> -> <<M[at]>> [serial 3531]
 
Theorem (1931) [serial 3536] used for:
  applied port output <<pre and M[at]@now>> -> <<post>> [serial 3531]
 


Theorem (1933)                               [serial 3568] 
P [372] << AS@now
 and AT@now
 and LAST(now)
 and LRL_A(now) >>
S [374] ->
Q [375] << AS@now
 and AT@now
 and LAST(now)
 and LRL_A(now) >>
by Identity (id):  P->P is tautology


Theorem (1934)                               [serial 3565] 
P [372] << AS@now
 and AT@now
 and LAST(now)
 and LRL_A(now) >>
S [374] ->
Q [375] << AS@now
 and AT@now
 and true
 and LAST(now)
 and LRL_A(now)
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1933:
Theorem (1933) [serial 3568] used for:
  Law of And-Simplification:  P and true is P [serial 3565]
 


Theorem (1935)                               [serial 3554] 
P [372] << AS@now
 and AT@now
 and LAST(now)
 and LRL_A(now) >>
S [374] ->
Q [375] << AS@now
 and AT@now
 and now = now
 and LAST(now)
 and LRL_A(now)
 and true >>
by Equality Law (idistr):  a=a <-> true
and theorem 1934:
Theorem (1934) [serial 3565] used for:
  Equality Law (idistr):  a=a <-> true [serial 3554]
 


Theorem (1936)                               [serial 3540] 
P [372] << (AT@now
 and AS@now
 and LRL_A(now)
 and LAST(now)) >>
S [374] ->
Q [375] << (((now = now))
 and LAST(now)
 and AT@now
 and AS@now
 and LRL_A(now)
 and true) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1935:
Theorem (1935) [serial 3554] used for:
    normalization of [serial 3540]
 


Theorem (1937)                               [serial 3568] 
P [372] << AS@now
 and AT@now
 and LAST(now)
 and LRL_A(now) >>
S [374] ->
Q [375] << AS@now
 and AT@now
 and LAST(now)
 and LRL_A(now) >>
by Identity (id):  P->P is tautology


Theorem (1938)                               [serial 3565] 
P [372] << AS@now
 and AT@now
 and LAST(now)
 and LRL_A(now) >>
S [374] ->
Q [375] << AS@now
 and AT@now
 and true
 and LAST(now)
 and LRL_A(now)
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 1937:
Theorem (1937) [serial 3568] used for:
  Law of And-Simplification:  P and true is P [serial 3565]
 


Theorem (1939)                               [serial 3554] 
P [372] << AS@now
 and AT@now
 and LAST(now)
 and LRL_A(now) >>
S [374] ->
Q [375] << AS@now
 and AT@now
 and now = now
 and LAST(now)
 and LRL_A(now)
 and true >>
by Equality Law (idistr):  a=a <-> true
and theorem 1938:
Theorem (1938) [serial 3565] used for:
  Equality Law (idistr):  a=a <-> true [serial 3554]
 


Theorem (1940)                               [serial 3540] 
P [372] << (AT@now
 and AS@now
 and LRL_A(now)
 and LAST(now)) >>
S [374] ->
Q [375] << (((now = now))
 and LAST(now)
 and AT@now
 and AS@now
 and LRL_A(now)
 and true) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1939:
Theorem (1939) [serial 3554] used for:
    normalization of [serial 3540]
 


Theorem (1941)                               [serial 3537] 
P [372] << (AT@now
 and AS@now
 and LRL_A(now)
 and LAST(now)) >>
S [374] ->
Q [375] << (((now = now))
 and LAST(now)
 and AT@now
 and AS@now
 and LRL_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1940 1940:
Theorem (1940) [serial 3540] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1940) [serial 3540] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1942)                               [serial 3532] 
P [372] << (AT@now
 and AS@now
 and LRL_A(now)
 and LAST(now)) >>
S [374] last_ap_or_as := now
Q [375] << (((last_ap_or_as = now))
 and LAST(now)
 and AT@now
 and AS@now
 and LRL_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 1941:
Theorem (1941) [serial 3537] used for:
  applied wp for assignment [serial 3532]
 


Theorem (1943)                               [serial 1072] 
P [202] << ((A@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((SA)@now
 and not (TNA)@now
 and not (FB)@now
 and (((PVARP)@now <= ((now - last_vp_or_vs))))
 and (((ARP)@now <= ((now - last_ap_or_as))))
 and (((((DAV_A())@now + (SAVO)@now)) <= ((now - last_ap_or_as))))
 and (((DAV_A())@now <= ((now - last_ap_or_as))))
 and ((((now - last_ap_or_as)) < (URL)@now)))) >>
S [365] << (AS_A(now)
 and LRL_A(now)
 and LAST(now)
 and ((((now - last_ap_or_as)) < url))
 and AXIOM_AS()) >>
as!
<< (AS@now
 and LRL_A(now)
 and LAST(now)
 and AXIOM_AT()
 and AT_A(now)) >>
;
at!
<< (AT@now
 and AS@now
 and LRL_A(now)
 and LAST(now)) >>
;
last_ap_or_as := now
<< (((last_ap_or_as = now))
 and LAST(now)
 and AT@now
 and AS@now
 and LRL_A(now)
 and AXIOM_LRLi_gt_URLi_LIMIT(now)) >>
Q [190] << (SAV(now)
 and LRL_A(now)
 and LAST(now)) >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1844 1866 1921 1932 1942:
Theorem (1844) [serial 3528] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 1072]
 
Theorem (1866) [serial 3529] used for:
  <<Q2>> -> <<Q>> in sequential composition for [serial 1072]
 
Theorem (1921) [serial 3530] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1072]
 
Theorem (1932) [serial 3531] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1072]
 
Theorem (1942) [serial 3532] used for:
  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 1072]
 


Theorem (1944)                               [serial 3670] 
P [202] << A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and (FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now) >>
S [380] ->
Q [200] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1945)                               [serial 3667] 
P [202] << (A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now))
 and (FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now) >>
S [380] ->
Q [200] << LAST(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1944:
Theorem (1944) [serial 3670] used for:
  Associativity: (b.c).a = a.b.c [serial 3667]
 


Theorem (1946)                               [serial 3671] 
P [202] << A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and (FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now) >>
S [380] ->
Q [200] << LRL_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1947)                               [serial 3668] 
P [202] << (A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now))
 and (FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now) >>
S [380] ->
Q [200] << LRL_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1946:
Theorem (1946) [serial 3671] used for:
  Associativity: (b.c).a = a.b.c [serial 3668]
 


Theorem (1948)                               [serial 3672] 
P [202] << A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and (FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now) >>
S [380] ->
Q [200] << VAI(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1949)                               [serial 3669] 
P [202] << (A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now))
 and (FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now) >>
S [380] ->
Q [200] << VAI(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1948:
Theorem (1948) [serial 3672] used for:
  Associativity: (b.c).a = a.b.c [serial 3669]
 


Theorem (1950)                               [serial 3665] 
P [202] << (A@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now))
 and (FB@now or 
TNA@now or 
not SA@now or 
(now - last_ap_or_as) < ARP@now or 
(now - last_ap_or_as) < DAV_A()@now or 
(now - last_ap_or_as) < (SAVO@now + DAV_A()@now) or 
(now - last_vp_or_vs) < PVARP@now) >>
S [380] ->
Q [200] << LAST(now)
 and LRL_A(now)
 and VAI(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1945 1947 1949:
Theorem (1945) [serial 3667] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3665]
 
Theorem (1947) [serial 3668] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3665]
 
Theorem (1949) [serial 3669] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3665]
 


Theorem (1951)                               [serial 1073] 
P [202] << ((A@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and ((not (SA)@now or 
(TNA)@now or 
(FB)@now or 
(((PVARP)@now > ((now - last_vp_or_vs)))) or 
(((ARP)@now > ((now - last_ap_or_as)))) or 
(((((DAV_A())@now + (SAVO)@now)) > ((now - last_ap_or_as)))) or 
(((DAV_A())@now > ((now - last_ap_or_as)))))) >>
S [380] ->
Q [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Normalization
  Normalization Axioms:
    Reflexivity of Addition: a+b=b+a
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1950:
Theorem (1950) [serial 3665] used for:
    normalization of [serial 1073]
 


Theorem (1952)                               [serial 3676] 
P [393] << LAST(now)
 and LRL_A(now)
 and VAI(now)
 and V@now
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [392] ->
Q [205] << V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1953)                               [serial 3674] 
P [393] << V@now
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) )
 and (LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [392] ->
Q [205] << V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1952:
Theorem (1952) [serial 3676] used for:
  Associativity: (b.c).a = a.b.c [serial 3674]
 


Theorem (1954)                               [serial 1074] 
P [393] << ((LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and V@now
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [392] ->
Q [205] << (V@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1953:
Theorem (1953) [serial 3674] used for:
    normalization of [serial 1074]
 


Theorem (1955)                               [serial 3680] 
P [205] << V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and (TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now) >>
S [395] ->
Q [200] << LAST(now)
 and LRL_A(now)
 and VAI(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1956)                               [serial 3678] 
P [205] << (V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now))
 and (TNV@now or 
not SV@now or 
(now - last_vp_or_vs) < VRP@now) >>
S [395] ->
Q [200] << LAST(now)
 and LRL_A(now)
 and VAI(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1955:
Theorem (1955) [serial 3680] used for:
  Associativity: (b.c).a = a.b.c [serial 3678]
 


Theorem (1957)                               [serial 1075] 
P [205] << ((V@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((TNV)@now or 
not (SV)@now or 
(((VRP)@now > ((now - last_vp_or_vs)))))) >>
S [395] ->
Q [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Irreflexivity of Greater Than: (a>b) = (b<a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1956:
Theorem (1956) [serial 3678] used for:
    normalization of [serial 1075]
 


Theorem (1958)                               [serial 3758] 
P [205] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [205] ->
Q [400] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1959)                               [serial 3762] 
P [205] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not TNV@now >>
S [205] ->
Q [400] << SV@now
 and V@now
 and not TNV@now >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1960)                               [serial 3760] 
P [205] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [205] ->
Q [400] << ((SV@now
 and V@now
 and not TNV@now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1959:
Theorem (1959) [serial 3762] used for:
    normalization of [serial 3760]
 


Theorem (1961)                               [serial 3759] 
P [205] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [205] ->
Q [400] << VS_A(now) >>
by Substitution of Assertion Labels
and theorem 1960:
Theorem (1960) [serial 3760] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3759]
 


Theorem (1962)                               [serial 3719] 
P [205] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [205] ->
Q [400] << LAST(now)
 and VS_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1958 1961:
Theorem (1958) [serial 3758] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3719]
 
Theorem (1961) [serial 3759] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3719]
 


Theorem (1963)                               [serial 3707] 
P [205] << (VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now)
 and (V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [205] ->
Q [400] << LAST(now)
 and VS_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1962:
Theorem (1962) [serial 3719] used for:
  Associativity: (b.c).a = a.b.c [serial 3707]
 


Theorem (1964)                               [serial 3693] 
P [205] << ((V@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((SV)@now
 and not (TNV)@now
 and (((VRP)@now <= ((now - last_vp_or_vs)))))) >>
S [205] ->
Q [400] << (VS_A(now)
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1963:
Theorem (1963) [serial 3707] used for:
    normalization of [serial 3693]
 


Theorem (1965)                               [serial 3691] 
P [205] << ((V@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((SV)@now
 and not (TNV)@now
 and (((VRP)@now <= ((now - last_vp_or_vs)))))) >>
S [205] ->
Q [400] << (VS_A(now)
 and LAST(now)
 and true) >>
by Law of And-Simplification:  P and true is P
and theorem 1964:
Theorem (1964) [serial 3693] used for:
  Law of And-Simplification:  P and true is P [serial 3691]
 


Theorem (1966)                               [serial 3758] 
P [205] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [205] ->
Q [400] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1967)                               [serial 3762] 
P [205] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not TNV@now >>
S [205] ->
Q [400] << SV@now
 and V@now
 and not TNV@now >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1968)                               [serial 3760] 
P [205] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [205] ->
Q [400] << ((SV@now
 and V@now
 and not TNV@now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1967:
Theorem (1967) [serial 3762] used for:
    normalization of [serial 3760]
 


Theorem (1969)                               [serial 3759] 
P [205] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [205] ->
Q [400] << VS_A(now) >>
by Substitution of Assertion Labels
and theorem 1968:
Theorem (1968) [serial 3760] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3759]
 


Theorem (1970)                               [serial 3719] 
P [205] << VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now
 and V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now) >>
S [205] ->
Q [400] << LAST(now)
 and VS_A(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1966 1969:
Theorem (1966) [serial 3758] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3719]
 
Theorem (1969) [serial 3759] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3719]
 


Theorem (1971)                               [serial 3707] 
P [205] << (VRP@now <= (now - last_vp_or_vs)
 and SV@now
 and not TNV@now)
 and (V@now
 and LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [205] ->
Q [400] << LAST(now)
 and VS_A(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1970:
Theorem (1970) [serial 3719] used for:
  Associativity: (b.c).a = a.b.c [serial 3707]
 


Theorem (1972)                               [serial 3693] 
P [205] << ((V@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((SV)@now
 and not (TNV)@now
 and (((VRP)@now <= ((now - last_vp_or_vs)))))) >>
S [205] ->
Q [400] << (VS_A(now)
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1971:
Theorem (1971) [serial 3707] used for:
    normalization of [serial 3693]
 


Theorem (1973)                               [serial 3691] 
P [205] << ((V@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((SV)@now
 and not (TNV)@now
 and (((VRP)@now <= ((now - last_vp_or_vs)))))) >>
S [205] ->
Q [400] << (VS_A(now)
 and LAST(now)
 and true) >>
by Law of And-Simplification:  P and true is P
and theorem 1972:
Theorem (1972) [serial 3693] used for:
  Law of And-Simplification:  P and true is P [serial 3691]
 


Theorem (1974)                               [serial 3681] 
P [205] << ((V@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((SV)@now
 and not (TNV)@now
 and (((VRP)@now <= ((now - last_vp_or_vs)))))) >>
S [205] ->
Q [400] << (VS_A(now)
 and LAST(now)
 and AXIOM_VS()) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 1973 1973:
Theorem (1973) [serial 3691] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (1973) [serial 3691] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (1975)                               [serial 3720] 
P [409] << VS@now
 and last_vp_or_vs = now
 and LAST(now) >>
S [200] ->
Q [200] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (1976)                               [serial 3736] 
P [409] << VS@now
 and last_vp_or_vs = now
 and LAST(now) >>
S [200] ->
Q [200] << VS@now or 
(exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) >>
by And-Elimination/Or-Introduction Schema (ctao): (P and Q)->(P or R)


Theorem (1977)                               [serial 3734] 
P [409] << VS@now
 and last_vp_or_vs = now
 and LAST(now) >>
S [200] ->
Q [200] << (exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(VS@now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1976:
Theorem (1976) [serial 3736] used for:
    normalization of [serial 3734]
 


Theorem (1978)                               [serial 3733] 
P [409] << VS@now
 and last_vp_or_vs = now
 and LAST(now) >>
S [200] ->
Q [200] << (exists t~time
  in now - MAX_CCI .. now 
  that VP@t ) or 
(exists t~time
  in now - MAX_CCI .. now 
  that VS@t ) >>
by Introduction of Existential Quantification
and theorem 1977:
Theorem (1977) [serial 3734] used for:
  replace exists with upper or lower bound [serial 3733]
 


Theorem (1979)                               [serial 3728] 
P [409] << VS@now
 and last_vp_or_vs = now
 and LAST(now) >>
S [200] ->
Q [200] << exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t  >>
by Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B)
and theorem 1978:
Theorem (1978) [serial 3733] used for:
  Combine Existential Quantifications: exists x:t in R that (A or B) = (exists x:t in R that A) or (exists x:t in R that B) [serial 3728]
 


Theorem (1980)                               [serial 3723] 
P [409] << VS@now
 and last_vp_or_vs = now
 and LAST(now) >>
S [200] ->
Q [200] << (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1979:
Theorem (1979) [serial 3728] used for:
    normalization of [serial 3723]
 


Theorem (1981)                               [serial 3721] 
P [409] << VS@now
 and last_vp_or_vs = now
 and LAST(now) >>
S [200] ->
Q [200] << LRL_A(now) >>
by Substitution of Assertion Labels
and theorem 1980:
Theorem (1980) [serial 3723] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3721]
 


Theorem (1982)                               [serial 3730] 
P [409] << VS@now
 and last_vp_or_vs = now
 and LAST(now) >>
S [200] ->
Q [200] << true >>
by True Conclusion Schema (tc): P->true


Theorem (1983)                               [serial 3726] 
P [409] << VS@now
 and last_vp_or_vs = now
 and LAST(now) >>
S [200] ->
Q [200] << (not (false)) >>
by Normalization
  Normalization Axioms:
    Complement
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1982:
Theorem (1982) [serial 3730] used for:
    normalization of [serial 3726]
 


Theorem (1984)                               [serial 3725] 
P [409] << VS@now
 and last_vp_or_vs = now
 and LAST(now) >>
S [200] ->
Q [200] << (not (exists t~time
  in now ,, now 
  that ((AS or 
       AP))@t )) >>
by Solitary Open Range Law: exists a:t in j,,j that V is false
and theorem 1983:
Theorem (1983) [serial 3726] used for:
  Solitary Open Range Law: exists a:t in j,,j that V is false [serial 3725]
 


Theorem (1985)                               [serial 3724] 
P [409] << VS@now
 and last_vp_or_vs = now
 and LAST(now) >>
S [200] ->
Q [200] << (not (exists t~time
  in last_vp_or_vs ,, now 
  that ((AS or 
       AP))@t )) >>
by Guided Substitution of Equals
and theorem 1984:
Theorem (1984) [serial 3725] used for:
  Guided Substitution of Equals
 replacing "last_vp_or_vs" with its = "now" in its postcondition [serial 3724]
 


Theorem (1986)                               [serial 3722] 
P [409] << VS@now
 and last_vp_or_vs = now
 and LAST(now) >>
S [200] ->
Q [200] << VAI(now) >>
by Substitution of Assertion Labels
and theorem 1985:
Theorem (1985) [serial 3724] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3722]
 


Theorem (1987)                               [serial 3695] 
P [409] << VS@now
 and last_vp_or_vs = now
 and LAST(now) >>
S [200] ->
Q [200] << LAST(now)
 and LRL_A(now)
 and VAI(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 1975 1981 1986:
Theorem (1975) [serial 3720] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3695]
 
Theorem (1981) [serial 3721] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3695]
 
Theorem (1986) [serial 3722] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3695]
 


Theorem (1988)                               [serial 3682] 
P [409] << (((last_vp_or_vs = now))
 and VS@now
 and LAST(now)) >>
S [200] ->
Q [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1987:
Theorem (1987) [serial 3695] used for:
    normalization of [serial 3682]
 


Theorem (1989)                               [serial 3747] 
P [400] << SV@now
 and V@now
 and not TNV@now
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and (VS iff (0 = now or 
VS_A(now))) >>
S [401] ->
Q [38] << 0 = now or 
(SV@now
 and V@now
 and not TNV@now) >>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (1990)                               [serial 3745] 
P [400] << (SV@now
 and V@now
 and not TNV@now)
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (VS iff (0 = now or 
VS_A(now))) >>
S [401] ->
Q [38] << 0 = now or 
(SV@now
 and V@now
 and not TNV@now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1989:
Theorem (1989) [serial 3747] used for:
  Associativity: (b.c).a = a.b.c [serial 3745]
 


Theorem (1991)                               [serial 3743] 
P [400] << (SV@now
 and V@now
 and not TNV@now)
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (VS iff (0 = now or 
VS_A(now))) >>
S [401] ->
Q [38] << ((0 = now or 
((SV@now
 and V@now
 and not TNV@now)))) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 1990:
Theorem (1990) [serial 3745] used for:
    normalization of [serial 3743]
 


Theorem (1992)                               [serial 3742] 
P [400] << (SV@now
 and V@now
 and not TNV@now)
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (VS iff (0 = now or 
VS_A(now))) >>
S [401] ->
Q [38] << ((0 = now or 
VS_A(now))) >>
by Substitution of Assertion Labels
and theorem 1991:
Theorem (1991) [serial 3743] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3742]
 


Theorem (1993)                               [serial 3740] 
P [400] << (SV@now
 and V@now
 and not TNV@now)
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (VS iff (0 = now or 
VS_A(now))) >>
S [401] ->
Q [38] << VS >>
by Guided Substitution of Equals
and theorem 1992:
Theorem (1992) [serial 3742] used for:
  Guided Substitution of Equals
 replacing "VS" with its iff "((0 = now or 
VS_A(now)))" in its postcondition [serial 3740]
 


Theorem (1994)                               [serial 3738] 
P [400] << ((VS iff ((VS_A(now) or 
(now = 0)))))
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and ((SV@now
 and V@now
 and not TNV@now)) >>
S [401] ->
Q [38] << VS >>
by Normalization
  Normalization Axioms:
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 1993:
Theorem (1993) [serial 3740] used for:
    normalization of [serial 3738]
 


Theorem (1995)                               [serial 3697] 
P [400] << AXIOM_VS()
 and LAST(now)
 and VS_A(now) >>
S [401] ->
Q [38] << VS >>
by Substitution of Assertion Labels
and theorem 1994:
Theorem (1994) [serial 3738] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3697]
 


Theorem (1996)                               [serial 3686] 
P [400] << (VS_A(now)
 and LAST(now)
 and AXIOM_VS()) >>
S [401] ->
Q [38] << VS >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1995:
Theorem (1995) [serial 3697] used for:
    normalization of [serial 3686]
 


Theorem (1997)                               [serial 3715] 
P [401] << AXIOM_VS()
 and LAST(now)
 and VS_A(now)
 and VS@now >>
S [401] ->
Q [402] << VS@now
 and LAST(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (1998)                               [serial 3699] 
P [401] << VS@now
 and (AXIOM_VS()
 and LAST(now)
 and VS_A(now)) >>
S [401] ->
Q [402] << VS@now
 and LAST(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 1997:
Theorem (1997) [serial 3715] used for:
  Associativity: (b.c).a = a.b.c [serial 3699]
 


Theorem (1999)                               [serial 3687] 
P [401] << ((VS_A(now)
 and LAST(now)
 and AXIOM_VS()))
 and VS@now >>
S [401] ->
Q [402] << (VS@now
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 1998:
Theorem (1998) [serial 3699] used for:
    normalization of [serial 3687]
 


Theorem (2000)                               [serial 3683] 
P [400] << (VS_A(now)
 and LAST(now)
 and AXIOM_VS()) >>
S [401] vs!
Q [402] << (VS@now
 and LAST(now)) >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 1996 1999:
Theorem (1996) [serial 3686] used for:
  applied port output <<pre>> -> <<M[vs]>> [serial 3683]
 
Theorem (1999) [serial 3687] used for:
  applied port output <<pre and M[vs]@now>> -> <<post>> [serial 3683]
 


Theorem (2001)                               [serial 3748] 
P [405] << VS@now
 and LAST(now)
 and (cci = (now - last_vp_or_vs))@now >>
S [405] ->
Q [406] << VS@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2002)                               [serial 3751] 
P [405] << cci = (now - last_vp_or_vs)
 and VS
 and LAST(now) >>
S [405] ->
Q [406] << cci = (now - last_vp_or_vs) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2003)                               [serial 3749] 
P [405] << VS@now
 and LAST(now)
 and (cci = (now - last_vp_or_vs))@now >>
S [405] ->
Q [406] << cci = (now - last_vp_or_vs) >>
by Assume Present:  P = P@now = P^0 
and theorem 2002:
Theorem (2002) [serial 3751] used for:
  Assume Present:  P = P@now = P^0  [serial 3749]
 


Theorem (2004)                               [serial 3750] 
P [405] << VS@now
 and LAST(now)
 and (cci = (now - last_vp_or_vs))@now >>
S [405] ->
Q [406] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2005)                               [serial 3716] 
P [405] << VS@now
 and LAST(now)
 and (cci = (now - last_vp_or_vs))@now >>
S [405] ->
Q [406] << VS@now
 and cci = (now - last_vp_or_vs)
 and LAST(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 2001 2003 2004:
Theorem (2001) [serial 3748] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3716]
 
Theorem (2003) [serial 3749] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3716]
 
Theorem (2004) [serial 3750] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3716]
 


Theorem (2006)                               [serial 3701] 
P [405] << (cci = (now - last_vp_or_vs))@now
 and (VS@now
 and LAST(now)) >>
S [405] ->
Q [406] << VS@now
 and cci = (now - last_vp_or_vs)
 and LAST(now) >>
by Associativity: (b.c).a = a.b.c
and theorem 2005:
Theorem (2005) [serial 3716] used for:
  Associativity: (b.c).a = a.b.c [serial 3701]
 


Theorem (2007)                               [serial 3688] 
P [405] << ((VS@now
 and LAST(now)))
 and (cci = ((now - last_vp_or_vs)))@now >>
S [405] ->
Q [406] << (VS@now
 and LAST(now)
 and (cci = ((now - last_vp_or_vs)))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2006:
Theorem (2006) [serial 3701] used for:
    normalization of [serial 3688]
 


Theorem (2008)                               [serial 3757] 
P [405] << CCI = (now - last_vp_or_vs)
 and VS
 and LAST(now) >>
S [405] ->
Q [405] << true >>
by True Conclusion Schema (tc): P->true


Theorem (2009)                               [serial 3756] 
P [405] << CCI = (now - last_vp_or_vs)
 and VS
 and LAST(now) >>
S [405] ->
Q [405] << CCI = CCI >>
by Equality Law (idistr):  a=a <-> true
and theorem 2008:
Theorem (2008) [serial 3757] used for:
  Equality Law (idistr):  a=a <-> true [serial 3756]
 


Theorem (2010)                               [serial 3755] 
P [405] << cci = (now - last_vp_or_vs)
 and VS
 and LAST(now) >>
S [405] ->
Q [405] << CCI = cci >>
by Replacing port names with BLESS::Assertion properties
and theorem 2009:
Theorem (2009) [serial 3756] used for:
  Replacing port names with BLESS::Assertion properties [serial 3755]
 


Theorem (2011)                               [serial 3753] 
P [405] << VS@now
 and (cci = (now - last_vp_or_vs))@now
 and LAST(now) >>
S [405] ->
Q [405] << (CCI = cci)@now >>
by Assume Present:  P = P@now = P^0 
and theorem 2010:
Theorem (2010) [serial 3755] used for:
  Assume Present:  P = P@now = P^0  [serial 3753]
 


Theorem (2012)                               [serial 3717] 
P [405] << VS@now
 and LAST(now)
 and (cci = (now - last_vp_or_vs))@now >>
S [405] ->
Q [405] << (CCI = cci)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2011:
Theorem (2011) [serial 3753] used for:
    normalization of [serial 3717]
 


Theorem (2013)                               [serial 3703] 
P [405] << (cci = (now - last_vp_or_vs))@now
 and (VS@now
 and LAST(now)) >>
S [405] ->
Q [405] << (CCI = cci)@now >>
by Associativity: (b.c).a = a.b.c
and theorem 2012:
Theorem (2012) [serial 3717] used for:
  Associativity: (b.c).a = a.b.c [serial 3703]
 


Theorem (2014)                               [serial 3689] 
P [405] << ((VS@now
 and LAST(now)))
 and (cci = ((now - last_vp_or_vs)))@now >>
S [405] ->
Q [405] << (cci = CCI)@now >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2013:
Theorem (2013) [serial 3703] used for:
    normalization of [serial 3689]
 


Theorem (2015)                               [serial 3684] 
P [402] << (VS@now
 and LAST(now)) >>
S [405] cci!((now - last_vp_or_vs))
Q [406] << (VS@now
 and LAST(now)
 and (cci = ((now - last_vp_or_vs)))) >>
by Port Data Output: when <<A>> -> <<B>> and <<A>> -> <<e=M(p)>> then <<A>> p!(e) <<B>>
and theorems 2007 2014:
Theorem (2007) [serial 3688] used for:
  applied port output <<pre and (cci=(now - last_vp_or_vs))@now>> -> <<post>> [serial 3684]
 
Theorem (2014) [serial 3689] used for:
  applied port output <<pre and (cci=(now - last_vp_or_vs))@now>> -> <<(cci=CCI)@now>> [serial 3684]
 


Theorem (2016)                               [serial 3718] 
P [406] << VS@now
 and cci = (now - last_vp_or_vs)
 and LAST(now) >>
S [408] ->
Q [409] << VS@now
 and LAST(now) >>
by And Introduction Schema (aiswl):  (X and Y and Z)->(X and Y)


Theorem (2017)                               [serial 3705] 
P [406] << VS@now
 and cci = (now - last_vp_or_vs)
 and LAST(now) >>
S [408] ->
Q [409] << VS@now
 and LAST(now)
 and true >>
by Law of And-Simplification:  P and true is P
and theorem 2016:
Theorem (2016) [serial 3718] used for:
  Law of And-Simplification:  P and true is P [serial 3705]
 


Theorem (2018)                               [serial 3692] 
P [406] << (VS@now
 and LAST(now)
 and (cci = ((now - last_vp_or_vs)))) >>
S [408] ->
Q [409] << (((true))
 and VS@now
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2017:
Theorem (2017) [serial 3705] used for:
    normalization of [serial 3692]
 


Theorem (2019)                               [serial 3690] 
P [406] << (VS@now
 and LAST(now)
 and (cci = ((now - last_vp_or_vs)))) >>
S [408] ->
Q [409] << (((now = now))
 and VS@now
 and LAST(now)) >>
by Equality Law (idistr):  a=a <-> true
and theorem 2018:
Theorem (2018) [serial 3692] used for:
  Equality Law (idistr):  a=a <-> true [serial 3690]
 


Theorem (2020)                               [serial 3685] 
P [406] << (VS@now
 and LAST(now)
 and (cci = ((now - last_vp_or_vs)))) >>
S [408] last_vp_or_vs := now
Q [409] << (((last_vp_or_vs = now))
 and VS@now
 and LAST(now)) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 2019:
Theorem (2019) [serial 3690] used for:
  applied wp for assignment [serial 3685]
 


Theorem (2021)                               [serial 1076] 
P [205] << ((V@now
 and LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((SV)@now
 and not (TNV)@now
 and (((VRP)@now <= ((now - last_vp_or_vs)))))) >>
S [400] << (VS_A(now)
 and LAST(now)
 and AXIOM_VS()) >>
vs!
<< (VS@now
 and LAST(now)) >>
;
cci!((now - last_vp_or_vs))
<< (VS@now
 and LAST(now)
 and (cci = ((now - last_vp_or_vs)))) >>
;
last_vp_or_vs := now
<< (((last_vp_or_vs = now))
 and VS@now
 and LAST(now)) >>
Q [200] << (LRL_A(now)
 and LAST(now)
 and VAI(now)) >>
by Sequential Composition Rule:
 <<P1>> S1 <<Q1 and P2>>
 <<Q1 and P2>> S2 <<Q2 and P3>>
 . . .
 <<Qk-1 and Pk>> Sk <<Qk>>
 _____________________________________________
 <<P1>> S1 <<Q1>> ; <<P2>> S2 <<Q2> ; . . . ; <<Pk>> Sk <<Qk>> (bl.sck)
and theorems 1974 1988 2000 2015 2020:
Theorem (1974) [serial 3681] used for:
  <<P>> -> <<P1>> in sequential composition for [serial 1076]
 
Theorem (1988) [serial 3682] used for:
  <<Q2>> -> <<Q>> in sequential composition for [serial 1076]
 
Theorem (2000) [serial 3683] used for:
  <<P0>> S0 <<Q0 and P1>> in sequential composition for [serial 1076]
 
Theorem (2015) [serial 3684] used for:
  <<Q0 and P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1076]
 
Theorem (2020) [serial 3685] used for:
  <<Q1 and P2>> S2 <<Q2>> in sequential composition for [serial 1076]
 


Theorem (2022)                               [serial 3898] 
P [413] << (VP or 
VS)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (VP or 
       VS)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (VP or 
              VS)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (VP or 
       VS)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (VP or 
              VS)@t ) ) >>
S [413] ->
Q [415] << (VP or 
VS)@(now-va_interval) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2023)                               [serial 3893] 
P [413] << (vp or 
vs)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [413] ->
Q [415] << (VP or 
VS)@(now-va_interval) >>
by Replacing port names with BLESS::Assertion properties
and theorem 2022:
Theorem (2022) [serial 3898] used for:
  Replacing port names with BLESS::Assertion properties [serial 3893]
 


Theorem (2024)                               [serial 3894] 
P [413] << (vp or 
vs)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [413] ->
Q [414] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2025)                               [serial 3895] 
P [413] << (vp or 
vs)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [413] ->
Q [414] << LRL_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2026)                               [serial 3899] 
P [413] << (vp or 
vs)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists #33#~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@#33# )
 and not (exists #34#~time
  in tops ,, now 
  that A@#34# )
 and not (exists #35#~time
  in tops ,, now 
  that V@#35# )
 and not (exists #36#~time
  in tops ,, now 
  that stop@#36# )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists #37#~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@#37# ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists #38#~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@#38# ) ) >>
S [413] ->
Q [419] << not (exists #39#~time
  in tops ,, now 
  that A@#39# ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2027)                               [serial 3896] 
P [413] << (vp or 
vs)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [413] ->
Q [419] << not (exists ta~time
  in tops ,, now 
  that A@ta ) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 2026:
Theorem (2026) [serial 3899] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 3896]
 


Theorem (2028)                               [serial 3901] 
P [413] << (VP or 
VS)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists #40#~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@#40# )
 and not (exists #41#~time
  in tops ,, now 
  that A@#41# )
 and not (exists #42#~time
  in tops ,, now 
  that V@#42# )
 and not (exists #43#~time
  in tops ,, now 
  that stop@#43# )
 and not (exists u~time
  in tops ,, now 
  that (VP or 
       VS)@(u-max_cci)
        and not (exists #44#~time
         in u - max_cci ,, u 
         that (VP or 
              VS)@#44# ) )
 and not (exists u~time
  in tops ,, now 
  that (VP or 
       VS)@(u-va_interval)
        and not (exists #45#~time
         in u - va_interval ,, u 
         that (VP or 
              VS)@#45# ) ) >>
S [413] ->
Q [416] << not (exists #46#~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@#46# ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2029)                               [serial 3900] 
P [413] << (VP or 
VS)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (VP or 
       VS)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (VP or 
              VS)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (VP or 
       VS)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (VP or 
              VS)@t ) ) >>
S [413] ->
Q [416] << not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 2028:
Theorem (2028) [serial 3901] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 3900]
 


Theorem (2030)                               [serial 3897] 
P [413] << (vp or 
vs)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [413] ->
Q [416] << not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Replacing port names with BLESS::Assertion properties
and theorem 2029:
Theorem (2029) [serial 3900] used for:
  Replacing port names with BLESS::Assertion properties [serial 3897]
 


Theorem (2031)                               [serial 3808] 
P [413] << (vp or 
vs)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [413] ->
Q [414] << (VP or 
VS)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 2023 2024 2025 2027 2030:
Theorem (2023) [serial 3893] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3808]
 
Theorem (2024) [serial 3894] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3808]
 
Theorem (2025) [serial 3895] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3808]
 
Theorem (2027) [serial 3896] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3808]
 
Theorem (2030) [serial 3897] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3808]
 


Theorem (2032)                               [serial 3799] 
P [413] << (vp or 
vs)@(now-va_interval)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t )
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [413] ->
Q [414] << (VP or 
VS)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2031:
Theorem (2031) [serial 3808] used for:
    normalization of [serial 3799]
 


Theorem (2033)                               [serial 3797] 
P [413] << not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) )
 and ((vp or 
vs)@(now-va_interval)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t ))
 and (LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [413] ->
Q [414] << (VP or 
VS)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Associativity: (b.c).a = a.b.c
and theorem 2032:
Theorem (2032) [serial 3799] used for:
  Associativity: (b.c).a = a.b.c [serial 3797]
 


Theorem (2034)                               [serial 3794] 
P [413] << not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) )
 and ((vp or 
vs)@(now-va_interval)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t ))
 and (LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [413] ->
Q [414] << (VP or 
VS)@(now-va_interval)
 and true
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Law of And-Simplification:  P and true is P
and theorem 2033:
Theorem (2033) [serial 3797] used for:
  Law of And-Simplification:  P and true is P [serial 3794]
 


Theorem (2035)                               [serial 3898] 
P [413] << (VP or 
VS)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (VP or 
       VS)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (VP or 
              VS)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (VP or 
       VS)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (VP or 
              VS)@t ) ) >>
S [413] ->
Q [415] << (VP or 
VS)@(now-va_interval) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2036)                               [serial 3893] 
P [413] << (vp or 
vs)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [413] ->
Q [415] << (VP or 
VS)@(now-va_interval) >>
by Replacing port names with BLESS::Assertion properties
and theorem 2035:
Theorem (2035) [serial 3898] used for:
  Replacing port names with BLESS::Assertion properties [serial 3893]
 


Theorem (2037)                               [serial 3894] 
P [413] << (vp or 
vs)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [413] ->
Q [414] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2038)                               [serial 3895] 
P [413] << (vp or 
vs)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [413] ->
Q [414] << LRL_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2039)                               [serial 3899] 
P [413] << (vp or 
vs)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists #33#~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@#33# )
 and not (exists #34#~time
  in tops ,, now 
  that A@#34# )
 and not (exists #35#~time
  in tops ,, now 
  that V@#35# )
 and not (exists #36#~time
  in tops ,, now 
  that stop@#36# )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists #37#~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@#37# ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists #38#~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@#38# ) ) >>
S [413] ->
Q [419] << not (exists #39#~time
  in tops ,, now 
  that A@#39# ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2040)                               [serial 3896] 
P [413] << (vp or 
vs)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [413] ->
Q [419] << not (exists ta~time
  in tops ,, now 
  that A@ta ) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 2039:
Theorem (2039) [serial 3899] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 3896]
 


Theorem (2041)                               [serial 3901] 
P [413] << (VP or 
VS)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists #40#~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@#40# )
 and not (exists #41#~time
  in tops ,, now 
  that A@#41# )
 and not (exists #42#~time
  in tops ,, now 
  that V@#42# )
 and not (exists #43#~time
  in tops ,, now 
  that stop@#43# )
 and not (exists u~time
  in tops ,, now 
  that (VP or 
       VS)@(u-max_cci)
        and not (exists #44#~time
         in u - max_cci ,, u 
         that (VP or 
              VS)@#44# ) )
 and not (exists u~time
  in tops ,, now 
  that (VP or 
       VS)@(u-va_interval)
        and not (exists #45#~time
         in u - va_interval ,, u 
         that (VP or 
              VS)@#45# ) ) >>
S [413] ->
Q [416] << not (exists #46#~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@#46# ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2042)                               [serial 3900] 
P [413] << (VP or 
VS)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (VP or 
       VS)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (VP or 
              VS)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (VP or 
       VS)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (VP or 
              VS)@t ) ) >>
S [413] ->
Q [416] << not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 2041:
Theorem (2041) [serial 3901] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 3900]
 


Theorem (2043)                               [serial 3897] 
P [413] << (vp or 
vs)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [413] ->
Q [416] << not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Replacing port names with BLESS::Assertion properties
and theorem 2042:
Theorem (2042) [serial 3900] used for:
  Replacing port names with BLESS::Assertion properties [serial 3897]
 


Theorem (2044)                               [serial 3808] 
P [413] << (vp or 
vs)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [413] ->
Q [414] << (VP or 
VS)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 2036 2037 2038 2040 2043:
Theorem (2036) [serial 3893] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3808]
 
Theorem (2037) [serial 3894] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3808]
 
Theorem (2038) [serial 3895] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3808]
 
Theorem (2040) [serial 3896] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3808]
 
Theorem (2043) [serial 3897] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3808]
 


Theorem (2045)                               [serial 3799] 
P [413] << (vp or 
vs)@(now-va_interval)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t )
 and LAST(now)
 and LRL_A(now)
 and VAI(now)
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) ) >>
S [413] ->
Q [414] << (VP or 
VS)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2044:
Theorem (2044) [serial 3808] used for:
    normalization of [serial 3799]
 


Theorem (2046)                               [serial 3797] 
P [413] << not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) )
 and ((vp or 
vs)@(now-va_interval)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t ))
 and (LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [413] ->
Q [414] << (VP or 
VS)@(now-va_interval)
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Associativity: (b.c).a = a.b.c
and theorem 2045:
Theorem (2045) [serial 3799] used for:
  Associativity: (b.c).a = a.b.c [serial 3797]
 


Theorem (2047)                               [serial 3794] 
P [413] << not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) )
 and ((vp or 
vs)@(now-va_interval)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t ))
 and (LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [413] ->
Q [414] << (VP or 
VS)@(now-va_interval)
 and true
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Law of And-Simplification:  P and true is P
and theorem 2046:
Theorem (2046) [serial 3797] used for:
  Law of And-Simplification:  P and true is P [serial 3794]
 


Theorem (2048)                               [serial 3774] 
P [413] << not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ) )
 and not (exists u~time
  in tops ,, now 
  that (vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ) )
 and ((vp or 
vs)@(now-va_interval)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t ))
 and (LAST(now)
 and LRL_A(now)
 and VAI(now)) >>
S [413] ->
Q [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 2047 2047:
Theorem (2047) [serial 3794] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (2047) [serial 3794] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (2049)                               [serial 3764] 
P [413] << ((LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((vp or 
vs)@(now-va_interval)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t )))
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [413] ->
Q [414] << (LAST(now)
 and LRL_A(now)
 and AXIOM_VA_INTERVAL()
 and ((VP or 
VS))@((now-va_interval))
 and not (exists tv~time
  in ((now - va_interval)) ,, now 
  that ((VP or 
       VS))@tv )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2048:
Theorem (2048) [serial 3774] used for:
    normalization of [serial 3764]
 


Theorem (2050)                               [serial 3811] 
P [437] << AP@now
 and last_ap_or_as = now
 and LAST(now)
 and LRL_A(now)
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [196] ->
Q [196] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2051)                               [serial 3812] 
P [437] << AP@now
 and last_ap_or_as = now
 and LAST(now)
 and LRL_A(now)
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [196] ->
Q [196] << LRL_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2052)                               [serial 3818] 
P [437] << AP@now
 and last_ap_or_as = now
 and LAST(now)
 and LRL_A(now)
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [196] ->
Q [196] << AP@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2053)                               [serial 3816] 
P [437] << AP@now
 and last_ap_or_as = now
 and LAST(now)
 and LRL_A(now)
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [196] ->
Q [196] << exists t~time
  in now - DAV_A() .. now 
  that AP@t  >>
by Introduction of Existential Quantification
and theorem 2052:
Theorem (2052) [serial 3818] used for:
  replace exists with upper or lower bound [serial 3816]
 


Theorem (2054)                               [serial 3814] 
P [437] << AP@now
 and last_ap_or_as = now
 and LAST(now)
 and LRL_A(now)
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [196] ->
Q [196] << (exists t~time
  in ((now - DAV_A())) .. now 
  that AP@t ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 2053:
Theorem (2053) [serial 3816] used for:
    normalization of [serial 3814]
 


Theorem (2055)                               [serial 3813] 
P [437] << AP@now
 and last_ap_or_as = now
 and LAST(now)
 and LRL_A(now)
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [196] ->
Q [196] << PAV(now) >>
by Substitution of Assertion Labels
and theorem 2054:
Theorem (2054) [serial 3814] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3813]
 


Theorem (2056)                               [serial 3776] 
P [437] << AP@now
 and last_ap_or_as = now
 and LAST(now)
 and LRL_A(now)
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [196] ->
Q [196] << LAST(now)
 and LRL_A(now)
 and PAV(now) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 2050 2051 2055:
Theorem (2050) [serial 3811] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3776]
 
Theorem (2051) [serial 3812] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3776]
 
Theorem (2055) [serial 3813] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3776]
 


Theorem (2057)                               [serial 3765] 
P [437] << (((last_ap_or_as = now))
 and LAST(now)
 and not (exists tv~time
  in ((now - va_interval)) ,, now 
  that ((VP or 
       VS))@tv )
 and LRL_A(now)
 and AP@now) >>
S [196] ->
Q [196] << (PAV(now)
 and LRL_A(now)
 and LAST(now)) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2056:
Theorem (2056) [serial 3776] used for:
    normalization of [serial 3765]
 


Theorem (2058)                               [serial 3857] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [422] << (VP or 
VS)@(now-va_interval) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2059)                               [serial 3866] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [250] << not (exists ta~time
  in tops ,, now 
  that A@ta ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2060)                               [serial 3890] 
P [414] << va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that VP@tv or 
       VS@tv )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (VP@(now-va_interval) or 
VS@(now-va_interval)) >>
S [420] ->
Q [245] << not (exists tv~time
  in now - va_interval ,, now 
  that VP@tv or 
       VS@tv ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2061)                               [serial 3887] 
P [414] << (VP@(now-va_interval) or 
VS@(now-va_interval))
 and va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP@tv or 
       VS@tv) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [245] << not (exists tv~time
  in now - va_interval ,, now 
  that VP@tv or 
       VS@tv ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2060:
Theorem (2060) [serial 3890] used for:
    normalization of [serial 3887]
 


Theorem (2062)                               [serial 3885] 
P [414] << (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [245] << not (exists tv~time
  in now - va_interval ,, now 
  that VP@tv or 
       VS@tv ) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 2061:
Theorem (2061) [serial 3887] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 3885]
 


Theorem (2063)                               [serial 3880] 
P [414] << (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [245] << not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv ) >>
by Guided Substitution of Equals
and theorem 2062:
Theorem (2062) [serial 3885] used for:
  Guided Substitution of Equals
 replacing "VA_INTERVAL_A()" with its = "va_interval" in its postcondition [serial 3880]
 


Theorem (2064)                               [serial 3877] 
P [414] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [245] << not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2063:
Theorem (2063) [serial 3880] used for:
    normalization of [serial 3877]
 


Theorem (2065)                               [serial 3872] 
P [414] << (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv )
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [245] << not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv ) >>
by Associativity: (b.c).a = a.b.c
and theorem 2064:
Theorem (2064) [serial 3877] used for:
  Associativity: (b.c).a = a.b.c [serial 3872]
 


Theorem (2066)                               [serial 3869] 
P [414] << (VP or 
VS)@(now-va_interval)
 and ((va_interval = VA_INTERVAL_A()))
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [245] << not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 2065:
Theorem (2065) [serial 3872] used for:
    normalization of [serial 3869]
 


Theorem (2067)                               [serial 3867] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [245] << not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv ) >>
by Substitution of Assertion Labels
and theorem 2066:
Theorem (2066) [serial 3869] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3867]
 


Theorem (2068)                               [serial 3888] 
P [414] << (VP@(now-va_interval) or 
VS@(now-va_interval))
 and va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP@tv or 
       VS@tv) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [243] << VP@(now-va_interval) or 
VS@(now-va_interval) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2069)                               [serial 3886] 
P [414] << (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [243] << VP@(now-va_interval) or 
VS@(now-va_interval) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 2068:
Theorem (2068) [serial 3888] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 3886]
 


Theorem (2070)                               [serial 3882] 
P [414] << (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [243] << VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A()) >>
by Guided Substitution of Equals
and theorem 2069:
Theorem (2069) [serial 3886] used for:
  Guided Substitution of Equals
 replacing "VA_INTERVAL_A()" with its = "va_interval" in its postcondition [serial 3882]
 


Theorem (2071)                               [serial 3878] 
P [414] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [243] << VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A()) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2070:
Theorem (2070) [serial 3882] used for:
    normalization of [serial 3878]
 


Theorem (2072)                               [serial 3874] 
P [414] << (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv )
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [243] << VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A()) >>
by Associativity: (b.c).a = a.b.c
and theorem 2071:
Theorem (2071) [serial 3878] used for:
  Associativity: (b.c).a = a.b.c [serial 3874]
 


Theorem (2073)                               [serial 3870] 
P [414] << (VP or 
VS)@(now-va_interval)
 and ((va_interval = VA_INTERVAL_A()))
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [243] << (VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A())) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 2072:
Theorem (2072) [serial 3874] used for:
    normalization of [serial 3870]
 


Theorem (2074)                               [serial 3868] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [243] << (VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A())) >>
by Substitution of Assertion Labels
and theorem 2073:
Theorem (2073) [serial 3870] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3868]
 


Theorem (2075)                               [serial 3864] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [420] << not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv )
 and (VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A())) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 2059 2067 2074:
Theorem (2059) [serial 3866] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3864]
 
Theorem (2067) [serial 3867] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3864]
 
Theorem (2074) [serial 3868] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3864]
 


Theorem (2076)                               [serial 3862] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [420] << ((((VP@((now-VA_INTERVAL_A())) or 
VS@((now-VA_INTERVAL_A()))))
 and not (exists tv~time
  in ((now - VA_INTERVAL_A())) ,, now 
  that (VS@tv or 
       VP@tv) )
 and not (exists ta~time
  in tops ,, now 
  that A@ta ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 2075:
Theorem (2075) [serial 3864] used for:
    normalization of [serial 3862]
 


Theorem (2077)                               [serial 3858] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [420] << AP_A(now) >>
by Substitution of Assertion Labels
and theorem 2076:
Theorem (2076) [serial 3862] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3858]
 


Theorem (2078)                               [serial 3859] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [420] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2079)                               [serial 3860] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [426] << not (exists ta~time
  in tops ,, now 
  that A@ta ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2080)                               [serial 3861] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [423] << not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2081)                               [serial 3798] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [420] << (VP or 
VS)@(now-va_interval)
 and AP_A(now)
 and LAST(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 2058 2077 2078 2079 2080:
Theorem (2058) [serial 3857] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3798]
 
Theorem (2077) [serial 3858] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3798]
 
Theorem (2078) [serial 3859] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3798]
 
Theorem (2079) [serial 3860] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3798]
 
Theorem (2080) [serial 3861] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3798]
 


Theorem (2082)                               [serial 3795] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [420] << (VP or 
VS)@(now-va_interval)
 and AP_A(now)
 and true
 and true
 and LAST(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Law of And-Simplification:  P and true is P
and theorem 2081:
Theorem (2081) [serial 3798] used for:
  Law of And-Simplification:  P and true is P [serial 3795]
 


Theorem (2083)                               [serial 3857] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [422] << (VP or 
VS)@(now-va_interval) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2084)                               [serial 3866] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [250] << not (exists ta~time
  in tops ,, now 
  that A@ta ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2085)                               [serial 3890] 
P [414] << va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that VP@tv or 
       VS@tv )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t )
 and (VP@(now-va_interval) or 
VS@(now-va_interval)) >>
S [420] ->
Q [245] << not (exists tv~time
  in now - va_interval ,, now 
  that VP@tv or 
       VS@tv ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2086)                               [serial 3887] 
P [414] << (VP@(now-va_interval) or 
VS@(now-va_interval))
 and va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP@tv or 
       VS@tv) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [245] << not (exists tv~time
  in now - va_interval ,, now 
  that VP@tv or 
       VS@tv ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2085:
Theorem (2085) [serial 3890] used for:
    normalization of [serial 3887]
 


Theorem (2087)                               [serial 3885] 
P [414] << (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [245] << not (exists tv~time
  in now - va_interval ,, now 
  that VP@tv or 
       VS@tv ) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 2086:
Theorem (2086) [serial 3887] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 3885]
 


Theorem (2088)                               [serial 3880] 
P [414] << (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [245] << not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv ) >>
by Guided Substitution of Equals
and theorem 2087:
Theorem (2087) [serial 3885] used for:
  Guided Substitution of Equals
 replacing "VA_INTERVAL_A()" with its = "va_interval" in its postcondition [serial 3880]
 


Theorem (2089)                               [serial 3877] 
P [414] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [245] << not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2088:
Theorem (2088) [serial 3880] used for:
    normalization of [serial 3877]
 


Theorem (2090)                               [serial 3872] 
P [414] << (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv )
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [245] << not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv ) >>
by Associativity: (b.c).a = a.b.c
and theorem 2089:
Theorem (2089) [serial 3877] used for:
  Associativity: (b.c).a = a.b.c [serial 3872]
 


Theorem (2091)                               [serial 3869] 
P [414] << (VP or 
VS)@(now-va_interval)
 and ((va_interval = VA_INTERVAL_A()))
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [245] << not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 2090:
Theorem (2090) [serial 3872] used for:
    normalization of [serial 3869]
 


Theorem (2092)                               [serial 3867] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [245] << not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv ) >>
by Substitution of Assertion Labels
and theorem 2091:
Theorem (2091) [serial 3869] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3867]
 


Theorem (2093)                               [serial 3888] 
P [414] << (VP@(now-va_interval) or 
VS@(now-va_interval))
 and va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP@tv or 
       VS@tv) )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [243] << VP@(now-va_interval) or 
VS@(now-va_interval) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2094)                               [serial 3886] 
P [414] << (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [243] << VP@(now-va_interval) or 
VS@(now-va_interval) >>
by Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t)
and theorem 2093:
Theorem (2093) [serial 3888] used for:
  Combine Timed Atoms: (a or b)@t = (a@t or b@t)  (a and b)@t = (a@t and b@t) [serial 3886]
 


Theorem (2095)                               [serial 3882] 
P [414] << (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [243] << VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A()) >>
by Guided Substitution of Equals
and theorem 2094:
Theorem (2094) [serial 3886] used for:
  Guided Substitution of Equals
 replacing "VA_INTERVAL_A()" with its = "va_interval" in its postcondition [serial 3882]
 


Theorem (2096)                               [serial 3878] 
P [414] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv )
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [243] << VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A()) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2095:
Theorem (2095) [serial 3882] used for:
    normalization of [serial 3878]
 


Theorem (2097)                               [serial 3874] 
P [414] << (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv )
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (exists t~time
  in now - MAX_CCI .. now 
  that VP@t or 
       VS@t ) >>
S [420] ->
Q [243] << VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A()) >>
by Associativity: (b.c).a = a.b.c
and theorem 2096:
Theorem (2096) [serial 3878] used for:
  Associativity: (b.c).a = a.b.c [serial 3874]
 


Theorem (2098)                               [serial 3870] 
P [414] << (VP or 
VS)@(now-va_interval)
 and ((va_interval = VA_INTERVAL_A()))
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and (exists t~time
  in ((now - MAX_CCI)) .. now 
  that ((VS@t or 
       VP@t)) )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [243] << (VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A())) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 2097:
Theorem (2097) [serial 3874] used for:
    normalization of [serial 3870]
 


Theorem (2099)                               [serial 3868] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [243] << (VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A())) >>
by Substitution of Assertion Labels
and theorem 2098:
Theorem (2098) [serial 3870] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3868]
 


Theorem (2100)                               [serial 3864] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [420] << not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv )
 and (VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A())) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 2084 2092 2099:
Theorem (2084) [serial 3866] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3864]
 
Theorem (2092) [serial 3867] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3864]
 
Theorem (2099) [serial 3868] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3864]
 


Theorem (2101)                               [serial 3862] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [420] << ((((VP@((now-VA_INTERVAL_A())) or 
VS@((now-VA_INTERVAL_A()))))
 and not (exists tv~time
  in ((now - VA_INTERVAL_A())) ,, now 
  that (VS@tv or 
       VP@tv) )
 and not (exists ta~time
  in tops ,, now 
  that A@ta ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 2100:
Theorem (2100) [serial 3864] used for:
    normalization of [serial 3862]
 


Theorem (2102)                               [serial 3858] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [420] << AP_A(now) >>
by Substitution of Assertion Labels
and theorem 2101:
Theorem (2101) [serial 3862] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3858]
 


Theorem (2103)                               [serial 3859] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [420] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2104)                               [serial 3860] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [426] << not (exists ta~time
  in tops ,, now 
  that A@ta ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2105)                               [serial 3861] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [423] << not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2106)                               [serial 3798] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [420] << (VP or 
VS)@(now-va_interval)
 and AP_A(now)
 and LAST(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 2083 2102 2103 2104 2105:
Theorem (2083) [serial 3857] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3798]
 
Theorem (2102) [serial 3858] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3798]
 
Theorem (2103) [serial 3859] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3798]
 
Theorem (2104) [serial 3860] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3798]
 
Theorem (2105) [serial 3861] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3798]
 


Theorem (2107)                               [serial 3795] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [420] << (VP or 
VS)@(now-va_interval)
 and AP_A(now)
 and true
 and true
 and LAST(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Law of And-Simplification:  P and true is P
and theorem 2106:
Theorem (2106) [serial 3798] used for:
  Law of And-Simplification:  P and true is P [serial 3795]
 


Theorem (2108)                               [serial 3778] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [420] ->
Q [420] << (VP or 
VS)@(now-va_interval)
 and AP_A(now)
 and AXIOM_AP()
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Introduction of an Axiom to Postcondition:
  <<P>> S <<Q>> , <<A>> 
 ----------------
  <<P>> S <<Q and A>>
and theorems 2107 2107:
Theorem (2107) [serial 3795] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 
Theorem (2107) [serial 3795] used for:
   add user-defined axioms to postcondition:
  <<P>> S <<Q>> 
 ----------------
  <<P>> S <<Q and A>> 

 


Theorem (2109)                               [serial 3768] 
P [414] << (LAST(now)
 and LRL_A(now)
 and AXIOM_VA_INTERVAL()
 and ((VP or 
VS))@((now-va_interval))
 and not (exists tv~time
  in ((now - va_interval)) ,, now 
  that ((VP or 
       VS))@tv )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )) >>
S [420] ->
Q [420] << (AP_A(now)
 and LAST(now)
 and AXIOM_AP()
 and AXIOM_VA_INTERVAL()
 and ((VP or 
VS))@((now-va_interval))
 and not (exists tv~time
  in ((now - va_interval)) ,, now 
  that ((VP or 
       VS))@tv )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2108:
Theorem (2108) [serial 3778] used for:
    normalization of [serial 3768]
 


Theorem (2110)                               [serial 3780] 
P [414] << (VP or 
VS)@(now-va_interval)
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and LRL_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [433] ->
Q [433] << LRL_A(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2111)                               [serial 3769] 
P [414] << (LAST(now)
 and LRL_A(now)
 and AXIOM_VA_INTERVAL()
 and ((VP or 
VS))@((now-va_interval))
 and not (exists tv~time
  in ((now - va_interval)) ,, now 
  that ((VP or 
       VS))@tv )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )) >>
S [433] ->
Q [433] << LRL_A(now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2110:
Theorem (2110) [serial 3780] used for:
    normalization of [serial 3769]
 


Theorem (2112)                               [serial 3892] 
P [420] << AP@now
 and last_ap_or_as = now
 and LAST(now)
 and LRL_A(now)
 and not (exists #31#~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@#31# ) >>
S [428] ->
Q [437] << AP@now
 and last_ap_or_as = now
 and LAST(now)
 and LRL_A(now)
 and not (exists #32#~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@#32# ) >>
by Identity (id):  P->P is tautology


Theorem (2113)                               [serial 3805] 
P [420] << AP@now
 and last_ap_or_as = now
 and LAST(now)
 and LRL_A(now)
 and not (exists tap~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tap ) >>
S [428] ->
Q [437] << AP@now
 and last_ap_or_as = now
 and LAST(now)
 and LRL_A(now)
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 2112:
Theorem (2112) [serial 3892] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 3805]
 


Theorem (2114)                               [serial 3796] 
P [420] << AP@now
 and LAST(now)
 and not (exists tap~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tap )
 and last_ap_or_as = now
 and LRL_A(now) >>
S [428] ->
Q [437] << AP@now
 and last_ap_or_as = now
 and LAST(now)
 and LRL_A(now)
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2113:
Theorem (2113) [serial 3805] used for:
    normalization of [serial 3796]
 


Theorem (2115)                               [serial 3782] 
P [420] << (AP@now
 and LAST(now)
 and not (exists tap~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tap ))
 and (last_ap_or_as = now
 and LRL_A(now)) >>
S [428] ->
Q [437] << AP@now
 and last_ap_or_as = now
 and LAST(now)
 and LRL_A(now)
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
by Associativity: (b.c).a = a.b.c
and theorem 2114:
Theorem (2114) [serial 3796] used for:
  Associativity: (b.c).a = a.b.c [serial 3782]
 


Theorem (2116)                               [serial 3770] 
P [420] << ((AP@now
 and LAST(now)
 and not (exists tap~time
  in ((now - va_interval)) ,, now 
  that ((VP or 
       VS))@tap )))
 and ((((last_ap_or_as = now))
 and LRL_A(now))) >>
S [428] ->
Q [437] << (((last_ap_or_as = now))
 and LAST(now)
 and not (exists tv~time
  in ((now - va_interval)) ,, now 
  that ((VP or 
       VS))@tv )
 and LRL_A(now)
 and AP@now) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2115:
Theorem (2115) [serial 3782] used for:
    normalization of [serial 3770]
 


Theorem (2117)                               [serial 3849] 
P [420] << (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists #26#~time
  in tops ,, now 
  that A@#26# )
 and not (exists #27#~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@#27# )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv )
 and (AP iff (0 = now or 
AP_A(now)))
 and (VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A())) >>
S [427] ->
Q [29] << 0 = now or 
(not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv )
 and (VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A()))) >>
by Premise Has All Terms of Conjunction within Disjunction (animporan): |- ( /\( l1 l2 l3 ) -> \/( l4 /\( l2 ) l5 ) ) 
 for proof obligations of the form <<a1 and ... and an>> -> <<b1 or ... or bm>> 
  find any bj=(c1 and ... and cj) such that forall c in {c1,...,cj} there exists a in {a1,...,an}


Theorem (2118)                               [serial 3847] 
P [420] << (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists #26#~time
  in tops ,, now 
  that A@#26# )
 and not (exists #27#~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@#27# )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv )
 and (AP iff (0 = now or 
AP_A(now)))
 and (VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A())) >>
S [427] ->
Q [29] << 0 = now or 
((((VP@((now-VA_INTERVAL_A())) or 
VS@((now-VA_INTERVAL_A()))))
 and not (exists tv~time
  in ((now - VA_INTERVAL_A())) ,, now 
  that (VS@tv or 
       VP@tv) )
 and not (exists ta~time
  in tops ,, now 
  that A@ta ))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 2117:
Theorem (2117) [serial 3849] used for:
    normalization of [serial 3847]
 


Theorem (2119)                               [serial 3845] 
P [420] << (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists #26#~time
  in tops ,, now 
  that A@#26# )
 and not (exists #27#~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@#27# )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv )
 and (AP iff (0 = now or 
AP_A(now)))
 and (VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A())) >>
S [427] ->
Q [29] << 0 = now or 
AP_A(now) >>
by Substitution of Assertion Labels
and theorem 2118:
Theorem (2118) [serial 3847] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3845]
 


Theorem (2120)                               [serial 3843] 
P [420] << (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists #26#~time
  in tops ,, now 
  that A@#26# )
 and not (exists #27#~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@#27# )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv )
 and (AP iff (0 = now or 
AP_A(now)))
 and (VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A())) >>
S [427] ->
Q [29] << ((0 = now or 
AP_A(now))) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 2119:
Theorem (2119) [serial 3845] used for:
    normalization of [serial 3843]
 


Theorem (2121)                               [serial 3841] 
P [420] << (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists #26#~time
  in tops ,, now 
  that A@#26# )
 and not (exists #27#~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@#27# )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv )
 and (AP iff (0 = now or 
AP_A(now)))
 and (VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A())) >>
S [427] ->
Q [29] << AP >>
by Guided Substitution of Equals
and theorem 2120:
Theorem (2120) [serial 3843] used for:
  Guided Substitution of Equals
 replacing "AP" with its iff "((0 = now or 
AP_A(now)))" in its postcondition [serial 3841]
 


Theorem (2122)                               [serial 3839] 
P [420] << LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv )
 and (VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A()))
 and (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and not (exists #26#~time
  in tops ,, now 
  that A@#26# )
 and not (exists #27#~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@#27# )
 and (AP iff (0 = now or 
AP_A(now))) >>
S [427] ->
Q [29] << AP >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2121:
Theorem (2121) [serial 3841] used for:
    normalization of [serial 3839]
 


Theorem (2123)                               [serial 3837] 
P [420] << (VP or 
VS)@(now-va_interval)
 and va_interval = VA_INTERVAL_A()
 and not (exists #26#~time
  in tops ,, now 
  that A@#26# )
 and not (exists #27#~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@#27# )
 and (LAST_AP_OR_AS_A(now)
 and LAST_VP_OR_VS_A(now))
 and (not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - VA_INTERVAL_A() ,, now 
  that VP@tv or 
       VS@tv )
 and (VP@(now-VA_INTERVAL_A()) or 
VS@(now-VA_INTERVAL_A())))
 and (AP iff (0 = now or 
AP_A(now))) >>
S [427] ->
Q [29] << AP >>
by Associativity: (b.c).a = a.b.c
and theorem 2122:
Theorem (2122) [serial 3839] used for:
  Associativity: (b.c).a = a.b.c [serial 3837]
 


Theorem (2124)                               [serial 3835] 
P [420] << (VP or 
VS)@(now-va_interval)
 and ((((VP@((now-VA_INTERVAL_A())) or 
VS@((now-VA_INTERVAL_A()))))
 and not (exists tv~time
  in ((now - VA_INTERVAL_A())) ,, now 
  that (VS@tv or 
       VP@tv) )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )))
 and ((AP iff ((AP_A(now) or 
(now = 0)))))
 and ((va_interval = VA_INTERVAL_A()))
 and ((LAST_VP_OR_VS_A(now)
 and LAST_AP_OR_AS_A(now)))
 and not (exists #26#~time
  in tops ,, now 
  that A@#26# )
 and not (exists #27#~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@#27# ) >>
S [427] ->
Q [29] << AP >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Equality: (a=b) = (b=a)
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
    Reflexivity of Disjunction: (m or k) = (k or m)
and theorem 2123:
Theorem (2123) [serial 3837] used for:
    normalization of [serial 3835]
 


Theorem (2125)                               [serial 3833] 
P [420] << (VP or 
VS)@(now-va_interval)
 and AP_A(now)
 and AXIOM_AP()
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and not (exists #26#~time
  in tops ,, now 
  that A@#26# )
 and not (exists #27#~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@#27# ) >>
S [427] ->
Q [29] << AP >>
by Substitution of Assertion Labels
and theorem 2124:
Theorem (2124) [serial 3835] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 3833]
 


Theorem (2126)                               [serial 3819] 
P [420] << (VP or 
VS)@(now-va_interval)
 and AP_A(now)
 and AXIOM_AP()
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [427] ->
Q [29] << AP >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 2125:
Theorem (2125) [serial 3833] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 3819]
 


Theorem (2127)                               [serial 3830] 
P [427] << AP@now
 and (VP or 
VS)@(now-va_interval)
 and AP_A(now)
 and AXIOM_AP()
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [427] ->
Q [428] << AP@now >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2128)                               [serial 3831] 
P [427] << AP@now
 and (VP or 
VS)@(now-va_interval)
 and AP_A(now)
 and AXIOM_AP()
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [427] ->
Q [428] << LAST(now) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2129)                               [serial 3834] 
P [427] << AP@now
 and (VP or 
VS)@(now-va_interval)
 and AP_A(now)
 and AXIOM_AP()
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and not (exists #28#~time
  in tops ,, now 
  that A@#28# )
 and not (exists #29#~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@#29# ) >>
S [427] ->
Q [429] << not (exists #30#~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@#30# ) >>
by And Introduction Schema (aisph):  (X and Y)->X


Theorem (2130)                               [serial 3832] 
P [427] << AP@now
 and (VP or 
VS)@(now-va_interval)
 and AP_A(now)
 and AXIOM_AP()
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [427] ->
Q [429] << not (exists tap~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tap ) >>
by Replacement of Quantified Variables with #1, #2, etc.
and theorem 2129:
Theorem (2129) [serial 3834] used for:
  Replacement of Quantified Variables with #1, #2, etc. [serial 3832]
 


Theorem (2131)                               [serial 3828] 
P [427] << AP@now
 and (VP or 
VS)@(now-va_interval)
 and AP_A(now)
 and AXIOM_AP()
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [427] ->
Q [428] << AP@now
 and LAST(now)
 and not (exists tap~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tap ) >>
by Sequent Composition: if A->B and A->C and A->D then A->(B and C and D)
and theorems 2127 2128 2130:
Theorem (2127) [serial 3830] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3828]
 
Theorem (2128) [serial 3831] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3828]
 
Theorem (2130) [serial 3832] used for:
  Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 3828]
 


Theorem (2132)                               [serial 3825] 
P [427] << (VP or 
VS)@(now-va_interval)
 and AP_A(now)
 and AXIOM_AP()
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv )
 and AP@now >>
S [427] ->
Q [428] << AP@now
 and LAST(now)
 and not (exists tap~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tap ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2131:
Theorem (2131) [serial 3828] used for:
    normalization of [serial 3825]
 


Theorem (2133)                               [serial 3823] 
P [427] << AP@now
 and ((VP or 
VS)@(now-va_interval)
 and AP_A(now)
 and AXIOM_AP()
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv )) >>
S [427] ->
Q [428] << AP@now
 and LAST(now)
 and not (exists tap~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tap ) >>
by Associativity: (b.c).a = a.b.c
and theorem 2132:
Theorem (2132) [serial 3825] used for:
  Associativity: (b.c).a = a.b.c [serial 3823]
 


Theorem (2134)                               [serial 3820] 
P [427] << ((VP or 
VS)@(now-va_interval)
 and AP_A(now)
 and AXIOM_AP()
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ))
 and AP@now >>
S [427] ->
Q [428] << AP@now
 and LAST(now)
 and not (exists tap~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tap ) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2133:
Theorem (2133) [serial 3823] used for:
    normalization of [serial 3820]
 


Theorem (2135)                               [serial 3784] 
P [420] << (VP or 
VS)@(now-va_interval)
 and AP_A(now)
 and AXIOM_AP()
 and AXIOM_VA_INTERVAL()
 and LAST(now)
 and not (exists ta~time
  in tops ,, now 
  that A@ta )
 and not (exists tv~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tv ) >>
S [427] ap!
Q [428] << AP@now
 and LAST(now)
 and not (exists tap~time
  in now - va_interval ,, now 
  that (VP or 
       VS)@tap ) >>
by Port Event Output: when <<A and p@now>> -> <<B>> and <<A>> -> <<M(p)>> then <<A>> p! <<B>>
and theorems 2126 2134:
Theorem (2126) [serial 3819] used for:
  applied port output <<pre>> -> <<M[ap]>> [serial 3784]
 
Theorem (2134) [serial 3820] used for:
  applied port output <<pre and M[ap]@now>> -> <<post>> [serial 3784]
 


Theorem (2136)                               [serial 3771] 
P [420] << (AP_A(now)
 and LAST(now)
 and AXIOM_AP()
 and AXIOM_VA_INTERVAL()
 and ((VP or 
VS))@((now-va_interval))
 and not (exists tv~time
  in ((now - va_interval)) ,, now 
  that ((VP or 
       VS))@tv )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )) >>
S [427] ap!
Q [428] << (AP@now
 and LAST(now)
 and not (exists tap~time
  in ((now - va_interval)) ,, now 
  that ((VP or 
       VS))@tap )) >>
by Normalization
  Normalization Axioms:
    By Zero: (0*x)=0 or (0/x)=0 or (0+x)=x or (x-0)=x or (0-x)=-x
    Add Unnecessary Parentheses to Range Bound For No Good Reason: a..b = (a)..b
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2135:
Theorem (2135) [serial 3784] used for:
    normalization of [serial 3771]
 


Theorem (2137)                               [serial 3855] 
P [433] << LRL_A(now) >>
S [434] ->
Q [435] << LRL_A(now) >>
by Identity (id):  P->P is tautology


Theorem (2138)                               [serial 3853] 
P [433] << LRL_A(now) >>
S [434] ->
Q [435] << (LRL_A(now)) >>
by Normalization
  Normalization Axiom:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
and theorem 2137:
Theorem (2137) [serial 3855] used for:
    normalization of [serial 3853]
 


Theorem (2139)                               [serial 3852] 
P [433] << LRL_A(now) >>
S [434] ->
Q [435] << true
 and LRL_A(now) >>
by Law of And-Simplification:  P and true is P
and theorem 2138:
Theorem (2138) [serial 3853] used for:
  Law of And-Simplification:  P and true is P [serial 3852]
 


Theorem (2140)                               [serial 3851] 
P [433] << LRL_A(now) >>
S [434] ->
Q [435] << now = now
 and LRL_A(now) >>
by Equality Law (idistr):  a=a <-> true
and theorem 2139:
Theorem (2139) [serial 3852] used for:
  Equality Law (idistr):  a=a <-> true [serial 3851]
 


Theorem (2141)                               [serial 3786] 
P [433] << LRL_A(now) >>
S [434] last_ap_or_as := now
Q [435] << last_ap_or_as = now
 and LRL_A(now) >>
by Assignment Rule:
 <<P>> -> <<wp(x:=e,Q)>> which is <<Q[x/e]>>
 ---------------------------------------
             <<P>> x:=e <<Q>> (bl.a)
and theorem 2140:
Theorem (2140) [serial 3851] used for:
  applied wp for assignment [serial 3786]
 


Theorem (2142)                               [serial 3772] 
P [433] << LRL_A(now) >>
S [434] last_ap_or_as := now
Q [435] << (((last_ap_or_as = now))
 and LRL_A(now)) >>
by Normalization
  Normalization Axioms:
    Add Unnecessary Parentheses For No Good Reason: a = (a)
    Reflexivity of Conjunction: (m and k) = (k and m)
and theorem 2141:
Theorem (2141) [serial 3786] used for:
    normalization of [serial 3772]
 


Theorem (2143)                               [serial 3767] 
P [414] << (LAST(now)
 and LRL_A(now)
 and AXIOM_VA_INTERVAL()
 and ((VP or 
VS))@((now-va_interval))
 and not (exists tv~time
  in ((now - va_interval)) ,, now 
  that ((VP or 
       VS))@tv )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )) >>
S [420] << (AP_A(now)
 and LAST(now)
 and AXIOM_AP()
 and AXIOM_VA_INTERVAL()
 and ((VP or 
VS))@((now-va_interval))
 and not (exists tv~time
  in ((now - va_interval)) ,, now 
  that ((VP or 
       VS))@tv )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )) >>
ap!
<< (AP@now
 and LAST(now)
 and not (exists tap~time
  in ((now - va_interval)) ,, now 
  that ((VP or 
       VS))@tap )) >>
&
<< LRL_A(now) >>
last_ap_or_as := now
<< (((last_ap_or_as = now))
 and LRL_A(now)) >>
Q [437] << (((last_ap_or_as = now))
 and LAST(now)
 and not (exists tv~time
  in ((now - va_interval)) ,, now 
  that ((VP or 
       VS))@tv )
 and LRL_A(now)
 and AP@now) >>
by Concurrent Composition Rule:
 <<P>> -> <<P1>>,  <<P>> -> <<P2>>, . . . , <<P>> -> <<Pn>>
 <<P1>> S1 <<Q1>>, <<P2>> S2 <<Q2>>, . . . , <<Pn>> Sn <<Qn>>
 <<Q1 and Q2 and  . . . and Qn>> -> <<Q>>
 -----------------------------------------------
       <<P>> S <<Q>> where S is
 <<P1>> S1 <<Q1>> & <<P2>> S2 <<Q2>> & . . . & <<Pn>> Sn <<Qn>> (bl.cck)
and theorems 2109 2111 2116 2136 2142:
Theorem (2109) [serial 3768] used for:
  P -> P1 in concurrent composition for [serial 3767]
 
Theorem (2111) [serial 3769] used for:
  P -> P2 in concurrent composition for [serial 3767]
 
Theorem (2116) [serial 3770] used for:
  Q1 and Q2 and  . . . and Qn -> Q in concurrent composition for [serial 3767]
 
Theorem (2136) [serial 3771] used for:
  <<P1>> S1 <<Q1>> in concurrent composition for [serial 3767]
 
Theorem (2142) [serial 3772] used for:
  <<P2>> S2 <<Q2>> in concurrent composition for [serial 3767]
 


Theorem (2144)                               [serial 3766] 
P [414] << (LAST(now)
 and LRL_A(now)
 and AXIOM_VA_INTERVAL()
 and ((VP or 
VS))@((now-va_interval))
 and not (exists tv~time
  in ((now - va_interval)) ,, now 
  that ((VP or 
       VS))@tv )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )) >>
S [420]   {
  << (AP_A(now)
   and LAST(now)
   and AXIOM_AP()
   and AXIOM_VA_INTERVAL()
   and ((VP or 
  VS))@((now-va_interval))
   and not (exists tv~time
    in ((now - va_interval)) ,, now 
    that ((VP or 
         VS))@tv )
   and not (exists ta~time
    in tops ,, now 
    that A@ta )) >>
  ap!
  << (AP@now
   and LAST(now)
   and not (exists tap~time
    in ((now - va_interval)) ,, now 
    that ((VP or 
         VS))@tap )) >>
  &
  << LRL_A(now) >>
  last_ap_or_as := now
  << (((last_ap_or_as = now))
   and LRL_A(now)) >>
  } 
Q [437] << (((last_ap_or_as = now))
 and LAST(now)
 and not (exists tv~time
  in ((now - va_interval)) ,, now 
  that ((VP or 
       VS))@tv )
 and LRL_A(now)
 and AP@now) >>
by Introduction of Existential Quantification (bl.elq)
and theorem 2143:
Theorem (2143) [serial 3767] used for:
  <<P>> T <<Q>> in existential lattice quantification for [serial 3766]
 


Theorem (2145)                               [serial 1077] 
P [413] << ((LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and (((vp or 
vs)@(now-va_interval)
 and not (exists t~time
  in now - va_interval ,, now 
  that (vp or 
       vs)@t )))
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [414] << (LAST(now)
 and LRL_A(now)
 and AXIOM_VA_INTERVAL()
 and ((VP or 
VS))@((now-va_interval))
 and not (exists tv~time
  in ((now - va_interval)) ,, now 
  that ((VP or 
       VS))@tv )
 and not (exists ta~time
  in tops ,, now 
  that A@ta )) >>
  {
  << (AP_A(now)
   and LAST(now)
   and AXIOM_AP()
   and AXIOM_VA_INTERVAL()
   and ((VP or 
  VS))@((now-va_interval))
   and not (exists tv~time
    in ((now - va_interval)) ,, now 
    that ((VP or 
         VS))@tv )
   and not (exists ta~time
    in tops ,, now 
    that A@ta )) >>
  ap!
  << (AP@now
   and LAST(now)
   and not (exists tap~time
    in ((now - va_interval)) ,, now 
    that ((VP or 
         VS))@tap )) >>
  &
  << LRL_A(now) >>
  last_ap_or_as := now
  << (((last_ap_or_as = now))
   and LRL_A(now)) >>
  } 
<< (((last_ap_or_as = now))
 and LAST(now)
 and not (exists tv~time
  in ((now - va_interval)) ,, now 
  that ((VP or 
       VS))@tv )
 and LRL_A(now)
 and AP@now) >>
Q [196] << (PAV(now)
 and LRL_A(now)
 and LAST(now)) >>
by Introduction of Existential Quantification (bl.aab)
and theorems 2049 2057 2144:
Theorem (2049) [serial 3764] used for:
  as <<P>> -> <<pre>> in <<P>> { <<pre>> S <<post>> } <<Q>> for [serial 1077]
 
Theorem (2057) [serial 3765] used for:
  as <<post>> -> <<Q>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1077]
 
Theorem (2144) [serial 3766] used for:
  as <<pre>> S <<post>> in <<P>> { <<pre>> S <<post>> } <<Q>> [serial 1077]
 


Theorem (2146)                               [serial 1078] 
P [445] << ((SAV(now)
 and LRL_A(now)
 and LAST(now)))
 and stop@now
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that ((as@(u-((dav+savo)))
        and not (exists t~time
         in u - ((dav + savo)) ,, u 
         that as@t ))) )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [444] ->
Q [188] << true >>
by True Conclusion Schema (tc): P->true


Theorem (2147)                               [serial 1079] 
P [445] << ((PAV(now)
 and LRL_A(now)
 and LAST(now)))
 and stop@now
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [444] ->
Q [188] << true >>
by True Conclusion Schema (tc): P->true


Theorem (2148)                               [serial 1080] 
P [445] << ((LRL_A(now)
 and LAST(now)
 and VAI(now)))
 and stop@now
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-max_cci)
        and not (exists t~time
         in u - max_cci ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that A@u )
 and not (exists u~time
  in tops ,, now 
  that V@u )
 and not (exists u~time
  in tops ,, now 
  that (((vp or 
       vs)@(u-va_interval)
        and not (exists t~time
         in u - va_interval ,, u 
         that (vp or 
              vs)@t ))) )
 and not (exists u~time
  in tops ,, now 
  that stop@u ) >>
S [444] ->
Q [188] << true >>
by True Conclusion Schema (tc): P->true


Theorem (2149)                               [serial 1046] 
P [107] <<   >>
S [154] ->
Q [107] << DDD.imp proof obligations >>
by Initial Thread Obligations
and theorems 681 687 693 699 710 711 720 734 744 748 856 1023 1196 1369 1372 1375 1486 1495 1498 1606 1609 1612 1730 1733 1817 1943 1951 1954 1957 2021 2145 2146 2147 2148:
Theorem (681) [serial 1047] used for:
  <<I>> -> BLESS::Invariant of thread DDD.imp
 
Theorem (687) [serial 1048] used for:
  <<M(pav)>> -> <<I>> from invariant I when complete state pav has Assertion <<M(pav)>> in its definition.
 
Theorem (693) [serial 1049] used for:
  <<M(sav)>> -> <<I>> from invariant I when complete state sav has Assertion <<M(sav)>> in its definition.
 
Theorem (699) [serial 1050] used for:
  <<M(va)>> -> <<I>> from invariant I when complete state va has Assertion <<M(va)>> in its definition.
 
Theorem (710) [serial 1051] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state pav_check_vrp, <<M(pav_check_vrp)>> -> <<e1 or e2 or . . . en>>
 
Theorem (711) [serial 1052] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state go, <<M(go)>> -> <<e1 or e2 or . . . en>>
 
Theorem (720) [serial 1053] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state sav_check_vrp, <<M(sav_check_vrp)>> -> <<e1 or e2 or . . . en>>
 
Theorem (734) [serial 1054] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_atrial_refractories, <<M(check_atrial_refractories)>> -> <<e1 or e2 or . . . en>>
 
Theorem (744) [serial 1055] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state check_vrp, <<M(check_vrp)>> -> <<e1 or e2 or . . . en>>
 
Theorem (748) [serial 1056] used for:
  Serban's Theorem:  disjunction of execute conditions leaving execution state sav_check_url, <<M(sav_check_url)>> -> <<e1 or e2 or . . . en>>
 
Theorem (856) [serial 1057] used for:
   <<M(go)>> A <<M(va)>> for T0_GO:go-[ ]->va{A};
 
Theorem (1023) [serial 1058] used for:
   <<M(va) and x>> A <<M(va)>> for T1_PACE_AFTER_LRL:va-[x]->va{A};
 
Theorem (1196) [serial 1059] used for:
   <<M(sav) and x>> A <<M(va)>> for T1_PACE_AFTER_LRL:sav-[x]->va{A};
 
Theorem (1369) [serial 1060] used for:
   <<M(pav) and x>> A <<M(va)>> for T1_PACE_AFTER_LRL:pav-[x]->va{A};
 
Theorem (1372) [serial 1061] used for:
   <<M(sav) and x>> -> <<M(sav_check_vrp)>> for T2_VS_AFTER_AS:sav-[x]->sav_check_vrp{};
 
Theorem (1375) [serial 1062] used for:
   <<M(sav_check_vrp) and x>> -> <<M(sav)>> for T4_VS_AFTER_AS_IN_VRP:sav_check_vrp-[x]->sav{};
 
Theorem (1486) [serial 1063] used for:
   <<M(sav_check_vrp) and x>> A <<M(va)>> for T5_VS_AFTER_AS_AFTER_VRP:sav_check_vrp-[x]->va{A};
 
Theorem (1495) [serial 1064] used for:
   <<M(sav) and x>> -> <<M(sav_check_url)>> for T6_EXPIRED_SENSED_AV_DELAY:sav-[x]->sav_check_url{};
 
Theorem (1498) [serial 1065] used for:
   <<M(sav_check_url) and x>> -> <<M(sav)>> for T7_TRACKED_VP_TOO_SOON_AFTER_PREVIOUS_VS_OR_VP:sav_check_url-[x]->sav{};
 
Theorem (1606) [serial 1066] used for:
   <<M(sav_check_url) and x>> A <<M(va)>> for T8_TRACKED_VP_AFTER_AS:sav_check_url-[x]->va{A};
 
Theorem (1609) [serial 1067] used for:
   <<M(pav) and x>> -> <<M(pav_check_vrp)>> for T9_VS_AFTER_AP:pav-[x]->pav_check_vrp{};
 
Theorem (1612) [serial 1068] used for:
   <<M(pav_check_vrp) and x>> -> <<M(pav)>> for T10_VS_AFTER_AP_IN_VRP:pav_check_vrp-[x]->pav{};
 
Theorem (1730) [serial 1069] used for:
   <<M(pav_check_vrp) and x>> A <<M(va)>> for T11_VS_AFTER_AP_AFTER_VRP:pav_check_vrp-[x]->va{A};
 
Theorem (1733) [serial 1070] used for:
   <<M(va) and x>> -> <<M(check_atrial_refractories)>> for T12_AS_AFTER_VS_OR_VP:va-[x]->check_atrial_refractories{};
 
Theorem (1817) [serial 1071] used for:
   <<M(check_atrial_refractories) and x>> A <<M(sav)>> for T13_AS:check_atrial_refractories-[x]->sav{A};
 
Theorem (1943) [serial 1072] used for:
   <<M(check_atrial_refractories) and x>> A <<M(sav)>> for T14_AS_AT:check_atrial_refractories-[x]->sav{A};
 
Theorem (1951) [serial 1073] used for:
   <<M(check_atrial_refractories) and x>> -> <<M(va)>> for T15_STILL_IN_PVARP:check_atrial_refractories-[x]->va{};
 
Theorem (1954) [serial 1074] used for:
   <<M(va) and x>> -> <<M(check_vrp)>> for T16_VS_AFTER_VS_OR_VP:va-[x]->check_vrp{};
 
Theorem (1957) [serial 1075] used for:
   <<M(check_vrp) and x>> -> <<M(va)>> for T17_STILL_IN_VRP:check_vrp-[x]->va{};
 
Theorem (2021) [serial 1076] used for:
   <<M(check_vrp) and x>> A <<M(va)>> for T18_VRP_EXPIRED:check_vrp-[x]->va{A};
 
Theorem (2145) [serial 1077] used for:
   <<M(va) and x>> A <<M(pav)>> for T19_AP_AFTER_TIMEOUT_VS_OR_VP:va-[x]->pav{A};
 
Theorem (2146) [serial 1078] used for:
   <<M(sav) and x>> -> <<M(off)>> for T20_STOP:sav-[x]->off{};
 
Theorem (2147) [serial 1079] used for:
   <<M(pav) and x>> -> <<M(off)>> for T20_STOP:pav-[x]->off{};
 
Theorem (2148) [serial 1080] used for:
   <<M(va) and x>> -> <<M(off)>> for T20_STOP:va-[x]->off{};
 


Theorem (2150)                               [serial 1081] 
P [1] << LRL_A(now) >>
S    ->
Q [2] << LRL_A(now) >>
by Identity (id):  P->P is tautology


Theorem (2151)                               [serial 1082] 
P [1] << LRL_A(now) >>
S    ->
Q [2] << LRL_A(now) >>
by Identity (id):  P->P is tautology


Theorem (2152)                               [serial 1083] 
P [1] << asCount = AS_COUNT() >>
S [2] ->
Q [1] << asCount = AS_COUNT() >>
by Identity (id):  P->P is tautology


Theorem (2153)                               [serial 1084] 
P [1] << atCount = AT_COUNT() >>
S [2] ->
Q [1] << atCount = AT_COUNT() >>
by Identity (id):  P->P is tautology


Theorem (2154)                               [serial 1085] 
P [1] << LAST_V_WAS_VS(now) >>
S [2] ->
Q [1] << LAST_V_WAS_VS(now) >>
by Identity (id):  P->P is tautology


Theorem (2155)                               [serial 1086] 
P [1] << LAST_V_WAS_VS(now) >>
S [2] ->
Q [1] << LAST_V_WAS_VS(now) >>
by Identity (id):  P->P is tautology


Theorem (2156)                               [serial 1087] 
P [1] << cci = CCI >>
S [2] ->
Q [1] << cci = CCI >>
by Identity (id):  P->P is tautology


Theorem (2157)                               [serial 1088] 
P [1] << cci = CCI >>
S [2] ->
Q [1] << cci = CCI >>
by Identity (id):  P->P is tautology


Theorem (2158)                               [serial 1089] 
P [1] << cci = CCI >>
S [2] ->
Q [1] << cci = CCI >>
by Identity (id):  P->P is tautology


Theorem (2159)                               [serial 1090] 
P [1] << AP >>
S [2] ->
Q [1] << AP >>
by Identity (id):  P->P is tautology


Theorem (2160)                               [serial 1091] 
P [1] << VP >>
S [2] ->
Q [1] << VP >>
by Identity (id):  P->P is tautology


Theorem (2161)                               [serial 1092] 
P [1] << AS >>
S [2] ->
Q [1] << AS >>
by Identity (id):  P->P is tautology


Theorem (2162)                               [serial 1093] 
P [1] << AS >>
S [2] ->
Q [1] << AS >>
by Identity (id):  P->P is tautology


Theorem (2163)                               [serial 1094] 
P [1] << AT >>
S [2] ->
Q [1] << AT >>
by Identity (id):  P->P is tautology


Theorem (2164)                               [serial 1095] 
P [1] << AT >>
S [2] ->
Q [1] << AT >>
by Identity (id):  P->P is tautology


Theorem (2165)                               [serial 1096] 
P [1] << VS >>
S [2] ->
Q [1] << VS >>
by Identity (id):  P->P is tautology


Theorem (2166)                               [serial 1097] 
P [1] << PVC(now) >>
S [2] ->
Q [1] << PVC(now) >>
by Identity (id):  P->P is tautology


Theorem (2167)                               [serial 1098] 
P [1] << RAS(now) >>
S [2] ->
Q [1] << RAS(now) >>
by Identity (id):  P->P is tautology


Theorem (2168)                               [serial 1099] 
P [1] << RVS(now) >>
S [2] ->
Q [1] << RVS(now) >>
by Identity (id):  P->P is tautology


Theorem (2169)                               [serial 1100] 
P [1] << min_cci = MIN_CCI >>
S [2] ->
Q [1] << min_cci = MIN_CCI >>
by Identity (id):  P->P is tautology


Theorem (2170)                               [serial 1101] 
P [1] << max_cci = MAX_CCI >>
S [2] ->
Q [1] << max_cci = MAX_CCI >>
by Identity (id):  P->P is tautology


Theorem (2171)                               [serial 1102] 
P [1] << dav = DAV_A() >>
S [2] ->
Q [1] << dav = DAV_A() >>
by Identity (id):  P->P is tautology


Theorem (2172)                               [serial 3915] 
P [1] << MIN_CCI = min_cci >>
S [2] ->
Q [1] << MIN_CCI = min_cci >>
by Identity (id):  P->P is tautology


Theorem (2173)                               [serial 1103] 
P [1] << min_cci = MIN_CCI >>
S [2] ->
Q [1] << min_cci = MIN_CCI >>
by Normalization
  Normalization Axiom:
    Reflexivity of Equality: (a=b) = (b=a)
and theorem 2172:
Theorem (2172) [serial 3915] used for:
    normalization of [serial 1103]
 


Theorem (2174)                               [serial 1104] 
P [1] << max_cci = MAX_CCI >>
S [2] ->
Q [1] << max_cci = MAX_CCI >>
by Identity (id):  P->P is tautology


Theorem (2175)                               [serial 3918] 
P [1] << atr_max_cci = ((if ((((now - dur_met)) > FBT)) then LRL else (URL + ((((
((now - dur_met)) * ((LRL - URL)))) / FBT))))) >>
S [2] ->
Q [1] << atr_max_cci = ((if ((((now - dur_met)) > FBT)) then LRL else (URL + ((((
((now - dur_met)) * ((LRL - URL)))) / FBT))))) >>
by Identity (id):  P->P is tautology


Theorem (2176)                               [serial 3917] 
P [1] << atr_max_cci = ((if ((((now - dur_met)) > FBT)) then LRL else (URL + ((((
((now - dur_met)) * ((LRL - URL)))) / FBT))))) >>
S [2] ->
Q [1] << atr_max_cci = FallBack_MaxCCI(dur_met:dur_met, x:now) >>
by Substitution of Assertion Labels
and theorem 2175:
Theorem (2175) [serial 3918] used for:
  substituted Assertions' predicates for  labels in postconditions [serial 3917]
 


Theorem (2177)                               [serial 1105] 
P [1] << atr_max_cci = FB_MaxCCI() >>
S [2] ->
Q [1] << atr_max_cci = FallBack_MaxCCI(dur_met:dur_met, x:now) >>
by Substitution of Assertion Labels
and theorem 2176:
Theorem (2176) [serial 3917] used for:
  substituted Assertions' predicates for  labels in preconditions [serial 1105]
 


Theorem (2178)                               [serial 1106] 
P [1] << dav = DAV_A() >>
S [2] ->
Q [1] << dav = DAV_A() >>
by Identity (id):  P->P is tautology


Theorem (2179)                               [serial 1107] 
P [1] << FB >>
S [2] ->
Q [1] << FB >>
by Identity (id):  P->P is tautology


Theorem (2180)                               [serial 1108] 
P [1] << ATR_DETECT(now) >>
S [2] ->
Q [1] << ATR_DETECT(now) >>
by Identity (id):  P->P is tautology


Theorem (2181)                               [serial 1109] 
P [1] << FB_START >>
S [2] ->
Q [1] << FB_START >>
by Identity (id):  P->P is tautology


Theorem (2182)                               [serial 1110] 
P [1] << ATR_END(now) >>
S [2] ->
Q [1] << ATR_END(now) >>
by Identity (id):  P->P is tautology


Theorem (2183)                               [serial 1111] 
P [1] << AP >>
S [2] ->
Q [1] << AP >>
by Identity (id):  P->P is tautology


Theorem (2184)                               [serial 1112] 
P [1] << VP >>
S [2] ->
Q [1] << VP >>
by Identity (id):  P->P is tautology


Theorem (2185)                               [serial 1001] 
P     
S     
Q     
by Initial Thread Obligations
and theorems 66 299 490 679 2149 2150 2151 2152 2153 2154 2155 2156 2157 2158 2159 2160 2161 2162 2163 2164 2165 2166 2167 2168 2169 2170 2171 2173 2174 2177 2178 2179 2180 2181 2182 2183 2184:
Theorem (66) [serial 1002] used for:
  Initial proof obligations for RateController.atr
 
Theorem (299) [serial 1011] used for:
  Initial proof obligations for RateController.normal
 
Theorem (490) [serial 1019] used for:
  Initial proof obligations for AtCounter.imp
 
Theorem (679) [serial 1032] used for:
  Initial proof obligations for AsCounter.imp
 
Theorem (2149) [serial 1046] used for:
  Initial proof obligations for DDD.imp
 
Theorem (2150) [serial 1081] used for:
  Subcomponent's Invariant implies PG.imp's Invariant
 
Theorem (2151) [serial 1082] used for:
  Subcomponent's Invariant implies pg_process.imp's Invariant
 
Theorem (2152) [serial 1083] used for:
  Composition of Subcomponents via Directional Connection dc.asCount -> atr.asCount:
 asCount -> asCount
 
Theorem (2153) [serial 1084] used for:
  Composition of Subcomponents via Directional Connection ac.atCount -> atr.atCount:
 atCount -> atCount
 
Theorem (2154) [serial 1085] used for:
  Composition of Subcomponents via Directional Connection ddd.last_v_was_vs -> rc.last_v_was_vs:
 last_v_was_vs -> last_v_was_vs
 
Theorem (2155) [serial 1086] used for:
  Composition of Subcomponents via Directional Connection ddd.last_v_was_vs -> atr_rc.last_v_was_vs:
 last_v_was_vs -> last_v_was_vs
 
Theorem (2156) [serial 1087] used for:
  Composition of Subcomponents via Directional Connection ddd.cci -> rc.cci:
 cci -> cci
 
Theorem (2157) [serial 1088] used for:
  Composition of Subcomponents via Directional Connection ddd.cci -> atr_rc.cci:
 cci -> cci
 
Theorem (2158) [serial 1089] used for:
  Composition of Subcomponents via Directional Connection ddd.cci -> mkr.cci:
 cci -> cci
 
Theorem (2159) [serial 1090] used for:
  Composition of Subcomponents via Directional Connection ddd.ap -> mkr.ap:
 ap -> ap
 
Theorem (2160) [serial 1091] used for:
  Composition of Subcomponents via Directional Connection ddd.vp -> mkr.vp:
 vp -> vp
 
Theorem (2161) [serial 1092] used for:
  Composition of Subcomponents via Directional Connection ddd.as -> mkr.as:
 as -> as
 
Theorem (2162) [serial 1093] used for:
  Composition of Subcomponents via Directional Connection ddd.as -> atr.dc.as:
 as -> as
 
Theorem (2163) [serial 1094] used for:
  Composition of Subcomponents via Directional Connection ddd.at -> mkr.at:
 at -> at
 
Theorem (2164) [serial 1095] used for:
  Composition of Subcomponents via Directional Connection ddd.at -> atr.ac.at:
 at -> at
 
Theorem (2165) [serial 1096] used for:
  Composition of Subcomponents via Directional Connection ddd.vs -> mkr.vs:
 vs -> vs
 
Theorem (2166) [serial 1097] used for:
  Composition of Subcomponents via Directional Connection ddd.pvc -> mkr.pvc:
 pvc -> pvc
 
Theorem (2167) [serial 1098] used for:
  Composition of Subcomponents via Directional Connection ddd.ras -> mkr.ras:
 ras -> ras
 
Theorem (2168) [serial 1099] used for:
  Composition of Subcomponents via Directional Connection ddd.rvs -> mkr.rvs:
 rvs -> rvs
 
Theorem (2169) [serial 1100] used for:
  Composition of Subcomponents via Directional Connection rc.min_cci -> ddd.min_cci:
 min_cci -> min_cci
 
Theorem (2170) [serial 1101] used for:
  Composition of Subcomponents via Directional Connection rc.max_cci -> ddd.max_cci:
 max_cci -> max_cci
 
Theorem (2171) [serial 1102] used for:
  Composition of Subcomponents via Directional Connection rc.dav -> ddd.dav:
 dav -> dav
 
Theorem (2173) [serial 1103] used for:
  Composition of Subcomponents via Directional Connection atr_rc.min_cci -> ddd.min_cci:
 min_cci -> min_cci
 
Theorem (2174) [serial 1104] used for:
  Composition of Subcomponents via Directional Connection atr_rc.max_cci -> ddd.max_cci:
 max_cci -> max_cci
 
Theorem (2177) [serial 1105] used for:
  Composition of Subcomponents via Directional Connection atr_rc.atr_max_cci -> ddd.atr_max_cci:
 atr_max_cci -> atr_max_cci
 
Theorem (2178) [serial 1106] used for:
  Composition of Subcomponents via Directional Connection atr_rc.dav -> ddd.dav:
 dav -> dav
 
Theorem (2179) [serial 1107] used for:
  Composition of Subcomponents via Directional Connection atr.atr.fb -> ddd.fb:
 fb -> fb
 
Theorem (2180) [serial 1108] used for:
  Composition of Subcomponents via Directional Connection atr.atr.atr_detect -> mkr.atr_dct:
 atr_detect -> atr_dct
 
Theorem (2181) [serial 1109] used for:
  Composition of Subcomponents via Directional Connection atr.atr.atr_fallback -> mkr.atr_fb:
 atr_fallback -> atr_fb
 
Theorem (2182) [serial 1110] used for:
  Composition of Subcomponents via Directional Connection atr.atr.atr_end -> mkr.atr_end:
 atr_end -> atr_end
 
Theorem (2183) [serial 1111] used for:
  Composition of Subcomponents via Directional Connection DDD.ddd.ap -> front_end.ap:
 ap -> ap
 
Theorem (2184) [serial 1112] used for:
  Composition of Subcomponents via Directional Connection DDD.ddd.vp -> front_end.vp:
 vp -> vp
 


closing proof.txt file 