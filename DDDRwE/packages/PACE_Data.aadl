--PACE_Data.aadl
--data components used by PACEMAKER

package PACE_Data
public
with BLESS;

annex Unit {**
	extension mpss, <gravity> G / 9.8, <milliG> milliG / 9.8e-3 ;
	s s s / m [response factor] ssspm, <ms per milliG> rf / 9.8 ;
**};

annex Typedef {**
  type pacingMode is enumeration(Off DD VDD DDI DOO AOO AAI VOO VVI DDDR VDDR DDIR DOOR AOOR AAIR VOOR VVIR)
  type rx is record (
    lrl : quantity ms
    url : quantity ms
    av : quantity ms
    savo : quantity ms
    act : quantity milliG  --activity threshold
    vrp : quantity ms
    arp : quantity ms
    pvarp : quantity ms
    pv : boolean
    sv :boolean
    pa : boolean
    sa :boolean
    inhibit : boolean
    track :boolean
    hy : quantity ms
    rr : boolean  --rate response enable
    rf : quantity rf  --response factor
    msr : quantity ms
    min_av : quantity ms
    ex_pvarp : quantity ms
    rt : quantity s  --reaction time in seconds
    ct : quantity s  --recovery time in seconds
    at : quantity milliG  --activity threshold
    atr_enable : boolean
    atr_duration : quantity whole
    fb_time : quantity s
    drs : quantity scalar  --down rate smoothing, scalar percent
    urs : quantity scalar  --up rate smoothing, scalar percent
    
    
--     : quantity ms
--     : quantity ms
--     : quantity ms
--     : quantity ms
--     : quantity ms
  )
**};

-------DATA------------
data ms  --millisecond 
  properties
  BLESS::Typed=>"quantity ms";
end ms;

data second  --a second 
  properties
  BLESS::Typed=>"quantity s";
end second;

data milliG  --thousandth of Earth's gravity 
properties
    BLESS::Typed=>"quantity milliG";
end milliG;

data ResponseFactor  --to motion
--integer 1 to 16
  properties
    BLESS::Typed=>"quantity rf";
end ResponseFactor;

data PacingMode  --pacing modes NO TRIGGER PACING
  properties
    BLESS::Typed=> "pacingMode ";
end PacingMode;

data CCcount
  properties
    BLESS::Typed=>"quantity whole";
end CCcount;

data percent
  properties
    BLESS::Typed=>"quantity scalar";
end percent;

data Rx
  properties
    BLESS::Typed=>"rx";  
end Rx;

end PACE_data;