--PGprocess.aadl

package PGprocess
public
with sw, BLESS, BLESS_Types, --Base_Types, PACEMAKER, 
  PACE_data, rc, ATR, mark, Rx;
flag renames data BLESS_Types::flag;
ms renames data PACE_data::ms;
milliG renames data PACE_data::milliG;

process pg_process
  features
  --from front end
  a : in event port;  --atrial signal
  v : in event port;  --ventricular signal
  tna : in data port flag;  --noise A-channel
  tnv : in data port flag;  --noise V-channel
  --to front end
  ap: out event port	--pace atrium 
    {BLESS::Assertion=>"<<AP>>";};
  vp: out event port	--pace ventricle, but not too soon 
    {BLESS::Assertion=>"<<VP>>";};
  --to telemetry
  settings : in out data port; 
  --from accelerometer
  xl : in data port milliG;
  --from hall-effect switch
  magnet : in data port flag;
  --markers
  mark_A: out data port;	--atrial marker to telemetry and history
  mark_V: out data port;	--ventricular marker to telemetry and history
  mark_X: out data port;	--extra-line marker to telemetry and history
  properties
    	BLESS::Invariant => "<<LRL_A(now)>>";  
end pg_process;

process implementation pg_process.imp
	subcomponents
		ddd: thread sw::pacer.imp;
		rc: thread rc::RateController.normal in modes (normal);
		atr_rc: thread rc::RateController.atr in modes (atr_mode);
		atr: thread group ATR::AtrialTachyResponse.imp;
		mkr: thread mark::Markers.imp;
		stg: thread Rx::Settings.imp;
	connections
		--signals, paces, and noise
		ad: port a -> ddd.a; --atrial signal
		vd: port v -> ddd.v; --ventricular signal
		tnad: port tna -> ddd.tna; --noise A-channel
		tnvd: port tnv -> ddd.tnv; --noise V-channel
		dap: port ddd.ap -> ap; --pace atrium 
		dvp: port ddd.vp -> vp; --pace ventricle
		--telemetry
		tel: port settings <-> stg.settings; --telemetry
		--sensors
		xlrc: port xl -> rc.xl;
		magrc: port magnet -> rc.mag;
		xlatr: port xl -> atr_rc.xl;
		magatr: port magnet -> atr_rc.mag;
		--settings to DDD
		lsd: port stg.lrl -> ddd.lrl; --LRLi
		usd: port stg.url -> ddd.url; --URLi
		avsd: port stg.av -> ddd.av; --AV delay
		osd: port stg.savo -> ddd.savo; --sensed AV delay offset
		actsd: port stg.act -> ddd.act; --
		vrpsd: port stg.vrp -> ddd.vrp; --
		arpsd: port stg.arp -> ddd.arp; --
		pvarpsd: port stg.pvarp -> ddd.pvarp; --
		pvsd: port stg.pv -> ddd.pv; --
		svsd: port stg.sv -> ddd.sv; --
		pasd: port stg.pa -> ddd.pa; --
		sasd: port stg.sa -> ddd.sa; --
		inhsd: port stg.inhibit -> ddd.inhibit; --
		trksd: port stg.track -> ddd.track; --
		expsrc: port stg.ex_pvarp -> ddd.ex_pvarp; --
		mavddd: port stg.min_av -> ddd.min_av;
		hyddd: port stg.hy -> ddd.hy;
		--settings to Rate Controller
		hsdrc: port stg.hy -> rc.hy in modes (normal); --
		lsrc: port stg.lrl -> rc.lrl in modes (normal);
		usrc: port stg.url -> rc.url in modes (normal);
		avsrc: port stg.av -> rc.av in modes (normal);
		rsrc: port stg.rr -> rc.rr in modes (normal); --
		fsrc: port stg.rf -> rc.rf in modes (normal); --
		mssrc: port stg.msr -> rc.msr in modes (normal); --
		rtsrc: port stg.rt -> rc.rt in modes (normal); --
		atsrc: port stg.at -> rc.at in modes (normal); --
		ctsrc: port stg.ct -> rc.ct in modes (normal); --
		mdavsrc: port stg.min_av -> rc.min_av in modes (normal); --
		--settings to ATR mode rate controller
		atrfbt: port stg.fb_time -> atr_rc.fb_time in modes (atr_mode); --ATR fall-back time
		hsdatr_rc: port stg.hy -> atr_rc.hy in modes (atr_mode); --
		lsatr_rc: port stg.lrl -> atr_rc.lrl in modes (atr_mode);
		usatr_rc: port stg.url -> atr_rc.url in modes (atr_mode);
		avsatr_rc: port stg.av -> atr_rc.av in modes (atr_mode);
		rsatr_rc: port stg.rr -> atr_rc.rr in modes (atr_mode); --
		fsatr_rc: port stg.rf -> atr_rc.rf in modes (atr_mode); --
		mssatr_rc: port stg.msr -> atr_rc.msr in modes (atr_mode); --
		rtsatr_rc: port stg.rt -> atr_rc.rt in modes (atr_mode); --
		atsatr_rc: port stg.at -> atr_rc.at in modes (atr_mode); --
		ctsatr_rc: port stg.ct -> atr_rc.ct in modes (atr_mode); --
		mdavsatr_rc: port stg.min_av -> atr_rc.min_av in modes (atr_mode); --
		--settings to ATR
		amsa: port stg.atr_enable -> atr.atr_enable;
		adsa: port stg.atr_duration -> atr.dur;
		---DDD to Rate Controller
		ccidrc: port ddd.cci -> rc.cci;
		lvwvs: port ddd.last_v_was_vs -> rc.last_v_was_vs;
		---DDD to ATR mode Rate Controller
		ccidatr_rc: port ddd.cci -> atr_rc.cci;
		lvwvsatr_rc: port ddd.last_v_was_vs -> atr_rc.last_v_was_vs;

		--ATR rate controller to DDD
		mxatr: port atr_rc.max_cci -> ddd.max_cci in modes (atr_mode);
		--Rate Controller to DDD
		mnrcd: port rc.min_cci -> ddd.min_cci in modes (normal);
		mxrcd: port rc.max_cci -> ddd.max_cci in modes (normal);
		davrcd: port rc.dav -> ddd.dav in modes (normal);
		--ATR rate controller to DDD
		atr_mnrcd: port atr_rc.min_cci -> ddd.min_cci in modes (atr_mode);
		atr_mxrcd: port atr_rc.atr_max_cci -> ddd.atr_max_cci;
		atr_davrcd: port atr_rc.dav -> ddd.dav in modes (atr_mode);
		--DDD to Markers
		apdm: port ddd.ap -> mkr.ap;
		vpdm: port ddd.vp -> mkr.vp;
		asdm: port ddd.as -> mkr.as;
		vsdm: port ddd.vs -> mkr.vs;
		atdm: port ddd.at -> mkr.at;
		pvcdm: port ddd.pvc -> mkr.pvc;
		rasdm: port ddd.ras -> mkr.ras;
		rvsdm: port ddd.rvs -> mkr.rvs;
		ccidm: port ddd.cci -> mkr.cci;
		--front-end to markers
		tnam: port tna -> mkr.tna;
		tnvm: port tnv -> mkr.tnv;
		--Markers to history and telemetry
		mka: port mkr.mark_A -> mark_A;
		mkv: port mkr.mark_V -> mark_V;
		mkx: port mkr.mark_X -> mark_X;
		--Atrial Tachycardia Response
		fbad: port atr.fb -> ddd.fb;
--    fbarc: port atr.fb -> rc.fb;
		asda: port ddd.as -> atr.as;
		atda: port ddd.at -> atr.at;
		dctam: port atr.atr_detect -> mkr.atr_dct;
		fbam: port atr.atr_fallback -> mkr.atr_fb;
		endam: port atr.atr_end -> mkr.atr_end;
		--rate smoothing
		drssd: port stg.drs -> rc.drs; --down-rate smoothing
		urssd: port stg.urs -> rc.urs; --up-rate smoothing
		drsatr: port stg.drs -> atr_rc.drs;
		ursatr: port stg.urs -> atr_rc.urs;
	modes
		normal: initial mode;
		atr_mode: mode;
		start_atr: normal -[atr.atr_fallback]-> atr_mode;
		end_atr: atr_mode -[atr.atr_end]-> normal;
end pg_process.imp;

end PGprocess;