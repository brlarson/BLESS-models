#This file, script.txt, was produced the BLESS Proof Assistant v3.2.4
#  at Tue Jul 30 22:23:56 CDT 2024 by brianlarson
#  You chose proof script: /Users/brianlarson/git3/BLESS-models/DDDRwE/proof-scripts/subscripts/atcounter.ps
push
sort-by-component[ATR::AtCounter.imp]
#ATR::AtCounter.imp
#[serial 1003] <<M(run)>> -> <<I>> from invariant I when complete state run has Assertion <<M(run)>> in its definitio
make-an
substitute-pre
tautologies
#[serial 1004] <<M(fill)>> -> <<I>> from invariant I when complete state fill has Assertion <<M(fill)>> in its definition.
substitute-pre
normalize
tautologies
#[serial 1005] Serban's Theorem:  disjunction of execute conditions leaving execution state start, <<M(start)>> -> <<e1 or e2 or . . . en>>
tautologies
#[serial 1006] Serban's Theorem:  disjunction of execute conditions leaving execution state check_fill, <<M(check_fill)>> -> <<e1 or e2 or . . . en>>
normalize
laws
tautologies
#[serial 1007]  <<M(start)>> -> <<M(fill)>> for atc_init: start-[ ]->fill{};
normalize
substitute-post
substitute-post
guided-sub-equals[ub]
guided-sub-equals[lb]
normalize
laws
laws
quant
normalize
laws
tautologies
#[serial 1008]  <<M(fill) and x>> A <<M(check_fill)>> for atc_fill: fill-[x]->check_fill{A};
reduce
push
#ATR::AtCounter.imp
#[serial 1228] <<P>> -> <<P1>> in sequential composition for [serial 100
make-an
normalize
laws
replace-port
tautologies
#[serial 1229] <<Q5>> -> <<Q>> in sequential composition for [serial 1008]
substitute-post
substitute-post
normalize
tautologies
#[serial 1230] <<P1>> S1 <<Q1 and P2>> in sequential composition for [serial 1008]
atomic
replace-port
laws
laws
normalize
laws
tautologies
#[serial 1231] <<Q1 and P2>> S2 <<Q2 and P3>> in sequential composition for [serial 1008]
atomic
normalize
split-post
tautologies
guided-sub-equals[asTimestamp[ub mod 7 ]]
replace-port
now
laws
normalize
tautologies
#[serial 1232] <<Q2 and P3>> S3 <<Q3 and P4>> in sequential composition for [serial 1008]
atomic
substitute-pre
laws
normalize
split-post
tautologies
substitute-pre
normalize
guided-sub-equals[c]
normalize
laws
tautologies
#[serial 1233] <<Q3 and P4>> S4 <<Q4 and P5>> in sequential composition for [serial 1008]
substitute-pre
normalize
atomic
qtiming
tautologies
#[serial 1234] <<Q4 and P5>> S5 <<Q5>> in sequential composition for [serial 1008]
atomic
normalize
tautologies
#[serial 1009]  <<M(check_fill) and x>> -> <<M(run)>> for atc_full: check_fill-[x]->run{};
normalize
tautologies
#[serial 1010]  <<M(check_fill) and x>> -> <<M(err)>> for atc_serb: check_fill-[x]->err{};
tautologies
#[serial 1011]  <<M(check_fill) and x>> -> <<M(fill)>> for atc_filling: check_fill-[x]->fill{};
normalize
tautologies
#[serial 1012]  <<M(run) and x>> A <<M(run)>> for atc_run: run-[x]->run{A};
reduce
normalize
laws
normalize
push
#ATR::AtCounter.imp
#[serial 1305]   normalization of [serial 129
make-an
substitute-post
substitute-post
laws
normalize
tautologies
#[serial 1307]   normalization of [serial 1297]
atomic
guided-sub-equals[c]
normalize
split-post
tautologies
elim-subtract
normalize
laws
tautologies
#[serial 1309]   normalization of [serial 1298]
atomic
substitute-post
laws
normalize
replace-port
laws
laws
laws
tautologies
#[serial 1311]   normalization of [serial 1299]
atomic
split-post
tautologies
guided-sub-equals[asTimestamp[ub mod 7 ]]
replace-port
now
laws
normalize
tautologies
#[serial 1313]   normalization of [serial 1300]
atomic
substitute-pre
normalize
laws
normalize
split-post
tautologies
guided-sub-equals[c]
normalize
qtiming
laws
tautologies
#[serial 1315]   normalization of [serial 1301]
atomic
normalize
laws
normalize
tautologies
#[serial 1324]   normalization of [serial 1316]
qtiming
substitute-pre
substitute-pre
laws
normalize
split-post
tautologies
replace-port
tautologies
qtiming
tautologies
normalize
qtiming
tautologies