#pacer  proof script for Pacer.aadl
push
sort-by-component[sw::DDD.imp]
#[serial 1047] <<I>> -> BLESS::Invariant of thread DDD.im
make-an
normalize
axioms
#[serial 1048] <<M(pav)>> -> <<I>> from invariant I when complete state pav has Assertion <<M(pav)>> in its definition.
normalize
split-post
normalize
axioms
#[serial 1049] <<M(sav)>> -> <<I>> from invariant I when complete state sav has Assertion <<M(sav)>> in its definition.
normalize
split-post
normalize
axioms
#[serial 1050] <<M(va)>> -> <<I>> from invariant I when complete state va has Assertion <<M(va)>> in its definition.
normalize
split-post
normalize
axioms
#[serial 1051] Serban's Theorem:  disjunction of execute conditions leaving execution state pav_check_vrp, <<M(pav_check_vrp)>> -> <<e1 or e2 or . . . en>>
normalize
replace<=
normalize
laws
normalize
cnf
laws
normalize
axioms
#[serial 1052] Serban's Theorem:  disjunction of execute conditions leaving execution state go, <<M(go)>> -> <<e1 or e2 or . . . en>>
axioms
#[serial 1053] Serban's Theorem:  disjunction of execute conditions leaving execution state sav_check_vrp, <<M(sav_check_vrp)>> -> <<e1 or e2 or . . . en>>
normalize
replace<=
and-over-or-post
laws
normalize
axioms
#[serial 1054] Serban's Theorem:  disjunction of execute conditions leaving execution state check_atrial_refractories, <<M(check_atrial_refractories)>> -> <<e1 or e2 or . . . en>>
normalize
replace<=
laws
cnf
laws
normalize
axioms
#[serial 1055] Serban's Theorem:  disjunction of execute conditions leaving execution state check_vrp, <<M(check_vrp)>> -> <<e1 or e2 or . . . en>>
normalize
replace<=
laws
cnf
laws
normalize
axioms
#[serial 1056] Serban's Theorem:  disjunction of execute conditions leaving execution state sav_check_url, <<M(sav_check_url)>> -> <<e1 or e2 or . . . en>>
normalize
replace<=
laws
axioms
#[serial 1057]  <<M(go)>> A <<M(va)>> for T0_GO:go-[ ]->va{A};
reduce
normalize
axioms
reduce
reduce
remove-axioms-post
normalize
atomic
laws
normalize
axioms
split-post
axioms
guided-sub-equals[last_ap_or_as]
guided-sub-equals[last_vp_or_vs]
laws
axioms
substitute-both
substitute-both
normalize
laws
normalize
push
#[serial 1269]   normalization of [serial 1252
make-an
replace-port
laws
normalize
now
axioms
#[serial 1308]   normalization of [serial 1301]
split-quant
quant
normalize
axioms
#[serial 1310]   normalization of [serial 1302]
sub-equals-and
laws
normalize
laws
normalize
axioms
#[serial 1312]   normalization of [serial 1303]
sub-equals-and
laws
normalize
laws
normalize
axioms
#[serial 1330]   normalization of [serial 1323]
split-post
guided-sub-equals[last_vp_or_vs]
normalize
axioms
guided-sub-equals[last_ap_or_as]
axioms
laws
normalize
axioms
#[serial 1332]   normalization of [serial 1324]
extend-eqr
axioms
#[serial 1058]  <<M(va) and x>> A <<M(va)>> for T1_PACE_AFTER_LRL:va-[x]->va{A};
reduce
atomic
remove-axioms-post
normalize
laws
axioms
normalize
push
#[serial 1406]   normalization of [serial 1392
make-an
substitute-post
laws
split-post
normalize
axioms
guided-sub-equals[last_vp_or_vs]
laws
normalize
axioms
split-quant
quant
normalize
axioms
substitute-post
normalize
split-post
normalize
axioms
guided-sub-equals[last_vp_or_vs]
laws
normalize
axioms
#[serial 1408]   normalization of [serial 1396]
substitute-pre
guided-sub-equals[VP]
normalize
split-post
substitute-post
normalize
replace-port
extend-eqr
replace-qv
laws
normalize
dist^
normalize
axioms
substitute-post
normalize
and-over-or-post
normalize
laws
normalize
split-post
normalize
axioms
replace-qv
axioms
#[serial 1438]   normalization of [serial 1426]
replace-port
laws
normalize
axioms
#[serial 1440]   normalization of [serial 1431]
split-post
axioms
substitute-pre
laws
axioms
#[serial 1442]   normalization of [serial 1433]
split-post
axioms
replace-port
axioms
#[serial 1059]  <<M(sav) and x>> A <<M(va)>> for T1_PACE_AFTER_LRL:sav-[x]->va{A};
reduce
atomic 
normalize
laws
normalize
remove-axioms-post
normalize
laws
axioms
split-post
axioms
substitute-post
normalize
split-post
distribute
normalize
axioms
push
#[serial 1605]   normalization of [serial 1595
make-an
replace-port
substitute-pre
normalize
guided-sub-equals[VP]
substitute-post
normalize
laws
split-post
normalize
push
#[serial 1731]   normalization of [serial 1728
make-an
split@
replace-port
normalize
extend-eqr
replace-qv
axioms
#[serial 1733]   normalization of [serial 1729]
substitute-post
split@
normalize
axioms
#[serial 1636]   normalization of [serial 1624]
replace-port
laws
normalize
axioms
#[serial 1686]   normalization of [serial 1676]
split-quant
quant
normalize
axioms
#[serial 1696] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1684]
substitute-post
guided-sub-equals[last_vp_or_vs]
laws
normalize
laws
normalize
axioms
#[serial 1700] Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 1674]
replace-port
split@
split-quant
normalize
axioms
#[serial 1701] Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 1688]
guided-sub-equals[last_vp_or_vs]
laws
normalize
axioms
#[serial 1702] Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 1697]
substitute-pre
substitute-pre
split@
split-quant
normalize
laws
axioms
#[serial 1709]   normalization of [serial 1698]
substitute-pre
substitute-pre
normalize
laws
axioms
#[serial 1711]   normalization of [serial 1699]
replace-port
split@
axioms
#[serial 1060]  <<M(pav) and x>> A <<M(va)>> for T1_PACE_AFTER_LRL:pav-[x]->va{A};
reduce
atomic 
normalize
laws
normalize
remove-axioms-post
normalize
laws
axioms
split-post
axioms
substitute-post
normalize
split-post
distribute
normalize
axioms
push
#[serial 1815]   normalization of [serial 1805
make-an
#[serial 1846]   normalization of [serial 1834
make-an
replace-port
laws
normalize
axioms
substitute-pre
normalize
guided-sub-equals[VP]
substitute-post
normalize
laws
split-post
normalize
push
#[serial 1947]   normalization of [serial 1944
make-an
split@
replace-port
normalize
extend-eqr
replace-qv
axioms
#[serial 1949]   normalization of [serial 1945]
substitute-post
split@
normalize
axioms
#[serial 1896]   normalization of [serial 1886]
split-quant
quant
normalize
axioms
#[serial 1906] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 1894]
substitute-post
guided-sub-equals[last_vp_or_vs]
laws
normalize
laws
normalize
axioms
#[serial 1910] Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 1884]
replace-port
split@
split-quant
normalize
axioms
#[serial 1911] Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 1898]
guided-sub-equals[last_vp_or_vs]
laws
normalize
axioms
#[serial 1912] Distribution of preconditions, and over or, and distribution of postcondtitions, or over and [serial 1907]
substitute-pre
substitute-pre
split@
split-quant
normalize
laws
axioms
#[serial 1919]   normalization of [serial 1908]
substitute-pre
substitute-pre
normalize
laws
axioms
#[serial 1921]   normalization of [serial 1909]
replace-port
split@
axioms
#[serial 1061]  <<M(sav) and x>> -> <<M(sav_check_vrp)>> for T2_VS_AFTER_AS:sav-[x]->sav_check_vrp{};
laws
normalize
axioms
#[serial 1062]  <<M(sav_check_vrp) and x>> -> <<M(sav)>> for T4_VS_AFTER_AS_IN_VRP:sav_check_vrp-[x]->sav{};
normalize
axioms
#[serial 1063]  <<M(sav_check_vrp) and x>> A <<M(va)>> for T5_VS_AFTER_AS_AFTER_VRP:sav_check_vrp-[x]->va{A};
reduce
atomic 
normalize
laws
normalize
axioms
remove-axioms-post
laws
axioms
split-post
substitute-post
normalize
axioms
split-post
normalize
axioms
push
#[serial 2031]   normalization of [serial 2021
make-an
substitute-pre
normalize
laws
guided-sub-equals[VS]
normalize
substitute-post
axioms
#[serial 2062]   normalization of [serial 2050]
replace-port
laws
normalize
axioms
#[serial 2087]   normalization of [serial 2078]
split-quant
quant
normalize
axioms
#[serial 2089]   normalization of [serial 2079]
guided-sub-equals[last_vp_or_vs]
laws
normalize
axioms
#[serial 2100] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2085]
substitute-post
guided-sub-equals[last_vp_or_vs]
laws
normalize
laws
normalize
axioms
#[serial 2101] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2091]
substitute-pre
substitute-pre
normalize
laws
normalize
axioms
#[serial 2111]   normalization of [serial 2102]
substitute-pre
substitute-pre
normalize
laws
normalize
axioms
#[serial 1064]  <<M(sav) and x>> -> <<M(sav_check_url)>> for T6_EXPIRED_SENSED_AV_DELAY:sav-[x]->sav_check_url{};
laws
normalize
split-post
axioms
replace-port
normalize
laws
normalize
axioms
#[serial 1065]  <<M(sav_check_url) and x>> -> <<M(sav)>> for T7_TRACKED_VP_TOO_SOON_AFTER_PREVIOUS_VS_OR_VP:sav_check_url-[x]->sav{};
normalize
axioms
#[serial 1066]  <<M(sav_check_url) and x>> A <<M(va)>> for T8_TRACKED_VP_AFTER_AS:sav_check_url-[x]->va{A};
reduce
atomic 
normalize
laws
normalize
axioms
remove-axioms-post
normalize
laws
axioms
split-post
axioms
push
#[serial 2202]   normalization of [serial 2192
make-an
substitute-pre
guided-sub-equals[VP]
normalize
substitute-post
split-post
normalize
laws
axioms
substitute-post
normalize
axioms
#[serial 2231]   normalization of [serial 2220]
replace-port
laws
normalize
axioms
#[serial 2250] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2200]
substitute-post
normalize
split-quant
quant
normalize
axioms
#[serial 2251] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2200]
substitute-post
guided-sub-equals[last_vp_or_vs]
laws
normalize
axioms
#[serial 2254] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2247]
substitute-post
normalize
push
#[serial 2297]   normalization of [serial 2295
make-an
split-post
push
#[serial 2299] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2297
make-an
replace-port
normalize
axioms
#[serial 2300] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2297]
substitute-pre
substitute-pre
normalize
laws
normalize
split@
normalize
replace-port
extend-eqr
replace-qv
axioms
#[serial 1067]  <<M(pav) and x>> -> <<M(pav_check_vrp)>> for T9_VS_AFTER_AP:pav-[x]->pav_check_vrp{};
normalize
laws
axioms
#[serial 1068]  <<M(pav_check_vrp) and x>> -> <<M(pav)>> for T10_VS_AFTER_AP_IN_VRP:pav_check_vrp-[x]->pav{};
normalize
axioms
#[serial 1069]  <<M(pav_check_vrp) and x>> A <<M(va)>> for T11_VS_AFTER_AP_AFTER_VRP:pav_check_vrp-[x]->va{A};
reduce
reduce
reduce
remove-axioms-post
laws
normalize
push
#[serial 2348]   normalization of [serial 2330
make-an
split-post
push
#[serial 2368] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2348
make-an
substitute-post
normalize
axioms
#[serial 2369] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2348]
substitute-post
normalize
split-quant
quant
normalize
axioms
#[serial 2370] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2348]
substitute-post
guided-sub-equals[last_vp_or_vs]
laws
normalize
axioms
#[serial 2350]   normalization of [serial 2334]
split-post
axioms
substitute-post
guided-sub-equals[last_vp_or_vs]
laws
normalize
laws
normalize
axioms
#[serial 2352]   normalization of [serial 2342]
split-post
axioms
substitute-post
normalize
axioms
#[serial 2354]   normalization of [serial 2343]
split-post
axioms
substitute-pre
laws
axioms
#[serial 2356]   normalization of [serial 2344]
atomic
laws
axioms
substitute-pre
guided-sub-equals[VS]
normalize
laws
substitute-post
axioms
#[serial 2358]   normalization of [serial 2345]
atomic
laws
axioms
replace-port
laws
normalize
axioms
#[serial 2360]   normalization of [serial 2346]
atomic
laws
axioms
#[serial 1070]  <<M(va) and x>> -> <<M(check_atrial_refractories)>> for T12_AS_AFTER_VS_OR_VP:va-[x]->check_atrial_refractories{};
normalize
laws
axioms
#[serial 1071]  <<M(check_atrial_refractories) and x>> A <<M(sav)>> for T13_AS:check_atrial_refractories-[x]->sav{A};
reduce
laws
normalize
atomic
laws
normalize
remove-axioms-post
laws
axioms
push
#[serial 2458] applied port output <<pre>> -> <<M[as]>> [serial 2449
make-an
#[serial 2468]   normalization of [serial 2461
make-an
substitute-pre
normalize
laws
normalize
guided-sub-equals[AS]
normalize
substitute-post
axioms
split-post
substitute-post
normalize
axioms
split-quant
normalize
quant
normalize
axioms
laws
normalize
split-post
axioms
#[serial 2472]   normalization of [serial 2464]
substitute-pre
laws
axioms
#[serial 2478] Law of And-Simplification:  P and true is P [serial 2476]
split-post
axioms
push
#[serial 2540] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2478
make-an
substitute-post
normalize
axioms
#[serial 2541] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2478]
substitute-pre
laws
axioms
#[serial 1072]  <<M(check_atrial_refractories) and x>> A <<M(sav)>> for T14_AS_AT:check_atrial_refractories-[x]->sav{A};
reduce
atomic
remove-axioms-post
normalize
laws
axioms
normalize
push
#[serial 2563]   normalization of [serial 2550
make-an
substitute-pre
laws
split-post
push
#[serial 2601] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2600
make-an
substitute-post
normalize
axioms
#[serial 2602] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2600]
substitute-post
axioms
#[serial 2603] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2600]
substitute-post
split-quant
normalize
laws
quant
normalize
axioms
#[serial 2565]   normalization of [serial 2554]
substitute-pre
guided-sub-equals[AS]
substitute-post
normalize
axioms
#[serial 2567]   normalization of [serial 2556]
substitute-pre
guided-sub-equals[AT]
substitute-post
normalize
axioms
#[serial 2594]   normalization of [serial 2587]
split-post
axioms
push
#[serial 2632] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2594
make-an
substitute-post
normalize
axioms
#[serial 2635] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2594]
now
replace-port
axioms
#[serial 2596]   normalization of [serial 2588]
split-post
axioms
substitute-post
normalize
split-post
axioms
replace-port
axioms
substitute-pre
substitute-pre
normalize
laws
normalize
split@
axioms
#[serial 1073]  <<M(check_atrial_refractories) and x>> -> <<M(va)>> for T15_STILL_IN_PVARP:check_atrial_refractories-[x]->va{};
normalize
split-post
axioms
#[serial 1074]  <<M(va) and x>> -> <<M(check_vrp)>> for T16_VS_AFTER_VS_OR_VP:va-[x]->check_vrp{};
normalize
laws
axioms
#[serial 1075]  <<M(check_vrp) and x>> -> <<M(va)>> for T17_STILL_IN_VRP:check_vrp-[x]->va{};
normalize
axioms
#[serial 1076]  <<M(check_vrp) and x>> A <<M(va)>> for T18_VRP_EXPIRED:check_vrp-[x]->va{A};
reduce
atomic
remove-axioms-post
laws
normalize
laws
axioms
push
#[serial 2694]   normalization of [serial 2680
make-an
split-post
axioms
substitute-post
guided-sub-equals[last_vp_or_vs]
laws
normalize
axioms
split-quant
quant
normalize
axioms
#[serial 2696]   normalization of [serial 2684]
substitute-pre
guided-sub-equals[VS]
substitute-post
normalize
laws
axioms
#[serial 2706]   normalization of [serial 2692]
split-post
axioms
now
substitute-post
normalize
now
axioms
#[serial 2715] Associativity: (b.c).a = a.b.c [serial 2700]
replace-port
normalize
split-post
axioms
now
axioms
#[serial 2716] Associativity: (b.c).a = a.b.c [serial 2702]
replace-port
laws
normalize
axioms
#[serial 1077]  <<M(va) and x>> A <<M(pav)>> for T19_AP_AFTER_TIMEOUT_VS_OR_VP:va-[x]->pav{A};
reduce
reduce
reduce
normalize
remove-axioms-post
laws
normalize
axioms
push
#[serial 2776]   normalization of [serial 2765
make-an
split-post
axioms
substitute-post
normalize
quant
axioms
#[serial 2784]   normalization of [serial 2771]
atomic
normalize
laws
normalize
split-post
axioms
replace-qv
axioms
substitute-pre
normalize
laws
normalize
guided-sub-equals[AP]
normalize
substitute-post
normalize
axioms
#[serial 2786]   normalization of [serial 2772]
atomic
laws
normalize
axioms
#[serial 2798] Law of And-Simplification:  P and true is P [serial 2795]
split-post
axioms
substitute-post
normalize
split-post
axioms
substitute-pre
normalize
laws
normalize
guided-sub-equals[VA_INTERVAL_A()]
split@
axioms
normalize
axioms
#[serial 2805]   normalization of [serial 2796]
replace-qv
axioms
#[serial 2808]   normalization of [serial 2799]
split-post
axioms
push
make-an
#[serial 2896] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2808]
replace-port
axioms
#[serial 2899] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2808]
replace-qv
axioms
#[serial 2900] Sequent Composition: if A->B and A->C and A->D then A->(B and C and D) [serial 2808]
replace-port
replace-qv
axioms
#[serial 1078]  <<M(sav) and x>> -> <<M(off)>> for T20_STOP:sav-[x]->off{};
axioms
#[serial 1079]  <<M(pav) and x>> -> <<M(off)>> for T20_STOP:pav-[x]->off{};
axioms
#[serial 1080]  <<M(va) and x>> -> <<M(off)>> for T20_STOP:va-[x]->off{};
axioms